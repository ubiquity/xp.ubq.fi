{"directoryName":"results-ubiquity-os","files":[{"name":"results/ubiquity-os_ubiquity-os-kernel_227.json","json":{"gentlementlegen":{"userId":9807008,"total":455.19,"task":{"reward":250,"multiplier":1},"comments":[{"id":2565335092,"content":"Basically, it seems that once the token arrived to its limit, the calls all hang due to the use of `waitUntil` (which otherwise would just throw the error `The script will never generate a response`) because GitHub API returns a 403 (exceeded secondary rate limit). However even knowing the cause, I don't see how we can work around these limits? Eventually we could look into lowering the amount of calls we make, but it doesn't seem scalable.\r\nAs a temporary solution, I could suggest filtering some events like the ones related to `workflow` because they run a lot (one when workflow starts, one when it ends) which would significantly lower API usage. Still, knowing that we are the only organization using the bot (plus your org and some other user), it means that eventually this problem is bound to come back again if we get more users.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2565335092","commentType":"ISSUE_AUTHOR","score":{"reward":14.9,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":5,"words":{"wordCount":140,"wordValue":0.1,"result":2.32},"readability":{"fleschKincaid":54.5364285714286,"syllables":205,"sentences":5,"score":0.945364285714286},"multiplier":1,"relevance":1}},{"id":2566040682,"content":"This is easily reproducible on a local setup as well, and gives more information about failures. Even the `getToken` fails with a 500 error once the token exhausted the available quota, which means all subsequent requests will fail as well. Interesting enough, restarting the app solves the problem (same as within a deployed worker).","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2566040682","commentType":"ISSUE_AUTHOR","score":{"reward":15.45,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":50.03163522012579,"syllables":87,"sentences":3,"score":0.9003163522012579},"multiplier":1,"relevance":1}},{"id":2566955652,"content":"Yes it happens because whenever we receive an event we do the following:\r\n1. fetch the configuration from the repository\r\n2. fetch the configuration from the organization\r\n3. for each plugin, fetch the manifest\r\n4. for each plugin that needs to be triggered, dispatch a workflow event\r\nIn average one event involves ~10 calls to GitHub API (and subsequently we use the same token in all the plugins which can do tons of calls as well). Plus, this is multiplied by each external organization using our bot as well.\r\nThe more plugins we have the more calls will be done, and this happens for literally any event which is why I was suggesting filtering out `workflow` related events, because we don't use them and because they get triggered at start of the workflow, end of the workflow, and we have around 4 workflows per push triggered on each of our repos. But this is obviously a short term solution.\r\nWe could have some event queue indeed, but we can't delay the calls for too long without having the worker shutting down. And as you said, we needs commands to still be responsive. I think we should find a way to avoid fetching the manifest for all the plugins for each run, which would help lowering API calls.\r\nyes it seems to be but the kernel should then work fine after waiting for some time (when the limit resets) but it seems to work right away when restarting the instance of the kernel, somehow.\r\nWe have an Azure instance up and running, only configured for `ubiquity-os-beta` and we do not use it as the moment, but it is available. Do you suggest this for longer runs?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2566955652","commentType":"ISSUE_AUTHOR","score":{"reward":9.25,"formatting":{"content":{"p":{"score":0,"elementCount":10},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":5,"words":{"wordCount":281,"wordValue":0.1,"result":1.03},"readability":{"fleschKincaid":57.886453736654815,"syllables":400,"sentences":10,"score":0.9788645373665481},"multiplier":1,"relevance":1}},{"id":2567736830,"content":"Like @whilefoo said the problem is when commands that need immediate response will need to be handled because if you have 100+ events in the queue they would take too long to be triggered.\r\nMy suggestion as an immediate fix would be to filter events we do not use like `workflow`, and that plugins use their own credentials probably, I do not know if that counts towards the quota but most likely.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2567736830","commentType":"ISSUE_AUTHOR","score":{"reward":15.03,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":5,"words":{"wordCount":71,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":55.22221830985917,"syllables":97,"sentences":2,"score":0.9522221830985917},"multiplier":1,"relevance":0.9}},{"id":2569987936,"content":"Okay then I will start filtering events, and link the changes here.\r\nFor the credentials, we share `APP_ID` and `APP_PRIVATE_KEY` in the organization, so the plugins should be able to authenticate themselves. We could change the logic in the SDK for authentication as well, so no changes in the plugins would be needed. I also mentioned that because my concern was that outside organizations receive our token at this time isn't it? I saw in the logs that there are ~3 different orgs that have `ubiquity-os` installed.\r\nIf outside organizations use our own plugins, then the auth would be our bot (using APP_ID and APP_PRIVATE_KEY from our organization). But if they create their own, it makes sense to me that they use their own credentials, otherwise it would count against our own quota and they would have too many permissions.\r\nThe queue seems to introduce a lot of complexity and fragile logic, I think we'd be better avoiding it for now.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2569987936","commentType":"ISSUE_AUTHOR","score":{"reward":12.375,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":5,"words":{"wordCount":160,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":63.336250000000035,"syllables":233,"sentences":8,"score":0.9666374999999996},"multiplier":1,"relevance":0.9}},{"id":2571512448,"content":"I realized that in my organization, I never had these events triggered, and then understood that you can disable these directly within the GitHub App settings. I disabled them for our two bots:\r\n<img width=\"751\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d4ee878c-4945-4929-bf6c-8d9c1cc53bec\" />","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571512448","commentType":"ISSUE_AUTHOR","score":{"reward":18.225,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":5,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":64.71033333333337,"syllables":74,"sentences":3,"score":0.9528966666666663},"multiplier":1,"relevance":0.9}},{"id":2571650815,"content":"Yes that would be my suggestion, but I do agree that it would add friction. Doesn't it feel dangerous that a third party can create its own plugin with our token elevations though?\r\nAnd yes it would count against our own token if all the requests they do in their plugin use our token.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571650815","commentType":"ISSUE_AUTHOR","score":{"reward":10.745,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":5,"words":{"wordCount":55,"wordValue":0.1,"result":2.46},"readability":{"fleschKincaid":77.47757575757579,"syllables":72,"sentences":3,"score":0.8252242424242421},"multiplier":1,"relevance":0.7}},{"id":2571807019,"content":"In my mind, the following would happen:\r\n- if an external organization just wishes to use our product, they only have to install the bot and link our plugins in their configuration, no extra step would be needed\r\n- if they wish to develop their custom plugin, they would have to provide authentication methods and use their own github app credentials\r\nI think this would be beneficial for two main reason:\r\n- they can give different access levels to that plugin, imagine they create something that would take care of billing manager access for example, our plugin does not have read or write access on this so they would need their own token anyway\r\n- at this moment, they can post any comment in behalf of `ubiquity-os` bot, which could allow them to post fraudulent reward links for example, even within our repo I suppose since the token would have access","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571807019","commentType":"ISSUE_AUTHOR","score":{"reward":8.01,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":5,"words":{"wordCount":146,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":-66.5166438356164,"syllables":216,"sentences":1,"score":0},"multiplier":1,"relevance":0.6}},{"id":2572418217,"content":"New updates regarding the quota:\r\n- @0x4007 noticed that it runs when `devpool-directory` is updated, which happens quite often and is not needed\r\n- we could filter out this repo, but it might required to be hard-coded or set within the `worker` environment directly","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2572418217","commentType":"ISSUE_AUTHOR","score":{"reward":13.59,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":5,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":45.54195121951224,"syllables":58,"sentences":1,"score":0.8554195121951225},"multiplier":1,"relevance":0.9}},{"id":2579947520,"content":"It seems that lowering the amount of calls didn't really solve the problem, 5he kernel still gets stuck often (today particularly because Github servers seems to be partially down). The rate limit in the logs has always 5k+ calls remaining (first rate limit). When stuck, usually it stays at \"trying to fetch configuration from\" or \"dispatching event for\" and then nothing, meaning the octokit call never made it. However no error or logs is shown afterwards. \nThe next changes I will try:\n- add a wrapper with explicit timeout to avoid getting stuck forever inside waitUntil\n- add the logger plug-in to Octokit so we can have logs about the ongoing requests\n- explicitly bind the fetch from Cloudflare to Octokit instance","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2579947520","commentType":"ISSUE_AUTHOR","score":{"reward":17.7,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":5,"words":{"wordCount":121,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":51.5265454545455,"syllables":187,"sentences":5,"score":0.9152654545454549},"multiplier":1,"relevance":1}},{"id":2585141066,"content":"I tried what I mentioned above and the following:\r\n- disabling retry plugin\r\n- removing the custom error logs we had in octokit plugins\r\nThe problem is the same, I can see a `GET` request is being sent but nothing happens afterwards.\r\n```\r\nrequest {\r\n  method: 'GET',\r\n  baseUrl: 'https://api.github.com',\r\n  headers: {\r\n    accept: 'application/vnd.github.v3+json',\r\n    'user-agent': 'octokit-core.js/6.1.2 Cloudflare-Workers'\r\n  },\r\n  mediaType: { format: 'raw', previews: [] },\r\n  request: {\r\n    fetch: [Function: bound fetch],\r\n    hook: [Function: bound bound register]\r\n  },\r\n  url: '/repos/{owner}/{repo}/contents/{path}',\r\n  owner: 'ubiquity',\r\n  repo: '.github-private',\r\n  path: '.github/.ubiquity-os.config.yml'\r\n}\r\n```\r\nEvery time this happens, when I redeploy the kernel, it works again for around 1h and then this happens. I don't think this is due to second rate limit either because the amount of requests per second averages to `0.06 requests` which is very low.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2585141066","commentType":"ISSUE_AUTHOR","score":{"reward":18.1,"formatting":{"content":{"p":{"score":0,"elementCount":5},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":5,"words":{"wordCount":83,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":53.38224899598394,"syllables":123,"sentences":3,"score":0.9338224899598394},"multiplier":1,"relevance":1}},{"id":2585144769,"content":"@0x4007 I should definitely try with another service yes. I don't think cloudflare is to blame because requests using `fetch` are working normally and events seem to be received just fine, but maybe a mix that they use their own implementation of fetch could be the cause.\r\nStarted to see some\r\n<img width=\"320\" alt=\"image\" src=\"https://github.com/user-attachments/assets/9f38d547-6260-4ed2-8d1d-b24cc8c9c0bd\" />","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2585144769","commentType":"ISSUE_AUTHOR","score":{"reward":19.755,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":5,"words":{"wordCount":57,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":72.63294117647061,"syllables":94,"sentences":4,"score":0.8736705882352939},"multiplier":1,"relevance":0.9}},{"id":2594885191,"content":"Updates on the monitoring:\r\nVery often the code gets stuck with the following logs (this was a `/wallet` command for example):\r\n<img width=\"1716\" alt=\"image\" src=\"https://github.com/user-attachments/assets/907f09f5-869c-47b0-b918-332765513838\" />\r\nwhich corresponds to the following source code\r\nhttps://github.com/ubiquity-os/ubiquity-os-kernel/blob/fbccd4464995967b824fe77e4749b0b4ca43d728/src/github/utils/config.ts#L190\r\nSo I thought maybe the package to read YAML was the culprit. I changed it to another one, and the issues seem to happen less often but still happen at the same spot. I wondered if both of these libraries use a non thread-safe method for cloudflare, since we use `node-compat`. But that's a wild guess and I don't wanna read the whole source code.\r\nIt is maybe a coincidence that it always seem to break there, so with @0x4007 we considered trying a gigantic configuration, which I did (more than 40 plugins!) and it worked fine until one hour later when it started to skip events.\r\nHaving no logs truly doesn't help, but I still suspect CF to unexpectedly kill the worker, but it gets silenced due to `waitUntil`. I have no more ideas on what to try except a different hosting platform to be honest, and you have any suggestions.\r\n---\r\nEdit: re-reading these logs I realize two GET requests were sent but only one file was parsed, could this be some race condition, or a promise failing that kills the other? will try to run these synchronously and see if there is any change.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2594885191","commentType":"ISSUE_AUTHOR","score":{"reward":21.7,"formatting":{"content":{"p":{"score":0,"elementCount":9},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":5,"words":{"wordCount":232,"wordValue":0.1,"result":1.42},"readability":{"fleschKincaid":70.65554796554798,"syllables":355,"sentences":13,"score":0.8934445203445202},"multiplier":1,"relevance":1}},{"id":2762840096,"content":"## What happened\r\nWhen under heavy load, the kernel sometimes stop forwarding events to plugins. We sometimes notice that when users try to invoke commands but nothing happens afterwards. This gets solved by redeploying, or having an event that would unstuck the kernel.\r\nAfter lots of tests, it seems to get stuck around these lines:\r\nhttps://github.com/ubiquity-os/ubiquity-os-kernel/blob/development/src/github/utils/config.ts#L63-L66\r\n## What was expected\r\nThe kernel should be able to handle heavy traffic, either delaying requests or cancelling them, and should not get stuck perpetually.\r\n## How to reproduce\r\nThe best way I found to reproduce the issue is to simultaneously post lots of comments at the same time. Here is a script achieving so:\r\n```javascript\r\nimport { Octokit } from \"@octokit/rest\";\r\nconst octokit = new Octokit({\r\n  auth: \"your gh token\",\r\n});\r\nasync function postCommentBatch({ owner, repo, issueNumber, batchSize = 10 }) {\r\n  const promises = Array(batchSize)\r\n    .fill()\r\n    .map(() =>\r\n      octokit.rest.issues.createComment({\r\n        owner,\r\n        repo,\r\n        issue_number: issueNumber,\r\n        body: \"/help\",\r\n      })\r\n    );\r\n  try {\r\n    await Promise.all(promises);\r\n    console.log(`Successfully posted batch of ${batchSize} comments`);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error posting batch:\", error.message);\r\n    return false;\r\n  }\r\n}\r\nasync function postComments({\r\n  owner,\r\n  repo,\r\n  issueNumber,\r\n  timespan = 2000,\r\n  delay = 100,\r\n  batchSize = 10,\r\n}) {\r\n  const startTime = Date.now();\r\n  const endTime = startTime + timespan;\r\n  console.log(`Starting batch comment posting for ${timespan}ms with ${delay}ms delay between batches`);\r\n  while (Date.now() < endTime) {\r\n    try {\r\n      const success = await postCommentBatch({\r\n        owner,\r\n        repo,\r\n        issueNumber,\r\n        batchSize,\r\n      });\r\n      if (success) {\r\n        console.log(`Batch posted at ${new Date().toISOString()}`);\r\n      }\r\n      await new Promise((resolve) => setTimeout(resolve, delay));\r\n    } catch (error) {\r\n      if (error.status === 429) {\r\n        console.error(\"Rate limit exceeded. Waiting before retrying...\");\r\n        await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      } else {\r\n        console.error(\"Error in batch posting cycle:\", error.message);\r\n      }\r\n    }\r\n  }\r\n  console.log(\"Finished posting all comment batches\");\r\n}\r\npostComments({\r\n  owner: \"owner\",\r\n  repo: \"repo\",\r\n  issueNumber: 3,\r\n  timespan: 2000,\r\n  delay: 100,\r\n  batchSize: 10,\r\n}).catch(console.error);\r\n```\r\nLet this run for a while before you notice no more response from the bot.\r\n---\r\nFurther findings: it seems that it stops working once the limit of requests for the GitHub token has been reached. That's why commands like `/help` will not work although the comment is received, because the kernel cannot post the comment back to the issue. Likewise, any plugin that would need an Action dispatched won't run. However, plugins that run as Workers through fetch will work fine.\r\nIf we remove the `waitUntil` function, we get the following error thrown by the Worker run: `the script will never generate a response`, which gets silenced within `waitUntil` when used. This will happen anytime the `Octokit` instance will be used, due to the limit being reached and no network call being able to be sent, resulting in a `403` error (thrown from GitHub API side)..","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227","commentType":"ISSUE_SPECIFICATION","score":{"reward":6.85,"formatting":{"content":{"h2":{"score":1,"elementCount":3},"p":{"score":0,"elementCount":8},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":4},"priority":1,"words":{"wordCount":243,"wordValue":0.1,"result":1.33},"readability":{"fleschKincaid":64.6642307692308,"syllables":379,"sentences":14,"score":0.9533576923076921},"multiplier":1,"relevance":1}},{"id":2285543649,"content":"Resolves #227\r\n- added more logs for better debugging\r\n- configuration files load synchronously\r\n- octokit logs are now logged through the official octokit plugin\r\n- added watson logs to control the level of the logs\r\n- explicitly bound fetch function within octokit\r\nThe configuration files seemed to be the bottleneck, and the kernel seems more stable. Now, it can be a pure coincidence and I became superstitious. The best way to find out is to deploy it and monitor it.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/236","commentType":"PULL_SPECIFICATION","score":{"reward":3.51,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5}},"result":0.5},"priority":1,"words":{"wordCount":76,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":43.09008771929825,"syllables":124,"sentences":3,"score":0.8309008771929826},"multiplier":1,"relevance":0.9}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 455.19 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>250</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>6.85</td></tr><tr><td>Issue</td><td>Comment</td><td>13</td><td>194.83</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>3.51</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227\" target=\"_blank\" rel=\"noopener\">## What happenedWhen under heavy load, the kernel sometimes st&hellip;</a></h6></td><td><details><summary>5.33</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 3&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 4&#13;regex:&#13;  wordCount: 243&#13;  wordValue: 0.1&#13;  result: 1.33&#13;</pre></details></td><td>1</td><td>1</td><td>6.85</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2565335092\" target=\"_blank\" rel=\"noopener\">Basically, it seems that once the token arrived to its limit, th&hellip;</a></h6></td><td><details><summary>2.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 140&#13;  wordValue: 0.1&#13;  result: 2.32&#13;</pre></details></td><td>1</td><td>5</td><td>14.9</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2566040682\" target=\"_blank\" rel=\"noopener\">This is easily reproducible on a local setup as well, and gives &hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>1</td><td>5</td><td>15.45</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2566955652\" target=\"_blank\" rel=\"noopener\">Yes it happens because whenever we receive an event we do the fo&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 10&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;  result: 0.4&#13;regex:&#13;  wordCount: 281&#13;  wordValue: 0.1&#13;  result: 1.03&#13;</pre></details></td><td>1</td><td>5</td><td>9.25</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2567736830\" target=\"_blank\" rel=\"noopener\">Like @whilefoo said the problem is when commands that need immed&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 71&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.9</td><td>5</td><td>15.03</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2569987936\" target=\"_blank\" rel=\"noopener\">Okay then I will start filtering events, and link the changes he&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 160&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.9</td><td>5</td><td>12.375</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571512448\" target=\"_blank\" rel=\"noopener\">I realized that in my organization, I never had these events tri&hellip;</a></h6></td><td><details><summary>3.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.9</td><td>5</td><td>18.225</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571650815\" target=\"_blank\" rel=\"noopener\">Yes that would be my suggestion, but I do agree that it would ad&hellip;</a></h6></td><td><details><summary>2.46</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 55&#13;  wordValue: 0.1&#13;  result: 2.46&#13;</pre></details></td><td>0.7</td><td>5</td><td>10.745</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571807019\" target=\"_blank\" rel=\"noopener\">In my mind, the following would happen:- if an external organi&hellip;</a></h6></td><td><details><summary>2.67</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;  result: 0.4&#13;regex:&#13;  wordCount: 146&#13;  wordValue: 0.1&#13;  result: 2.27&#13;</pre></details></td><td>0.6</td><td>5</td><td>8.01</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2572418217\" target=\"_blank\" rel=\"noopener\">New updates regarding the quota:- @0x4007 noticed that it runs&hellip;</a></h6></td><td><details><summary>2.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.9</td><td>5</td><td>13.59</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2579947520\" target=\"_blank\" rel=\"noopener\">It seems that lowering the amount of calls didn't really solve t&hellip;</a></h6></td><td><details><summary>2.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 121&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>1</td><td>5</td><td>17.7</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2585141066\" target=\"_blank\" rel=\"noopener\">I tried what I mentioned above and the following:- disabling r&hellip;</a></h6></td><td><details><summary>2.83</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 83&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>5</td><td>18.1</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2585144769\" target=\"_blank\" rel=\"noopener\">@0x4007 I should definitely try with another service yes. I don'&hellip;</a></h6></td><td><details><summary>3.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 57&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.9</td><td>5</td><td>19.755</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2594885191\" target=\"_blank\" rel=\"noopener\">Updates on the monitoring:Very often the code gets stuck with &hellip;</a></h6></td><td><details><summary>3.42</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 9&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 232&#13;  wordValue: 0.1&#13;  result: 1.42&#13;</pre></details></td><td>1</td><td>5</td><td>21.7</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/236\" target=\"_blank\" rel=\"noopener\">Resolves #227- added more logs for better debugging- configu&hellip;</a></h6></td><td><details><summary>3.12</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;  result: 0.5&#13;regex:&#13;  wordCount: 76&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>1</td><td>3.51</td></tr></tbody></table></details>"},"0x4007":{"total":76.79,"userId":4975670,"comments":[{"id":2565271423,"content":"Thanks for sharing your research. It seems that a final solution isn't clear. I suppose that research can continue under this conversation thread. @whilefoo please look into this.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2565271423","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.44,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":68.20038793103453,"syllables":45,"sentences":4,"score":0.9179961206896547},"multiplier":1,"relevance":0.8}},{"id":2567177272,"content":"This secondary rate limit seems like a mess to deal with. So is the plan now to make an events queue and handle them with a static delay timer between each so we can avoid the rate limit?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2567177272","commentType":"ISSUE_COLLABORATOR","score":{"reward":12.06,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":74.00789473684213,"syllables":51,"sentences":2,"score":0.8599210526315787},"multiplier":1,"relevance":0.9}},{"id":2571847808,"content":"Possible but we haven't had to elevate permissions in a very long time. I think we have it mostly covered. Worst case scenario: if they aren't doing anything payment related they can simply make a GitHub action. The only secret sauce we should be focusing on is providing the infrastructure to essentially map any webhook event to a financial reward and to allow the distribution of that reward. \nThis is only true if we 1. Accept their changes in a pull to the kernel and/or 2. Install that plugin to our repos.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571847808","commentType":"ISSUE_COLLABORATOR","score":{"reward":10.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":95,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":65.71473684210527,"syllables":143,"sentences":7,"score":0.9428526315789473},"multiplier":1,"relevance":0.6}},{"id":2572430951,"content":"Setting in the environment seems appropriate! Perhaps we can set an array of values and any org/repo slug can be ignored \n```\n[\"ubiquity/devpool-directory\"]\n``` \nCome to think of it though, we may even be able to depreciate the issues being opened in that repository because now we simply aggregate them into a json object, although it is kind of nice to see the confirmation when the link back occurs that it is in the directory.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2572430951","commentType":"ISSUE_COLLABORATOR","score":{"reward":13.08,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":5,"words":{"wordCount":73,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":44.625856164383606,"syllables":108,"sentences":2,"score":0.8462585616438361},"multiplier":1,"relevance":0.8}},{"id":2573985576,"content":"I don't like the idea of installing custom apps for plugins. It's not a good approach","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2573985576","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.915,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":84.90000000000003,"syllables":24,"sentences":2,"score":0.7509999999999997},"multiplier":1,"relevance":0.7}},{"id":2585142538,"content":"Would you say it's safe to blame cloudflare then? Have you considered A/B testing the kernel on another platform like azure or something?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2585142538","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.675,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":72.32350000000002,"syllables":36,"sentences":2,"score":0.8767649999999998},"multiplier":1,"relevance":0.9}},{"id":2594974256,"content":"Maybe `node-compat` is not helping the problem","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2594974256","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.96,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.8}},{"id":2603763523,"content":"Possibly a bad idea but what about a novel implementation of a yaml parser? In exchange for simpler usage of yaml features, we could have a more reliable and simpler parser. \nHere's an o1 one-shot: https://chatgpt.com/share/678f3dc2-9a6c-8001-b527-8202efa456f3\n```typescript\ntype YamlValue = string | number | boolean | YamlObject | YamlValue[];\ntype YamlObject = Record<string, YamlValue>;\n/**\n * Parse a YAML string into a nested object.\n */\nexport function parseYaml(yaml: string): YamlObject {\n  const lines = yaml.split(/\\r?\\n/);\n  const { object: result } = parseBlock(lines, 0, 0);\n  return result;\n}\n/**\n * Recursively parse lines to build YAML objects/arrays.\n * @param lines The array of lines from the YAML string.\n * @param currentIndent The current indentation level in spaces.\n * @param startIndex The line index to begin parsing.\n * @returns The parsed object and the next line index.\n */\nfunction parseBlock(\n  lines: string[],\n  currentIndent: number,\n  startIndex: number\n): { object: YamlObject; nextLine: number } {\n  const parsedObject: YamlObject = {};\n  let i = startIndex;\n  while (i < lines.length) {\n    const line = lines[i];\n    const lineIndent = getIndent(line);\n    // Stop if indentation is shallower than current block\n    if (line.trim() === '' || lineIndent < currentIndent) {\n      break;\n    }\n    // Strip comments\n    const noCommentLine = line.split('#')[0].trimEnd();\n    if (noCommentLine.trim() === '') {\n      i += 1;\n      continue;\n    }\n    // Parse key/value or list item\n    const { key, value, isListItem } = parseLine(noCommentLine);\n    if (isListItem) {\n      // It's a list item: collect all items in an array\n      // The parent key is the last key we encountered\n      const lastKey = Object.keys(parsedObject)[Object.keys(parsedObject).length - 1];\n      if (typeof parsedObject[lastKey] === 'undefined') {\n        parsedObject[lastKey] = [];\n      }\n      const arrayRef = parsedObject[lastKey];\n      if (Array.isArray(arrayRef)) {\n        // if value is missing, parse as nested block\n        if (typeof value === 'undefined' || value === null) {\n          const { object: nested, nextLine } = parseBlock(lines, lineIndent + 2, i + 1);\n          arrayRef.push(nested);\n          i = nextLine;\n        } else {\n          arrayRef.push(value);\n          i += 1;\n        }\n      } else {\n        i += 1;\n      }\n    } else if (key !== '' && typeof value !== 'undefined') {\n      // Plain key: value\n      parsedObject[key] = value;\n      i += 1;\n    } else if (key !== '') {\n      // Key with possible nested block\n      const nextLineIndent = getIndent(lines[i + 1] || '');\n      if (nextLineIndent > lineIndent) {\n        const { object: nested, nextLine } = parseBlock(lines, nextLineIndent, i + 1);\n        parsedObject[key] = nested;\n        i = nextLine;\n      } else {\n        parsedObject[key] = '';\n        i += 1;\n      }\n    } else {\n      i += 1;\n    }\n  }\n  return { object: parsedObject, nextLine: i };\n}\n/**\n * Extract indentation width from the start of a line.\n */\nfunction getIndent(line: string): number {\n  let count = 0;\n  for (let i = 0; i < line.length; i += 1) {\n    if (line[i] === ' ') {\n      count += 1;\n    } else {\n      break;\n    }\n  }\n  return count;\n}\n/**\n * Parse a single line to discover a key-value pair or a list item.\n */\nfunction parseLine(line: string): {\n  key: string;\n  value?: YamlValue;\n  isListItem: boolean;\n} {\n  const isListItem = line.trimStart().startsWith('- ');\n  if (isListItem) {\n    // example: \"- something\"\n    const itemValue = line.trimStart().slice(2).trim();\n    if (itemValue.includes(': ')) {\n      // example: \"- key: value\" (nested object in a list)\n      const splitIndex = itemValue.indexOf(': ');\n      const subKey = itemValue.slice(0, splitIndex).trim();\n      const subValue = convertValue(itemValue.slice(splitIndex + 2).trim());\n      return { key: subKey, value: subValue, isListItem: true };\n    }\n    return { key: '', value: convertValue(itemValue), isListItem: true };\n  }\n  // example: \"key: value\"\n  const colonIndex = line.indexOf(':');\n  if (colonIndex >= 0) {\n    const rawKey = line.slice(0, colonIndex).trim();\n    const rawValue = line.slice(colonIndex + 1).trim();\n    if (rawValue !== '') {\n      return { key: rawKey, value: convertValue(rawValue), isListItem: false };\n    }\n    return { key: rawKey, isListItem: false };\n  }\n  return { key: '', isListItem: false };\n}\n/**\n * Convert a raw string value to a typed value (boolean, number, or string).\n */\nfunction convertValue(value: string): YamlValue {\n  if (value === 'true') {\n    return true;\n  }\n  if (value === 'false') {\n    return false;\n  }\n  if (!Number.isNaN(Number(value))) {\n    return Number(value);\n  }\n  return value;\n}\n```","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2603763523","commentType":"ISSUE_COLLABORATOR","score":{"reward":13.58,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":5,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":75.61902173913046,"syllables":65,"sentences":4,"score":0.8438097826086954},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/236"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 76.79 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>8</td><td>76.79</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2565271423\" target=\"_blank\" rel=\"noopener\">Thanks for sharing your research. It seems that a final solution&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.8</td><td>5</td><td>9.44</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2567177272\" target=\"_blank\" rel=\"noopener\">This secondary rate limit seems like a mess to deal with. So is &hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.9</td><td>5</td><td>12.06</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571847808\" target=\"_blank\" rel=\"noopener\">Possible but we haven't had to elevate permissions in a very lon&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 95&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.6</td><td>5</td><td>10.08</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2572430951\" target=\"_blank\" rel=\"noopener\">Setting in the environment seems appropriate! Perhaps we can set&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 73&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.8</td><td>5</td><td>13.08</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2573985576\" target=\"_blank\" rel=\"noopener\">I don't like the idea of installing custom apps for plugins. It'&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.7</td><td>5</td><td>5.915</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2585142538\" target=\"_blank\" rel=\"noopener\">Would you say it's safe to blame cloudflare then? Have you consi&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.9</td><td>5</td><td>9.675</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2594974256\" target=\"_blank\" rel=\"noopener\">Maybe &#96;node-compat&#96; is not helping the problem</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.8</td><td>5</td><td>2.96</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2603763523\" target=\"_blank\" rel=\"noopener\">Possibly a bad idea but what about a novel implementation of a y&hellip;</a></h6></td><td><details><summary>3.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>0.7</td><td>5</td><td>13.58</td></tr></tbody></table></details>"},"whilefoo":{"total":188.245,"userId":139262667,"comments":[{"id":2566497855,"content":"It seems the primary rate limit is 5000 per hour per org/repo, but we are hitting [secondary rate limit](https://docs.github.com/en/rest/using-the-rest-api/rate-limits-for-the-rest-api?apiVersion=2022-11-28#about-secondary-rate-limits) which happens when too many request happen at once - 100 at once or too many per minute. \r\nWe will hit this limits even faster using Github-based storage.\r\nOne solution would be to space out events, for example if we receive 100 events at once we need to process them one by one and not all at once, having priority in mind too as events that need instant response like commands need to be processed immediately while others like text embeddings can be processed later.\r\nBut Worker plugins would still fail to execute as they use the same installation token passed from the kernel, isn't it?\r\nOur octokit uses plugin-retry plugin which should retry requests after the rate limit is over but I think that `waitUntil` still has 30 seconds hard limit so it would time out before it could retry.\r\n@gentlementlegen Didn't we try running the kernel on Azure, or was that reverted?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2566497855","commentType":"ISSUE_COLLABORATOR","score":{"reward":17.19,"formatting":{"content":{"p":{"score":0,"elementCount":6},"a":{"score":1,"elementCount":1}},"result":1},"priority":5,"words":{"wordCount":176,"wordValue":0.1,"result":1.97},"readability":{"fleschKincaid":54.96848484848486,"syllables":254,"sentences":6,"score":0.9496848484848486},"multiplier":1,"relevance":0.9}},{"id":2569348047,"content":"I suggested multiple priority queues but thinking about this more I realized that it's not feasible because you don't know the priority if you don't know the config, for example a `issue_comment.created` needs to be processed fast because it can be a command but it can also be just a normal comment that can be processed in the background by `text-embeddings` or another plugin that needs it ASAP.\r\nWe should definitely do that. I'm not sure about the credentials, they need to use installation's token but they can't get it by themselves.\r\nThe most obvious fix is to not store the config in Github but somewhere else like a database. You could build queues on top of this by fetching the config from the database (each plugin would have a priority level) and you would put it in the queue for that priority level. Cloudflare Queues also have retries so if the rate limit is hit, you can schedule to retry after X time and they also have 30 min time limit compared to 30 seconds on normal workers. However I think idea won't be liked because it moves away from Github and creates a dependency on Cloudflare.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2569348047","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.76,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":5,"words":{"wordCount":203,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":56.54285714285716,"syllables":290,"sentences":7,"score":0.9654285714285716},"multiplier":1,"relevance":0.8}},{"id":2571629386,"content":"You're saying that each organization that uses our bot should create their own Github App and share credentials to the plugin via environment variables?\r\nI think that adds a lot of friction and setup on the part of the organization and I'm not sure if this fixes the rate limit. The rate limit is based on the installation token / org so there's no difference in using our bot or their own bot. Installation token only has permissions on that organization so a plugin would have same level of permissions if using our bot or organization's own bot","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571629386","commentType":"ISSUE_COLLABORATOR","score":{"reward":11.725,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":5,"words":{"wordCount":101,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":55.56268564356438,"syllables":150,"sentences":4,"score":0.9556268564356438},"multiplier":1,"relevance":0.7}},{"id":2571675735,"content":"That was a concern from the start but it is not that critical because they can't access other organizations with that token, only the one that installed the plugin and that organization has to trust the plugin otherwise they wouldn't install it. \r\nThe most damage they could do is force push to the repo but that's possible in either cases (our github app or organization's own github app).\r\nThere was an idea that third party plugins would have to call the kernel to make actions on Github so our kernel would restrict which operations are allowed.\r\nI understand now that our Github App would be only used to fetch configs and manifests and dispatch workflows and organization's App would be used for the plugin which would alleviate the problem with rate limits, however I feel like this would too much friction","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571675735","commentType":"ISSUE_COLLABORATOR","score":{"reward":10.01,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":5,"words":{"wordCount":146,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":46.94366438356167,"syllables":212,"sentences":4,"score":0.8694366438356167},"multiplier":1,"relevance":0.7}},{"id":2573471924,"content":"But the consumer of a third party plugin would have to install their app so you will have so many apps installed, but I think we're still a long way from third party plugins so we can think about this later","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2573471924","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.64,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":42,"wordValue":0.1,"result":2.23},"readability":{"fleschKincaid":57.44785714285716,"syllables":53,"sentences":1,"score":0.9744785714285716},"multiplier":1,"relevance":0.6}},{"id":2585190165,"content":"Is it possible that the 10ms limit is reached and Cloudflare shuts down the worker? But it's weird to only happen after 1 hour","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2585190165","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.4,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":82.47550000000001,"syllables":33,"sentences":2,"score":0.7752449999999999},"multiplier":1,"relevance":0.8}},{"id":2560425563,"content":"Hope this works","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/236#pullrequestreview-2560425563","commentType":"PULL_COLLABORATOR","score":{"reward":0.23,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":1921066100,"content":"did you try this before changing to sync config fetch? it could be also that there was a bug in workers and we were using an old version","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/236#discussion_r1921066100","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,6 +1,6 @@\n name = \"ubiquity-os-kernel\"\n main = \"src/adapters/cloudflare-worker.ts\"\n-compatibility_date = \"2023-12-06\"\n+compatibility_date = \"2024-09-23\"","score":{"reward":8.84,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":5,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":86.875,"syllables":35,"sentences":2,"score":0.73125},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2560425563,"effect":{"addition":2044,"deletion":245},"reward":114.45,"priority":5}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/236"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 188.245 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>114.45</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>64.725</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>9.07</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/236\" target=\"_blank\" rel=\"noopener\">#236</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+2044 -245</td><td>5</td><td>114.45</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2566497855\" target=\"_blank\" rel=\"noopener\">It seems the primary rate limit is 5000 per hour per org/repo, b&hellip;</a></h6></td><td><details><summary>2.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 176&#13;  wordValue: 0.1&#13;  result: 1.97&#13;</pre></details></td><td>0.9</td><td>5</td><td>17.19</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2569348047\" target=\"_blank\" rel=\"noopener\">I suggested multiple priority queues but thinking about this mor&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 203&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.8</td><td>5</td><td>8.76</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571629386\" target=\"_blank\" rel=\"noopener\">You're saying that each organization that uses our bot should cr&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 101&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.7</td><td>5</td><td>11.725</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2571675735\" target=\"_blank\" rel=\"noopener\">That was a concern from the start but it is not that critical be&hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 146&#13;  wordValue: 0.1&#13;  result: 2.27&#13;</pre></details></td><td>0.7</td><td>5</td><td>10.01</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2573471924\" target=\"_blank\" rel=\"noopener\">But the consumer of a third party plugin would have to install t&hellip;</a></h6></td><td><details><summary>2.23</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 42&#13;  wordValue: 0.1&#13;  result: 2.23&#13;</pre></details></td><td>0.6</td><td>5</td><td>8.64</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/227#issuecomment-2585190165\" target=\"_blank\" rel=\"noopener\">Is it possible that the 10ms limit is reached and Cloudflare shu&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.8</td><td>5</td><td>8.4</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/236#pullrequestreview-2560425563\" target=\"_blank\" rel=\"noopener\">Hope this works</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.1</td><td>5</td><td>0.23</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/236#discussion_r1921066100\" target=\"_blank\" rel=\"noopener\">did you try this before changing to sync config fetch? it could &hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.8</td><td>5</td><td>8.84</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_50.json","json":{"shiv810":{"userId":53160903,"total":802.102,"task":{"reward":800,"multiplier":1},"comments":[{"id":2381046321,"content":"This can be easily accomplished with embeddings and a capable LLM that has a substantial context. The main challenge will be to maintain a large vector database where comments and conversations are stored and readily available. Instead of simply dumping entire message chains, these would need to be selectively curated.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2381046321","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.35,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":46.09833333333336,"syllables":85,"sentences":3,"score":0.8609833333333335},"multiplier":0.25,"relevance":0.9}},{"id":2381135705,"content":"If the comments have to be cleaned and cherry picked, for a good Context Retrieval, it should be around 1 week.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2381135705","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.752,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":76.74857142857144,"syllables":27,"sentences":1,"score":0.8325142857142857},"multiplier":0.25,"relevance":0.8}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 802.102 XP ]</a>&nbsp;</h3><h6>@shiv810</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>800</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.102</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2381046321\" target=\"_blank\" rel=\"noopener\">This can be easily accomplished with embeddings and a capable LL&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.35</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2381135705\" target=\"_blank\" rel=\"noopener\">If the comments have to be cleaned and cherry picked, for a good&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.8</td><td>2</td><td>0.752</td></tr></tbody></table></details>"},"0x4007":{"total":191.71,"userId":4975670,"comments":[{"id":2380562179,"content":"@sshivaditya2019 rfc","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2380562179","commentType":"ISSUE_AUTHOR","score":{"reward":0.1,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-6.694999999999993,"syllables":5,"sentences":1,"score":0},"multiplier":1,"relevance":0.2}},{"id":2381132392,"content":"What's a good time estimate?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2381132392","commentType":"ISSUE_AUTHOR","score":{"reward":0.444,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.3}},{"id":2382159936,"content":"One consideration I just realized we have to resolve a design problem first. \n@Keyrxng is building a plugin where we can ask ChatGPT (with full linked issue conversation and pull context) any questions with the same syntax. \nPerhaps it makes the most sense to also look up similar conversations (embeddings) and appending their text to the LLM context window. \nIf there's some high match then append. If no high percentage match then don't append. I think this should make the user experience seamless when asking questions. In any case though, technically this should not be a new plugin. Look for the `command-ask` plugin. \nI can't transfer this issue to that repository easily from my phone will need to from my computer in a bit","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2382159936","commentType":"ISSUE_AUTHOR","score":{"reward":5.562,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":126,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":71.09642857142858,"syllables":181,"sentences":9,"score":0.8890357142857143},"multiplier":1,"relevance":0.9}},{"id":2382232571,"content":"Well perhaps we can have you take it over mid this week if its not done. They are supposed to be focusing on the Telegram bridge plugin as a top priority and that also isn't done. \r\nThis is the philosophy we are taking with these plugins, especially the ones that focus on working with text. \r\nFor example, my vision is to have our `conversation-rewards` algorithm be generally applicable for telegram conversations etc. As for these AI related features, yes ideally as well. \r\nThen UbiquityOS can be context aware of every work input to the organization, which makes it more generally intelligent of everything happening.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2382232571","commentType":"ISSUE_AUTHOR","score":{"reward":5.296,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":2,"words":{"wordCount":104,"wordValue":0.1,"result":2.59},"readability":{"fleschKincaid":52.58012820512823,"syllables":168,"sentences":6,"score":0.9258012820512823},"multiplier":1,"relevance":0.8}},{"id":2382358336,"content":"Most of everything is within the @ubiquity organization (created in 2020) but we did break off our recent efforts to the new orgs @ubiquity-os and @ubiquity-os-marketplace\r\nOr if its easier, please use the [aggregated issues JSON](https://github.com/ubiquity/devpool-directory/blob/development/devpool-issues.json) in our directory.\r\nIt contains, at least, all the URLs to all the issues that we are monitoring for tasks/proposals. It does not include all their conversation contexts though. \r\nI suppose the script can extract those URLs, and query the GitHub REST API for the conversations within each.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2382358336","commentType":"ISSUE_AUTHOR","score":{"reward":6.51,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":88,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":53.759545454545474,"syllables":136,"sentences":4,"score":0.9375954545454548},"multiplier":1,"relevance":0.7}},{"id":2384257483,"content":"Much better UX to consolidate https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2382159936","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2384257483","commentType":"ISSUE_AUTHOR","score":{"reward":2.28,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":40.09,"syllables":30,"sentences":2,"score":0.8009000000000001},"multiplier":1,"relevance":0.6}},{"id":2384278872,"content":"Refer to that part of the spec. Their `command-ask` plugin has this syntax. \nImagine asking a senior colleague any question on a pull request or an issue. They will have context on all the other historical issues/pulls, as well as general knowledge from other projects. My vision consolidates both into a single natural interface of tagging the colleague and asking your question.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2384278872","commentType":"ISSUE_AUTHOR","score":{"reward":5.922,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":62,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":57.79738709677423,"syllables":100,"sentences":5,"score":0.9779738709677424},"multiplier":1,"relevance":0.9}},{"id":2391964685,"content":"In recent times, we've been pretty good about this so just take whatever uses the proper keywords and only include whatever is linked to a single issue because that is also a rule that we enforce. \nToss out anything that isn't perfect. I think we have a lot of good sample data.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2391964685","commentType":"ISSUE_AUTHOR","score":{"reward":4.34,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":69.49833333333333,"syllables":76,"sentences":3,"score":0.9050166666666667},"multiplier":1,"relevance":0.7}},{"id":2394927713,"content":"Whatever is easier. The idea is that you can get started on making the logic and we can worry about consolidating the user interface later","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2394927713","commentType":"ISSUE_AUTHOR","score":{"reward":2.19,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":55.40350000000004,"syllables":41,"sentences":2,"score":0.9540350000000004},"multiplier":1,"relevance":0.5}},{"id":2421156091,"content":"@sshivaditya2019 can you paste the plugin configs under the completed issues so we can install and test?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2421156091","commentType":"ISSUE_AUTHOR","score":{"reward":1.376,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":60.19176470588238,"syllables":26,"sentences":1,"score":0.9980823529411762},"multiplier":1,"relevance":0.4}},{"id":2554103337,"content":"**Description:**\r\nWe have two goals that are closely aligned:\r\n1. **Embedding-Based Search for Prior Conversations**:\r\n   We want a plugin that enables us to naturally ask questions related to previous conversations on GitHub using embeddings. This should ideally work across multiple GitHub organizations and repositories. For example, if someone asks, *“What was the original reason for moving the LP tokens?”*, the system should be able to search through all conversations and provide relevant information.\r\n   This feature should include org-wide default search (with options to extend the search to multiple organizations as arguments).\r\n   _Example Context:_\r\n   > It isn't clear to me if we redid the staking yet and if we should migrate. If so, perhaps we should make a new issue instead. We should investigate whether the missing LP tokens issue from the MasterChefV2.1 contract is critical to the decision of migrating or not.\r\n   **Next Step:**\r\n   - Implement embedding-based search across all issues and conversations.\r\n2. **Temporary Slash Command for Context-Aware Search**:\r\n   As a stepping stone to the above, we propose a dedicated slash command `/search` to help contributors quickly search through existing threads and add value. The logic of this command would mimic that of the natural language embedding search, and eventually, it will merge into the @UbiquityOS question-based syntax.\r\n   **Temporary Fix:**\r\n   - Use the same thresholds from the issue deduplication system while debugging and testing the logic in production.\r\n   - Focus on conversation parsing and extracting key issue specifications to add value.\r\n   **Future Vision:**\r\n   - Eventually, we’d like to enhance this functionality with a browser extension to automatically surface relevant information while contributors are working on issues.\r\n### References\r\nOriginally posted by @rndquu in https://github.com/ubiquity/ubiquity-dollar/issues/939#issuecomment-2379973167\r\nhttps://github.com/ubiquity/ubiquibot-logger/pull/35\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/132#discussion_r1787158520_","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.59,"formatting":{"content":{"p":{"score":0,"elementCount":16},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":6},"em":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":3},"h3":{"score":1,"elementCount":1},"a":{"score":1,"elementCount":3}},"result":4.6},"priority":1,"words":{"wordCount":208,"wordValue":0.1,"result":1.65},"readability":{"fleschKincaid":31.483274509803948,"syllables":448,"sentences":15,"score":0.7148327450980395},"multiplier":1,"relevance":1}},{"id":2371291282,"content":"Looks like a pretty solid implementation","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#pullrequestreview-2371291282","commentType":"PULL_COLLABORATOR","score":{"reward":0.148,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":31.545000000000016,"syllables":12,"sentences":1,"score":0.7154500000000001},"multiplier":1,"relevance":0.1}},{"id":2374239920,"content":"You marked my comments as \"resolved\" but didn't implement the requested changes.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#pullrequestreview-2374239920","commentType":"PULL_COLLABORATOR","score":{"reward":2.208,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":76.50153846153849,"syllables":18,"sentences":1,"score":0.8349846153846151},"multiplier":1,"relevance":0.8}},{"id":1788914567,"content":"```suggestion\n  \"author\": \"Ubiquity DAO\",\n```\n- DAO is the organization. \n- OS is the software.  \n- DevPool is the community.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1788914567","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,8 +1,8 @@\n {\n-  \"name\": \"plugin-template\",\n+  \"name\": \"@ubiquity-os/command-ask\",\n   \"version\": \"1.0.0\",\n-  \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n-  \"author\": \"Ubiquity DAO\",\n+  \"description\": \"A highly context aware organization integrated chatbot\",\n+  \"author\": \"Ubiquity OS\",","score":{"reward":2.408,"formatting":{"content":{"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":54.72500000000002,"syllables":21,"sentences":3,"score":0.9472500000000003},"multiplier":1,"relevance":0.7}},{"id":1788940149,"content":"Pretty unusual syntax to mix async await and then","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1788940149","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,176 @@\n+import { createKey, getAllStreamlinedComments } from \"../handlers/comments\";\n+import { Context } from \"../types\";\n+import { FetchParams, Issue, IssueComments, LinkedIssues, ReviewComments } from \"../types/github\";\n+import { StreamlinedComment } from \"../types/gpt\";\n+import { dedupeStreamlinedComments, idIssueFromComment, mergeStreamlinedComments, splitKey } from \"./issue\";\n+import { handleIssue, handleSpec, handleSpecAndBodyKeys, throttlePromises } from \"./issue-handling\";\n+\n+export async function recursivelyFetchLinkedIssues(params: FetchParams) {\n+  const { linkedIssues, seen, specAndBodies, streamlinedComments } = await fetchLinkedIssues(params);\n+\n+  const fetchPromises = linkedIssues.map(async (linkedIssue) => await mergeCommentsAndFetchSpec(params, linkedIssue, streamlinedComments, specAndBodies, seen));\n+  await throttlePromises(fetchPromises, 10);\n+\n+  const linkedIssuesKeys = linkedIssues.map((issue) => createKey(`${issue.owner}/${issue.repo}/${issue.issueNumber}`));\n+  const specAndBodyKeys = Array.from(new Set([...Object.keys(specAndBodies), ...Object.keys(streamlinedComments), ...linkedIssuesKeys]));\n+\n+  await handleSpecAndBodyKeys(specAndBodyKeys, params, dedupeStreamlinedComments(streamlinedComments), seen);\n+  return { linkedIssues, specAndBodies, streamlinedComments };\n+}\n+\n+export async function fetchLinkedIssues(params: FetchParams) {\n+  const { comments, issue } = await fetchIssueComments(params);\n+  if (!issue) {\n+    return { streamlinedComments: {}, linkedIssues: [], specAndBodies: {}, seen: new Set<string>() };\n+  }\n+  const issueKey = createKey(issue.html_url);\n+  const [owner, repo, issueNumber] = splitKey(issueKey);\n+  const linkedIssues: LinkedIssues[] = [{ body: issue.body || \"\", comments, issueNumber: parseInt(issueNumber), owner, repo, url: issue.html_url }];\n+  const specAndBodies: Record<string, string> = {};\n+  const seen = new Set<string>();\n+\n+  // add the spec body as a comment\n+  comments.push({\n+    body: issue.body || \"\",\n+    // @ts-expect-error - github types undefined\n+    user: issue.user,\n+    id: issue.id,\n+    html_url: issue.html_url,\n+  });\n+\n+  for (const comment of comments) {\n+    const foundIssues = idIssueFromComment(comment.body, params);\n+    if (foundIssues) {\n+      for (const linkedIssue of foundIssues) {\n+        const linkedKey = createKey(linkedIssue.url, linkedIssue.issueNumber);\n+        if (seen.has(linkedKey)) {\n+          continue;\n+        }\n+        seen.add(linkedKey);\n+        const { issueNumber, owner, repo } = linkedIssue;\n+\n+        const { comments: fetchedComments, issue: fetchedIssue } = await fetchIssueComments({\n+          context: params.context,\n+          issueNum: issueNumber,\n+          owner,\n+          repo,\n+        });\n+\n+        specAndBodies[linkedKey] = fetchedIssue?.body || \"\";\n+        linkedIssue.body = fetchedIssue?.body || \"\";\n+        linkedIssue.comments = fetchedComments;\n+        linkedIssues.push(linkedIssue);\n+      }\n+    }\n+  }\n+\n+  return { streamlinedComments: await getAllStreamlinedComments(linkedIssues), linkedIssues, specAndBodies, seen };\n+}\n+\n+export async function mergeCommentsAndFetchSpec(\n+  params: FetchParams,\n+  linkedIssue: LinkedIssues,\n+  streamlinedComments: Record<string, StreamlinedComment[]>,\n+  specOrBodies: Record<string, string>,\n+  seen: Set<string>\n+) {\n+  if (linkedIssue.comments) {\n+    const streamed = await getAllStreamlinedComments([linkedIssue]);\n+    const merged = mergeStreamlinedComments(streamlinedComments, streamed);\n+    streamlinedComments = { ...streamlinedComments, ...merged };\n+  }\n+\n+  if (linkedIssue.body) {\n+    await handleSpec(params, linkedIssue.body, specOrBodies, createKey(linkedIssue.url, linkedIssue.issueNumber), seen, streamlinedComments);\n+  }\n+}\n+\n+export async function fetchPullRequestDiff(context: Context, org: string, repo: string, issue: number) {\n+  const { octokit } = context;\n+\n+  try {\n+    const diff = await octokit.pulls.get({\n+      owner: org,\n+      repo,\n+      pull_number: issue,\n+      mediaType: {\n+        format: \"diff\",\n+      },\n+    });\n+    return diff.data as unknown as string;\n+  } catch (e) {\n+    return null;\n+  }\n+}\n+\n+export async function fetchIssue(params: FetchParams) {\n+  const { octokit, payload, logger } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  try {\n+    return await octokit.rest.issues\n+      .get({\n+        owner: owner || payload.repository.owner.login,\n+        repo: repo || payload.repository.name,\n+        issue_number: issueNum || payload.issue.number,\n+      })\n+      .then(({ data }) => data as Issue);","score":{"reward":1.296,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":56.70000000000002,"syllables":15,"sentences":1,"score":0.9670000000000002},"multiplier":1,"relevance":0.6}},{"id":1788940582,"content":"Does it make sense to have two separate arrays for each data type?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1788940582","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,176 @@\n+import { createKey, getAllStreamlinedComments } from \"../handlers/comments\";\n+import { Context } from \"../types\";\n+import { FetchParams, Issue, IssueComments, LinkedIssues, ReviewComments } from \"../types/github\";\n+import { StreamlinedComment } from \"../types/gpt\";\n+import { dedupeStreamlinedComments, idIssueFromComment, mergeStreamlinedComments, splitKey } from \"./issue\";\n+import { handleIssue, handleSpec, handleSpecAndBodyKeys, throttlePromises } from \"./issue-handling\";\n+\n+export async function recursivelyFetchLinkedIssues(params: FetchParams) {\n+  const { linkedIssues, seen, specAndBodies, streamlinedComments } = await fetchLinkedIssues(params);\n+\n+  const fetchPromises = linkedIssues.map(async (linkedIssue) => await mergeCommentsAndFetchSpec(params, linkedIssue, streamlinedComments, specAndBodies, seen));\n+  await throttlePromises(fetchPromises, 10);\n+\n+  const linkedIssuesKeys = linkedIssues.map((issue) => createKey(`${issue.owner}/${issue.repo}/${issue.issueNumber}`));\n+  const specAndBodyKeys = Array.from(new Set([...Object.keys(specAndBodies), ...Object.keys(streamlinedComments), ...linkedIssuesKeys]));\n+\n+  await handleSpecAndBodyKeys(specAndBodyKeys, params, dedupeStreamlinedComments(streamlinedComments), seen);\n+  return { linkedIssues, specAndBodies, streamlinedComments };\n+}\n+\n+export async function fetchLinkedIssues(params: FetchParams) {\n+  const { comments, issue } = await fetchIssueComments(params);\n+  if (!issue) {\n+    return { streamlinedComments: {}, linkedIssues: [], specAndBodies: {}, seen: new Set<string>() };\n+  }\n+  const issueKey = createKey(issue.html_url);\n+  const [owner, repo, issueNumber] = splitKey(issueKey);\n+  const linkedIssues: LinkedIssues[] = [{ body: issue.body || \"\", comments, issueNumber: parseInt(issueNumber), owner, repo, url: issue.html_url }];\n+  const specAndBodies: Record<string, string> = {};\n+  const seen = new Set<string>();\n+\n+  // add the spec body as a comment\n+  comments.push({\n+    body: issue.body || \"\",\n+    // @ts-expect-error - github types undefined\n+    user: issue.user,\n+    id: issue.id,\n+    html_url: issue.html_url,\n+  });\n+\n+  for (const comment of comments) {\n+    const foundIssues = idIssueFromComment(comment.body, params);\n+    if (foundIssues) {\n+      for (const linkedIssue of foundIssues) {\n+        const linkedKey = createKey(linkedIssue.url, linkedIssue.issueNumber);\n+        if (seen.has(linkedKey)) {\n+          continue;\n+        }\n+        seen.add(linkedKey);\n+        const { issueNumber, owner, repo } = linkedIssue;\n+\n+        const { comments: fetchedComments, issue: fetchedIssue } = await fetchIssueComments({\n+          context: params.context,\n+          issueNum: issueNumber,\n+          owner,\n+          repo,\n+        });\n+\n+        specAndBodies[linkedKey] = fetchedIssue?.body || \"\";\n+        linkedIssue.body = fetchedIssue?.body || \"\";\n+        linkedIssue.comments = fetchedComments;\n+        linkedIssues.push(linkedIssue);\n+      }\n+    }\n+  }\n+\n+  return { streamlinedComments: await getAllStreamlinedComments(linkedIssues), linkedIssues, specAndBodies, seen };\n+}\n+\n+export async function mergeCommentsAndFetchSpec(\n+  params: FetchParams,\n+  linkedIssue: LinkedIssues,\n+  streamlinedComments: Record<string, StreamlinedComment[]>,\n+  specOrBodies: Record<string, string>,\n+  seen: Set<string>\n+) {\n+  if (linkedIssue.comments) {\n+    const streamed = await getAllStreamlinedComments([linkedIssue]);\n+    const merged = mergeStreamlinedComments(streamlinedComments, streamed);\n+    streamlinedComments = { ...streamlinedComments, ...merged };\n+  }\n+\n+  if (linkedIssue.body) {\n+    await handleSpec(params, linkedIssue.body, specOrBodies, createKey(linkedIssue.url, linkedIssue.issueNumber), seen, streamlinedComments);\n+  }\n+}\n+\n+export async function fetchPullRequestDiff(context: Context, org: string, repo: string, issue: number) {\n+  const { octokit } = context;\n+\n+  try {\n+    const diff = await octokit.pulls.get({\n+      owner: org,\n+      repo,\n+      pull_number: issue,\n+      mediaType: {\n+        format: \"diff\",\n+      },\n+    });\n+    return diff.data as unknown as string;\n+  } catch (e) {\n+    return null;\n+  }\n+}\n+\n+export async function fetchIssue(params: FetchParams) {\n+  const { octokit, payload, logger } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  try {\n+    return await octokit.rest.issues\n+      .get({\n+        owner: owner || payload.repository.owner.login,\n+        repo: repo || payload.repository.name,\n+        issue_number: issueNum || payload.issue.number,\n+      })\n+      .then(({ data }) => data as Issue);\n+  } catch (e) {\n+    logger.error(`Error fetching issue `, {\n+      e,\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    });\n+    return null;\n+  }\n+}\n+\n+export async function fetchIssueComments(params: FetchParams) {\n+  const { octokit, payload, logger } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  const issue = await fetchIssue(params);\n+\n+  let comments: IssueComments | ReviewComments = [];","score":{"reward":1.62,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.0092307692308,"syllables":17,"sentences":1,"score":0.7699076923076921},"multiplier":1,"relevance":0.6}},{"id":1788941073,"content":"Should be renamed to \n```suggestion\n    env: { UBIQUITY_OS_APP_NAME },\n```","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1788941073","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,47 +1,87 @@\n import { Octokit } from \"@octokit/rest\";\n-import { createClient } from \"@supabase/supabase-js\";\n-import { createAdapters } from \"./adapters\";\n-import { Env, PluginInputs } from \"./types\";\n+import { PluginInputs } from \"./types\";\n import { Context } from \"./types\";\n+import { askQuestion } from \"./handlers/ask-gpt\";\n+import { addCommentToIssue } from \"./handlers/add-comment\";\n+import { LogLevel, LogReturn, Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { Env } from \"./types/env\";\n+import { createAdapters } from \"./adapters\";\n+import { createClient } from \"@supabase/supabase-js\";\n+import { VoyageAIClient } from \"voyageai\";\n+import OpenAI from \"openai\";\n \n-/**\n- * How a worker executes the plugin.\n- */\n export async function plugin(inputs: PluginInputs, env: Env) {\n   const octokit = new Octokit({ auth: inputs.authToken });\n   const supabase = createClient(env.SUPABASE_URL, env.SUPABASE_KEY);\n-\n+  const voyageClient = new VoyageAIClient({\n+    apiKey: env.VOYAGEAI_API_KEY,\n+  });\n+  const openAiObject = {\n+    apiKey: env.OPENAI_API_KEY,\n+    ...(inputs.settings.openAiBaseUrl && { baseURL: inputs.settings.openAiBaseUrl }),\n+  };\n+  const openaiClient = new OpenAI(openAiObject);\n   const context: Context = {\n     eventName: inputs.eventName,\n     payload: inputs.eventPayload,\n     config: inputs.settings,\n     octokit,\n     env,\n-    logger: {\n-      debug(message: unknown, ...optionalParams: unknown[]) {\n-        console.debug(message, ...optionalParams);\n-      },\n-      info(message: unknown, ...optionalParams: unknown[]) {\n-        console.log(message, ...optionalParams);\n-      },\n-      warn(message: unknown, ...optionalParams: unknown[]) {\n-        console.warn(message, ...optionalParams);\n-      },\n-      error(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-      fatal(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-    },\n+    logger: new Logs(\"info\" as LogLevel),\n     adapters: {} as ReturnType<typeof createAdapters>,\n   };\n+  context.adapters = createAdapters(supabase, voyageClient, openaiClient, context);\n+  return runPlugin(context);\n+}\n \n-  context.adapters = createAdapters(supabase, context);\n+export async function runPlugin(context: Context) {\n+  const {\n+    logger,\n+    env: { UBIQUITY_OS_APP_SLUG },","score":{"reward":0.728,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.7}},{"id":1802414614,"content":"Can you explain to me what the similarity threshold is for?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802414614","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -18,7 +18,13 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n  * The kernel will extract those and pass them to the plugin,\n  * which are built into the context object from setup().\n  */\n-export const pluginSettingsSchema = T.Object({});\n+\n+export const pluginSettingsSchema = T.Object({\n+  model: T.String({ default: \"o1-mini\" }),\n+  openAiBaseUrl: T.Optional(T.String()),\n+  similarityThreshold: T.Number({ default: 0.1 }),","score":{"reward":2,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":64.9245454545455,"syllables":17,"sentences":1,"score":0.9507545454545451},"multiplier":1,"relevance":0.8}},{"id":1802415062,"content":"Maybe rename to llm.d.ts","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802415062","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.79,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":106.105,"syllables":7,"sentences":3,"score":1},"multiplier":1,"relevance":0.5}},{"id":1802415501,"content":"Rename to github-types.d.ts","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802415501","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.73,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":92.00500000000002,"syllables":8,"sentences":3,"score":0.6799499999999997},"multiplier":1,"relevance":0.5}},{"id":1802416068,"content":"Perhaps this should default to \"UbiquityOS\"","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802416068","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,9 +1,20 @@\n import { Type as T } from \"@sinclair/typebox\";\n import { StaticDecode } from \"@sinclair/typebox\";\n-import \"dotenv/config\";\n import { StandardValidator } from \"typebox-validators\";\n+import dotenv from \"dotenv\";\n+dotenv.config();\n \n+/**\n+ * Define sensitive environment variables here.\n+ *\n+ * These are fed into the worker/workflow as `env` and are\n+ * taken from either `dev.vars` or repository secrets.\n+ * They are used with `process.env` but are type-safe.\n+ */\n export const envSchema = T.Object({\n+  OPENAI_API_KEY: T.String(),\n+  UBIQUITY_OS_APP_NAME: T.String(),","score":{"reward":1.078,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":45.64500000000001,"syllables":11,"sentences":1,"score":0.8564500000000002},"multiplier":1,"relevance":0.7}},{"id":1802416495,"content":"```suggestion\n  let readme;\n```","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802416495","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,263 @@\n+import { createKey } from \"../handlers/comments\";\n+import { FetchedCodes, FetchParams, LinkedIssues } from \"../types/github\";\n+import { StreamlinedComment } from \"../types/gpt\";\n+import { Context } from \"../types/context\"; // Import Context type\n+\n+/**\n+ * Removes duplicate streamlined comments based on their body content.\n+ *\n+ * @param streamlinedComments - The record of streamlined comments to deduplicate.\n+ * @returns The deduplicated record of streamlined comments.\n+ */\n+export function dedupeStreamlinedComments(streamlinedComments: Record<string, StreamlinedComment[]>) {\n+  for (const key of Object.keys(streamlinedComments)) {\n+    streamlinedComments[key] = streamlinedComments[key].filter(\n+      (comment: StreamlinedComment, index: number, self: StreamlinedComment[]) => index === self.findIndex((t: StreamlinedComment) => t.body === comment.body)\n+    );\n+  }\n+  return streamlinedComments;\n+}\n+\n+/**\n+ * Merges new streamlined comments into existing streamlined comments.\n+ *\n+ * @param existingComments - The existing comments to merge into.\n+ * @param newComments - The new comments to merge.\n+ * @returns The merged comments.\n+ */\n+export function mergeStreamlinedComments(existingComments: Record<string, StreamlinedComment[]>, newComments: Record<string, StreamlinedComment[]>) {\n+  if (!existingComments) {\n+    existingComments = {};\n+  }\n+  for (const [key, value] of Object.entries(newComments)) {\n+    if (!existingComments[key]) {\n+      existingComments[key] = [];\n+    }\n+    const previous = existingComments[key] || [];\n+    existingComments[key] = [...previous, ...value];\n+  }\n+  return existingComments;\n+}\n+\n+/**\n+ * Extracts the owner, repository, and issue number from a given key.\n+ *\n+ * @param key - The key string in the format \"owner/repo/issueNumber\".\n+ * @returns A tuple containing the owner, repository, and issue number.\n+ */\n+export function splitKey(key: string): [string, string, string] {\n+  const parts = key.split(\"/\");\n+  return [parts[0], parts[1], parts[2]];\n+}\n+\n+/**\n+ * Identifies issues from a comment string.\n+ *\n+ * @param comment - The comment string that may contain issue references.\n+ * @param params - Additional parameters that may include context information.\n+ * @returns An array of linked issues or null if no issues are found.\n+ */\n+export function idIssueFromComment(comment?: string | null): LinkedIssues[] | null {\n+  const urlMatch = comment?.match(/https?:\\/\\/(?:www\\.)?github\\.com\\/([^/]+)\\/([^/]+)\\/(pull|issues?)\\/(\\d+)/g);\n+  const response: LinkedIssues[] = [];\n+\n+  if (urlMatch) {\n+    urlMatch.forEach((url) => {\n+      response.push(createLinkedIssueOrPr(url));\n+    });\n+  }\n+  // This section handles issue references using markdown format (e.g., #123)\n+  // const hashMatch = comment?.match(/#(\\d+)/g);\n+  // if (hashMatch) {\n+  //   const owner = params?.context.payload.repository?.owner?.login || \"\";\n+  //   const repo = params?.context.payload.repository?.name || \"\";\n+\n+  //   hashMatch.forEach((hash) => {\n+  //     const issueNumber = hash.replace(\"#\", \"\");\n+  //     response.push({\n+  //       owner,\n+  //       repo,\n+  //       issueNumber: parseInt(issueNumber, 10),\n+  //       url: `https://github.com/${owner}/${repo}/issues/${issueNumber}`\n+  //     });\n+  //   });\n+  // }\n+\n+  return response.length > 0 ? response : null;\n+}\n+\n+/**\n+ * Creates a linked issue or pull request object from a given GitHub URL.\n+ *\n+ * @param url - The GitHub URL to create the linked issue or pull request from.\n+ * @returns An object representing the linked issue or pull request.\n+ */\n+function createLinkedIssueOrPr(url: string): LinkedIssues {\n+  const key = createKey(url);\n+  const [owner, repo, issueNumber] = splitKey(key);\n+  return {\n+    owner,\n+    repo,\n+    issueNumber: parseInt(issueNumber),\n+    url,\n+  };\n+}\n+\n+/**\n+ * Fetches the code linked from a GitHub issue.\n+ *\n+ * @param issue - The issue string containing GitHub URLs.\n+ * @param context - The context object containing the octokit instance.\n+ * @param url - The URL of the issue.\n+ * @param extensions - The list of file extensions to filter the linked files.\n+ * @returns A promise that resolves to an array of fetched codes.\n+ */\n+export async function fetchCodeLinkedFromIssue(\n+  issue: string,\n+  context: Context,\n+  url: string,\n+  extensions: string[] = [\".ts\", \".json\", \".sol\"]\n+): Promise<FetchedCodes[]> {\n+  const { octokit } = context;\n+  // Function to extract owner, repo, and path from a GitHub URL\n+  function parseGitHubUrl(url: string): { owner: string; repo: string; path: string } | null {\n+    const match = url.match(/https?:\\/\\/(?:www\\.)?github\\.com\\/([^/]+)\\/([^/]+)\\/blob\\/[^/]+\\/(.+)/);\n+    return match ? { owner: match[1], repo: match[2], path: match[3] } : null;\n+  }\n+  // Function to check if a file has one of the specified extensions\n+  function hasValidExtension(path: string) {\n+    const cleanPath = path.split(\"#\")[0]; // Remove any fragment identifiers like #L39-L49\n+    return extensions.some((ext) => cleanPath.toLowerCase().endsWith(ext.toLowerCase()));\n+  }\n+  //Function to remove Line numbers from the URL\n+  function removeLineNumbers(url: string) {\n+    const match = url.match(/(.*?)(#L\\d+(-L\\d+)?)/);\n+    return match ? match[1] : url;\n+  }\n+  // Extract all GitHub URLs from the issue\n+  const urls = issue.match(/https?:\\/\\/(www\\.)?github\\.com\\/[^\\s]+/g) || [];\n+  // Process each URL\n+  const results = await Promise.all(\n+    urls.map(async (url) => {\n+      let parsedUrl = parseGitHubUrl(url);\n+      parsedUrl = parsedUrl ? { ...parsedUrl, path: removeLineNumbers(parsedUrl.path) } : null;\n+      if (!parsedUrl || !hasValidExtension(parsedUrl.path)) return null;\n+      console.log(`Fetching content from ${url}`);\n+      try {\n+        //Parse the commit sha from the URL\n+        const commitSha = url.match(/https?:\\/\\/github\\.com\\/[^/]+\\/[^/]+\\/blob\\/([^/]+)\\/.+/);\n+        let response;\n+        if (commitSha) {\n+          response = await octokit.repos.getContent({\n+            owner: parsedUrl.owner,\n+            repo: parsedUrl.repo,\n+            ref: commitSha ? commitSha[1] : \"main\",\n+            path: parsedUrl.path,\n+          });\n+        } else {\n+          response = await octokit.repos.getContent({\n+            owner: parsedUrl.owner,\n+            repo: parsedUrl.repo,\n+            path: parsedUrl.path,\n+          });\n+        }\n+\n+        if (\"content\" in response.data) {\n+          const content = Buffer.from(response.data.content, \"base64\").toString();\n+          return { body: content, id: parsedUrl.path };\n+        }\n+      } catch (error) {\n+        console.error(`Error fetching content from ${url}:`, error);\n+      }\n+      return null;\n+    })\n+  );\n+  return results\n+    .filter((result): result is { body: string; id: string } => result !== null)\n+    .map((result) => ({\n+      ...result,\n+      org: context.payload.repository.owner.login,\n+      repo: context.payload.repository.name,\n+      issueNumber: parseInt(issue.match(/\\/issues\\/(\\d+)/)?.[1] || \"0\", 10),\n+      issueUrl: url,\n+      user: null,\n+    }));\n+}\n+\n+/**\n+ * Optimizes the context strings by removing duplicates and sorting by information density.\n+ * Removes exact duplicates and sorts by information density and length.\n+ *\n+ * @param strings - The array of context strings to optimize.\n+ * @returns The optimized array of context strings.\n+ */\n+export function optimizeContext(strings: string[]): string[] {\n+  // Helper function to clean strings while preserving links\n+  function cleanString(inputString: string): string {\n+    // Preserve links by temporarily replacing them\n+    const links: string[] = [];\n+    inputString = inputString.replace(/https?:\\/\\/\\S+/g, (match) => {\n+      links.push(match);\n+      return `__LINK${links.length - 1}__`;\n+    });\n+    // Clean the string\n+    inputString = inputString\n+      .replace(/[^\\w\\s-/]|_/g, \"\") // Remove punctuation except '-' and '/'\n+      .replace(/\\s+/g, \" \")\n+      .trim()\n+      .toLowerCase();\n+    // Restore links\n+    inputString = inputString.replace(/__LINK(\\d+)__/g, (i) => links[parseInt(i)]);\n+\n+    return inputString;\n+  }\n+  // Helper function to calculate information density\n+  function informationDensity(s: string): number {\n+    const words = s.split(/\\s+/);\n+    const uniqueWords = new Set(words);\n+    return uniqueWords.size / words.length;\n+  }\n+  // Clean and remove empty strings\n+  const cleanedStrings = strings.map(cleanString).filter((s) => s.length > 0);\n+  // Remove exact duplicates\n+  const uniqueStrings = Array.from(new Set(cleanedStrings));\n+  // Sort strings by information density and length\n+  uniqueStrings.sort((a, b) => {\n+    const densityDiff = informationDensity(b) - informationDensity(a);\n+    return densityDiff !== 0 ? densityDiff : b.length - a.length;\n+  });\n+  const result: string[] = [];\n+  const wordSet = new Set<string>();\n+  for (const str of uniqueStrings) {\n+    const words = str.split(/\\s+/);\n+    const newWords = words.filter((word) => !wordSet.has(word) && !word.startsWith(\"http\"));\n+    if (newWords.length > 0 || str.includes(\"http\")) {\n+      result.push(str);\n+      newWords.forEach((word) => wordSet.add(word));\n+    }\n+  }\n+  return result;\n+}\n+\n+/**\n+ * Extracts and returns the README content from the repository associated with the given issue.\n+ *\n+ * @param params - The parameters required to fetch the README, including the context with octokit instance.\n+ * @returns The content of the README file as a string.\n+ */\n+export async function pullReadmeFromRepoForIssue(params: FetchParams): Promise<string | undefined> {\n+  let readme = undefined;","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":2,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1802417153,"content":"```suggestion\n```","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802417153","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,263 @@\n+import { createKey } from \"../handlers/comments\";\n+import { FetchedCodes, FetchParams, LinkedIssues } from \"../types/github\";\n+import { StreamlinedComment } from \"../types/gpt\";\n+import { Context } from \"../types/context\"; // Import Context type\n+\n+/**\n+ * Removes duplicate streamlined comments based on their body content.\n+ *\n+ * @param streamlinedComments - The record of streamlined comments to deduplicate.\n+ * @returns The deduplicated record of streamlined comments.\n+ */\n+export function dedupeStreamlinedComments(streamlinedComments: Record<string, StreamlinedComment[]>) {\n+  for (const key of Object.keys(streamlinedComments)) {\n+    streamlinedComments[key] = streamlinedComments[key].filter(\n+      (comment: StreamlinedComment, index: number, self: StreamlinedComment[]) => index === self.findIndex((t: StreamlinedComment) => t.body === comment.body)\n+    );\n+  }\n+  return streamlinedComments;\n+}\n+\n+/**\n+ * Merges new streamlined comments into existing streamlined comments.\n+ *\n+ * @param existingComments - The existing comments to merge into.\n+ * @param newComments - The new comments to merge.\n+ * @returns The merged comments.\n+ */\n+export function mergeStreamlinedComments(existingComments: Record<string, StreamlinedComment[]>, newComments: Record<string, StreamlinedComment[]>) {\n+  if (!existingComments) {\n+    existingComments = {};\n+  }\n+  for (const [key, value] of Object.entries(newComments)) {\n+    if (!existingComments[key]) {\n+      existingComments[key] = [];\n+    }\n+    const previous = existingComments[key] || [];\n+    existingComments[key] = [...previous, ...value];\n+  }\n+  return existingComments;\n+}\n+\n+/**\n+ * Extracts the owner, repository, and issue number from a given key.\n+ *\n+ * @param key - The key string in the format \"owner/repo/issueNumber\".\n+ * @returns A tuple containing the owner, repository, and issue number.\n+ */\n+export function splitKey(key: string): [string, string, string] {\n+  const parts = key.split(\"/\");\n+  return [parts[0], parts[1], parts[2]];\n+}\n+\n+/**\n+ * Identifies issues from a comment string.\n+ *\n+ * @param comment - The comment string that may contain issue references.\n+ * @param params - Additional parameters that may include context information.\n+ * @returns An array of linked issues or null if no issues are found.\n+ */\n+export function idIssueFromComment(comment?: string | null): LinkedIssues[] | null {\n+  const urlMatch = comment?.match(/https?:\\/\\/(?:www\\.)?github\\.com\\/([^/]+)\\/([^/]+)\\/(pull|issues?)\\/(\\d+)/g);\n+  const response: LinkedIssues[] = [];\n+\n+  if (urlMatch) {\n+    urlMatch.forEach((url) => {\n+      response.push(createLinkedIssueOrPr(url));\n+    });\n+  }\n+  // This section handles issue references using markdown format (e.g., #123)\n+  // const hashMatch = comment?.match(/#(\\d+)/g);\n+  // if (hashMatch) {\n+  //   const owner = params?.context.payload.repository?.owner?.login || \"\";\n+  //   const repo = params?.context.payload.repository?.name || \"\";\n+\n+  //   hashMatch.forEach((hash) => {\n+  //     const issueNumber = hash.replace(\"#\", \"\");\n+  //     response.push({\n+  //       owner,\n+  //       repo,\n+  //       issueNumber: parseInt(issueNumber, 10),\n+  //       url: `https://github.com/${owner}/${repo}/issues/${issueNumber}`\n+  //     });\n+  //   });\n+  // }","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":2,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.2}},{"id":1802419785,"content":"Confused about the parameters and this method but i assume it works. Can you share some remarks on this method?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802419785","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,87 @@\n+import { Context } from \"../types\";\n+import { CompletionsType } from \"../adapters/openai/helpers/completions\";\n+import { CommentSimilaritySearchResult } from \"../adapters/supabase/helpers/comment\";\n+import { IssueSimilaritySearchResult } from \"../adapters/supabase/helpers/issues\";\n+import { recursivelyFetchLinkedIssues } from \"../helpers/issue-fetching\";\n+import { formatChatHistory } from \"../helpers/format-chat-history\";\n+import { optimizeContext } from \"../helpers/issue\";\n+\n+/**\n+ * Asks a question to GPT and returns the response\n+ * @param context - The context object containing environment and configuration details\n+ * @param question - The question to ask GPT\n+ * @returns The response from GPT\n+ * @throws If no question is provided\n+ */\n+export async function askQuestion(context: Context, question: string) {\n+  if (!question) {\n+    throw context.logger.error(\"No question provided\");\n+  }\n+  const { specAndBodies, streamlinedComments } = await recursivelyFetchLinkedIssues({\n+    context,\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+  });\n+  const formattedChat = await formatChatHistory(context, streamlinedComments, specAndBodies);\n+  console.log(\"formattedChat\", formattedChat);\n+  return await askGpt(context, question, formattedChat);\n+}\n+\n+/**\n+ * Asks GPT a question and returns the completions\n+ * @param context - The context object containing environment and configuration details\n+ * @param question - The question to ask GPT\n+ * @param formattedChat - The formatted chat history to provide context to GPT\n+ * @returns completions - The completions generated by GPT\n+ **/\n+export async function askGpt(context: Context, question: string, formattedChat: string[]): Promise<CompletionsType> {\n+  const {\n+    env: { UBIQUITY_OS_APP_NAME },\n+    config: { model, similarityThreshold },\n+  } = context;\n+  let similarComments: CommentSimilaritySearchResult[] = [];\n+  let similarIssues: IssueSimilaritySearchResult[] = [];\n+  try {\n+    similarComments = (await context.adapters.supabase.comment.findSimilarComments(question, similarityThreshold, \"\")) || [];\n+  } catch (error) {\n+    context.logger.error(`Error fetching similar comments: ${(error as Error).message}`);\n+  }\n+  try {\n+    similarIssues = (await context.adapters.supabase.issue.findSimilarIssues(question, similarityThreshold, \"\")) || [];\n+  } catch (error) {\n+    context.logger.error(`Error fetching similar issues: ${(error as Error).message}`);\n+  }\n+  let similarText = similarComments.map((comment: CommentSimilaritySearchResult) => comment.comment_plaintext);\n+  similarText.push(...similarIssues.map((issue: IssueSimilaritySearchResult) => issue.issue_plaintext));\n+  // Remove Null Results (Private Comments)\n+  similarText = similarText.filter((text) => text !== null);\n+  formattedChat = formattedChat.filter((text) => text !== null);\n+  context.logger.info(formattedChat.join(\"\"));\n+  // Optimize the context\n+  formattedChat = optimizeContext(formattedChat);\n+  // ReRank the results based on the question\n+  // const reRankedChat = formattedChat.length > 0 ? await context.adapters.voyage.reranker.reRankResults(formattedChat.filter(text => text !== \"\"), question, 300) : [];\n+  similarText = similarText.filter((text) => text !== \"\");\n+  const rerankedText = similarText.length > 0 ? await context.adapters.voyage.reranker.reRankResults(similarText, question) : [];\n+  rerankedText.forEach((text) => removeUnwantedChars(text));\n+  return context.adapters.openai.completions.createCompletion(\n+    question,\n+    model,\n+    rerankedText,\n+    formattedChat,\n+    [\"typescript\", \"github\", \"cloudflare worker\", \"actions\", \"jest\", \"supabase\", \"openai\"],\n+    UBIQUITY_OS_APP_NAME\n+  );","score":{"reward":2.976,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":74.01500000000001,"syllables":29,"sentences":2,"score":0.8598499999999999},"multiplier":1,"relevance":0.8}},{"id":1802420226,"content":"Probably makes sense to rename this to ask-llm","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802420226","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.236,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":84.90000000000003,"syllables":12,"sentences":1,"score":0.7509999999999997},"multiplier":1,"relevance":0.6}},{"id":1802421331,"content":"My understanding is that the `-instruct` model we chose is better at taking instructions for reranking, but I didn't notice any instructions related to the embedding model. Can you explain?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802421331","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+import { VoyageAIClient } from \"voyageai\";\n+import { Context } from \"../../../types\";\n+import { SuperVoyage } from \"./voyage\";\n+const VECTOR_SIZE = 1024;\n+\n+export class Embedding extends SuperVoyage {\n+  protected context: Context;\n+\n+  constructor(client: VoyageAIClient, context: Context) {\n+    super(client, context);\n+    this.context = context;\n+  }\n+\n+  async createEmbedding(text: string | null): Promise<number[]> {\n+    if (text === null) {\n+      return new Array(VECTOR_SIZE).fill(0);\n+    } else {\n+      const response = await this.client.embed({\n+        input: text,\n+        model: \"voyage-large-2-instruct\",","score":{"reward":4.356,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":56.25000000000003,"syllables":48,"sentences":2,"score":0.9625000000000002},"multiplier":1,"relevance":0.9}},{"id":1802421829,"content":"What is this? Is this to summarize contents? Are you sure this is a good idea?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802421829","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,119 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../../../types\";\n+import { SuperOpenAi } from \"./openai\";\n+const MAX_TOKENS = 7000;\n+\n+export interface CompletionsType {\n+  answer: string;\n+  tokenUsage: {\n+    input: number;\n+    output: number;\n+    total: number;\n+  };\n+}\n+\n+export class Completions extends SuperOpenAi {\n+  protected context: Context;\n+\n+  constructor(client: OpenAI, context: Context) {\n+    super(client, context);\n+    this.context = context;\n+  }\n+\n+  async createCompletion(\n+    prompt: string,\n+    model: string = \"o1-mini\",\n+    additionalContext: string[],\n+    localContext: string[],\n+    groundTruths: string[],\n+    botName: string\n+  ): Promise<CompletionsType> {\n+    const res: OpenAI.Chat.Completions.ChatCompletion = await this.client.chat.completions.create({\n+      model: model,\n+      messages: [\n+        {\n+          role: \"system\",\n+          content: [\n+            {\n+              type: \"text\",\n+              text:\n+                \"You Must obey the following ground truths: [\" +\n+                groundTruths.join(\":\") +\n+                \"]\\n\" +\n+                \"You are tasked with assisting as a GitHub bot by generating responses based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\n# Steps\\n\\n1. **Understand Context**: Review the chat history and any similar provided responses to understand the context.\\n2. **Extract Relevant Information**: Identify key pieces of information, even if they are incomplete, from the available corpus.\\n3. **Apply Knowledge**: Use the extracted information and relevant documentation to construct an informed response.\\n4. **Draft Response**: Compile the gathered insights into a coherent and concise response, ensuring it's clear and directly addresses the user's query.\\n5. **Review and Refine**: Check for accuracy and completeness, filling any gaps with logical assumptions where necessary.\\n\\n# Output Format\\n\\n- Concise and coherent responses in paragraphs that directly address the user's question.\\n- Incorporate inline code snippets or references from the documentation if relevant.\\n\\n# Examples\\n\\n**Example 1**\\n\\n*Input:*\\n- Chat History: \\\"What was the original reason for moving the LP tokens?\\\"\\n- Corpus Excerpts: \\\"It isn't clear to me if we redid the staking yet and if we should migrate. If so, perhaps we should make a new issue instead. We should investigate whether the missing LP tokens issue from the MasterChefV2.1 contract is critical to the decision of migrating or not.\\\"\\n\\n*Output:*\\n\\\"It was due to missing LP tokens issue from the MasterChefV2.1 Contract.\\n\\n# Notes\\n\\n- Ensure the response is crafted from the corpus provided, without introducing information outside of what's available or relevant to the query.\\n- Consider edge cases where the corpus might lack explicit answers, and justify responses with logical reasoning based on the existing information.\" +\n+                \"Your name is : \" +\n+                botName +\n+                \"\\n\" +\n+                \"Primary Context: \" +\n+                additionalContext.join(\"\\n\") +\n+                \"\\nLocal Context: \" +\n+                localContext.join(\"\\n\"),\n+            },\n+          ],\n+        },\n+        {\n+          role: \"user\",\n+          content: [\n+            {\n+              type: \"text\",\n+              text: prompt,\n+            },\n+          ],\n+        },\n+      ],\n+      temperature: 0.2,\n+      max_tokens: MAX_TOKENS,\n+      top_p: 0.5,\n+      frequency_penalty: 0,\n+      presence_penalty: 0,\n+      response_format: {\n+        type: \"text\",\n+      },\n+    });\n+    const answer = res.choices[0].message;\n+    console.log(JSON.stringify(res, null, 2));\n+    if (answer && answer.content && res.usage) {\n+      return { answer: answer.content, tokenUsage: { input: res.usage.prompt_tokens, output: res.usage.completion_tokens, total: res.usage.total_tokens } };\n+    }\n+    return { answer: \"\", tokenUsage: { input: 0, output: 0, total: 0 } };\n+  }\n+\n+  async contextCompressionCalls(context: string[]): Promise<CompletionsType> {\n+    const res: OpenAI.Chat.Completions.ChatCompletion = await this.client.chat.completions.create({\n+      model: \"mistralai/mistral-nemo\",","score":{"reward":2.128,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":95.67166666666668,"syllables":20,"sentences":3,"score":0.6432833333333332},"multiplier":1,"relevance":0.7}},{"id":1802423376,"content":"Seems unexpected that you removed this because we generally use this as our runtime","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802423376","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -61,7 +63,6 @@\n     \"npm-run-all\": \"4.1.5\",\n     \"prettier\": \"3.3.2\",\n     \"ts-jest\": \"29.1.5\",\n-    \"tsx\": \"4.15.6\",","score":{"reward":1.812,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":59.68214285714288,"syllables":22,"sentences":1,"score":0.9968214285714287},"multiplier":1,"relevance":0.6}},{"id":1804124541,"content":"Be sure to consider the instructions from the [readme](https://github.com/voyage-ai/voyage-large-2-instruct). This seems non-intuitive but \r\nAs I understand, you set `input_type` to `None` and then you can write custom instructions.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804124541","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+import { VoyageAIClient } from \"voyageai\";\n+import { Context } from \"../../../types\";\n+import { SuperVoyage } from \"./voyage\";\n+const VECTOR_SIZE = 1024;\n+\n+export class Embedding extends SuperVoyage {\n+  protected context: Context;\n+\n+  constructor(client: VoyageAIClient, context: Context) {\n+    super(client, context);\n+    this.context = context;\n+  }\n+\n+  async createEmbedding(text: string | null): Promise<number[]> {\n+    if (text === null) {\n+      return new Array(VECTOR_SIZE).fill(0);\n+    } else {\n+      const response = await this.client.embed({\n+        input: text,\n+        model: \"voyage-large-2-instruct\",","score":{"reward":6.3,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":74.06583333333336,"syllables":38,"sentences":2,"score":0.8593416666666664},"multiplier":1,"relevance":0.9}},{"id":1804155667,"content":"Hard coding these things is the wrong approach then. This needs to be dynamic in a new task.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804155667","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,87 @@\n+import { Context } from \"../types\";\n+import { CompletionsType } from \"../adapters/openai/helpers/completions\";\n+import { CommentSimilaritySearchResult } from \"../adapters/supabase/helpers/comment\";\n+import { IssueSimilaritySearchResult } from \"../adapters/supabase/helpers/issues\";\n+import { recursivelyFetchLinkedIssues } from \"../helpers/issue-fetching\";\n+import { formatChatHistory } from \"../helpers/format-chat-history\";\n+import { optimizeContext } from \"../helpers/issue\";\n+\n+/**\n+ * Asks a question to GPT and returns the response\n+ * @param context - The context object containing environment and configuration details\n+ * @param question - The question to ask GPT\n+ * @returns The response from GPT\n+ * @throws If no question is provided\n+ */\n+export async function askQuestion(context: Context, question: string) {\n+  if (!question) {\n+    throw context.logger.error(\"No question provided\");\n+  }\n+  const { specAndBodies, streamlinedComments } = await recursivelyFetchLinkedIssues({\n+    context,\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+  });\n+  const formattedChat = await formatChatHistory(context, streamlinedComments, specAndBodies);\n+  console.log(\"formattedChat\", formattedChat);\n+  return await askGpt(context, question, formattedChat);\n+}\n+\n+/**\n+ * Asks GPT a question and returns the completions\n+ * @param context - The context object containing environment and configuration details\n+ * @param question - The question to ask GPT\n+ * @param formattedChat - The formatted chat history to provide context to GPT\n+ * @returns completions - The completions generated by GPT\n+ **/\n+export async function askGpt(context: Context, question: string, formattedChat: string[]): Promise<CompletionsType> {\n+  const {\n+    env: { UBIQUITY_OS_APP_NAME },\n+    config: { model, similarityThreshold },\n+  } = context;\n+  let similarComments: CommentSimilaritySearchResult[] = [];\n+  let similarIssues: IssueSimilaritySearchResult[] = [];\n+  try {\n+    similarComments = (await context.adapters.supabase.comment.findSimilarComments(question, similarityThreshold, \"\")) || [];\n+  } catch (error) {\n+    context.logger.error(`Error fetching similar comments: ${(error as Error).message}`);\n+  }\n+  try {\n+    similarIssues = (await context.adapters.supabase.issue.findSimilarIssues(question, similarityThreshold, \"\")) || [];\n+  } catch (error) {\n+    context.logger.error(`Error fetching similar issues: ${(error as Error).message}`);\n+  }\n+  let similarText = similarComments.map((comment: CommentSimilaritySearchResult) => comment.comment_plaintext);\n+  similarText.push(...similarIssues.map((issue: IssueSimilaritySearchResult) => issue.issue_plaintext));\n+  // Remove Null Results (Private Comments)\n+  similarText = similarText.filter((text) => text !== null);\n+  formattedChat = formattedChat.filter((text) => text !== null);\n+  context.logger.info(formattedChat.join(\"\"));\n+  // Optimize the context\n+  formattedChat = optimizeContext(formattedChat);\n+  // ReRank the results based on the question\n+  // const reRankedChat = formattedChat.length > 0 ? await context.adapters.voyage.reranker.reRankResults(formattedChat.filter(text => text !== \"\"), question, 300) : [];\n+  similarText = similarText.filter((text) => text !== \"\");\n+  const rerankedText = similarText.length > 0 ? await context.adapters.voyage.reranker.reRankResults(similarText, question) : [];\n+  rerankedText.forEach((text) => removeUnwantedChars(text));\n+  return context.adapters.openai.completions.createCompletion(\n+    question,\n+    model,\n+    rerankedText,\n+    formattedChat,\n+    [\"typescript\", \"github\", \"cloudflare worker\", \"actions\", \"jest\", \"supabase\", \"openai\"],","score":{"reward":2.64,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":94.30000000000001,"syllables":22,"sentences":2,"score":0.6569999999999999},"multiplier":1,"relevance":0.8}},{"id":1804158884,"content":"You sure you want to remove formatting clues such as bullet point lists, and the syntax for images? You'll just be left with URLs \r\nYou're also removing the block quote indicator which certainly changes the meaning of the corpus (quoting somebody else doesn't mean you agree.)\r\nThis seems like the regex needs to be a lot more comprehensive.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804158884","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,87 @@\n+import { Context } from \"../types\";\n+import { CompletionsType } from \"../adapters/openai/helpers/completions\";\n+import { CommentSimilaritySearchResult } from \"../adapters/supabase/helpers/comment\";\n+import { IssueSimilaritySearchResult } from \"../adapters/supabase/helpers/issues\";\n+import { recursivelyFetchLinkedIssues } from \"../helpers/issue-fetching\";\n+import { formatChatHistory } from \"../helpers/format-chat-history\";\n+import { optimizeContext } from \"../helpers/issue\";\n+\n+/**\n+ * Asks a question to GPT and returns the response\n+ * @param context - The context object containing environment and configuration details\n+ * @param question - The question to ask GPT\n+ * @returns The response from GPT\n+ * @throws If no question is provided\n+ */\n+export async function askQuestion(context: Context, question: string) {\n+  if (!question) {\n+    throw context.logger.error(\"No question provided\");\n+  }\n+  const { specAndBodies, streamlinedComments } = await recursivelyFetchLinkedIssues({\n+    context,\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+  });\n+  const formattedChat = await formatChatHistory(context, streamlinedComments, specAndBodies);\n+  console.log(\"formattedChat\", formattedChat);\n+  return await askGpt(context, question, formattedChat);\n+}\n+\n+/**\n+ * Asks GPT a question and returns the completions\n+ * @param context - The context object containing environment and configuration details\n+ * @param question - The question to ask GPT\n+ * @param formattedChat - The formatted chat history to provide context to GPT\n+ * @returns completions - The completions generated by GPT\n+ **/\n+export async function askGpt(context: Context, question: string, formattedChat: string[]): Promise<CompletionsType> {\n+  const {\n+    env: { UBIQUITY_OS_APP_NAME },\n+    config: { model, similarityThreshold },\n+  } = context;\n+  let similarComments: CommentSimilaritySearchResult[] = [];\n+  let similarIssues: IssueSimilaritySearchResult[] = [];\n+  try {\n+    similarComments = (await context.adapters.supabase.comment.findSimilarComments(question, similarityThreshold, \"\")) || [];\n+  } catch (error) {\n+    context.logger.error(`Error fetching similar comments: ${(error as Error).message}`);\n+  }\n+  try {\n+    similarIssues = (await context.adapters.supabase.issue.findSimilarIssues(question, similarityThreshold, \"\")) || [];\n+  } catch (error) {\n+    context.logger.error(`Error fetching similar issues: ${(error as Error).message}`);\n+  }\n+  let similarText = similarComments.map((comment: CommentSimilaritySearchResult) => comment.comment_plaintext);\n+  similarText.push(...similarIssues.map((issue: IssueSimilaritySearchResult) => issue.issue_plaintext));\n+  // Remove Null Results (Private Comments)\n+  similarText = similarText.filter((text) => text !== null);\n+  formattedChat = formattedChat.filter((text) => text !== null);\n+  context.logger.info(formattedChat.join(\"\"));\n+  // Optimize the context\n+  formattedChat = optimizeContext(formattedChat);\n+  // ReRank the results based on the question\n+  // const reRankedChat = formattedChat.length > 0 ? await context.adapters.voyage.reranker.reRankResults(formattedChat.filter(text => text !== \"\"), question, 300) : [];\n+  similarText = similarText.filter((text) => text !== \"\");\n+  const rerankedText = similarText.length > 0 ? await context.adapters.voyage.reranker.reRankResults(similarText, question) : [];\n+  rerankedText.forEach((text) => removeUnwantedChars(text));\n+  return context.adapters.openai.completions.createCompletion(\n+    question,\n+    model,\n+    rerankedText,\n+    formattedChat,\n+    [\"typescript\", \"github\", \"cloudflare worker\", \"actions\", \"jest\", \"supabase\", \"openai\"],\n+    UBIQUITY_OS_APP_NAME\n+  );\n+}\n+\n+/**\n+ * Removes unwanted characters from the text like emojis, special characters etc.\n+ * @param text\n+ * @returns\n+ */\n+function removeUnwantedChars(text: string): string {\n+  if (!text) {\n+    return \"\";\n+  }\n+  return text.replace(/[^a-zA-Z0-9\\s]/g, \"\");","score":{"reward":5.832,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":2,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":66.92453551912571,"syllables":86,"sentences":3,"score":0.9307546448087429},"multiplier":1,"relevance":0.9}},{"id":1804163498,"content":"This could benefit from clarifying that this is calculating the difference with subtraction, so closer to 0 difference means more similar. Or to make it more intuitive, maybe reverse it. \r\n1 is the most similar and 0 is least similar, so you want 90% similarity threshold (0.9) thats a lot more intuitive for a config.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804163498","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -18,7 +18,13 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n  * The kernel will extract those and pass them to the plugin,\n  * which are built into the context object from setup().\n  */\n-export const pluginSettingsSchema = T.Object({});\n+\n+export const pluginSettingsSchema = T.Object({\n+  model: T.String({ default: \"o1-mini\" }),\n+  openAiBaseUrl: T.Optional(T.String()),\n+  similarityThreshold: T.Number({ default: 0.1 }),","score":{"reward":5.12,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":2,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":61.19285714285715,"syllables":87,"sentences":4,"score":0.9880714285714285},"multiplier":1,"relevance":0.8}},{"id":1804183264,"content":"Commas seem wrong","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804183264","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -145,7 +145,7 @@ describe(\"Ask plugin tests\", () => {\n     2 ubiquity: ${TEST_QUESTION} [#1](https://www.github.com/ubiquity/test-repo/issues/1)\n     === End Current Issue #1 Conversation ===\n \n-    === Linked Issue #2 Specification === ubiquity/test-repo/2 ===\n+    ,=== Linked Issue #2 Specification === ubiquity/test-repo/2 ===","score":{"reward":0.42,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.5}},{"id":1805739267,"content":"Returning an empty string always seems like a bad idea. This seems to make more sense to throw an error","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805739267","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,79 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../../../types\";\n+import { SuperOpenAi } from \"./openai\";\n+const MAX_TOKENS = 7000;\n+\n+export interface CompletionsType {\n+  answer: string;\n+  tokenUsage: {\n+    input: number;\n+    output: number;\n+    total: number;\n+  };\n+}\n+\n+export class Completions extends SuperOpenAi {\n+  protected context: Context;\n+\n+  constructor(client: OpenAI, context: Context) {\n+    super(client, context);\n+    this.context = context;\n+  }\n+\n+  async createCompletion(\n+    prompt: string,\n+    model: string = \"o1-mini\",\n+    additionalContext: string[],\n+    localContext: string[],\n+    groundTruths: string[],\n+    botName: string\n+  ): Promise<CompletionsType> {\n+    const res: OpenAI.Chat.Completions.ChatCompletion = await this.client.chat.completions.create({\n+      model: model,\n+      messages: [\n+        {\n+          role: \"system\",\n+          content: [\n+            {\n+              type: \"text\",\n+              text:\n+                \"You Must obey the following ground truths: [\" +\n+                groundTruths.join(\":\") +\n+                \"]\\n\" +\n+                \"You are tasked with assisting as a GitHub bot by generating responses based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\n# Steps\\n\\n1. **Understand Context**: Review the chat history and any similar provided responses to understand the context.\\n2. **Extract Relevant Information**: Identify key pieces of information, even if they are incomplete, from the available corpus.\\n3. **Apply Knowledge**: Use the extracted information and relevant documentation to construct an informed response.\\n4. **Draft Response**: Compile the gathered insights into a coherent and concise response, ensuring it's clear and directly addresses the user's query.\\n5. **Review and Refine**: Check for accuracy and completeness, filling any gaps with logical assumptions where necessary.\\n\\n# Output Format\\n\\n- Concise and coherent responses in paragraphs that directly address the user's question.\\n- Incorporate inline code snippets or references from the documentation if relevant.\\n\\n# Examples\\n\\n**Example 1**\\n\\n*Input:*\\n- Chat History: \\\"What was the original reason for moving the LP tokens?\\\"\\n- Corpus Excerpts: \\\"It isn't clear to me if we redid the staking yet and if we should migrate. If so, perhaps we should make a new issue instead. We should investigate whether the missing LP tokens issue from the MasterChefV2.1 contract is critical to the decision of migrating or not.\\\"\\n\\n*Output:*\\n\\\"It was due to missing LP tokens issue from the MasterChefV2.1 Contract.\\n\\n# Notes\\n\\n- Ensure the response is crafted from the corpus provided, without introducing information outside of what's available or relevant to the query.\\n- Consider edge cases where the corpus might lack explicit answers, and justify responses with logical reasoning based on the existing information.\" +\n+                \"Your name is : \" +\n+                botName +\n+                \"\\n\" +\n+                \"Primary Context: \" +\n+                additionalContext.join(\"\\n\") +\n+                \"\\nLocal Context: \" +\n+                localContext.join(\"\\n\"),\n+            },\n+          ],\n+        },\n+        {\n+          role: \"user\",\n+          content: [\n+            {\n+              type: \"text\",\n+              text: prompt,\n+            },\n+          ],\n+        },\n+      ],\n+      temperature: 0.2,\n+      max_tokens: MAX_TOKENS,\n+      top_p: 0.5,\n+      frequency_penalty: 0,\n+      presence_penalty: 0,\n+      response_format: {\n+        type: \"text\",\n+      },\n+    });\n+    const answer = res.choices[0].message;\n+    if (answer && answer.content && res.usage) {\n+      return { answer: answer.content, tokenUsage: { input: res.usage.prompt_tokens, output: res.usage.completion_tokens, total: res.usage.total_tokens } };\n+    }\n+    return { answer: \"\", tokenUsage: { input: 0, output: 0, total: 0 } };","score":{"reward":2.534,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":86.70500000000001,"syllables":26,"sentences":2,"score":0.7329499999999999},"multiplier":1,"relevance":0.7}},{"id":1805741953,"content":"Optional seems wrong unless its an optimization to save tokens","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805741953","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,49 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { SuperSupabase } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+\n+export interface CommentType {\n+  id: string;\n+  plaintext: string;\n+  markdown?: string;","score":{"reward":1.356,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":44.405,"syllables":18,"sentences":1,"score":0.84405},"multiplier":1,"relevance":0.6}},{"id":1805742531,"content":"Is ten optimal","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805742531","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,49 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { SuperSupabase } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+\n+export interface CommentType {\n+  id: string;\n+  plaintext: string;\n+  markdown?: string;\n+  author_id: number;\n+  created_at: string;\n+  modified_at: string;\n+  embedding: number[];\n+}\n+\n+export interface CommentSimilaritySearchResult {\n+  comment_id: string;\n+  comment_plaintext: string;\n+  comment_issue_id: string;\n+  similarity: number;\n+  text_similarity: number;\n+}\n+\n+export class Comment extends SuperSupabase {\n+  constructor(supabase: SupabaseClient, context: Context) {\n+    super(supabase, context);\n+  }\n+  async getComment(commentNodeId: string): Promise<CommentType[] | null> {\n+    const { data, error } = await this.supabase.from(\"issue_comments\").select(\"*\").eq(\"id\", commentNodeId);\n+    if (error) {\n+      this.context.logger.error(\"Error getting comment\", error);\n+    }\n+    return data;\n+  }\n+\n+  async findSimilarComments(query: string, threshold: number, currentId: string): Promise<CommentSimilaritySearchResult[] | null> {\n+    const embedding = await this.context.adapters.voyage.embedding.createEmbedding({ text: query, prompt: \"This is a query for the stored documents:\" });\n+    const { data, error } = await this.supabase.rpc(\"find_similar_comments\", {\n+      current_id: currentId,\n+      query_text: query,\n+      query_embedding: embedding,\n+      threshold: threshold,\n+      max_results: 10,","score":{"reward":0.63,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":62.79000000000002,"syllables":5,"sentences":1,"score":0.9720999999999997},"multiplier":1,"relevance":0.7}},{"id":1805744978,"content":"Might be good to find and replace all GPT instances in the code base with LLM","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805744978","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,73 @@\n+import { Context } from \"../types\";\n+import { CompletionsType } from \"../adapters/openai/helpers/completions\";\n+import { CommentSimilaritySearchResult } from \"../adapters/supabase/helpers/comment\";\n+import { IssueSimilaritySearchResult } from \"../adapters/supabase/helpers/issues\";\n+import { recursivelyFetchLinkedIssues } from \"../helpers/issue-fetching\";\n+import { formatChatHistory } from \"../helpers/format-chat-history\";\n+import { optimizeContext } from \"../helpers/issue\";\n+\n+/**\n+ * Asks a question to GPT and returns the response\n+ * @param context - The context object containing environment and configuration details\n+ * @param question - The question to ask GPT\n+ * @returns The response from GPT\n+ * @throws If no question is provided\n+ */\n+export async function askQuestion(context: Context, question: string) {\n+  if (!question) {\n+    throw context.logger.error(\"No question provided\");\n+  }\n+  const { specAndBodies, streamlinedComments } = await recursivelyFetchLinkedIssues({\n+    context,\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+  });\n+  const formattedChat = await formatChatHistory(context, streamlinedComments, specAndBodies);\n+  context.logger.info(`${formattedChat.join(\"\")}`);\n+  return await askGpt(context, question, formattedChat);\n+}\n+\n+/**\n+ * Asks GPT a question and returns the completions","score":{"reward":1.824,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":95.42,"syllables":18,"sentences":1,"score":0.6457999999999999},"multiplier":1,"relevance":0.6}},{"id":1805745603,"content":"In case we haven't already: we should make another task for dynamic ground truths","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805745603","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,73 @@\n+import { Context } from \"../types\";\n+import { CompletionsType } from \"../adapters/openai/helpers/completions\";\n+import { CommentSimilaritySearchResult } from \"../adapters/supabase/helpers/comment\";\n+import { IssueSimilaritySearchResult } from \"../adapters/supabase/helpers/issues\";\n+import { recursivelyFetchLinkedIssues } from \"../helpers/issue-fetching\";\n+import { formatChatHistory } from \"../helpers/format-chat-history\";\n+import { optimizeContext } from \"../helpers/issue\";\n+\n+/**\n+ * Asks a question to GPT and returns the response\n+ * @param context - The context object containing environment and configuration details\n+ * @param question - The question to ask GPT\n+ * @returns The response from GPT\n+ * @throws If no question is provided\n+ */\n+export async function askQuestion(context: Context, question: string) {\n+  if (!question) {\n+    throw context.logger.error(\"No question provided\");\n+  }\n+  const { specAndBodies, streamlinedComments } = await recursivelyFetchLinkedIssues({\n+    context,\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+  });\n+  const formattedChat = await formatChatHistory(context, streamlinedComments, specAndBodies);\n+  context.logger.info(`${formattedChat.join(\"\")}`);\n+  return await askGpt(context, question, formattedChat);\n+}\n+\n+/**\n+ * Asks GPT a question and returns the completions\n+ * @param context - The context object containing environment and configuration details\n+ * @param question - The question to ask GPT\n+ * @param formattedChat - The formatted chat history to provide context to GPT\n+ * @returns completions - The completions generated by GPT\n+ **/\n+export async function askGpt(context: Context, question: string, formattedChat: string[]): Promise<CompletionsType> {\n+  const {\n+    env: { UBIQUITY_OS_APP_NAME },\n+    config: { model, similarityThreshold },\n+  } = context;\n+  let similarComments: CommentSimilaritySearchResult[] = [];\n+  let similarIssues: IssueSimilaritySearchResult[] = [];\n+  try {\n+    similarComments = (await context.adapters.supabase.comment.findSimilarComments(question, 1 - similarityThreshold, \"\")) || [];\n+  } catch (error) {\n+    context.logger.error(`Error fetching similar comments: ${(error as Error).message}`);\n+  }\n+  try {\n+    similarIssues = (await context.adapters.supabase.issue.findSimilarIssues(question, 1 - similarityThreshold, \"\")) || [];\n+  } catch (error) {\n+    context.logger.error(`Error fetching similar issues: ${(error as Error).message}`);\n+  }\n+  let similarText = similarComments.map((comment: CommentSimilaritySearchResult) => comment.comment_plaintext);\n+  similarText.push(...similarIssues.map((issue: IssueSimilaritySearchResult) => issue.issue_plaintext));\n+  // Remove Null Results (Private Comments)\n+  similarText = similarText.filter((text) => text !== null);\n+  formattedChat = formattedChat.filter((text) => text !== null);\n+  // Optimize the context\n+  formattedChat = optimizeContext(formattedChat);\n+  // ReRank the results based on the question\n+  // const reRankedChat = formattedChat.length > 0 ? await context.adapters.voyage.reranker.reRankResults(formattedChat.filter(text => text !== \"\"), question, 300) : [];\n+  similarText = similarText.filter((text) => text !== \"\");\n+  const rerankedText = similarText.length > 0 ? await context.adapters.voyage.reranker.reRankResults(similarText, question) : [];\n+  return context.adapters.openai.completions.createCompletion(\n+    question,\n+    model,\n+    rerankedText,\n+    formattedChat,\n+    [\"typescript\", \"github\", \"cloudflare worker\", \"actions\", \"jest\", \"supabase\", \"openai\"],","score":{"reward":2.48,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":67.53000000000003,"syllables":22,"sentences":1,"score":0.9246999999999997},"multiplier":1,"relevance":0.8}},{"id":1805750233,"content":"This seems wrong but i dont know the full context of how its used.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805750233","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,246 @@\n+import { createKey } from \"../handlers/comments\";\n+import { FetchedCodes, FetchParams, LinkedIssues } from \"../types/github-types\";\n+import { StreamlinedComment } from \"../types/llm\";\n+import { Context } from \"../types/context\"; // Import Context type\n+\n+/**\n+ * Removes duplicate streamlined comments based on their body content.\n+ *\n+ * @param streamlinedComments - The record of streamlined comments to deduplicate.\n+ * @returns The deduplicated record of streamlined comments.\n+ */\n+export function dedupeStreamlinedComments(streamlinedComments: Record<string, StreamlinedComment[]>) {\n+  for (const key of Object.keys(streamlinedComments)) {\n+    streamlinedComments[key] = streamlinedComments[key].filter(\n+      (comment: StreamlinedComment, index: number, self: StreamlinedComment[]) => index === self.findIndex((t: StreamlinedComment) => t.body === comment.body)\n+    );\n+  }\n+  return streamlinedComments;\n+}\n+\n+/**\n+ * Merges new streamlined comments into existing streamlined comments.\n+ *\n+ * @param existingComments - The existing comments to merge into.\n+ * @param newComments - The new comments to merge.\n+ * @returns The merged comments.\n+ */\n+export function mergeStreamlinedComments(existingComments: Record<string, StreamlinedComment[]>, newComments: Record<string, StreamlinedComment[]>) {\n+  if (!existingComments) {\n+    existingComments = {};\n+  }\n+  for (const [key, value] of Object.entries(newComments)) {\n+    if (!existingComments[key]) {\n+      existingComments[key] = [];\n+    }\n+    const previous = existingComments[key] || [];\n+    existingComments[key] = [...previous, ...value];\n+  }\n+  return existingComments;\n+}\n+\n+/**\n+ * Extracts the owner, repository, and issue number from a given key.\n+ *\n+ * @param key - The key string in the format \"owner/repo/issueNumber\".\n+ * @returns A tuple containing the owner, repository, and issue number.\n+ */\n+export function splitKey(key: string): [string, string, string] {\n+  const parts = key.split(\"/\");\n+  return [parts[0], parts[1], parts[2]];\n+}\n+\n+/**\n+ * Identifies issues from a comment string.\n+ *\n+ * @param comment - The comment string that may contain issue references.\n+ * @param params - Additional parameters that may include context information.\n+ * @returns An array of linked issues or null if no issues are found.\n+ */\n+export function idIssueFromComment(comment?: string | null): LinkedIssues[] | null {\n+  const urlMatch = comment?.match(/https?:\\/\\/(?:www\\.)?github\\.com\\/([^/]+)\\/([^/]+)\\/(pull|issues?)\\/(\\d+)/g);\n+  const response: LinkedIssues[] = [];\n+\n+  if (urlMatch) {\n+    urlMatch.forEach((url) => {\n+      response.push(createLinkedIssueOrPr(url));\n+    });\n+  }\n+\n+  return response.length > 0 ? response : null;\n+}\n+\n+/**\n+ * Creates a linked issue or pull request object from a given GitHub URL.\n+ *\n+ * @param url - The GitHub URL to create the linked issue or pull request from.\n+ * @returns An object representing the linked issue or pull request.\n+ */\n+function createLinkedIssueOrPr(url: string): LinkedIssues {\n+  const key = createKey(url);\n+  const [owner, repo, issueNumber] = splitKey(key);\n+  return {\n+    owner,\n+    repo,\n+    issueNumber: parseInt(issueNumber),\n+    url,\n+  };\n+}\n+\n+/**\n+ * Fetches the code linked from a GitHub issue.\n+ *\n+ * @param issue - The issue string containing GitHub URLs.\n+ * @param context - The context object containing the octokit instance.\n+ * @param url - The URL of the issue.\n+ * @param extensions - The list of file extensions to filter the linked files.\n+ * @returns A promise that resolves to an array of fetched codes.\n+ */\n+export async function fetchCodeLinkedFromIssue(\n+  issue: string,\n+  context: Context,\n+  url: string,\n+  extensions: string[] = [\".ts\", \".json\", \".sol\"]\n+): Promise<FetchedCodes[]> {\n+  const { octokit } = context;\n+  // Function to extract owner, repo, and path from a GitHub URL\n+  function parseGitHubUrl(url: string): { owner: string; repo: string; path: string } | null {\n+    const match = url.match(/https?:\\/\\/(?:www\\.)?github\\.com\\/([^/]+)\\/([^/]+)\\/blob\\/[^/]+\\/(.+)/);\n+    return match ? { owner: match[1], repo: match[2], path: match[3] } : null;\n+  }\n+  // Function to check if a file has one of the specified extensions\n+  function hasValidExtension(path: string) {\n+    const cleanPath = path.split(\"#\")[0]; // Remove any fragment identifiers like #L39-L49\n+    return extensions.some((ext) => cleanPath.toLowerCase().endsWith(ext.toLowerCase()));\n+  }\n+  //Function to remove Line numbers from the URL\n+  function removeLineNumbers(url: string) {\n+    const match = url.match(/(.*?)(#L\\d+(-L\\d+)?)/);\n+    return match ? match[1] : url;\n+  }\n+  // Extract all GitHub URLs from the issue\n+  const urls = issue.match(/https?:\\/\\/(www\\.)?github\\.com\\/[^\\s]+/g) || [];\n+  // Process each URL\n+  const results = await Promise.all(\n+    urls.map(async (url) => {\n+      let parsedUrl = parseGitHubUrl(url);\n+      parsedUrl = parsedUrl ? { ...parsedUrl, path: removeLineNumbers(parsedUrl.path) } : null;\n+      if (!parsedUrl || !hasValidExtension(parsedUrl.path)) return null;\n+      try {\n+        //Parse the commit sha from the URL\n+        const commitSha = url.match(/https?:\\/\\/github\\.com\\/[^/]+\\/[^/]+\\/blob\\/([^/]+)\\/.+/);\n+        let response;\n+        if (commitSha) {\n+          response = await octokit.repos.getContent({\n+            owner: parsedUrl.owner,\n+            repo: parsedUrl.repo,\n+            ref: commitSha ? commitSha[1] : \"main\",\n+            path: parsedUrl.path,\n+          });\n+        } else {\n+          response = await octokit.repos.getContent({\n+            owner: parsedUrl.owner,\n+            repo: parsedUrl.repo,\n+            path: parsedUrl.path,\n+          });\n+        }\n+\n+        if (\"content\" in response.data) {\n+          const content = Buffer.from(response.data.content, \"base64\").toString();\n+          return { body: content, id: parsedUrl.path };\n+        }\n+      } catch (error) {\n+        console.error(`Error fetching content from ${url}:`, error);\n+      }\n+      return null;\n+    })\n+  );\n+  return results\n+    .filter((result): result is { body: string; id: string } => result !== null)\n+    .map((result) => ({\n+      ...result,\n+      org: context.payload.repository.owner.login,\n+      repo: context.payload.repository.name,\n+      issueNumber: parseInt(issue.match(/\\/issues\\/(\\d+)/)?.[1] || \"0\", 10),\n+      issueUrl: url,\n+      user: null,\n+    }));\n+}\n+\n+/**\n+ * Optimizes the context strings by removing duplicates and sorting by information density.\n+ * Removes exact duplicates and sorts by information density and length.\n+ *\n+ * @param strings - The array of context strings to optimize.\n+ * @returns The optimized array of context strings.\n+ */\n+export function optimizeContext(strings: string[]): string[] {\n+  // Helper function to clean strings while preserving links\n+  function cleanString(inputString: string): string {\n+    // Preserve links by temporarily replacing them\n+    const links: string[] = [];\n+    inputString = inputString.replace(/https?:\\/\\/\\S+/g, (match) => {\n+      links.push(match);\n+      return `__LINK${links.length - 1}__`;","score":{"reward":2.114,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":101.98214285714286,"syllables":15,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1805751622,"content":"Mixed feelings on this. They fall out of date so fast. Its useful reference but might be worth warning the LLM that theres a good chance that it is out of date information.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805751622","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,246 @@\n+import { createKey } from \"../handlers/comments\";\n+import { FetchedCodes, FetchParams, LinkedIssues } from \"../types/github-types\";\n+import { StreamlinedComment } from \"../types/llm\";\n+import { Context } from \"../types/context\"; // Import Context type\n+\n+/**\n+ * Removes duplicate streamlined comments based on their body content.\n+ *\n+ * @param streamlinedComments - The record of streamlined comments to deduplicate.\n+ * @returns The deduplicated record of streamlined comments.\n+ */\n+export function dedupeStreamlinedComments(streamlinedComments: Record<string, StreamlinedComment[]>) {\n+  for (const key of Object.keys(streamlinedComments)) {\n+    streamlinedComments[key] = streamlinedComments[key].filter(\n+      (comment: StreamlinedComment, index: number, self: StreamlinedComment[]) => index === self.findIndex((t: StreamlinedComment) => t.body === comment.body)\n+    );\n+  }\n+  return streamlinedComments;\n+}\n+\n+/**\n+ * Merges new streamlined comments into existing streamlined comments.\n+ *\n+ * @param existingComments - The existing comments to merge into.\n+ * @param newComments - The new comments to merge.\n+ * @returns The merged comments.\n+ */\n+export function mergeStreamlinedComments(existingComments: Record<string, StreamlinedComment[]>, newComments: Record<string, StreamlinedComment[]>) {\n+  if (!existingComments) {\n+    existingComments = {};\n+  }\n+  for (const [key, value] of Object.entries(newComments)) {\n+    if (!existingComments[key]) {\n+      existingComments[key] = [];\n+    }\n+    const previous = existingComments[key] || [];\n+    existingComments[key] = [...previous, ...value];\n+  }\n+  return existingComments;\n+}\n+\n+/**\n+ * Extracts the owner, repository, and issue number from a given key.\n+ *\n+ * @param key - The key string in the format \"owner/repo/issueNumber\".\n+ * @returns A tuple containing the owner, repository, and issue number.\n+ */\n+export function splitKey(key: string): [string, string, string] {\n+  const parts = key.split(\"/\");\n+  return [parts[0], parts[1], parts[2]];\n+}\n+\n+/**\n+ * Identifies issues from a comment string.\n+ *\n+ * @param comment - The comment string that may contain issue references.\n+ * @param params - Additional parameters that may include context information.\n+ * @returns An array of linked issues or null if no issues are found.\n+ */\n+export function idIssueFromComment(comment?: string | null): LinkedIssues[] | null {\n+  const urlMatch = comment?.match(/https?:\\/\\/(?:www\\.)?github\\.com\\/([^/]+)\\/([^/]+)\\/(pull|issues?)\\/(\\d+)/g);\n+  const response: LinkedIssues[] = [];\n+\n+  if (urlMatch) {\n+    urlMatch.forEach((url) => {\n+      response.push(createLinkedIssueOrPr(url));\n+    });\n+  }\n+\n+  return response.length > 0 ? response : null;\n+}\n+\n+/**\n+ * Creates a linked issue or pull request object from a given GitHub URL.\n+ *\n+ * @param url - The GitHub URL to create the linked issue or pull request from.\n+ * @returns An object representing the linked issue or pull request.\n+ */\n+function createLinkedIssueOrPr(url: string): LinkedIssues {\n+  const key = createKey(url);\n+  const [owner, repo, issueNumber] = splitKey(key);\n+  return {\n+    owner,\n+    repo,\n+    issueNumber: parseInt(issueNumber),\n+    url,\n+  };\n+}\n+\n+/**\n+ * Fetches the code linked from a GitHub issue.\n+ *\n+ * @param issue - The issue string containing GitHub URLs.\n+ * @param context - The context object containing the octokit instance.\n+ * @param url - The URL of the issue.\n+ * @param extensions - The list of file extensions to filter the linked files.\n+ * @returns A promise that resolves to an array of fetched codes.\n+ */\n+export async function fetchCodeLinkedFromIssue(\n+  issue: string,\n+  context: Context,\n+  url: string,\n+  extensions: string[] = [\".ts\", \".json\", \".sol\"]\n+): Promise<FetchedCodes[]> {\n+  const { octokit } = context;\n+  // Function to extract owner, repo, and path from a GitHub URL\n+  function parseGitHubUrl(url: string): { owner: string; repo: string; path: string } | null {\n+    const match = url.match(/https?:\\/\\/(?:www\\.)?github\\.com\\/([^/]+)\\/([^/]+)\\/blob\\/[^/]+\\/(.+)/);\n+    return match ? { owner: match[1], repo: match[2], path: match[3] } : null;\n+  }\n+  // Function to check if a file has one of the specified extensions\n+  function hasValidExtension(path: string) {\n+    const cleanPath = path.split(\"#\")[0]; // Remove any fragment identifiers like #L39-L49\n+    return extensions.some((ext) => cleanPath.toLowerCase().endsWith(ext.toLowerCase()));\n+  }\n+  //Function to remove Line numbers from the URL\n+  function removeLineNumbers(url: string) {\n+    const match = url.match(/(.*?)(#L\\d+(-L\\d+)?)/);\n+    return match ? match[1] : url;\n+  }\n+  // Extract all GitHub URLs from the issue\n+  const urls = issue.match(/https?:\\/\\/(www\\.)?github\\.com\\/[^\\s]+/g) || [];\n+  // Process each URL\n+  const results = await Promise.all(\n+    urls.map(async (url) => {\n+      let parsedUrl = parseGitHubUrl(url);\n+      parsedUrl = parsedUrl ? { ...parsedUrl, path: removeLineNumbers(parsedUrl.path) } : null;\n+      if (!parsedUrl || !hasValidExtension(parsedUrl.path)) return null;\n+      try {\n+        //Parse the commit sha from the URL\n+        const commitSha = url.match(/https?:\\/\\/github\\.com\\/[^/]+\\/[^/]+\\/blob\\/([^/]+)\\/.+/);\n+        let response;\n+        if (commitSha) {\n+          response = await octokit.repos.getContent({\n+            owner: parsedUrl.owner,\n+            repo: parsedUrl.repo,\n+            ref: commitSha ? commitSha[1] : \"main\",\n+            path: parsedUrl.path,\n+          });\n+        } else {\n+          response = await octokit.repos.getContent({\n+            owner: parsedUrl.owner,\n+            repo: parsedUrl.repo,\n+            path: parsedUrl.path,\n+          });\n+        }\n+\n+        if (\"content\" in response.data) {\n+          const content = Buffer.from(response.data.content, \"base64\").toString();\n+          return { body: content, id: parsedUrl.path };\n+        }\n+      } catch (error) {\n+        console.error(`Error fetching content from ${url}:`, error);\n+      }\n+      return null;\n+    })\n+  );\n+  return results\n+    .filter((result): result is { body: string; id: string } => result !== null)\n+    .map((result) => ({\n+      ...result,\n+      org: context.payload.repository.owner.login,\n+      repo: context.payload.repository.name,\n+      issueNumber: parseInt(issue.match(/\\/issues\\/(\\d+)/)?.[1] || \"0\", 10),\n+      issueUrl: url,\n+      user: null,\n+    }));\n+}\n+\n+/**\n+ * Optimizes the context strings by removing duplicates and sorting by information density.\n+ * Removes exact duplicates and sorts by information density and length.\n+ *\n+ * @param strings - The array of context strings to optimize.\n+ * @returns The optimized array of context strings.\n+ */\n+export function optimizeContext(strings: string[]): string[] {\n+  // Helper function to clean strings while preserving links\n+  function cleanString(inputString: string): string {\n+    // Preserve links by temporarily replacing them\n+    const links: string[] = [];\n+    inputString = inputString.replace(/https?:\\/\\/\\S+/g, (match) => {\n+      links.push(match);\n+      return `__LINK${links.length - 1}__`;\n+    });\n+    // Clean the string\n+    inputString = inputString\n+      .replace(/[^\\w\\s-/]|_/g, \"\") // Remove punctuation except '-' and '/'\n+      .replace(/\\s+/g, \" \")\n+      .trim()\n+      .toLowerCase();\n+    // Restore links\n+    inputString = inputString.replace(/__LINK(\\d+)__/g, (i) => links[parseInt(i)]);\n+\n+    return inputString;\n+  }\n+  // Helper function to calculate information density\n+  function informationDensity(s: string): number {\n+    const words = s.split(/\\s+/);\n+    const uniqueWords = new Set(words);\n+    return uniqueWords.size / words.length;\n+  }\n+  // Clean and remove empty strings\n+  const cleanedStrings = strings.map(cleanString).filter((s) => s.length > 0);\n+  // Remove exact duplicates\n+  const uniqueStrings = Array.from(new Set(cleanedStrings));\n+  // Sort strings by information density and length\n+  uniqueStrings.sort((a, b) => {\n+    const densityDiff = informationDensity(b) - informationDensity(a);\n+    return densityDiff !== 0 ? densityDiff : b.length - a.length;\n+  });\n+  const result: string[] = [];\n+  const wordSet = new Set<string>();\n+  for (const str of uniqueStrings) {\n+    const words = str.split(/\\s+/);\n+    const newWords = words.filter((word) => !wordSet.has(word) && !word.startsWith(\"http\"));\n+    if (newWords.length > 0 || str.includes(\"http\")) {\n+      result.push(str);\n+      newWords.forEach((word) => wordSet.add(word));\n+    }\n+  }\n+  return result;\n+}\n+\n+/**\n+ * Extracts and returns the README content from the repository associated with the given issue.\n+ *\n+ * @param params - The parameters required to fetch the README, including the context with octokit instance.\n+ * @returns The content of the README file as a string.\n+ */\n+export async function pullReadmeFromRepoForIssue(params: FetchParams): Promise<string | undefined> {","score":{"reward":3.374,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":87.99727272727276,"syllables":42,"sentences":3,"score":0.7200272727272724},"multiplier":1,"relevance":0.7}},{"id":1805752129,"content":"Does this package still work? I thought we deleted it and rebranded to something like\n@ubiquity-os/ubiquity-os-logger","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805752129","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,47 +1,83 @@\n import { Octokit } from \"@octokit/rest\";\n-import { createClient } from \"@supabase/supabase-js\";\n-import { createAdapters } from \"./adapters\";\n-import { Env, PluginInputs } from \"./types\";\n+import { PluginInputs } from \"./types\";\n import { Context } from \"./types\";\n+import { askQuestion } from \"./handlers/ask-llm\";\n+import { addCommentToIssue } from \"./handlers/add-comment\";\n+import { LogLevel, LogReturn, Logs } from \"@ubiquity-dao/ubiquibot-logger\";","score":{"reward":2.688,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":61.32500000000002,"syllables":32,"sentences":2,"score":0.9867499999999998},"multiplier":1,"relevance":0.7}},{"id":2395595275,"content":"Gold star? Non established. Will need to work on this asap. \nDM me we can collaborate on this.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2395595275","commentType":"PULL_COLLABORATOR","score":{"reward":0.668,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":89.46750000000003,"syllables":24,"sentences":4,"score":0.7053249999999998},"multiplier":1,"relevance":0.2}},{"id":2396164895,"content":"Seems like we get what we pay for :)","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2396164895","commentType":"PULL_COLLABORATOR","score":{"reward":0.198,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":114.11500000000001,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":2401396968,"content":"Your QA results are quite interesting. We should prompt and focus on brevity. \nCan you display (add an extra comment) which shows the entire passed in context? I would like to audit this. \nOnce this is set up I would like to try asking a couple questions.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2401396968","commentType":"PULL_COLLABORATOR","score":{"reward":4.004,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":83.89400000000002,"syllables":63,"sentences":5,"score":0.7610599999999998},"multiplier":1,"relevance":0.7}},{"id":2401412237,"content":"Thats mostly fine. Any price these models charge us are orders of magnitude cheaper than developer time, particularly those on base pay.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2401412237","commentType":"PULL_COLLABORATOR","score":{"reward":2.04,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":61.07909090909095,"syllables":35,"sentences":2,"score":0.9892090909090905},"multiplier":1,"relevance":0.5}},{"id":2401422135,"content":"Actually we should use mini because it has a much larger usable context length. Preview has a lot more internal reasoning tokens spend. I can borrow a key but as I understand both o1 models are available for the same tier of OpenAI account, meaning, if you have access to one, you should have access to both.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2401422135","commentType":"PULL_COLLABORATOR","score":{"reward":4.48,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":57,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":62.87631578947371,"syllables":84,"sentences":3,"score":0.971236842105263},"multiplier":1,"relevance":0.7}},{"id":2408451042,"content":"This aligns with my expectations. Claude is really good at dealing with fine grained comprehension and working with code. I use it as my primary model over ChatGPT inside of my cursor IDE. \nI haven't done extensive testing regarding context lengths but I generally use o1 for higher level more complex tasks. \nFor example the most recent interesting use was when I bootstrapped both the \"sync-configs-agent\" tool as well as the \"rpc-handler\" tool in my github org. \nI give a detailed prompt using my voice to provide context, and then after I'll paste in context that's relevant. I'll have o1 preview do it's thing and be like 80-90% to completion. I use Claude for the remainder. \nI also know that mini has a larger usable context window but may be less capable than preview. So I would use it for \"in between\" tasks which I can pump in a ton of context from an already made codebase but still have large ish sweeping changes recommended.  \nReferences:\n- https://github.com/0x4007/sync-configs-agent \n- https://github.com/0x4007/rpc2","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2408451042","commentType":"PULL_COLLABORATOR","score":{"reward":6.336,"formatting":{"content":{"p":{"score":0,"elementCount":1},"br":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2.2},"priority":2,"words":{"wordCount":175,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":72.34691484985603,"syllables":265,"sentences":13,"score":0.8765308515014396},"multiplier":1,"relevance":0.6}},{"id":2412928005,"content":"Hows this coming along?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2412928005","commentType":"PULL_COLLABORATOR","score":{"reward":0.33,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.3}},{"id":2415806419,"content":"Okay merge and lets test.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2415806419","commentType":"PULL_COLLABORATOR","score":{"reward":0.69,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":100.24000000000002,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":2421152220,"content":"My last batch of comments is intended to be handled async because the pull is good enough to test in beta with","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2421152220","commentType":"PULL_COLLABORATOR","score":{"reward":1.568,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":76.83227272727274,"syllables":28,"sentences":1,"score":0.8316772727272727},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2350460626,"effect":{"addition":1963,"deletion":162},"reward":42.5,"priority":2},{"reviewId":2371291282,"effect":{"addition":768,"deletion":322},"reward":21.8,"priority":2},{"reviewId":2374239920,"effect":{"addition":17,"deletion":71},"reward":1.76,"priority":2},{"reviewId":2374270018,"effect":{"addition":8,"deletion":25},"reward":0.66,"priority":2},{"reviewId":2376797183,"effect":{"addition":6,"deletion":6},"reward":0.24,"priority":2}],"url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 191.71 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>5</td><td>66.96</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.59</td></tr><tr><td>Issue</td><td>Comment</td><td>10</td><td>34.02</td></tr><tr><td>Review</td><td>Comment</td><td>39</td><td>83.14</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2\" target=\"_blank\" rel=\"noopener\">#2</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1963 -162</td><td>2</td><td>42.5</td></tr><tr><td>+768 -322</td><td>2</td><td>21.8</td></tr><tr><td>+17 -71</td><td>2</td><td>1.76</td></tr><tr><td>+8 -25</td><td>2</td><td>0.66</td></tr><tr><td>+6 -6</td><td>2</td><td>0.24</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50\" target=\"_blank\" rel=\"noopener\">**Description:**We have two goals that are closely aligned:1&hellip;</a></h6></td><td><details><summary>6.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 16&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 6&#13;    em:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 3&#13;    h3:&#13;      score: 1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 4.6&#13;regex:&#13;  wordCount: 208&#13;  wordValue: 0.1&#13;  result: 1.65&#13;</pre></details></td><td>1</td><td>1</td><td>7.59</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2380562179\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 rfc</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.1</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2381132392\" target=\"_blank\" rel=\"noopener\">What's a good time estimate?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.444</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2382159936\" target=\"_blank\" rel=\"noopener\">One consideration I just realized we have to resolve a design pr&hellip;</a></h6></td><td><details><summary>2.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 126&#13;  wordValue: 0.1&#13;  result: 2.44&#13;</pre></details></td><td>0.9</td><td>2</td><td>5.562</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2382232571\" target=\"_blank\" rel=\"noopener\">Well perhaps we can have you take it over mid this week if its n&hellip;</a></h6></td><td><details><summary>2.59</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 104&#13;  wordValue: 0.1&#13;  result: 2.59&#13;</pre></details></td><td>0.8</td><td>2</td><td>5.296</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2382358336\" target=\"_blank\" rel=\"noopener\">Most of everything is within the @ubiquity organization (created&hellip;</a></h6></td><td><details><summary>3.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 88&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.7</td><td>2</td><td>6.51</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2384257483\" target=\"_blank\" rel=\"noopener\">Much better UX to consolidate https://github.com/ubiquity-os/plu&hellip;</a></h6></td><td><details><summary>1.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.6</td><td>2</td><td>2.28</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2384278872\" target=\"_blank\" rel=\"noopener\">Refer to that part of the spec. Their &#96;command-ask&#96; plug&hellip;</a></h6></td><td><details><summary>2.54</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 62&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>0.9</td><td>2</td><td>5.922</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2391964685\" target=\"_blank\" rel=\"noopener\">In recent times, we've been pretty good about this so just take &hellip;</a></h6></td><td><details><summary>2.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 54&#13;  wordValue: 0.1&#13;  result: 2.44&#13;</pre></details></td><td>0.7</td><td>2</td><td>4.34</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2394927713\" target=\"_blank\" rel=\"noopener\">Whatever is easier. The idea is that you can get started on maki&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.5</td><td>2</td><td>2.19</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2421156091\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 can you paste the plugin configs under the comp&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.4</td><td>2</td><td>1.376</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#pullrequestreview-2371291282\" target=\"_blank\" rel=\"noopener\">Looks like a pretty solid implementation</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.148</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#pullrequestreview-2374239920\" target=\"_blank\" rel=\"noopener\">You marked my comments as \"resolved\" but didn't implement the re&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.208</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1788914567\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"author\": \"Ubiquity DAO\",&#96;&#96;&hellip;</a></h6></td><td><details><summary>1.34</summary><pre>content:&#13;  content:&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.408</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1788940149\" target=\"_blank\" rel=\"noopener\">Pretty unusual syntax to mix async await and then</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.296</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1788940582\" target=\"_blank\" rel=\"noopener\">Does it make sense to have two separate arrays for each data typ&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.62</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1788941073\" target=\"_blank\" rel=\"noopener\">Should be renamed to &#96;&#96;&#96;suggestionenv: { UBIQU&hellip;</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>2</td><td>0.728</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802414614\" target=\"_blank\" rel=\"noopener\">Can you explain to me what the similarity threshold is for?</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>2</td><td>2</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802415062\" target=\"_blank\" rel=\"noopener\">Maybe rename to llm.d.ts</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.5</td><td>2</td><td>0.79</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802415501\" target=\"_blank\" rel=\"noopener\">Rename to github-types.d.ts</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.5</td><td>2</td><td>0.73</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802416068\" target=\"_blank\" rel=\"noopener\">Perhaps this should default to \"UbiquityOS\"</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.078</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802416495\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionlet readme;&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802417153\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.2</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802419785\" target=\"_blank\" rel=\"noopener\">Confused about the parameters and this method but i assume it wo&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.976</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802420226\" target=\"_blank\" rel=\"noopener\">Probably makes sense to rename this to ask-llm</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.236</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802421331\" target=\"_blank\" rel=\"noopener\">My understanding is that the &#96;-instruct&#96; model we chose &hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.9</td><td>2</td><td>4.356</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802421829\" target=\"_blank\" rel=\"noopener\">What is this? Is this to summarize contents? Are you sure this i&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.128</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1802423376\" target=\"_blank\" rel=\"noopener\">Seems unexpected that you removed this because we generally use &hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.812</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804124541\" target=\"_blank\" rel=\"noopener\">Be sure to consider the instructions from the [readme](https://g&hellip;</a></h6></td><td><details><summary>2.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.9</td><td>2</td><td>6.3</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804155667\" target=\"_blank\" rel=\"noopener\">Hard coding these things is the wrong approach then. This needs &hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.64</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804158884\" target=\"_blank\" rel=\"noopener\">You sure you want to remove formatting clues such as bullet poin&hellip;</a></h6></td><td><details><summary>2.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>0.9</td><td>2</td><td>5.832</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804163498\" target=\"_blank\" rel=\"noopener\">This could benefit from clarifying that this is calculating the &hellip;</a></h6></td><td><details><summary>2.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.8</td><td>2</td><td>5.12</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1804183264\" target=\"_blank\" rel=\"noopener\">Commas seem wrong</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.5</td><td>2</td><td>0.42</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805739267\" target=\"_blank\" rel=\"noopener\">Returning an empty string always seems like a bad idea. This see&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.534</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805741953\" target=\"_blank\" rel=\"noopener\">Optional seems wrong unless its an optimization to save tokens</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.356</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805742531\" target=\"_blank\" rel=\"noopener\">Is ten optimal</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>2</td><td>0.63</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805744978\" target=\"_blank\" rel=\"noopener\">Might be good to find and replace all GPT instances in the code &hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.824</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805745603\" target=\"_blank\" rel=\"noopener\">In case we haven't already: we should make another task for dyna&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.48</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805750233\" target=\"_blank\" rel=\"noopener\">This seems wrong but i dont know the full context of how its use&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.114</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805751622\" target=\"_blank\" rel=\"noopener\">Mixed feelings on this. They fall out of date so fast. Its usefu&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.7</td><td>2</td><td>3.374</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#discussion_r1805752129\" target=\"_blank\" rel=\"noopener\">Does this package still work? I thought we deleted it and rebran&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.688</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2395595275\" target=\"_blank\" rel=\"noopener\">Gold star? Non established. Will need to work on this asap. DM &hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.668</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2396164895\" target=\"_blank\" rel=\"noopener\">Seems like we get what we pay for :)</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.198</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2401396968\" target=\"_blank\" rel=\"noopener\">Your QA results are quite interesting. We should prompt and focu&hellip;</a></h6></td><td><details><summary>2.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.7</td><td>2</td><td>4.004</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2401412237\" target=\"_blank\" rel=\"noopener\">Thats mostly fine. Any price these models charge us are orders o&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.5</td><td>2</td><td>2.04</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2401422135\" target=\"_blank\" rel=\"noopener\">Actually we should use mini because it has a much larger usable &hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 57&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.7</td><td>2</td><td>4.48</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2408451042\" target=\"_blank\" rel=\"noopener\">This aligns with my expectations. Claude is really good at deali&hellip;</a></h6></td><td><details><summary>4.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    br:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.2&#13;regex:&#13;  wordCount: 175&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.6</td><td>2</td><td>6.336</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2412928005\" target=\"_blank\" rel=\"noopener\">Hows this coming along?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.33</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2415806419\" target=\"_blank\" rel=\"noopener\">Okay merge and lets test.</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.5</td><td>2</td><td>0.69</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2421152220\" target=\"_blank\" rel=\"noopener\">My last batch of comments is intended to be handled async becaus&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.4</td><td>2</td><td>1.568</td></tr></tbody></table></details>"},"Keyrxng":{"total":8.055,"userId":106303466,"comments":[{"id":2384058542,"content":"Both are held back by review only.\r\nAs I understand this task:\r\n- we are backfilling the DB with all previous conversation across the ~700 tracked issues\r\n- we are using the backdated embeddings in order to find relevant text when `@ubiquityos` is queried\r\n- `command-ask` is going to embed the query, find similar/relevant content and feed it all to the LLM including the complete context `command-ask` is already aware of.\r\n---\r\nSo this task really involves two rather simple parts:\r\n1. script to backfill the DB. (Adhering to new DB schema?)\r\n2. turn a `command-ask` query into an embedding, extract relevant text via the DB function `findSimilarContent` and ask LLM.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2384058542","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.919,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5},"hr":{"score":0,"elementCount":1},"ol":{"score":0,"elementCount":1}},"result":0.5},"priority":2,"words":{"wordCount":101,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":59.85081188118815,"syllables":151,"sentences":5,"score":0.9985081188118815},"multiplier":0.25,"relevance":0.95}},{"id":2384282747,"content":"This sounds like a whole new classification/approach to the current single-comment-body embeddings that are happening. Does this imply that the curated text (and the embeddings for that whole body of aggregated chat) is going to be an amalgamation of only the relevant text from across the issue minus any noise? So the embedding will paint a more well rounded picture of more info or will text be chunked as it is now on a per-comment basis?\r\nI'd have thought that the task is the theme for any given body of text, then it's parent theme would be the repository, the parentmost theme being the org in which it belongs.\r\nWhy do we need to lobotomize and generalize the text when models are more than capable of comprehension without having to squash things into layman's terms. I fear that this would not be ideal given the highly nuanced and specialized topics that get discussed across tasks and PRs. I don't think we should do that.\r\nWhat is it you are re-ranking I do not understand that sorry. You mean re-ranking the relevance of the set of embeddings you obtained on your first search or obtaining a new set from the DB?\r\nLooked into BM25, bag-of-words and I understand the basics of the concepts and how they'd be beneficial here actually. Very different from the current embeddings approach though, is the idea ultimately to perform the search across the single-body-embeddings as-is or only on the amalgamated \"blocks\"/\"themes\"?\r\nCurrently `command-ask` gets it's context from comments and any linked issue(s). The intention now is that the user query is (likely) embedded and we use it to find relevant content with the embeddings we have stored and then append the respective text onto the already collected conversation context `command-ask` currently collects. Meaning there is only one \"entry\" or way to use the UbiquityOS chatbot, as there is only going to be \"one\". Multiple ways to invoke it for different specific query handling and results would get confusing.\r\nhttps://github.com/ubiquity-os-marketplace/generate-vector-embeddings/pull/16 This PR consolidates everything into a single table which we can use to search across all embeddings at once or we can use both `type` and `metadata` to refine and restrict the scope of embeddings we search. Hybrid search with query embedding relevance, classification of query (`setup`, `dao_info`, `general`, etc..), and metadata specifics which we can pull from params like `@ubiquity-os/command-ask` or the `Context` payload itself in most cases. \r\nWill this new style of embedding you are using have it's own sort of classification for use? Is that what you meant by themes?\r\nLast question I promise;\r\nAre you manually processing all 700 tracked tasks (and however many associated PRs)? 👀👀 Or are you automating somehow?\r\nSrsly last one. Only old conversations are going to receive this treatment or are we going to apply this same treatment to our current/future tasks also?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2384282747","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.702,"formatting":{"content":{"p":{"score":0,"elementCount":11},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":485,"wordValue":0.1,"result":0.21},"readability":{"fleschKincaid":59.797400000000025,"syllables":744,"sentences":25,"score":0.9979740000000002},"multiplier":0.25,"relevance":0.9}},{"id":2385483417,"content":"So we're filtering out irrelevant comments and embedding only those related to the task spec. And would these be embedded as individual comments or combined as an overview based on the \"theme\", like a focused md doc for each task kind of?\r\nWe previously agreed that GitHub is primarily English-based. We’ve added translation support in the plugin-template, but that’s the only time we’ve addressed multilingual support afaik.\r\nThis seems more like a hammer when we really need a scalpel, but I’m curious to see how it works, especially given our large dataset.\r\nI’m concerned about managing multiple AI providers. Using a provider that aggregates different AI models might simplify things, as we’d avoid juggling multiple API keys.\r\nWe used to rely on GPT to summarize and rank everything. The latest models are more than capable of handling entire raw text task convos (multiple actually), PRs, and diffs, generating structured, consistent Markdown summaries. We could make a structured template for a MD doc for each task, improving RAG, and help us build a clean dataset for fine-tuning/training our own model, which should be our end goal ultimately.\r\nI’m unclear here but will wait for the implementation since you have a clear direction.\r\n---\r\nIf this creates a clear, focused overview of tasks, we should apply it to all tasks, not just old ones, as it seems more efficient than embedding every comment like we do now.\r\n---\r\nWe should do something like this https://chatgpt.com/share/66fbe1e7-9240-8000-aa8d-f2b68f9ca142 in my opinion and treat each task like a document in the knowledgebase of UbiquityOS, the same as big companies do with their in-house AI models like SalesForce, TelCom, etc. \r\n`onboarding bot` QA: example of a document based approach - https://github.com/ubq-testing/ask-plugin/issues/2","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2385483417","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.632,"formatting":{"content":{"p":{"score":0,"elementCount":9},"hr":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2},"priority":2,"words":{"wordCount":290,"wordValue":0.1,"result":0.96},"readability":{"fleschKincaid":59.29754870129874,"syllables":466,"sentences":16,"score":0.9929754870129873},"multiplier":0.25,"relevance":0.85}},{"id":2388221412,"content":"afaik queries are not saved to the DB only our embeddings which would mean we'd need to determine a topic for every embedding we create to be able to match it right? This is in addition to classifying it like `dao_info` etc...\r\nI feel like we have no current baseline for our own comparison as we do not even have a simple RAG chatbot yet. Also afaik n-gram and topic models need quality embeddings/source docs to begin with, they work with documents/bodies of text but our embedding system right now is so granular that our embedding content is likely the literal strings and we are going to have 10s/100s of thousands of these embeddings in a very short time. What I thought you were doing is improving the embeddings being stored so they are of higher quality to work with.\r\nI'd be in favour of this as we'll be drowning in AI API keys in no time if we intend to continue to introduce lots of other models.\r\nI believe that these modern models bring their own intelligent reasoning and that's why they are so much better than only a couple of years ago.\r\nMy suggestion was that we use GPT to create a stable corpus of literal MD documents that cover the entire contents of a task succinctly but effectively ranging back to 2020 and continue to do so when a task is completed. This way we are creating a very structured and uniform dataset (good for RAG, good for fine-tuning, good for training) which is not some kind of blackbox (as these models all are) that we can actually review and read and manually edit if necessary (highly doubtful).\r\nSo we structure a template, feed the entire task and all of it's contents and have GPT do this for one repo or 30-40 tasks. They can be very easily QA'd, prompt refined, and chatbot tested and then we do it for every tracked task (via batch api as that'll cost large using the best models). The DB type is `Task Doc` or `Task Summary` if we need to restrict scope to only it or it appears in non-refined search with all embeddings.\r\n9/10 RAG chatbots all operate on documentized datasets, so rather than try to re-create the wheel for our V1 chatbot, let's do what is normally done and documentize our org via tasks to create a chronological timeline of evolution for our org as the foundation of our chatbot's knowledge base. Won't these n-gram models and topic models perform most optimally with a better collection of base embeddings to begin with? Additionally with these complete task doc summaries, we could begin to fine-tune a model right away and even offer it as a service to partners.\r\nhttps://community.openai.com/t/scaling-rag-chatbot-system-to-millions-of-documents/615386/2\r\nhttps://chatgpt.com/share/66fd61e4-b41c-8000-bde7-ecbdbff51b2e - 1 question 1 answer convo\r\nWe intend on embedding our entire codebases so when we need to handle technical queries about code we will pull from there and chances are we will never ask about a specific comment but more likely the \"why\" or \"how\" which would pertain to a task/codebase/repo etc, contextually a document covering the evolution of the task would contain the \"why\" and \"how\".","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2388221412","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.156,"formatting":{"content":{"p":{"score":0,"elementCount":10},"a":{"score":1,"elementCount":2}},"result":2},"priority":2,"words":{"wordCount":544,"wordValue":0.1,"result":0.13},"readability":{"fleschKincaid":55.25170126019276,"syllables":814,"sentences":19,"score":0.9525170126019276},"multiplier":0.25,"relevance":0.85}},{"id":2388377812,"content":"Our aim should be improving the effectiveness of our embeddings so we can reduce the amount of embeddings we store because that makes them easier to work with, less overheads and improved responses at least for our use-case.\r\navg of 15 comments per task (being extremely generous here as including PR and review, more like 50-100), 700 x 15 = 10,500 embeddings. That's wild and contextually they do not include which repo they belong or task etc. They are just whatever the comment says and it's out of context of the task, repo and org.\r\n1 doc per task = 700 embeddings. All contain the why, what, where, who and how. We could even chunk each doc into 4 which would improve our granularity and still keep us under 3k embeddings while capturing all the context that we actually need.\r\nrfc all","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2388377812","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.152,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":2,"words":{"wordCount":145,"wordValue":0.1,"result":2.28},"readability":{"fleschKincaid":69.41467672413796,"syllables":204,"sentences":8,"score":0.9058532327586204},"multiplier":0.25,"relevance":0.8}},{"id":2392058521,"content":"There may be an issue with this tracked task json approach depending on the vision for this chatbot, due to how we exclude repos from the devpool + not religiously opening a task for every PR and/or some historic devpool purge/cleansing that I'm not aware of?\r\nBecause if you search `ubiquity-dollar` tasks in the `devpool` you find 116 tasks but if you search the `ubiquity-dollar` repo you find 284 closed as completed tasks. There is a recurring theme across repos, I'll show one more example but both cases we are missing 100-200 tasks here while other repos vary.\r\n`ubiquity-dollar` (874 total, 369 are issues):\r\n![image](https://github.com/user-attachments/assets/59770f7f-9381-4472-8166-c5f5ed12e9d5)\r\n![image](https://github.com/user-attachments/assets/acbed1fd-fbdc-45df-9d0a-0c46fed85da7)\r\n`ubiquibot` (865 total, 442 are issues):\r\n![image](https://github.com/user-attachments/assets/1906ffa7-9cde-43a1-be26-fa0daa87359f)\r\n![image](https://github.com/user-attachments/assets/197b7254-cd46-400c-ac2c-7c57fb180031)\r\nThe kernel is another, there are 66 merged PRs but only 23 closed as complete issues.\r\n---\r\nI was curious and so I wrote a script using the GQL linked PR method we use instead of search API as it's more reliable, results are as follows:\r\n- Tracked JSON tasks:  1,324 comments (including task body, task comments, pr body, pr comments and review comments)\r\n- Using rest + GQL: 44,247 comments `listForOrg(all four of our orgs)` > `listIssuesForOrg(\"all\")` > concat all comments > `fetchLinkedPrs()` > concat all comments\r\nIf we are training a model on unique issues as mentioned recently, we'd need everything including the currently excluded repos, issues especially the ones that are \"irrelevant\" wouldn't we? I have a JSON from running the script, I can use pastebin or something if it's of interest.\r\n[Script](https://gist.github.com/Keyrxng/f4b1ea223950266208372a8a8b1ab820)","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2392058521","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.494,"formatting":{"content":{"p":{"score":0,"elementCount":14},"hr":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1.2},"priority":2,"words":{"wordCount":236,"wordValue":0.1,"result":1.39},"readability":{"fleschKincaid":51.809067796610194,"syllables":337,"sentences":7,"score":0.9180906779661019},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 8.055 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>6</td><td>8.055</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2384058542\" target=\"_blank\" rel=\"noopener\">Both are held back by review only.As I understand this task:&hellip;</a></h6></td><td><details><summary>3.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0.5&#13;regex:&#13;  wordCount: 101&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.95</td><td>2</td><td>1.919</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2384282747\" target=\"_blank\" rel=\"noopener\">This sounds like a whole new classification/approach to the curr&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 11&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 485&#13;  wordValue: 0.1&#13;  result: 0.21&#13;</pre></details></td><td>0.9</td><td>2</td><td>0.702</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2385483417\" target=\"_blank\" rel=\"noopener\">So we're filtering out irrelevant comments and embedding only th&hellip;</a></h6></td><td><details><summary>2.96</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 9&#13;    hr:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 290&#13;  wordValue: 0.1&#13;  result: 0.96&#13;</pre></details></td><td>0.85</td><td>2</td><td>1.632</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2388221412\" target=\"_blank\" rel=\"noopener\">afaik queries are not saved to the DB only our embeddings which &hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 10&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 544&#13;  wordValue: 0.1&#13;  result: 0.13&#13;</pre></details></td><td>0.85</td><td>2</td><td>1.156</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2388377812\" target=\"_blank\" rel=\"noopener\">Our aim should be improving the effectiveness of our embeddings &hellip;</a></h6></td><td><details><summary>2.28</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 145&#13;  wordValue: 0.1&#13;  result: 2.28&#13;</pre></details></td><td>0.8</td><td>2</td><td>1.152</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2392058521\" target=\"_blank\" rel=\"noopener\">There may be an issue with this tracked task json approach depen&hellip;</a></h6></td><td><details><summary>2.59</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 14&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.2&#13;regex:&#13;  wordCount: 236&#13;  wordValue: 0.1&#13;  result: 1.39&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.494</td></tr></tbody></table></details>"},"gentlementlegen":{"total":11.008,"userId":9807008,"comments":[{"id":2505236240,"content":"@sshivaditya2019 I see a generated result above, something wrong with it?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2505236240","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.694,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":41.8518181818182,"syllables":20,"sentences":1,"score":0.818518181818182},"multiplier":1,"relevance":0.7}},{"id":2505263458,"content":"@sshivaditya2019 we are experiencing issues with the kernel, will regenerate this as soon as it is fixed.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2505263458","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.688,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":50.2388235294118,"syllables":28,"sentences":1,"score":0.902388235294118},"multiplier":1,"relevance":0.8}},{"id":2421842939,"content":"@sshivaditya2019 For the Supabase, does it need a brand new instance or does it share with https://github.com/ubiquity-os-marketplace/text-vector-embeddings/ ? Also the deployment script does not upload the `VOYAGEAI_API_KEY` to the worker, which I think is wanted.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2421842939","commentType":"PULL_COLLABORATOR","score":{"reward":6.032,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":67.09504065040652,"syllables":61,"sentences":3,"score":0.9290495934959349},"multiplier":1,"relevance":0.8}},{"id":2422644333,"content":"@sshivaditya2019 Sounds good, please poke me in telegram (`@the_mentlegen`)","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2422644333","commentType":"PULL_COLLABORATOR","score":{"reward":0.594,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":61.24000000000001,"syllables":13,"sentences":1,"score":0.9875999999999999},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 11.008 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>4.382</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>6.626</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2505236240\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 I see a generated result above, something wrong&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.694</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/50#issuecomment-2505263458\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 we are experiencing issues with the kernel, wil&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.688</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2421842939\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 For the Supabase, does it need a brand new inst&hellip;</a></h6></td><td><details><summary>2.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.8</td><td>2</td><td>6.032</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/2#issuecomment-2422644333\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 Sounds good, please poke me in telegram (&#96;@&hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.594</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_23.json","json":{"gentlementlegen":{"userId":9807008,"total":605.97,"task":{"reward":600,"multiplier":1},"comments":[{"id":2364499490,"content":"Users should be able to set / update their associated wallet that will be used to collect their rewards.\r\nTasks to be carried out:\r\n- implement a `/wallet` command that allows to set the user's wallet\r\n- be able to updated that wallet\r\n- be able to query the current user's wallet\r\n[Code reference](https://github.com/ubiquity/ubiquibot/blob/7d3e75cd1ea94bff73998ae4bcce1cc0f3e15ab7/src/handlers/comment/handlers/wallet.ts)\r\n[Related repository](https://github.com/ubiquibot/command-wallet)","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/23","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.97,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2.3},"priority":1,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":47.4507075471698,"syllables":83,"sentences":2,"score":0.874507075471698},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 605.97 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>600</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.97</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/23\" target=\"_blank\" rel=\"noopener\">Users should be able to set / update their associated wallet tha&hellip;</a></h6></td><td><details><summary>4.73</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.3&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>1</td><td>1</td><td>5.97</td></tr></tbody></table></details>"},"0x4007":{"total":70.35,"userId":4975670,"comments":[{"id":2181066672,"content":"I'm surprised this wasn't on the original roll out of plugins. This is an essential feature","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/23#issuecomment-2181066672","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.076,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":75.50000000000003,"syllables":26,"sentences":2,"score":0.8449999999999998},"multiplier":1,"relevance":0.4}},{"id":2213219690,"content":"Interesting that it didn't credit my review comments.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/23#issuecomment-2213219690","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.324,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":56.70000000000002,"syllables":15,"sentences":1,"score":0.9670000000000002},"multiplier":1,"relevance":0.1}},{"id":1662819766,"content":"ENS is broken last I checked so use an address like the zero address.","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662819766","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,38 +9,23 @@\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n-\n-## Creating a new plugin\n-\n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n-\n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+1. Install the dependencies preferably using `yarn` or `bun`.\n+2. Copy `.dev.vars.example` to `.dev.vars` and fill the variables\n+3. Generate Supabase types by running\n+    ```shell\n+    yarn prebuild\n+    ```\n+4. Run the project with `yarn wrangler`\n \n-- Your plugin config should look similar to this:\n+## Example configuration\n \n ```yml\n-- plugin: <plugin-org/owner>/<plugin-repo-name>:compute.yml@development\n-  name: plugin-name\n-  id: plugin-name-command\n-  description: \"Plugin description\" # small description of what the plugin does\n-  command: \"<regex for command>\" # if you are creating a plugin with a slash command\n-  example: \"<example usage>\" # how to invoke the slash command\n-  with: # these are the example settings, the kernel passes these to the plugin.\n-    disabledCommands: []\n-    timers:\n-      reviewDelayTolerance: 86000\n-      taskStaleTimeoutDuration: 2580000\n-    miscellaneous:\n-      maxConcurrentTasks: 3\n-    labels:\n-      time: []\n-      priority: []\n+- plugin: ubiquibot/command-wallet\n+  name: command-wallet\n+  id: command-wallet\n+  description: \"Helps users setting their wallet to collect subsequent task rewards.\"\n+  command: \"/wallet\"\n+  example: \"/wallet ubiquibot.eth\"","score":{"reward":2.982,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":83.85357142857143,"syllables":18,"sentences":1,"score":0.7614642857142857},"multiplier":1,"relevance":0.7}},{"id":1662856743,"content":"```suggestion\r\n  \"description\": \"Allows users to register their wallets to collect rewards.\",\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662856743","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,23 +1,26 @@\n {\n-  \"name\": \"plugin-template\",\n+  \"name\": \"command-wallet\",\n   \"version\": \"1.0.0\",\n-  \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n+  \"description\": \"Helps users setting their wallet to collect subsequent task rewards.\",","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.5}},{"id":1662869267,"content":"```suggestion\r\n      .argument(\"<address>\", \"Wallet address to query, e.g. 0x000000000000000000000000000000000000000\", this._parseWalletAddress)\r\n```\r\nYou can use in the earlier example as well that I commented on","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662869267","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,51 @@\n+import { Command, InvalidArgumentError } from \"commander\";\n+import packageJson from \"../../package.json\";\n+import { Context } from \"../types\";\n+import { registerWallet } from \"./query-wallet\";\n+\n+export class CommandParser {\n+  readonly _program;\n+\n+  constructor(context: Context) {\n+    const program = new Command();\n+    program\n+      .command(\"/wallet\")\n+      .usage(\"<address>\")\n+      .argument(\"<address>\", \"Wallet address to query, e.g. 0x000000000000000000000000000000000000001\", this._parseWalletAddress)","score":{"reward":3.24,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.0092307692308,"syllables":17,"sentences":1,"score":0.7699076923076921},"multiplier":1,"relevance":0.8}},{"id":1662869874,"content":"```suggestion\r\n    return context.logger.info(\"Skipping to register a wallet address because both address/ens doesn't exist\");\r\n```\r\nshouldnt need to prepend hashtag","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662869874","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,86 @@\n+import { ethers } from \"ethers\";\n+import { Context } from \"../types\";\n+\n+function extractEnsName(text: string) {\n+  const ensRegex = /^(?=.{3,40}$)([a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z]{2,}$/gm;\n+  const match = text.match(ensRegex);\n+\n+  if (match) {\n+    const ensName = match[0];\n+    return ensName?.toLowerCase();\n+  }\n+}\n+\n+export async function registerWallet(context: Context, body: string) {\n+  const payload = context.payload;\n+  const config = context.config;\n+  const logger = context.logger;\n+  const sender = payload.sender.login;\n+  const adapters = context.adapters;\n+\n+  const regexForAddress = /(0x[a-fA-F0-9]{40})/g;\n+  const addressMatches = body.match(regexForAddress);\n+  let address = addressMatches ? addressMatches[0] : null;\n+  const ensName = extractEnsName(body.replace(\"/wallet\", \"\").trim());\n+\n+  if (!address && ensName) {\n+    context.logger.debug(\"Trying to resolve address from ENS name\", { ensName });\n+    address = await resolveAddress(ensName);\n+    if (!address) {\n+      throw new Error(`Resolving address from ENS name failed: ${ensName}`);\n+    }\n+    context.logger.debug(\"Resolved address from ENS name\", { ensName, address });\n+  }\n+\n+  if (!address) {\n+    return context.logger.info(\"# Skipping to register a wallet address because both address/ens doesn't exist\");","score":{"reward":1.365,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.7}},{"id":1662870166,"content":"```suggestion\r\n    return context.logger.ok(\"Successfully registered wallet address\", { sender, address });\r\n```\r\nlogger methods are implemneted incorrectly","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662870166","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,86 @@\n+import { ethers } from \"ethers\";\n+import { Context } from \"../types\";\n+\n+function extractEnsName(text: string) {\n+  const ensRegex = /^(?=.{3,40}$)([a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z]{2,}$/gm;\n+  const match = text.match(ensRegex);\n+\n+  if (match) {\n+    const ensName = match[0];\n+    return ensName?.toLowerCase();\n+  }\n+}\n+\n+export async function registerWallet(context: Context, body: string) {\n+  const payload = context.payload;\n+  const config = context.config;\n+  const logger = context.logger;\n+  const sender = payload.sender.login;\n+  const adapters = context.adapters;\n+\n+  const regexForAddress = /(0x[a-fA-F0-9]{40})/g;\n+  const addressMatches = body.match(regexForAddress);\n+  let address = addressMatches ? addressMatches[0] : null;\n+  const ensName = extractEnsName(body.replace(\"/wallet\", \"\").trim());\n+\n+  if (!address && ensName) {\n+    context.logger.debug(\"Trying to resolve address from ENS name\", { ensName });\n+    address = await resolveAddress(ensName);\n+    if (!address) {\n+      throw new Error(`Resolving address from ENS name failed: ${ensName}`);\n+    }\n+    context.logger.debug(\"Resolved address from ENS name\", { ensName, address });\n+  }\n+\n+  if (!address) {\n+    return context.logger.info(\"# Skipping to register a wallet address because both address/ens doesn't exist\");\n+  }\n+\n+  if (config.registerWalletWithVerification) {\n+    registerWalletWithVerification(context, body, address);\n+  }\n+\n+  if (address == ethers.ZeroAddress) {\n+    return logger.error(\"Skipping to register a wallet address because user is trying to set their address to null address\");\n+  }\n+\n+  // Makes sure that the address is check-summed\n+  address = ethers.getAddress(address);\n+\n+  if (payload.comment) {\n+    const { wallet } = adapters.supabase;\n+    await wallet.upsertWalletAddress(context, address);\n+    return context.logger.info(\"+ Successfully registered wallet address\", { sender, address });","score":{"reward":1.272,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":-1.2799999999999727,"syllables":12,"sentences":1,"score":0},"multiplier":1,"relevance":0.8}},{"id":1662870997,"content":"```suggestion\r\n            body: `\\`\\`diff\\n${message}`,\r\n```\r\nfour is wrong","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662870997","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -21,14 +23,34 @@ export async function plugin(inputs: PluginInputs, env: Env) {\n       debug(message: unknown, ...optionalParams: unknown[]) {\n         console.debug(message, ...optionalParams);\n       },\n-      info(message: unknown, ...optionalParams: unknown[]) {\n+      async info(message: unknown, ...optionalParams: unknown[]) {\n         console.log(message, ...optionalParams);\n+        try {\n+          await octokit.issues.createComment({\n+            owner: context.payload.repository.owner.login,\n+            issue_number: context.payload.issue.number,\n+            repo: context.payload.repository.name,\n+            body: `\\`\\`\\`diff\\n${message}`,","score":{"reward":1.104,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1662871253,"content":"```suggestion\r\n            body: `\\`\\`diff\\n- ${message} ${optionalParams}`,\r\n```\r\nfour is wrong","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662871253","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -21,14 +23,34 @@ export async function plugin(inputs: PluginInputs, env: Env) {\n       debug(message: unknown, ...optionalParams: unknown[]) {\n         console.debug(message, ...optionalParams);\n       },\n-      info(message: unknown, ...optionalParams: unknown[]) {\n+      async info(message: unknown, ...optionalParams: unknown[]) {\n         console.log(message, ...optionalParams);\n+        try {\n+          await octokit.issues.createComment({\n+            owner: context.payload.repository.owner.login,\n+            issue_number: context.payload.issue.number,\n+            repo: context.payload.repository.name,\n+            body: `\\`\\`\\`diff\\n${message}`,\n+          });\n+        } catch (e) {\n+          console.error(\"Failed to post info comment\", e);\n+        }\n       },\n       warn(message: unknown, ...optionalParams: unknown[]) {\n         console.warn(message, ...optionalParams);\n       },\n-      error(message: unknown, ...optionalParams: unknown[]) {\n+      async error(message: unknown, ...optionalParams: unknown[]) {\n         console.error(message, ...optionalParams);\n+        try {\n+          await octokit.issues.createComment({\n+            owner: context.payload.repository.owner.login,\n+            issue_number: context.payload.issue.number,\n+            repo: context.payload.repository.name,\n+            body: `\\`\\`\\`diff\\n- ${message} ${optionalParams}`,","score":{"reward":0.966,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1663092674,"content":"If it works correctly then that's great. \nUsing our rpc handler everywhere is ideal","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1663092674","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,38 +9,23 @@\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n-\n-## Creating a new plugin\n-\n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n-\n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+1. Install the dependencies preferably using `yarn` or `bun`.\n+2. Copy `.dev.vars.example` to `.dev.vars` and fill the variables\n+3. Generate Supabase types by running\n+    ```shell\n+    yarn prebuild\n+    ```\n+4. Run the project with `yarn wrangler`\n \n-- Your plugin config should look similar to this:\n+## Example configuration\n \n ```yml\n-- plugin: <plugin-org/owner>/<plugin-repo-name>:compute.yml@development\n-  name: plugin-name\n-  id: plugin-name-command\n-  description: \"Plugin description\" # small description of what the plugin does\n-  command: \"<regex for command>\" # if you are creating a plugin with a slash command\n-  example: \"<example usage>\" # how to invoke the slash command\n-  with: # these are the example settings, the kernel passes these to the plugin.\n-    disabledCommands: []\n-    timers:\n-      reviewDelayTolerance: 86000\n-      taskStaleTimeoutDuration: 2580000\n-    miscellaneous:\n-      maxConcurrentTasks: 3\n-    labels:\n-      time: []\n-      priority: []\n+- plugin: ubiquibot/command-wallet\n+  name: command-wallet\n+  id: command-wallet\n+  description: \"Helps users setting their wallet to collect subsequent task rewards.\"\n+  command: \"/wallet\"\n+  example: \"/wallet ubiquibot.eth\"","score":{"reward":2.772,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":69.5025,"syllables":23,"sentences":2,"score":0.904975},"multiplier":1,"relevance":0.6}},{"id":1668049153,"content":"```suggestion\n  const { payload, config, logger, adapters } = context;\n  const sender = payload.sender.login;\n```\nConcise","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1668049153","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,86 @@\n+import { ethers } from \"ethers\";\n+import { Context } from \"../types\";\n+\n+function extractEnsName(text: string) {\n+  const ensRegex = /^(?=.{3,40}$)([a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z]{2,}$/gm;\n+  const match = text.match(ensRegex);\n+\n+  if (match) {\n+    const ensName = match[0];\n+    return ensName?.toLowerCase();\n+  }\n+}\n+\n+export async function registerWallet(context: Context, body: string) {\n+  const payload = context.payload;\n+  const config = context.config;\n+  const logger = context.logger;\n+  const sender = payload.sender.login;\n+  const adapters = context.adapters;","score":{"reward":0.306,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":36.62000000000003,"syllables":2,"sentences":1,"score":0.7662000000000003},"multiplier":1,"relevance":0.6}},{"id":1668049934,"content":"Does it make sense to use our rpc manager here","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1668049934","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,86 @@\n+import { ethers } from \"ethers\";\n+import { Context } from \"../types\";\n+\n+function extractEnsName(text: string) {\n+  const ensRegex = /^(?=.{3,40}$)([a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z]{2,}$/gm;\n+  const match = text.match(ensRegex);\n+\n+  if (match) {\n+    const ensName = match[0];\n+    return ensName?.toLowerCase();\n+  }\n+}\n+\n+export async function registerWallet(context: Context, body: string) {\n+  const payload = context.payload;\n+  const config = context.config;\n+  const logger = context.logger;\n+  const sender = payload.sender.login;\n+  const adapters = context.adapters;\n+\n+  const regexForAddress = /(0x[a-fA-F0-9]{40})/g;\n+  const addressMatches = body.match(regexForAddress);\n+  let address = addressMatches ? addressMatches[0] : null;\n+  const ensName = extractEnsName(body.replace(\"/wallet\", \"\").trim());\n+\n+  if (!address && ensName) {\n+    context.logger.debug(\"Trying to resolve address from ENS name\", { ensName });\n+    address = await resolveAddress(ensName);\n+    if (!address) {\n+      throw new Error(`Resolving address from ENS name failed: ${ensName}`);\n+    }\n+    context.logger.debug(\"Resolved address from ENS name\", { ensName, address });\n+  }\n+\n+  if (!address) {\n+    return context.logger.info(\"Skipping to register a wallet address because both address/ens doesn't exist\");\n+  }\n+\n+  if (config.registerWalletWithVerification) {\n+    registerWalletWithVerification(context, body, address);\n+  }\n+\n+  if (address == ethers.ZeroAddress) {\n+    return logger.error(\"Skipping to register a wallet address because user is trying to set their address to null address\");\n+  }\n+\n+  // Makes sure that the address is check-summed\n+  address = ethers.getAddress(address);\n+\n+  if (payload.comment) {\n+    const { wallet } = adapters.supabase;\n+    await wallet.upsertWalletAddress(context, address);\n+    return context.logger.ok(\"Successfully registered wallet address\", { sender, address });\n+  } else {\n+    throw new Error(\"Payload comment is undefined\");\n+  }\n+}\n+\n+function registerWalletWithVerification(context: Context, body: string, address: string) {\n+  const regexForSigHash = /(0x[a-fA-F0-9]{130})/g;\n+  const sigHashMatches = body.match(regexForSigHash);\n+  const sigHash = sigHashMatches ? sigHashMatches[0] : null;\n+  const messageToSign = \"UbiquiBot\";\n+  const failedSigLogMsg = `Skipping to register the wallet address because you have not provided a valid SIGNATURE_HASH.`;\n+\n+  try {\n+    const isSigHashValid = sigHash && ethers.verifyMessage(messageToSign, sigHash) == ethers.getAddress(address);\n+    if (!isSigHashValid) {\n+      context.logger.fatal(failedSigLogMsg);\n+      throw new Error(failedSigLogMsg);\n+    }\n+  } catch (e) {\n+    context.logger.fatal(\"Exception thrown by verifyMessage for /wallet: \", e, failedSigLogMsg);\n+    throw new Error(failedSigLogMsg);\n+  }\n+}\n+\n+export async function resolveAddress(ensName: string) {\n+  // Gets the Ethereum address associated with an ENS (Ethereum Name Service) name\n+  // Explicitly set provider to Ethereum mainnet\n+  const provider = new ethers.JsonRpcProvider(`https://eth.drpc.org`);","score":{"reward":2.916,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":95.165,"syllables":12,"sentences":1,"score":0.64835},"multiplier":1,"relevance":0.9}},{"id":1668051345,"content":"Shouldn't error diff be ! And fatal be -","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1668051345","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -21,14 +23,47 @@ export async function plugin(inputs: PluginInputs, env: Env) {\n       debug(message: unknown, ...optionalParams: unknown[]) {\n         console.debug(message, ...optionalParams);\n       },\n-      info(message: unknown, ...optionalParams: unknown[]) {\n+      async ok(message: unknown, ...optionalParams: unknown[]) {\n         console.log(message, ...optionalParams);\n+        try {\n+          await octokit.issues.createComment({\n+            owner: context.payload.repository.owner.login,\n+            issue_number: context.payload.issue.number,\n+            repo: context.payload.repository.name,\n+            body: `\\`\\`\\`diff\\n+ ${message}`,\n+          });\n+        } catch (e) {\n+          console.error(\"Failed to post ok comment\", e);\n+        }\n+      },\n+      async info(message: unknown, ...optionalParams: unknown[]) {\n+        console.log(message, ...optionalParams);\n+        try {\n+          await octokit.issues.createComment({\n+            owner: context.payload.repository.owner.login,\n+            issue_number: context.payload.issue.number,\n+            repo: context.payload.repository.name,\n+            body: `\\`\\`\\`diff\\n# ${message}`,\n+          });\n+        } catch (e) {\n+          console.error(\"Failed to post info comment\", e);\n+        }\n       },\n       warn(message: unknown, ...optionalParams: unknown[]) {\n         console.warn(message, ...optionalParams);\n       },\n-      error(message: unknown, ...optionalParams: unknown[]) {\n+      async error(message: unknown, ...optionalParams: unknown[]) {\n         console.error(message, ...optionalParams);\n+        try {\n+          await octokit.issues.createComment({\n+            owner: context.payload.repository.owner.login,\n+            issue_number: context.payload.issue.number,\n+            repo: context.payload.repository.name,\n+            body: `\\`\\`\\`diff\\n- ${message} ${optionalParams}`,","score":{"reward":2.16,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":97.025,"syllables":10,"sentences":2,"score":0.6297499999999999},"multiplier":1,"relevance":0.8}},{"id":1668052899,"content":"Seems wrong to only have some promises. Can you just copy the logic how it was implemented before","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1668052899","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -19,9 +19,10 @@ export interface Context<T extends SupportedEventsU = SupportedEventsU, TU exten\n   env: Env;\n   logger: {\n     fatal: (message: unknown, ...optionalParams: unknown[]) => void;\n-    error: (message: unknown, ...optionalParams: unknown[]) => void;\n+    error: (message: unknown, ...optionalParams: unknown[]) => Promise<void>;\n     warn: (message: unknown, ...optionalParams: unknown[]) => void;\n-    info: (message: unknown, ...optionalParams: unknown[]) => void;\n+    info: (message: unknown, ...optionalParams: unknown[]) => Promise<void>;\n+    ok: (message: unknown, ...optionalParams: unknown[]) => Promise<void>;\n     debug: (message: unknown, ...optionalParams: unknown[]) => void;","score":{"reward":4.617,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":80.20000000000003,"syllables":25,"sentences":2,"score":0.7979999999999997},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2154311377,"effect":{"addition":1355,"deletion":82},"reward":43.11,"priority":3},{"reviewId":2154747314,"effect":{"addition":3,"deletion":3},"reward":0.18,"priority":3},{"reviewId":2162357352,"effect":{"addition":20,"deletion":6},"reward":0.78,"priority":3},{"reviewId":2162463909,"effect":{"addition":1,"deletion":5},"reward":0.18,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 70.35 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>44.25</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.4</td></tr><tr><td>Review</td><td>Comment</td><td>12</td><td>23.7</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2\" target=\"_blank\" rel=\"noopener\">#2</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1355 -82</td><td>3</td><td>43.11</td></tr><tr><td>+3 -3</td><td>3</td><td>0.18</td></tr><tr><td>+20 -6</td><td>3</td><td>0.78</td></tr><tr><td>+1 -5</td><td>3</td><td>0.18</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/23#issuecomment-2181066672\" target=\"_blank\" rel=\"noopener\">I'm surprised this wasn't on the original roll out of plugins. T&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.4</td><td>3</td><td>2.076</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/23#issuecomment-2213219690\" target=\"_blank\" rel=\"noopener\">Interesting that it didn't credit my review comments.</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.324</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662819766\" target=\"_blank\" rel=\"noopener\">ENS is broken last I checked so use an address like the zero add&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.982</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662856743\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"description\": \"Allows users to reg&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.5</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662869267\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion.argument(\"&lt;address&gt;\", \"W&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.24</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662869874\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionreturn context.logger.info(\"Skipp&hellip;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.365</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662870166\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionreturn context.logger.ok(\"Success&hellip;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.272</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662870997\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionbody: &#96;\\&#96;\\&#96;di&hellip;</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.104</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1662871253\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionbody: &#96;\\&#96;\\&#96;di&hellip;</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.966</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1663092674\" target=\"_blank\" rel=\"noopener\">If it works correctly then that's great. Using our rpc handler &hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.772</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1668049153\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionconst { payload, config, logger, ada&hellip;</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.306</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1668049934\" target=\"_blank\" rel=\"noopener\">Does it make sense to use our rpc manager here</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.916</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1668051345\" target=\"_blank\" rel=\"noopener\">Shouldn't error diff be ! And fatal be -</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.16</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1668052899\" target=\"_blank\" rel=\"noopener\">Seems wrong to only have some promises. Can you just copy the lo&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.617</td></tr></tbody></table></details>"},"rndquu":{"total":75.204,"userId":119500907,"comments":[{"id":1653003865,"content":"@gentlementlegen What's the difference between `.dev.vars` and `.env` files and why we need to keep both of them?","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1653003865","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":3.57,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":65.16823529411766,"syllables":25,"sentences":1,"score":0.9483176470588234},"multiplier":1,"relevance":0.7}},{"id":1653028552,"content":"```suggestion\r\n2. Copy `.dev.vars.example` to `.dev.vars` and fill the variables\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1653028552","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,38 +9,23 @@\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n-\n-## Creating a new plugin\n-\n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n-\n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+1. Install the dependencies preferably using `yarn` or `bun`.\n+2. Copy `env.example` and `.dev.vars.example` to `.env` and `.dev.vars` respectively, and fill the variables","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1663922358,"content":"What exactly went wrong? I've tried recently the latest published version (`1.1.0`) which seemed to work fine.","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1663922358","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,38 +9,23 @@\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n-\n-## Creating a new plugin\n-\n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n-\n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+1. Install the dependencies preferably using `yarn` or `bun`.\n+2. Copy `.dev.vars.example` to `.dev.vars` and fill the variables\n+3. Generate Supabase types by running\n+    ```shell\n+    yarn prebuild\n+    ```\n+4. Run the project with `yarn wrangler`\n \n-- Your plugin config should look similar to this:\n+## Example configuration\n \n ```yml\n-- plugin: <plugin-org/owner>/<plugin-repo-name>:compute.yml@development\n-  name: plugin-name\n-  id: plugin-name-command\n-  description: \"Plugin description\" # small description of what the plugin does\n-  command: \"<regex for command>\" # if you are creating a plugin with a slash command\n-  example: \"<example usage>\" # how to invoke the slash command\n-  with: # these are the example settings, the kernel passes these to the plugin.\n-    disabledCommands: []\n-    timers:\n-      reviewDelayTolerance: 86000\n-      taskStaleTimeoutDuration: 2580000\n-    miscellaneous:\n-      maxConcurrentTasks: 3\n-    labels:\n-      time: []\n-      priority: []\n+- plugin: ubiquibot/command-wallet\n+  name: command-wallet\n+  id: command-wallet\n+  description: \"Helps users setting their wallet to collect subsequent task rewards.\"\n+  command: \"/wallet\"\n+  example: \"/wallet ubiquibot.eth\"","score":{"reward":2.46,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":78.77220588235295,"syllables":24,"sentences":2,"score":0.8122779411764705},"multiplier":1,"relevance":0.5}},{"id":2189319466,"content":"@gentlementlegen Getting [this](https://github.com/rndquu-org/test-repo/issues/59#issuecomment-2189306904) error when running the plugin in the \"worker\" mode on a completely fresh (i.e. empty) DB instance with production schema. What am I doing wrong?","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#issuecomment-2189319466","commentType":"PULL_COLLABORATOR","score":{"reward":8.784,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":65.28314655172417,"syllables":46,"sentences":4,"score":0.9471685344827583},"multiplier":1,"relevance":0.8}},{"id":2189650726,"content":"This one https://github.com/ubiquity/ubiquibot/tree/12b702d6a2ea7e637329c1472a8bbb0be853bf8b/supabase/migrations","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#issuecomment-2189650726","commentType":"PULL_COLLABORATOR","score":{"reward":2.52,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":1.2888636363636294,"syllables":26,"sentences":2,"score":0.4128886363636363},"multiplier":1,"relevance":0.6}},{"id":2189658563,"content":"@gentlementlegen Could you merge https://github.com/gentlementlegen/command-wallet/pull/1 ?","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#issuecomment-2189658563","commentType":"PULL_COLLABORATOR","score":{"reward":3.738,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":38.595,"syllables":23,"sentences":2,"score":0.78595},"multiplier":1,"relevance":0.7}},{"id":2195678798,"content":"@gentlementlegen Check [this](https://github.com/rndquu-org/test-repo/issues/59#issuecomment-2195669405) comment which registers a none checksummed address. Some libs may not handle such addresses correctly. Perhaps it makes sense to convert addresses to their checksummed versions on saving to DB?\r\nOtherwise works fine.","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#issuecomment-2195678798","commentType":"PULL_COLLABORATOR","score":{"reward":10.692,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":63.75000000000003,"syllables":57,"sentences":4,"score":0.9624999999999997},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2138971854,"effect":{"addition":1348,"deletion":81},"reward":42.87,"priority":3},{"reviewId":2139011003,"effect":{"addition":2,"deletion":1},"reward":0.09,"priority":3},{"reviewId":2153065872,"effect":{"addition":11,"deletion":5},"reward":0.48,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 75.204 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>43.44</td></tr><tr><td>Review</td><td>Comment</td><td>7</td><td>31.764</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2\" target=\"_blank\" rel=\"noopener\">#2</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1348 -81</td><td>3</td><td>42.87</td></tr><tr><td>+2 -1</td><td>3</td><td>0.09</td></tr><tr><td>+11 -5</td><td>3</td><td>0.48</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1653003865\" target=\"_blank\" rel=\"noopener\">@gentlementlegen What's the difference between &#96;.dev.vars&#9&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.57</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1653028552\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion2. Copy &#96;.dev.vars.example&#96; t&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#discussion_r1663922358\" target=\"_blank\" rel=\"noopener\">What exactly went wrong? I've tried recently the latest publishe&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.46</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#issuecomment-2189319466\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Getting [this](https://github.com/rndquu-org/te&hellip;</a></h6></td><td><details><summary>2.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.8</td><td>3</td><td>8.784</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#issuecomment-2189650726\" target=\"_blank\" rel=\"noopener\">This one https://github.com/ubiquity/ubiquibot/tree/12b702d6a2ea&hellip;</a></h6></td><td><details><summary>1.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.52</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#issuecomment-2189658563\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Could you merge https://github.com/gentlementle&hellip;</a></h6></td><td><details><summary>1.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.738</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/2#issuecomment-2195678798\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Check [this](https://github.com/rndquu-org/test&hellip;</a></h6></td><td><details><summary>3.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.9</td><td>3</td><td>10.692</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_152.json","json":{"gentlementlegen":{"userId":9807008,"total":13.16,"task":{"reward":12,"multiplier":1},"comments":[{"id":2418685050,"content":"@0x4007 This is because the help is directly embedded within the kernel. Maybe it could be as simple as adding an `enabled` property at the top of the configuration?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/152#issuecomment-2418685050","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.16,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":65.72500000000001,"syllables":42,"sentences":2,"score":0.9427499999999999},"multiplier":0.25,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 13.16 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>12</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.16</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/152#issuecomment-2418685050\" target=\"_blank\" rel=\"noopener\">@0x4007 This is because the help is directly embedded within the&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>1</td><td>2</td><td>1.16</td></tr></tbody></table></details>"},"0x4007":{"total":12,"userId":4975670,"comments":[{"id":2418690170,"content":"I think much simpler to check specifically for this use-case. No config found means don't render help menu.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/152#issuecomment-2418690170","commentType":"ISSUE_AUTHOR","score":{"reward":3.68,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":78.24500000000002,"syllables":28,"sentences":2,"score":0.8175499999999998},"multiplier":1,"relevance":1}},{"id":2593783887,"content":"We are trying to have dev and prod apps installed across all orgs so they can interface with all GitHub Actions across our orgs. However only one should respond to user actions and commands, hence why we implemented https://github.com/ubiquity-os/ubiquity-os-kernel/issues/122\r\nFor this effect to be complete, the help menu should only render on those with a config (I just deleted the prod config in ubiquity-os-marketplace)\r\n### Available Commands\r\n| Command | Description | Example |\r\n|---|---|---|\r\n| `/help` | List all available commands. | `/help` |\r\n_Originally posted by @ubiquity-os[bot] in https://github.com/ubiquity-os-marketplace/command-wallet/issues/4#issuecomment-2418655126_","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/152","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.05,"formatting":{"content":{"p":{"score":0,"elementCount":6},"h3":{"score":1,"elementCount":1},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":3},"priority":1,"words":{"wordCount":81,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":43.83085436893208,"syllables":173,"sentences":5,"score":0.8383085436893208},"multiplier":1,"relevance":1}},{"id":1822922095,"content":"I thought we use our logger instead?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/179#discussion_r1822922095","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -27,12 +27,16 @@ export async function postHelpCommand(context: GitHubContext<\"issue_comment.crea\n     const { plugin } = pluginElement.uses[0];\n     commands.push(...(await parseCommandsFromManifest(context, plugin)));\n   }\n-  await context.octokit.rest.issues.createComment({\n-    body: comments.concat(commands.sort()).join(\"\\n\"),\n-    issue_number: context.payload.issue.number,\n-    owner: context.payload.repository.owner.login,\n-    repo: context.payload.repository.name,\n-  });\n+  if (!commands.length) {\n+    console.warn(\"No commands found, will not post the help command message.\");","score":{"reward":0.996,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2405424162,"effect":{"addition":68,"deletion":7},"reward":1.5,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/179"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 12 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>1.5</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.05</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>3.68</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.996</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/179\" target=\"_blank\" rel=\"noopener\">#179</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+68 -7</td><td>2</td><td>1.5</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/152\" target=\"_blank\" rel=\"noopener\">We are trying to have dev and prod apps installed across all org&hellip;</a></h6></td><td><details><summary>5.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    h3:&#13;      score: 1&#13;      elementCount: 1&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 3&#13;regex:&#13;  wordCount: 81&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>7.05</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/152#issuecomment-2418690170\" target=\"_blank\" rel=\"noopener\">I think much simpler to check specifically for this use-case. No&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>1</td><td>2</td><td>3.68</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/179#discussion_r1822922095\" target=\"_blank\" rel=\"noopener\">I thought we use our logger instead?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>2</td><td>0.996</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_68.json","json":{"hhio618":{"userId":1272158,"total":400,"task":{"reward":400,"multiplier":1},"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 400 XP ]</a>&nbsp;</h3><h6>@hhio618</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>400</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"0x4007":{"total":7.756,"userId":4975670,"comments":[{"id":2368331779,"content":"@gentlementlegen  why doesn't unassignment work anymore","url":"https://github.com/ubiquity-os/permit-generation/issues/68#issuecomment-2368331779","commentType":"ISSUE_AUTHOR","score":{"reward":0.632,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":6.35857142857148,"syllables":16,"sentences":1,"score":0.4635857142857148},"multiplier":1,"relevance":0.2}},{"id":2368373702,"content":"Needs to be activity from the author","url":"https://github.com/ubiquity-os/permit-generation/issues/68#issuecomment-2368373702","commentType":"ISSUE_AUTHOR","score":{"reward":0.704,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":66.7871428571429,"syllables":11,"sentences":1,"score":0.9321285714285711},"multiplier":1,"relevance":0.2}},{"id":2526144659,"content":"- Make a GitHub Action that allows this repository to receive permit generation requests, and return permits. \r\n- This should be the only way to generate permits in our system, so that we can enforce capturing value from plugin developers. \r\n- The `X25519_PRIVATE_KEY` should be in this repository's secrets. \r\n- Unclear if this is viable, but add footer property so we can promote a message\r\n   - Example: https://github.com/ubiquity/ubiquibot/issues/719#issuecomment-1726227243\n### Payload Schema\n```\n[{ [username]: amount }]\n```\nOn the backend this should convert the username into their user ID for record keeping purposes (they can always change their username)","url":"https://github.com/ubiquity-os/permit-generation/issues/68","commentType":"ISSUE_SPECIFICATION","score":{"reward":6.42,"formatting":{"content":{"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":5},"p":{"score":0,"elementCount":5},"h3":{"score":1,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":2.5},"priority":1,"words":{"wordCount":86,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":43.284736842105275,"syllables":162,"sentences":5,"score":0.8328473684210528},"multiplier":1,"relevance":1}}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 7.756 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Specification</td><td>1</td><td>6.42</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>1.336</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/68\" target=\"_blank\" rel=\"noopener\">- Make a GitHub Action that allows this repository to receive pe&hellip;</a></h6></td><td><details><summary>5.14</summary><pre>content:&#13;  content:&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    h3:&#13;      score: 1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 2.5&#13;regex:&#13;  wordCount: 86&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>1</td><td>1</td><td>6.42</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/68#issuecomment-2368331779\" target=\"_blank\" rel=\"noopener\">@gentlementlegen  why doesn't unassignment work anymore</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.2</td><td>4</td><td>0.632</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/68#issuecomment-2368373702\" target=\"_blank\" rel=\"noopener\">Needs to be activity from the author</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.2</td><td>4</td><td>0.704</td></tr></tbody></table></details>"},"gentlementlegen":{"total":2.46,"userId":9807008,"comments":[{"id":2368342036,"content":"@0x4007 I don't know didn't work on this, but I think there is activity on the PR until 19 hours ago, why should it unassign?","url":"https://github.com/ubiquity-os/permit-generation/issues/68#issuecomment-2368342036","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.892,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":76.03,"syllables":33,"sentences":1,"score":0.8397},"multiplier":1,"relevance":0.1}},{"id":2368462939,"content":"@0x4007 Not sure if that's the way it was implemented, I'll have a look, making an issue as a reminder.","url":"https://github.com/ubiquity-os/permit-generation/issues/68#issuecomment-2368462939","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.568,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":76.83227272727274,"syllables":28,"sentences":1,"score":0.8316772727272727},"multiplier":1,"relevance":0.2}}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.46 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.46</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/68#issuecomment-2368342036\" target=\"_blank\" rel=\"noopener\">@0x4007 I don't know didn't work on this, but I think there is a&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.1</td><td>4</td><td>0.892</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/68#issuecomment-2368462939\" target=\"_blank\" rel=\"noopener\">@0x4007 Not sure if that's the way it was implemented, I'll have&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.2</td><td>4</td><td>1.568</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_13.json","json":{"Keyrxng":{"userId":106303466,"total":174.684,"task":{"reward":150,"multiplier":1},"comments":[{"id":2119076843,"content":"- https://github.com/Keyrxng/ubiquibot-plugin-template\r\nvery basic rn but gets the core stuff needed to get up and running quickly\r\nadding specific utils etc will be easier once all of V1 has been ported/I have more exp porting/creating plugins. It started to quickly bloat so I kept it thin for now","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2119076843","commentType":"ISSUE_AUTHOR","score":{"reward":11.718,"formatting":{"content":{"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":1},"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1.1},"priority":3,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":74.40121212121215,"syllables":74,"sentences":3,"score":0.8559878787878784},"multiplier":1,"relevance":0.9}},{"id":2119203118,"content":"Just tried to transfer my repo to the org but no joy, I'll PR it against the repo once created.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2119203118","commentType":"ISSUE_AUTHOR","score":{"reward":3.906,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":84.8057142857143,"syllables":25,"sentences":1,"score":0.751942857142857},"multiplier":1,"relevance":0.7}},{"id":2303622140,"content":"Package all of the common and required parts needed to build a plugin and host a template repo \r\n- All common shared types\r\n- All Supabase adapters\r\n- Libs such as `@ubiquity/configuration`, `@ubiquity/logger`?,  ...etc\r\n- Basic ts plugin entry w/ Context setup\r\n- Basic workflow setup\r\n- Maybe some of the most used utility/helper functions because there are a few variations of these functions across different features all doing the same thing\r\n- Strip out unused scaffolding from https://github.com/ubiquity/ts-template (cypress, esbuild etc) using that as the foundation\r\n- Include steps on how to test a plugin locally when in development\r\n<hr/>\r\nImproves DX, streamlines development and with any breaking changes to how plugins are developed they can be kept up-to date in the template's readme.\r\n- I have based my plugins so far on the structure of [Assistive Pricing](https://github.com/ubiquibot/assistive-pricing/) \r\n- [Start/Stop](https://github.com/ubq-testing/start-stop-module) is closer to what the template should look like but should be more broad-strokes that way developers can remove whatever pieces they don't need (i.e adapters etc)\r\n##### time estimate: < 1-2 hrs","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13","commentType":"ISSUE_SPECIFICATION","score":{"reward":9.06,"formatting":{"content":{"p":{"score":0,"elementCount":13},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":10},"h5":{"score":1,"elementCount":1},"a":{"score":1,"elementCount":3}},"result":5},"priority":1,"words":{"wordCount":167,"wordValue":0.1,"result":2.06},"readability":{"fleschKincaid":54.336796724470176,"syllables":252,"sentences":6,"score":0.9433679672447017},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 174.684 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>9.06</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>15.624</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13\" target=\"_blank\" rel=\"noopener\">Package all of the common and required parts needed to build a p&hellip;</a></h6></td><td><details><summary>7.06</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 13&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 10&#13;    h5:&#13;      score: 1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 5&#13;regex:&#13;  wordCount: 167&#13;  wordValue: 0.1&#13;  result: 2.06&#13;</pre></details></td><td>1</td><td>1</td><td>9.06</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2119076843\" target=\"_blank\" rel=\"noopener\">- https://github.com/Keyrxng/ubiquibot-plugin-templatevery bas&hellip;</a></h6></td><td><details><summary>3.45</summary><pre>content:&#13;  content:&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.1&#13;regex:&#13;  wordCount: 48&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.718</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2119203118\" target=\"_blank\" rel=\"noopener\">Just tried to transfer my repo to the org but no joy, I'll PR it&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.906</td></tr></tbody></table></details>"},"gentlementlegen":{"total":150,"userId":9807008,"comments":[{"id":2134198742,"content":"@Keyrxng Please move the work to the following repository\r\nhttps://github.com/ubiquibot/plugin-template\r\nAlso side note, the template should include the Worker setup as well I suppose.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2134198742","commentType":"ISSUE_COLLABORATOR","score":{"reward":10.05,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":55.0071551724138,"syllables":47,"sentences":2,"score":0.950071551724138},"multiplier":1,"relevance":1}},{"id":2143932482,"content":"@Keyrxng How is this coming along? Would be neat to have it for future plugins.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2143932482","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.942,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":92.06250000000001,"syllables":19,"sentences":2,"score":0.6793749999999998},"multiplier":1,"relevance":0.9}},{"id":2143943134,"content":"We have https://github.com/ubiquibot/command-query-user which was set up as a worker. I think the template should contain both setups, since they can coexist with no issue.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2143943134","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.99,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":76.26924731182795,"syllables":44,"sentences":3,"score":0.8373075268817205},"multiplier":1,"relevance":1}},{"id":2143977367,"content":"@Keyrxng Good to go","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2143977367","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.026,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":2156606920,"content":"@Keyrxng Should be fixed now. The reason why you got unassigned is most likely because you were considered as inactive, but the bot does not update a user status without having any sort of activity on the task.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2156606920","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.65,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":62.87631578947371,"syllables":56,"sentences":2,"score":0.971236842105263},"multiplier":1,"relevance":0.2}},{"id":2156612090,"content":"@Keyrxng Yes, working on it: https://github.com/ubiquibot/plugins-wishlist/issues/7","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2156612090","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.773,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":63.57596153846157,"syllables":21,"sentences":2,"score":0.9642403846153843},"multiplier":1,"relevance":0.3}},{"id":2157096285,"content":"This is a valid point, but I think this scenario is induced by the unassign logic not being accurate. If a user gets a reminder and a notification when they get unassigned, they would have reassigned themselves before the PR was opened / merged. In your case you got unassigned the same second the PR was closed which resulted in this problem. Hopefully this scenario would not be common on the v2, but I'll keep it in mind.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2157096285","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.011,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":78,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":66.65019230769234,"syllables":111,"sentences":4,"score":0.9334980769230766},"multiplier":1,"relevance":0.1}},{"id":2103857818,"content":"Please ask for review again when applicable so I remember to check the PR.","url":"https://github.com/ubiquity-os/plugin-template/pull/1#pullrequestreview-2103857818","commentType":"PULL_COLLABORATOR","score":{"reward":1.341,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":65.72500000000001,"syllables":21,"sentences":1,"score":0.9427499999999999},"multiplier":1,"relevance":0.3}},{"id":2105001732,"content":"This looks fine to me for now. Might have to tune some stuff on the way when we get feedback from others who tried to build a plugin. @0x4007 might be our first beta tester.\r\nAlso, would be really appreciated if you could have a look at https://github.com/ubiquity/ubiquibot-logger/issues/2 because it is becoming redundant to every plugin. While it's nice to have it inside of this template, it would be definitely better to have a package that can be shared.","url":"https://github.com/ubiquity-os/plugin-template/pull/1#pullrequestreview-2105001732","commentType":"PULL_COLLABORATOR","score":{"reward":10.968,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":79,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":73.48301724137932,"syllables":122,"sentences":6,"score":0.8651698275862069},"multiplier":1,"relevance":0.8}},{"id":1623713721,"content":"Why is `buidling` there?","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623713721","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,11 @@\n+{\n+  \"$schema\": \"https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json\",\n+  \"version\": \"0.2\",\n+  \"ignorePaths\": [\"**/*.json\", \"**/*.css\", \"node_modules\", \"**/*.log\", \"./src/adapters/supabase/**/**.ts\"],\n+  \"useGitignore\": true,\n+  \"language\": \"en\",\n+  \"words\": [\"Nektos\", \"dataurl\", \"devpool\", \"outdir\", \"servedir\", \"Supabase\", \"SUPABASE\", \"typebox\", \"ubiquibot\", \"Smee\", \"buidling\"],","score":{"reward":0.966,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1623713919,"content":"Maybe should be same as the `.env` with `MY_SECRET=\"MY_SECRET\"`","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623713919","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,2 @@\n+SUPABASE_URL=","score":{"reward":1.89,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":115.13000000000002,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1623714453,"content":"Should not be included in the repo.","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623714453","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.992,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.8}},{"id":1623714741,"content":"To be removed","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623714741","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,46 @@\n+name: \"the name of the plugin\"\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      stateId:\n+        description: \"State Id\"\n+      eventName:\n+        description: \"Event Name\"\n+      eventPayload:\n+        description: \"Event Payload\"\n+      settings:\n+        description: \"Settings\"\n+      authToken:\n+        description: \"Auth Token\"\n+      ref:\n+        description: \"Ref\"\n+\n+jobs:\n+  compute:\n+    name: \"plugin name\"\n+    runs-on: ubuntu-latest\n+    permissions: write-all\n+    env:","score":{"reward":0.882,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.7}},{"id":1623715278,"content":"```suggestion\r\n  pull_request:\r\n```","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623715278","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,33 @@\n+name: Run Jest testing suite\n+on:\n+  workflow_dispatch:\n+  pull_request_target:","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1623716061,"content":"The config comes from either and org wide, or the targetted repo, not the plugin itself.","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623716061","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,2 +1,79 @@\n-# plugin-template\n-Template repository for plugins that will run within Ubiquibot.\n+# `@ubiquibot/plugin-template`\n+\n+Still a work in progress while some aspects of the kernel are being actively worked on.\n+\n+It contains the ingredients for a basic plugin, including the necessary files and a basic structure. This is not a complete guide or fully featured template at this stage, but it should be enough to get you started. If you have any questions, pop into the Telegram chat and ask or dm me directly, I'm happy to help.\n+\n+## Prerequisites\n+\n+- A basic understanding of GitHub Actions, writing workflows, and the GitHub API.\n+- A good understanding of how the kernel works and how to interact with it.\n+- A basic understanding of the Ubiquibot configuration file and how to define your plugin's settings.\n+\n+## Getting Started\n+\n+1. Create a new repository using this template.\n+2. Clone the repository to your local machine.\n+3. Install the dependencies using your package manager of choice.\n+\n+## Creating a new plugin\n+\n+1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n+2. Update [.ubiquibot-config.yml](./.github/.ubiquibot-config.yml) with your plugin's information. This is the configuration file for _this_ repository, you should also have a private org repo `.ubiquibot-config` with `./github/.ubiquibot-config.yml` as the contents. Here is where you should store sensitive keys like `keys.openAi` and `keys.evmPrivateEncrypted`.","score":{"reward":3.84,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":74.27000000000001,"syllables":22,"sentences":1,"score":0.8573},"multiplier":1,"relevance":0.8}},{"id":1623716231,"content":"Just include the `plugin` part","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623716231","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,2 +1,79 @@\n-# plugin-template\n-Template repository for plugins that will run within Ubiquibot.\n+# `@ubiquibot/plugin-template`\n+\n+Still a work in progress while some aspects of the kernel are being actively worked on.\n+\n+It contains the ingredients for a basic plugin, including the necessary files and a basic structure. This is not a complete guide or fully featured template at this stage, but it should be enough to get you started. If you have any questions, pop into the Telegram chat and ask or dm me directly, I'm happy to help.\n+\n+## Prerequisites\n+\n+- A basic understanding of GitHub Actions, writing workflows, and the GitHub API.\n+- A good understanding of how the kernel works and how to interact with it.\n+- A basic understanding of the Ubiquibot configuration file and how to define your plugin's settings.\n+\n+## Getting Started\n+\n+1. Create a new repository using this template.\n+2. Clone the repository to your local machine.\n+3. Install the dependencies using your package manager of choice.\n+\n+## Creating a new plugin\n+\n+1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n+2. Update [.ubiquibot-config.yml](./.github/.ubiquibot-config.yml) with your plugin's information. This is the configuration file for _this_ repository, you should also have a private org repo `.ubiquibot-config` with `./github/.ubiquibot-config.yml` as the contents. Here is where you should store sensitive keys like `keys.openAi` and `keys.evmPrivateEncrypted`.\n+\n+```yml\n+plugins: # an object of plugins, indexed by the event they fire on\n+  issue_comment.created: # or any other event\n+    - uses: # sequence of plugins to run\n+        - plugin: <plugin-org/owner>/<plugin-repo-name>:compute.yml@development","score":{"reward":1.092,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.7}},{"id":1623716971,"content":"If I remember correctly you had fixed the `any` in some other pull request, please do so here as well","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623716971","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,391 @@\n+/* eslint-disable @typescript-eslint/no-explicit-any */","score":{"reward":4.833,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":76.2342105263158,"syllables":25,"sentences":1,"score":0.8376578947368419},"multiplier":1,"relevance":0.9}},{"id":1623717384,"content":"Please remove the eslint disable. I think that all of these should be in the ubiquibot-logger package because we will reuse them everywhere","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623717384","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":5.778,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":64.22999999999999,"syllables":37,"sentences":2,"score":0.9577000000000001},"multiplier":1,"relevance":0.9}},{"id":1623717454,"content":"Should not be included","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623717454","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.092,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.7}},{"id":1623717609,"content":"what is this for?","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623717609","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,7 @@\n+import { Context } from \"../types/context\";\n+\n+export async function doSomething(context: Context) {","score":{"reward":1.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1623718301,"content":"Should have a validation step as well","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623718301","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,51 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { Value } from \"@sinclair/typebox/build/cjs/value\";\n+import { envSchema, pluginSettingsSchema, PluginInputs } from \"./types\";\n+import { plugin } from \"./plugin\";\n+\n+/**\n+ * How a GitHub action executes the plugin.\n+ */\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  const env = Value.Decode(envSchema, process.env);\n+  const settings = Value.Decode(pluginSettingsSchema, JSON.parse(payload.settings));","score":{"reward":2.322,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0.9}},{"id":1623718354,"content":"Should come from the payload","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623718354","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,51 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { Value } from \"@sinclair/typebox/build/cjs/value\";\n+import { envSchema, pluginSettingsSchema, PluginInputs } from \"./types\";\n+import { plugin } from \"./plugin\";\n+\n+/**\n+ * How a GitHub action executes the plugin.\n+ */\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  const env = Value.Decode(envSchema, process.env);\n+  const settings = Value.Decode(pluginSettingsSchema, JSON.parse(payload.settings));\n+\n+  const inputs: PluginInputs = {\n+    stateId: payload.stateId,\n+    eventName: payload.eventName,\n+    eventPayload: JSON.parse(payload.eventPayload),\n+    settings,\n+    authToken: env.UBIQUIBOT_TOKEN,","score":{"reward":1.656,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":100.24000000000002,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1623801107,"content":"Apologies, was talking about the `UBIQUIBOT_TOKEN` commented one line too high.","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623801107","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,46 @@\n+name: \"the name of the plugin\"\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      stateId:\n+        description: \"State Id\"\n+      eventName:\n+        description: \"Event Name\"\n+      eventPayload:\n+        description: \"Event Payload\"\n+      settings:\n+        description: \"Settings\"\n+      authToken:\n+        description: \"Auth Token\"\n+      ref:\n+        description: \"Ref\"\n+\n+jobs:\n+  compute:\n+    name: \"plugin name\"\n+    runs-on: ubuntu-latest\n+    permissions: write-all\n+    env:","score":{"reward":1.755,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":61.32500000000002,"syllables":16,"sentences":1,"score":0.9867499999999998},"multiplier":1,"relevance":0.5}},{"id":1623848850,"content":"Because for now at least, we should only be using the token contained within the payload, `authToken`.","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623848850","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,46 @@\n+name: \"the name of the plugin\"\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      stateId:\n+        description: \"State Id\"\n+      eventName:\n+        description: \"Event Name\"\n+      eventPayload:\n+        description: \"Event Payload\"\n+      settings:\n+        description: \"Settings\"\n+      authToken:\n+        description: \"Auth Token\"\n+      ref:\n+        description: \"Ref\"\n+\n+jobs:\n+  compute:\n+    name: \"plugin name\"\n+    runs-on: ubuntu-latest\n+    permissions: write-all\n+    env:","score":{"reward":3.402,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":68.9825,"syllables":23,"sentences":1,"score":0.910175},"multiplier":1,"relevance":0.7}},{"id":1623878534,"content":"I believe we should add checks there later on, it's always good practice and we can display detailed errors.\r\nThere is validation in [this plugin](https://github.com/ubiquibot/conversation-rewards/blob/2f3c2ee229400031e1fd95324d91677eda84925e/src/configuration/incentives.ts#L36).","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623878534","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,51 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { Value } from \"@sinclair/typebox/build/cjs/value\";\n+import { envSchema, pluginSettingsSchema, PluginInputs } from \"./types\";\n+import { plugin } from \"./plugin\";\n+\n+/**\n+ * How a GitHub action executes the plugin.\n+ */\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  const env = Value.Decode(envSchema, process.env);\n+  const settings = Value.Decode(pluginSettingsSchema, JSON.parse(payload.settings));","score":{"reward":8.28,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":73.24769230769233,"syllables":37,"sentences":2,"score":0.8675230769230766},"multiplier":1,"relevance":0.8}},{"id":1623887118,"content":"Yarn / bun would be preferred.","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623887118","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,2 +1,73 @@\n-# plugin-template\n-Template repository for plugins that will run within Ubiquibot.\n+# `@ubiquibot/plugin-template`\n+\n+## Prerequisites\n+\n+- A basic understanding of GitHub Actions, writing workflows, and the GitHub API.\n+- A good understanding of how the kernel works and how to interact with it.\n+- A basic understanding of the Ubiquibot configuration file and how to define your plugin's settings.\n+\n+## Getting Started\n+\n+1. Create a new repository using this template.\n+2. Clone the repository to your local machine.\n+3. Install the dependencies using your package manager of choice.","score":{"reward":1.242,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":100.24000000000002,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1630775844,"content":"@Keyrxng Could you please update it to be similar to https://github.com/ubiquity/ts-template/blob/development/.github/workflows/jest-testing.yml","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1630775844","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":5.124,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":64.90309782608696,"syllables":37,"sentences":4,"score":0.9509690217391303},"multiplier":1,"relevance":0.7}},{"id":1630778863,"content":"```suggestion\r\n    authToken: payload.authToken,\r\n```","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1630778863","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,55 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { Value } from \"@sinclair/typebox/build/cjs/value\";\n+import { envSchema, pluginSettingsSchema, PluginInputs, pluginSettingsValidator } from \"./types\";\n+import { plugin } from \"./plugin\";\n+\n+/**\n+ * How a GitHub action executes the plugin.\n+ */\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  const env = Value.Decode(envSchema, payload.env);\n+  const settings = Value.Decode(pluginSettingsSchema, Value.Default(pluginSettingsSchema, JSON.parse(payload.settings)));\n+\n+  if (!pluginSettingsValidator.test(settings)) {\n+    throw new Error(\"Invalid settings provided\");\n+  }\n+\n+  const inputs: PluginInputs = {\n+    stateId: payload.stateId,\n+    eventName: payload.eventName,\n+    eventPayload: JSON.parse(payload.eventPayload),\n+    settings,\n+    authToken: env.UBIQUIBOT_TOKEN,","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.8}},{"id":1630779474,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1630779474","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,11 @@\n+import { Type as T } from \"@sinclair/typebox\";\n+import { StaticDecode } from \"@sinclair/typebox\";\n+import \"dotenv/config\";\n+\n+export const envSchema = T.Object({\n+  UBIQUIBOT_TOKEN: T.String(),","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1630780113,"content":"What is this one for?","url":"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1630780113","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.242,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":2144150355,"content":"1. There will be an org and a repo based config, and secrets can be passed through it, but for secrets only specific for one repo we will prefer having them directly in that repo. This is mostly to accommodate third party plugins where we don't want to pass down secrets. Only the GitHub app secret is passed around (public or private doesn't really matter).\r\n2. This will be removed, for now at least before we implemented it in a better way. We will use the token in the payload.\r\n3. Correct\r\n4. It is not a requirement yet. The data is not yet processed. \r\n5. `context.logged` should ideally use the Ubiquity Logger, but currently the logger is too tied to the current implementation and is not usable as such https://github.com/ubiquity/ubiquibot-logger/issues/2\r\n6. Correct. Plugins should also provide an example in the README for a quick setup.","url":"https://github.com/ubiquity-os/plugin-template/pull/1#issuecomment-2144150355","commentType":"PULL_COLLABORATOR","score":{"reward":13.581,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":6},"p":{"score":0,"elementCount":6},"a":{"score":1,"elementCount":1}},"result":1.6},"priority":3,"words":{"wordCount":140,"wordValue":0.1,"result":2.32},"readability":{"fleschKincaid":65.48462162162166,"syllables":221,"sentences":10,"score":0.9451537837837835},"multiplier":1,"relevance":0.9}},{"id":2144445403,"content":"The most important information to find there is:\r\n- a valid default configuration to be used within `.ubiquibot-configuration.yml`\r\n- how to test with Actions\r\n- how to test with Wrangler\r\nFor Actions, [Nektos Act](https://github.com/nektos/act) is nice for local testing. For wrangler, I usually have an http file, like [here](https://github.com/ubiquibot/assistive-pricing/blob/623ea3f950f04842f2d003bda3fc7b7684e41378/tests/http/request.http). See also https://github.com/ubiquibot/assistive-pricing?tab=readme-ov-file#make-requests\r\nMaybe the Kernel should also be mentioned to do a full setup.","url":"https://github.com/ubiquity-os/plugin-template/pull/1#issuecomment-2144445403","commentType":"PULL_COLLABORATOR","score":{"reward":20.169,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3},"a":{"score":1,"elementCount":3}},"result":3.3},"priority":3,"words":{"wordCount":59,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":64.92622535211268,"syllables":107,"sentences":5,"score":0.9507377464788732},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2092685038,"effect":{"addition":2754,"deletion":2},"reward":82.68,"priority":3},{"reviewId":2092960683,"effect":{"addition":131,"deletion":166},"reward":8.91,"priority":3},{"reviewId":2103848468,"effect":{"addition":46,"deletion":15},"reward":1.83,"priority":3},{"reviewId":2105001732,"effect":{"addition":15,"deletion":19},"reward":1.02,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-template/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 150 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>94.44</td></tr><tr><td>Issue</td><td>Comment</td><td>7</td><td>29.442</td></tr><tr><td>Review</td><td>Comment</td><td>25</td><td>94.815</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+2754 -2</td><td>3</td><td>82.68</td></tr><tr><td>+131 -166</td><td>3</td><td>8.91</td></tr><tr><td>+46 -15</td><td>3</td><td>1.83</td></tr><tr><td>+15 -19</td><td>3</td><td>1.02</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2134198742\" target=\"_blank\" rel=\"noopener\">@Keyrxng Please move the work to the following repositoryhttps&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>1</td><td>3</td><td>10.05</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2143932482\" target=\"_blank\" rel=\"noopener\">@Keyrxng How is this coming along? Would be neat to have it for &hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.9</td><td>3</td><td>3.942</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2143943134\" target=\"_blank\" rel=\"noopener\">We have https://github.com/ubiquibot/command-query-user which wa&hellip;</a></h6></td><td><details><summary>2.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>1</td><td>3</td><td>9.99</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2143977367\" target=\"_blank\" rel=\"noopener\">@Keyrxng Good to go</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.026</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2156606920\" target=\"_blank\" rel=\"noopener\">@Keyrxng Should be fixed now. The reason why you got unassigned &hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.65</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2156612090\" target=\"_blank\" rel=\"noopener\">@Keyrxng Yes, working on it: https://github.com/ubiquibot/plugin&hellip;</a></h6></td><td><details><summary>1.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.773</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2157096285\" target=\"_blank\" rel=\"noopener\">This is a valid point, but I think this scenario is induced by t&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 78&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.1</td><td>3</td><td>1.011</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#pullrequestreview-2103857818\" target=\"_blank\" rel=\"noopener\">Please ask for review again when applicable so I remember to che&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.341</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#pullrequestreview-2105001732\" target=\"_blank\" rel=\"noopener\">This looks fine to me for now. Might have to tune some stuff on &hellip;</a></h6></td><td><details><summary>3.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 79&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.8</td><td>3</td><td>10.968</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623713721\" target=\"_blank\" rel=\"noopener\">Why is &#96;buidling&#96; there?</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.966</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623713919\" target=\"_blank\" rel=\"noopener\">Maybe should be same as the &#96;.env&#96; with &#96;MY_SECRET=\"&hellip;</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.89</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623714453\" target=\"_blank\" rel=\"noopener\">Should not be included in the repo.</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.992</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623714741\" target=\"_blank\" rel=\"noopener\">To be removed</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.882</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623715278\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionpull_request:&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623716061\" target=\"_blank\" rel=\"noopener\">The config comes from either and org wide, or the targetted repo&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623716231\" target=\"_blank\" rel=\"noopener\">Just include the &#96;plugin&#96; part</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.092</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623716971\" target=\"_blank\" rel=\"noopener\">If I remember correctly you had fixed the &#96;any&#96; in some &hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.833</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623717384\" target=\"_blank\" rel=\"noopener\">Please remove the eslint disable. I think that all of these shou&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.778</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623717454\" target=\"_blank\" rel=\"noopener\">Should not be included</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.092</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623717609\" target=\"_blank\" rel=\"noopener\">what is this for?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.368</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623718301\" target=\"_blank\" rel=\"noopener\">Should have a validation step as well</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.322</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623718354\" target=\"_blank\" rel=\"noopener\">Should come from the payload</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.656</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623801107\" target=\"_blank\" rel=\"noopener\">Apologies, was talking about the &#96;UBIQUIBOT_TOKEN&#96; comme&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.755</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623848850\" target=\"_blank\" rel=\"noopener\">Because for now at least, we should only be using the token cont&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.402</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623878534\" target=\"_blank\" rel=\"noopener\">I believe we should add checks there later on, it's always good &hellip;</a></h6></td><td><details><summary>2.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.8</td><td>3</td><td>8.28</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1623887118\" target=\"_blank\" rel=\"noopener\">Yarn / bun would be preferred.</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.242</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1630775844\" target=\"_blank\" rel=\"noopener\">@Keyrxng Could you please update it to be similar to https://git&hellip;</a></h6></td><td><details><summary>1.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.124</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1630778863\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionauthToken: payload.authToken,&#&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1630779474\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#discussion_r1630780113\" target=\"_blank\" rel=\"noopener\">What is this one for?</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.242</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#issuecomment-2144150355\" target=\"_blank\" rel=\"noopener\">1. There will be an org and a repo based config, and secrets can&hellip;</a></h6></td><td><details><summary>3.92</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 6&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.6&#13;regex:&#13;  wordCount: 140&#13;  wordValue: 0.1&#13;  result: 2.32&#13;</pre></details></td><td>0.9</td><td>3</td><td>13.581</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/1#issuecomment-2144445403\" target=\"_blank\" rel=\"noopener\">The most important information to find there is:- a valid defa&hellip;</a></h6></td><td><details><summary>5.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.3&#13;regex:&#13;  wordCount: 59&#13;  wordValue: 0.1&#13;  result: 2.51&#13;</pre></details></td><td>0.9</td><td>3</td><td>20.169</td></tr></tbody></table></details>"},"0x4007":{"total":8.016,"userId":4975670,"comments":[{"id":2157343129,"content":"@Keyrxng I sent 150 for the task reward. In the future, consider reviewing the contribution breakdown before accepting to know if something is off. https://gnosisscan.io/tx/0x2d809e7abe91a4751da60483b3c95c19b398a1167872286474dee9ed0110117b","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2157343129","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.016,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":44.86245689655175,"syllables":53,"sentences":4,"score":0.8486245689655175},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 8.016 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>8.016</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/13#issuecomment-2157343129\" target=\"_blank\" rel=\"noopener\">@Keyrxng I sent 150 for the task reward. In the future, consider&hellip;</a></h6></td><td><details><summary>2.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.8</td><td>3</td><td>8.016</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_action-deploy-plugin_7.json","json":{"gentlementlegen":{"userId":9807008,"total":9.6,"task":{"reward":6,"multiplier":1},"comments":[{"id":2589821438,"content":"When generating a JSON schema from a TypeBox schema in TypeScript, fields with default values are still marked as `required` in the resulting JSON schema. This behavior is inconsistent with the expectation that fields with default values should be optional.\r\nWe always use (or at least should always) use `Default` and `Decode` when using schemas which ensures that properties with `default` will be populated.\r\nFew options available:\r\n- use `Optional` but very tedious because it would add `undefined` to all the types\r\n- use `{ required: false }` would be better but need to change all the types from our current schemas\r\n- use a specific reviver when dumpling the JSON\r\nLast one seems riskier but makes more sense because it would require no change from the plugins.","url":"https://github.com/ubiquity-os/action-deploy-plugin/issues/7","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.6,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":1,"words":{"wordCount":115,"wordValue":0.1,"result":2.52},"readability":{"fleschKincaid":52.59288043478263,"syllables":170,"sentences":4,"score":0.9259288043478263},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 9.6 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>6</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.6</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/action-deploy-plugin/issues/7\" target=\"_blank\" rel=\"noopener\">When generating a JSON schema from a TypeBox schema in TypeScrip&hellip;</a></h6></td><td><details><summary>2.82</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 115&#13;  wordValue: 0.1&#13;  result: 2.52&#13;</pre></details></td><td>1</td><td>1</td><td>3.6</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_41.json","json":{"Keyrxng":{"userId":106303466,"total":30.357,"task":{"reward":25,"multiplier":1},"comments":[{"id":2431908226,"content":"The package is not error free when it is used in other codebases because of an issue with main entry of the `package.json`","url":"https://github.com/ubiquity-os/permit-generation/issues/41","commentType":"ISSUE_SPECIFICATION","score":{"reward":2,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":69.14136363636365,"syllables":30,"sentences":1,"score":0.9085863636363635},"multiplier":1,"relevance":1}},{"id":1989164271,"content":"Resolves https://github.com/ubiquibot/permit-generation/issues/41\r\nThis does prevent the usage of `../core/` or `../types/` but seeing as the main entry was `core` which includes everything anyway and was the previous default it seems like this is irrelevant?\r\nQA:\r\n![image](https://github.com/user-attachments/assets/f52bcdfa-cc7b-470c-af07-f1149fca35d0)","url":"https://github.com/ubiquity-os/permit-generation/pull/42","commentType":"PULL_SPECIFICATION","score":{"reward":3.357,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":52.640000000000015,"syllables":65,"sentences":3,"score":0.9264000000000001},"multiplier":1,"relevance":0.9}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 30.357 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>3.357</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/41\" target=\"_blank\" rel=\"noopener\">The package is not error free when it is used in other codebases&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>1</td><td>1</td><td>2</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/42\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquibot/permit-generation/issues/4&hellip;</a></h6></td><td><details><summary>2.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.9</td><td>1</td><td>3.357</td></tr></tbody></table></details>"},"gitcoindev":{"total":0.245,"userId":88761781,"comments":[{"id":2201745877,"content":"Setting up imports correctly can be tricky, thank you for fixing this.","url":"https://github.com/ubiquity-os/permit-generation/pull/42#pullrequestreview-2201745877","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.165,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":67.75500000000001,"syllables":18,"sentences":1,"score":0.9224499999999999},"multiplier":0.25,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2201745877,"effect":{"addition":4,"deletion":4},"reward":0.08,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/42"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.245 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.08</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.165</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/42\" target=\"_blank\" rel=\"noopener\">#42</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+4 -4</td><td>1</td><td>0.08</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/42#pullrequestreview-2201745877\" target=\"_blank\" rel=\"noopener\">Setting up imports correctly can be tricky, thank you for fixing&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.165</td></tr></tbody></table></details>"},"gentlementlegen":{"total":1.431,"userId":9807008,"comments":[{"id":2252761735,"content":"Code looks fine, will test with a fresh project and approve if there is not issue.","url":"https://github.com/ubiquity-os/permit-generation/pull/42#issuecomment-2252761735","commentType":"PULL_COLLABORATOR","score":{"reward":1.078,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":90.13250000000001,"syllables":19,"sentences":1,"score":0.6986749999999999},"multiplier":1,"relevance":0.7}},{"id":2253774857,"content":"@Keyrxng It should be after we merge `development` into `main`.","url":"https://github.com/ubiquity-os/permit-generation/pull/42#issuecomment-2253774857","commentType":"PULL_COLLABORATOR","score":{"reward":0.273,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2201853135,"effect":{"addition":4,"deletion":4},"reward":0.08,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/42"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.431 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.08</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>1.351</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/42\" target=\"_blank\" rel=\"noopener\">#42</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+4 -4</td><td>1</td><td>0.08</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/42#issuecomment-2252761735\" target=\"_blank\" rel=\"noopener\">Code looks fine, will test with a fresh project and approve if t&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.078</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/42#issuecomment-2253774857\" target=\"_blank\" rel=\"noopener\">@Keyrxng It should be after we merge &#96;development&#96; into &hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.273</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_27.json","json":{"0x4007":{"userId":4975670,"total":51.12,"task":{"reward":50,"multiplier":1},"comments":[{"id":2170800234,"content":"Outdated boilerplate code here so just need to update it.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/27","commentType":"ISSUE_SPECIFICATION","score":{"reward":1.12,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":78.24500000000002,"syllables":14,"sentences":1,"score":0.8175499999999998},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 51.12 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>1.12</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/27\" target=\"_blank\" rel=\"noopener\">Outdated boilerplate code here so just need to update it.</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>1</td><td>1</td><td>1.12</td></tr></tbody></table></details>"},"gentlementlegen":{"total":22.714,"userId":9807008,"comments":[{"id":1980537281,"content":"@pavlovcik Since there is no UI it makes sense to remove Cypress here as it would not be much of a use. Any reason to use `bun` instead of `yarn` though?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/28#issuecomment-1980537281","commentType":"PULL_COLLABORATOR","score":{"reward":3.136,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":90.01405172413794,"syllables":35,"sentences":2,"score":0.6998594827586205},"multiplier":1,"relevance":0.7}},{"id":1980628956,"content":"@pavlovcik All right, never tried myself. The downside is that it is very limited and experimental on Windows, so actually all the logs and assertions make it slower than Yarn. I'll keep using yarn locally and not push the `lock` file 😄","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/28#issuecomment-1980628956","commentType":"PULL_COLLABORATOR","score":{"reward":1.698,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":65.03162601626018,"syllables":62,"sentences":3,"score":0.9496837398373983},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":1919448595,"effect":{"addition":765,"deletion":129},"reward":17.88,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/28"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 22.714 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>17.88</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>4.834</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/28\" target=\"_blank\" rel=\"noopener\">#28</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+765 -129</td><td>2</td><td>17.88</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/28#issuecomment-1980537281\" target=\"_blank\" rel=\"noopener\">@pavlovcik Since there is no UI it makes sense to remove Cypress&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.7</td><td>2</td><td>3.136</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/28#issuecomment-1980628956\" target=\"_blank\" rel=\"noopener\">@pavlovcik All right, never tried myself. The downside is that i&hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.3</td><td>2</td><td>1.698</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_58.json","json":{"gentlementlegen":{"userId":9807008,"total":200.965,"task":{"reward":200,"multiplier":1},"comments":[{"id":2177934485,"content":"To consider for a better use of the `/help` command: https://github.com/ubiquity/ubiquibot-kernel/pull/56\r\n---\r\nLet's have a manifest that will be responsible to describe the command, give examples and so on, as described in [this comment](https://github.com/ubiquity/ubiquibot-kernel/pull/56#issuecomment-2177970258). I will update the time accordingly, because I think it's a long task since every plugin has to be updated as well.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58#issuecomment-2177934485","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.896,"formatting":{"content":{"p":{"score":0,"elementCount":2},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":55,"wordValue":0.1,"result":2.46},"readability":{"fleschKincaid":57.948571428571455,"syllables":95,"sentences":3,"score":0.9794857142857145},"multiplier":0.25,"relevance":0.8}},{"id":2216507228,"content":"Well @0x4007 I think 1 day is reasonable 😄","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58#issuecomment-2216507228","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.069,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":0.25,"relevance":0.3}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 200.965 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>200</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>0.965</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58#issuecomment-2177934485\" target=\"_blank\" rel=\"noopener\">To consider for a better use of the &#96;/help&#96; command: htt&hellip;</a></h6></td><td><details><summary>3.46</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 55&#13;  wordValue: 0.1&#13;  result: 2.46&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.896</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58#issuecomment-2216507228\" target=\"_blank\" rel=\"noopener\">Well @0x4007 I think 1 day is reasonable 😄</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.069</td></tr></tbody></table></details>"},"0x4007":{"total":12.698,"userId":4975670,"comments":[{"id":2177143722,"content":"@gentlementlegen please set time label.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58#issuecomment-2177143722","commentType":"ISSUE_AUTHOR","score":{"reward":0.065,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":32.56000000000003,"syllables":10,"sentences":1,"score":0.7256000000000004},"multiplier":1,"relevance":0.1}},{"id":2232131613,"content":"V2 still missing stuff for my rewards. Also if 0 it shouldn't render anything for me. Because it did I think that's a clear symptom of a bug.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58#issuecomment-2232131613","commentType":"ISSUE_AUTHOR","score":{"reward":0.228,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":89.52500000000002,"syllables":38,"sentences":3,"score":0.7047499999999998},"multiplier":1,"relevance":0.1}},{"id":2360801672,"content":"We could consider supporting an array of `command` instead of just one element.\r\n_Originally posted by @gentlementlegen in https://github.com/Meniole/ubiquibot-kernel/issues/2#issuecomment-2176990975_","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.8,"formatting":{"content":{"p":{"score":0,"elementCount":2},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":28.50000000000003,"syllables":54,"sentences":3,"score":0.6850000000000003},"multiplier":1,"relevance":1}},{"id":1671631192,"content":"We should force plugin developers to include a manifest. Perhaps a plugin can \"fail to install\" without it? This is based on chrome extension behavior. \nWhat do you think in the context of implementation complexity?\nLastly, it would be very interesting to have a schema defined for text editors of our manifests, a bit like how the linters do it with their configs. \n$schema property with a url as its value.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1671631192","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,78 @@\n+import { getConfig } from \"../utils/config\";\n+import { GithubPlugin, isGithubPlugin } from \"../types/plugin-configuration\";\n+import { GitHubContext } from \"../github-context\";\n+\n+export interface Command {\n+  command: string;\n+  description: string;\n+  example: string;\n+}\n+\n+export interface Manifest {\n+  name: string;\n+  description: string;\n+  commands: Command[];\n+}\n+\n+export async function postHelpCommand(context: GitHubContext<\"issue_comment.created\">) {\n+  const comments = [\n+    \"### Available Commands\\n\\n\",\n+    \"| Command | Description | Example |\",\n+    \"|---|---|---|\",\n+    \"| `/help` | List all available commands. | `/help` |\",\n+  ];\n+  const commands: string[] = [];\n+  const configuration = await getConfig(context);\n+  for (const pluginArray of Object.values(configuration.plugins)) {\n+    for (const pluginElement of pluginArray) {\n+      const { plugin } = pluginElement.uses[0];\n+      const manifest = await (isGithubPlugin(plugin) ? fetchActionManifest(context, plugin) : fetchWorkerManifest(plugin));\n+      if (manifest?.commands) {\n+        for (const command of manifest.commands) {\n+          commands.push(`| \\`${getContent(command.command)}\\` | ${getContent(command.description)} | \\`${getContent(command.example)}\\` |`);\n+        }\n+      }\n+    }\n+  }\n+  await context.octokit.issues.createComment({\n+    body: comments.concat(commands.sort()).join(\"\\n\"),\n+    issue_number: context.payload.issue.number,\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+  });\n+}\n+\n+/**\n+ * Ensures that passed content does not break MD display within the table.\n+ */\n+function getContent(content: string | undefined) {\n+  return content ? content.replace(\"|\", \"\\\\|\") : \"-\";\n+}\n+\n+async function fetchActionManifest(context: GitHubContext<\"issue_comment.created\">, { owner, repo }: GithubPlugin): Promise<Manifest | null> {\n+  try {\n+    const { data } = await context.octokit.repos.getContent({\n+      owner,\n+      repo,\n+      path: \"manifest.json\",\n+    });\n+    if (\"content\" in data) {\n+      const content = Buffer.from(data.content, \"base64\").toString();\n+      return JSON.parse(content);\n+    }\n+  } catch (e) {\n+    console.warn(`Could not find a manifest for ${owner}/${repo}`);","score":{"reward":2.856,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":71,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":62.5621948356808,"syllables":111,"sentences":6,"score":0.974378051643192},"multiplier":1,"relevance":0.85}},{"id":1671996935,"content":"Another idea is to dynamically generate it with a small script inside of the plugin template? \nPerhaps if manifest.json is requested but doesn't exist, it can serve up one based on details described in package.json?\n--- \nI think it's a good idea to follow the existing web standards for the manifest schema.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1671996935","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,78 @@\n+import { getConfig } from \"../utils/config\";\n+import { GithubPlugin, isGithubPlugin } from \"../types/plugin-configuration\";\n+import { GitHubContext } from \"../github-context\";\n+\n+export interface Command {\n+  command: string;\n+  description: string;\n+  example: string;\n+}\n+\n+export interface Manifest {\n+  name: string;\n+  description: string;\n+  commands: Command[];\n+}\n+\n+export async function postHelpCommand(context: GitHubContext<\"issue_comment.created\">) {\n+  const comments = [\n+    \"### Available Commands\\n\\n\",\n+    \"| Command | Description | Example |\",\n+    \"|---|---|---|\",\n+    \"| `/help` | List all available commands. | `/help` |\",\n+  ];\n+  const commands: string[] = [];\n+  const configuration = await getConfig(context);\n+  for (const pluginArray of Object.values(configuration.plugins)) {\n+    for (const pluginElement of pluginArray) {\n+      const { plugin } = pluginElement.uses[0];\n+      const manifest = await (isGithubPlugin(plugin) ? fetchActionManifest(context, plugin) : fetchWorkerManifest(plugin));\n+      if (manifest?.commands) {\n+        for (const command of manifest.commands) {\n+          commands.push(`| \\`${getContent(command.command)}\\` | ${getContent(command.description)} | \\`${getContent(command.example)}\\` |`);\n+        }\n+      }\n+    }\n+  }\n+  await context.octokit.issues.createComment({\n+    body: comments.concat(commands.sort()).join(\"\\n\"),\n+    issue_number: context.payload.issue.number,\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+  });\n+}\n+\n+/**\n+ * Ensures that passed content does not break MD display within the table.\n+ */\n+function getContent(content: string | undefined) {\n+  return content ? content.replace(\"|\", \"\\\\|\") : \"-\";\n+}\n+\n+async function fetchActionManifest(context: GitHubContext<\"issue_comment.created\">, { owner, repo }: GithubPlugin): Promise<Manifest | null> {\n+  try {\n+    const { data } = await context.octokit.repos.getContent({\n+      owner,\n+      repo,\n+      path: \"manifest.json\",\n+    });\n+    if (\"content\" in data) {\n+      const content = Buffer.from(data.content, \"base64\").toString();\n+      return JSON.parse(content);\n+    }\n+  } catch (e) {\n+    console.warn(`Could not find a manifest for ${owner}/${repo}`);","score":{"reward":3.087,"formatting":{"content":{"h2":{"score":1,"elementCount":1},"p":{"score":0,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":55,"wordValue":0.1,"result":2.46},"readability":{"fleschKincaid":68.00090909090912,"syllables":83,"sentences":5,"score":0.9199909090909089},"multiplier":1,"relevance":0.7}},{"id":1676566535,"content":"Not [manifest.json standard](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json). Check Mozilla developer network for it","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1676566535","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,17 @@\n+import { type Static, Type as T } from \"@sinclair/typebox\";\n+import { StandardValidator } from \"typebox-validators\";\n+\n+export const commandSchema = T.Object({\n+  description: T.String({ minLength: 1 }),\n+  \"ubiquity:example\": T.String({ minLength: 1 }),","score":{"reward":1.422,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":42.7116666666667,"syllables":19,"sentences":3,"score":0.827116666666667},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2168054061,"effect":{"addition":81,"deletion":30},"reward":1.11,"priority":1},{"reviewId":2168643452,"effect":{"addition":46,"deletion":5},"reward":0.51,"priority":1},{"reviewId":2175917657,"effect":{"addition":43,"deletion":19},"reward":0.62,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 12.698 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>2.24</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.8</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>0.293</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>7.365</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71\" target=\"_blank\" rel=\"noopener\">#71</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+81 -30</td><td>1</td><td>1.11</td></tr><tr><td>+46 -5</td><td>1</td><td>0.51</td></tr><tr><td>+43 -19</td><td>1</td><td>0.62</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58\" target=\"_blank\" rel=\"noopener\">We could consider supporting an array of &#96;command&#96; inste&hellip;</a></h6></td><td><details><summary>2.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>1</td><td>1</td><td>2.8</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58#issuecomment-2177143722\" target=\"_blank\" rel=\"noopener\">@gentlementlegen please set time label.</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.065</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/58#issuecomment-2232131613\" target=\"_blank\" rel=\"noopener\">V2 still missing stuff for my rewards. Also if 0 it shouldn't re&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.228</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1671631192\" target=\"_blank\" rel=\"noopener\">We should force plugin developers to include a manifest. Perhaps&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 71&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.85</td><td>1</td><td>2.856</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1671996935\" target=\"_blank\" rel=\"noopener\">Another idea is to dynamically generate it with a small script i&hellip;</a></h6></td><td><details><summary>3.46</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 55&#13;  wordValue: 0.1&#13;  result: 2.46&#13;</pre></details></td><td>0.7</td><td>1</td><td>3.087</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1676566535\" target=\"_blank\" rel=\"noopener\">Not [manifest.json standard](https://developer.mozilla.org/en-US&hellip;</a></h6></td><td><details><summary>1.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.422</td></tr></tbody></table></details>"},"rndquu":{"total":9.209,"userId":119500907,"comments":[{"id":2179570035,"content":"Approving this with failing tests because, as far as I understand, the tests are fixed in https://github.com/ubiquity/ubiquibot-kernel/pull/74","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#pullrequestreview-2179570035","commentType":"PULL_COLLABORATOR","score":{"reward":2.36,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":60.70500000000001,"syllables":38,"sentences":2,"score":0.9929499999999999},"multiplier":1,"relevance":0.8}},{"id":1678919352,"content":"@gentlementlegen So what package manager should be used for the kernel, `bun` or `yarn`?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1678919352","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -94,6 +98,5 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  },\n-  \"packageManager\": \"bun@1.1.15\"","score":{"reward":0.665,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":53.655,"syllables":20,"sentences":1,"score":0.93655},"multiplier":1,"relevance":0.5}},{"id":2230251402,"content":"@gentlementlegen Could you update readme with an example for `manifest.json` and 2 use cases where it must be stored (root server folder for worker and root github repository folder for \"github action\" plugins)?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#issuecomment-2230251402","commentType":"PULL_COLLABORATOR","score":{"reward":1.694,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":39.523750000000035,"syllables":51,"sentences":1,"score":0.7952375000000004},"multiplier":1,"relevance":0.7}},{"id":2230316191,"content":"Oh, the example exists [here](https://github.com/ubiquibot/plugin-template/pull/12/files#diff-b335630551682c19a781afebcf4d07bf978fb1f8ac04c6bf87428ed5106870f5R21) so I think updating the kernel's readme with manifest example is not really necessary","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#issuecomment-2230316191","commentType":"PULL_COLLABORATOR","score":{"reward":1.86,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":42.71500000000003,"syllables":34,"sentences":1,"score":0.8271500000000003},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2179473294,"effect":{"addition":198,"deletion":65},"reward":2.63,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 9.209 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>2.63</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>6.579</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71\" target=\"_blank\" rel=\"noopener\">#71</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+198 -65</td><td>1</td><td>2.63</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#pullrequestreview-2179570035\" target=\"_blank\" rel=\"noopener\">Approving this with failing tests because, as far as I understan&hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.36</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1678919352\" target=\"_blank\" rel=\"noopener\">@gentlementlegen So what package manager should be used for the &hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.665</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#issuecomment-2230251402\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Could you update readme with an example for &#9&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.694</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#issuecomment-2230316191\" target=\"_blank\" rel=\"noopener\">Oh, the example exists [here](https://github.com/ubiquibot/plugi&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.86</td></tr></tbody></table></details>"},"whilefoo":{"total":6.884,"userId":139262667,"comments":[{"id":1676171467,"content":"why does example need a prefix?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1676171467","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,17 @@\n+import { type Static, Type as T } from \"@sinclair/typebox\";\n+import { StandardValidator } from \"typebox-validators\";\n+\n+export const commandSchema = T.Object({\n+  description: T.String({ minLength: 1 }),\n+  \"ubiquity:example\": T.String({ minLength: 1 }),","score":{"reward":0.539,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.7}},{"id":1676173482,"content":"isn't `commands` an object like the schema in `manifest.ts`?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1676173482","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -24,6 +25,26 @@ afterAll(() => {\n });\n \n describe(\"Event related tests\", () => {\n+  beforeEach(() => {\n+    server.use(\n+      http.get(\"https://plugin-a.internal/manifest.json\", () =>\n+        HttpResponse.json({\n+          commands: [","score":{"reward":0.728,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.8}},{"id":2225930159,"content":"I think it's not a good idea to run tests with different runtime than running the bot. Anyway as part of #64 I had to switch to node/jest because `crypto` is not compatible by Bun","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#issuecomment-2225930159","commentType":"PULL_COLLABORATOR","score":{"reward":2.322,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":78.11500000000001,"syllables":47,"sentences":2,"score":0.8188499999999999},"multiplier":1,"relevance":0.9}},{"id":2226904021,"content":"It's only being used as a package manager","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#issuecomment-2226904021","commentType":"PULL_COLLABORATOR","score":{"reward":0.525,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.50000000000003,"syllables":13,"sentences":1,"score":0.8449999999999998},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2175293238,"effect":{"addition":152,"deletion":36},"reward":1.88,"priority":1},{"reviewId":2180731305,"effect":{"addition":53,"deletion":36},"reward":0.89,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 6.884 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>2.77</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>4.114</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71\" target=\"_blank\" rel=\"noopener\">#71</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+152 -36</td><td>1</td><td>1.88</td></tr><tr><td>+53 -36</td><td>1</td><td>0.89</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1676171467\" target=\"_blank\" rel=\"noopener\">why does example need a prefix?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.539</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#discussion_r1676173482\" target=\"_blank\" rel=\"noopener\">isn't &#96;commands&#96; an object like the schema in &#96;manif&hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.728</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#issuecomment-2225930159\" target=\"_blank\" rel=\"noopener\">I think it's not a good idea to run tests with different runtime&hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.322</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/71#issuecomment-2226904021\" target=\"_blank\" rel=\"noopener\">It's only being used as a package manager</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.525</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-logger_19.json","json":{"gentlementlegen":{"userId":9807008,"total":28.8,"task":{"reward":25,"multiplier":1},"comments":[{"id":2388016804,"content":"The package is currently only compiled for ESM projects, which implies adding the `\"type\": \"module\"`. This usually breaks projects that are using older techs requiring `\"type\": \"commonjs\"`, which is broadly used within our organization and the packages we include. It would be better to offer both solutions, as this package doesn't require to be in ESM to work properly.\r\nTasks to be carried out:\r\n- bundle for both ESM and CommonJs\r\n- pack them properly with input entries\r\n- make sure it works with `module` and `commonjs`","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.8,"formatting":{"content":{"p":{"score":0,"elementCount":5},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":1,"words":{"wordCount":79,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":61.49507911392409,"syllables":117,"sentences":4,"score":0.9850492088607591},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 28.8 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.8</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19\" target=\"_blank\" rel=\"noopener\">The package is currently only compiled for ESM projects, which i&hellip;</a></h6></td><td><details><summary>2.93</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 79&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>3.8</td></tr></tbody></table></details>"},"0x4007":{"total":0.78,"userId":4975670,"comments":[{"id":2205494316,"content":"I think setting permissions is broken last time we tried. Can make you billing manager though. Will need to try when back on computer later.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19#issuecomment-2205494316","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":79.93666666666668,"syllables":35,"sentences":3,"score":0.8006333333333332},"multiplier":1,"relevance":0}},{"id":2208136836,"content":"Why is my comment relevance 0 on v2? I expect it to be low but not 0","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19#issuecomment-2208136836","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.158,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":93.70161764705884,"syllables":21,"sentences":2,"score":0.6629838235294117},"multiplier":1,"relevance":0.1}},{"id":2229706280,"content":"Relevance made it `0` but ChatGPT I wouldn't expect to return a perfect `0`","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19#issuecomment-2229706280","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.138,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":76.50153846153849,"syllables":18,"sentences":1,"score":0.8349846153846151},"multiplier":1,"relevance":0.1}},{"id":2230039037,"content":"In my implementation I made it default to 1 in case of error. Seems unfair to the contributor to not get any credit if there's a bug with the software.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19#issuecomment-2230039037","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.484,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":73.75411290322583,"syllables":43,"sentences":2,"score":0.8624588709677417},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/20"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.78 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>4</td><td>0.78</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19#issuecomment-2205494316\" target=\"_blank\" rel=\"noopener\">I think setting permissions is broken last time we tried. Can ma&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0</td><td>1</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19#issuecomment-2208136836\" target=\"_blank\" rel=\"noopener\">Why is my comment relevance 0 on v2? I expect it to be low but n&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.158</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19#issuecomment-2229706280\" target=\"_blank\" rel=\"noopener\">Relevance made it &#96;0&#96; but ChatGPT I wouldn't expect to r&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.138</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/19#issuecomment-2230039037\" target=\"_blank\" rel=\"noopener\">In my implementation I made it default to 1 in case of error. Se&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.484</td></tr></tbody></table></details>"},"Keyrxng":{"total":0.536,"userId":106303466,"comments":[{"id":2156947963,"content":"Confirmed previously it produced errors and now loads with none, I built each with `tsc` then ran with `node x.ts/tsx` in case `tsx` was doing something under the hood, all good.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/20#pullrequestreview-2156947963","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.456,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":66.63000000000002,"syllables":36,"sentences":1,"score":0.9336999999999998},"multiplier":0.25,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2156947963,"effect":{"addition":5,"deletion":3},"reward":0.08,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/20"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.536 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.08</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.456</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/20\" target=\"_blank\" rel=\"noopener\">#20</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+5 -3</td><td>1</td><td>0.08</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/20#pullrequestreview-2156947963\" target=\"_blank\" rel=\"noopener\">Confirmed previously it produced errors and now loads with none,&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.456</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_83.json","json":{"0x4007":{"userId":4975670,"total":53.687,"task":{"reward":50,"multiplier":1},"comments":[{"id":2292980436,"content":"This is tricky for branding. When lowercase perhaps we should hyphenate i.e. `ubiquity-os-config.yml` \r\n<img width=\"954\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d1d5cf39-1f8c-41d5-8960-b2cb03e20506\">","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/83#issuecomment-2292980436","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.5,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":79.48500000000001,"syllables":43,"sentences":5,"score":0.8051499999999998},"multiplier":0.25,"relevance":1}},{"id":2295156464,"content":"For lowercase yes. I think with capitalization UbiquityOS looks best. \nSo for file names and apparently GitHub app name, lowercase.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/83#issuecomment-2295156464","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.92,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":43.55833333333334,"syllables":37,"sentences":3,"score":0.8355833333333333},"multiplier":0.25,"relevance":1}},{"id":2117696900,"content":"Resolves #83\r\nDid a find and replace and carefully reviewed the changes. I think this should be good to go.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124","commentType":"PULL_SPECIFICATION","score":{"reward":1.267,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":86.70500000000001,"syllables":26,"sentences":2,"score":0.7329499999999999},"multiplier":1,"relevance":0.7}},{"id":1795443205,"content":"I asked rndquu to migrate this","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124#discussion_r1795443205","commentType":"PULL_AUTHOR","diffHunk":"@@ -61,7 +61,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"^1.3.1\",\n+    \"@ubiquity-dao/ubiquity-os-logger\": \"^1.3.1\",","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0,"result":0},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":0,"relevance":0.8}},{"id":1795444480,"content":"Was a little confused about this. Will review more closely to be sure.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124#discussion_r1795444480","commentType":"PULL_AUTHOR","diffHunk":"@@ -5,9 +5,9 @@ import { expressionRegex } from \"../types/plugin\";\n import { configSchema, configSchemaValidator, PluginConfiguration } from \"../types/plugin-configuration\";\n import { getManifest } from \"./plugins\";\n \n-export const CONFIG_FULL_PATH = \".github/.ubiquibot-config.yml\";\n-export const DEV_CONFIG_FULL_PATH = \".github/.ubiquibot-config.dev.yml\";\n-export const CONFIG_ORG_REPO = \"ubiquibot-config\";\n+export const CONFIG_FULL_PATH = \".github/.ubiquity-os.config.yml\";\n+export const DEV_CONFIG_FULL_PATH = \".github/.ubiquity-os.config.dev.yml\";\n+export const CONFIG_ORG_REPO = \".ubiquity-os\";","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":13,"wordValue":0,"result":0},"readability":{"fleschKincaid":76.59134615384617,"syllables":19,"sentences":2,"score":0.8340865384615382},"multiplier":0,"relevance":0.9}},{"id":1795446729,"content":"I'm assuming mock and tests aren't so important for the links to be valid.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124#discussion_r1795446729","commentType":"PULL_AUTHOR","diffHunk":"@@ -110,75 +110,75 @@\n       \"id\": 791646143,\n       \"node_id\": \"R_kgDOLy-Pvw\",\n       \"name\": \"bot\",\n-      \"full_name\": \"ubiquibot/bot\",\n+      \"full_name\": \"ubiquity-os/bot\",\n       \"private\": false,\n       \"owner\": {\n-        \"login\": \"ubiquibot\",\n+        \"login\": \"ubiquity-os\",\n         \"id\": 159901852,\n         \"node_id\": \"O_kgDOCYfonA\",\n         \"avatar_url\": \"https://avatars.githubusercontent.com/u/159901852?v=4\",\n         \"gravatar_id\": \"\",\n-        \"url\": \"https://api.github.com/users/ubiquibot\",\n-        \"html_url\": \"https://github.com/ubiquibot\",\n-        \"followers_url\": \"https://api.github.com/users/ubiquibot/followers\",\n-        \"following_url\": \"https://api.github.com/users/ubiquibot/following{/other_user}\",\n-        \"gists_url\": \"https://api.github.com/users/ubiquibot/gists{/gist_id}\",\n-        \"starred_url\": \"https://api.github.com/users/ubiquibot/starred{/owner}{/repo}\",\n-        \"subscriptions_url\": \"https://api.github.com/users/ubiquibot/subscriptions\",\n-        \"organizations_url\": \"https://api.github.com/users/ubiquibot/orgs\",\n-        \"repos_url\": \"https://api.github.com/users/ubiquibot/repos\",\n-        \"events_url\": \"https://api.github.com/users/ubiquibot/events{/privacy}\",\n-        \"received_events_url\": \"https://api.github.com/users/ubiquibot/received_events\",\n+        \"url\": \"https://api.github.com/users/ubiquity-os\",\n+        \"html_url\": \"https://github.com/ubiquity-os\",\n+        \"followers_url\": \"https://api.github.com/users/ubiquity-os/followers\",\n+        \"following_url\": \"https://api.github.com/users/ubiquity-os/following{/other_user}\",\n+        \"gists_url\": \"https://api.github.com/users/ubiquity-os/gists{/gist_id}\",\n+        \"starred_url\": \"https://api.github.com/users/ubiquity-os/starred{/owner}{/repo}\",\n+        \"subscriptions_url\": \"https://api.github.com/users/ubiquity-os/subscriptions\",\n+        \"organizations_url\": \"https://api.github.com/users/ubiquity-os/orgs\",\n+        \"repos_url\": \"https://api.github.com/users/ubiquity-os/repos\",\n+        \"events_url\": \"https://api.github.com/users/ubiquity-os/events{/privacy}\",\n+        \"received_events_url\": \"https://api.github.com/users/ubiquity-os/received_events\",\n         \"type\": \"Organization\",\n         \"site_admin\": false\n       },\n-      \"html_url\": \"https://github.com/ubiquibot/bot\",\n+      \"html_url\": \"https://github.com/ubiquity-os/bot\",\n       \"description\": null,\n       \"fork\": false,\n-      \"url\": \"https://api.github.com/repos/ubiquibot/bot\",\n-      \"forks_url\": \"https://api.github.com/repos/ubiquibot/bot/forks\",\n-      \"keys_url\": \"https://api.github.com/repos/ubiquibot/bot/keys{/key_id}\",\n-      \"collaborators_url\": \"https://api.github.com/repos/ubiquibot/bot/collaborators{/collaborator}\",\n-      \"teams_url\": \"https://api.github.com/repos/ubiquibot/bot/teams\",\n-      \"hooks_url\": \"https://api.github.com/repos/ubiquibot/bot/hooks\",\n-      \"issue_events_url\": \"https://api.github.com/repos/ubiquibot/bot/issues/events{/number}\",\n-      \"events_url\": \"https://api.github.com/repos/ubiquibot/bot/events\",\n-      \"assignees_url\": \"https://api.github.com/repos/ubiquibot/bot/assignees{/user}\",\n-      \"branches_url\": \"https://api.github.com/repos/ubiquibot/bot/branches{/branch}\",\n-      \"tags_url\": \"https://api.github.com/repos/ubiquibot/bot/tags\",\n-      \"blobs_url\": \"https://api.github.com/repos/ubiquibot/bot/git/blobs{/sha}\",\n-      \"git_tags_url\": \"https://api.github.com/repos/ubiquibot/bot/git/tags{/sha}\",\n-      \"git_refs_url\": \"https://api.github.com/repos/ubiquibot/bot/git/refs{/sha}\",\n-      \"trees_url\": \"https://api.github.com/repos/ubiquibot/bot/git/trees{/sha}\",\n-      \"statuses_url\": \"https://api.github.com/repos/ubiquibot/bot/statuses/{sha}\",\n-      \"languages_url\": \"https://api.github.com/repos/ubiquibot/bot/languages\",\n-      \"stargazers_url\": \"https://api.github.com/repos/ubiquibot/bot/stargazers\",\n-      \"contributors_url\": \"https://api.github.com/repos/ubiquibot/bot/contributors\",\n-      \"subscribers_url\": \"https://api.github.com/repos/ubiquibot/bot/subscribers\",\n-      \"subscription_url\": \"https://api.github.com/repos/ubiquibot/bot/subscription\",\n-      \"commits_url\": \"https://api.github.com/repos/ubiquibot/bot/commits{/sha}\",\n-      \"git_commits_url\": \"https://api.github.com/repos/ubiquibot/bot/git/commits{/sha}\",\n-      \"comments_url\": \"https://api.github.com/repos/ubiquibot/bot/comments{/number}\",\n-      \"issue_comment_url\": \"https://api.github.com/repos/ubiquibot/bot/issues/comments{/number}\",\n-      \"contents_url\": \"https://api.github.com/repos/ubiquibot/bot/contents/{+path}\",\n-      \"compare_url\": \"https://api.github.com/repos/ubiquibot/bot/compare/{base}...{head}\",\n-      \"merges_url\": \"https://api.github.com/repos/ubiquibot/bot/merges\",\n-      \"archive_url\": \"https://api.github.com/repos/ubiquibot/bot/{archive_format}{/ref}\",\n-      \"downloads_url\": \"https://api.github.com/repos/ubiquibot/bot/downloads\",\n-      \"issues_url\": \"https://api.github.com/repos/ubiquibot/bot/issues{/number}\",\n-      \"pulls_url\": \"https://api.github.com/repos/ubiquibot/bot/pulls{/number}\",\n-      \"milestones_url\": \"https://api.github.com/repos/ubiquibot/bot/milestones{/number}\",\n-      \"notifications_url\": \"https://api.github.com/repos/ubiquibot/bot/notifications{?since,all,participating}\",\n-      \"labels_url\": \"https://api.github.com/repos/ubiquibot/bot/labels{/name}\",\n-      \"releases_url\": \"https://api.github.com/repos/ubiquibot/bot/releases{/id}\",\n-      \"deployments_url\": \"https://api.github.com/repos/ubiquibot/bot/deployments\",\n+      \"url\": \"https://api.github.com/repos/ubiquity-os/bot\",\n+      \"forks_url\": \"https://api.github.com/repos/ubiquity-os/bot/forks\",\n+      \"keys_url\": \"https://api.github.com/repos/ubiquity-os/bot/keys{/key_id}\",\n+      \"collaborators_url\": \"https://api.github.com/repos/ubiquity-os/bot/collaborators{/collaborator}\",\n+      \"teams_url\": \"https://api.github.com/repos/ubiquity-os/bot/teams\",\n+      \"hooks_url\": \"https://api.github.com/repos/ubiquity-os/bot/hooks\",\n+      \"issue_events_url\": \"https://api.github.com/repos/ubiquity-os/bot/issues/events{/number}\",\n+      \"events_url\": \"https://api.github.com/repos/ubiquity-os/bot/events\",\n+      \"assignees_url\": \"https://api.github.com/repos/ubiquity-os/bot/assignees{/user}\",\n+      \"branches_url\": \"https://api.github.com/repos/ubiquity-os/bot/branches{/branch}\",\n+      \"tags_url\": \"https://api.github.com/repos/ubiquity-os/bot/tags\",\n+      \"blobs_url\": \"https://api.github.com/repos/ubiquity-os/bot/git/blobs{/sha}\",\n+      \"git_tags_url\": \"https://api.github.com/repos/ubiquity-os/bot/git/tags{/sha}\",\n+      \"git_refs_url\": \"https://api.github.com/repos/ubiquity-os/bot/git/refs{/sha}\",\n+      \"trees_url\": \"https://api.github.com/repos/ubiquity-os/bot/git/trees{/sha}\",\n+      \"statuses_url\": \"https://api.github.com/repos/ubiquity-os/bot/statuses/{sha}\",\n+      \"languages_url\": \"https://api.github.com/repos/ubiquity-os/bot/languages\",\n+      \"stargazers_url\": \"https://api.github.com/repos/ubiquity-os/bot/stargazers\",\n+      \"contributors_url\": \"https://api.github.com/repos/ubiquity-os/bot/contributors\",\n+      \"subscribers_url\": \"https://api.github.com/repos/ubiquity-os/bot/subscribers\",\n+      \"subscription_url\": \"https://api.github.com/repos/ubiquity-os/bot/subscription\",\n+      \"commits_url\": \"https://api.github.com/repos/ubiquity-os/bot/commits{/sha}\",\n+      \"git_commits_url\": \"https://api.github.com/repos/ubiquity-os/bot/git/commits{/sha}\",\n+      \"comments_url\": \"https://api.github.com/repos/ubiquity-os/bot/comments{/number}\",\n+      \"issue_comment_url\": \"https://api.github.com/repos/ubiquity-os/bot/issues/comments{/number}\",\n+      \"contents_url\": \"https://api.github.com/repos/ubiquity-os/bot/contents/{+path}\",\n+      \"compare_url\": \"https://api.github.com/repos/ubiquity-os/bot/compare/{base}...{head}\",\n+      \"merges_url\": \"https://api.github.com/repos/ubiquity-os/bot/merges\",\n+      \"archive_url\": \"https://api.github.com/repos/ubiquity-os/bot/{archive_format}{/ref}\",\n+      \"downloads_url\": \"https://api.github.com/repos/ubiquity-os/bot/downloads\",\n+      \"issues_url\": \"https://api.github.com/repos/ubiquity-os/bot/issues{/number}\",\n+      \"pulls_url\": \"https://api.github.com/repos/ubiquity-os/bot/pulls{/number}\",\n+      \"milestones_url\": \"https://api.github.com/repos/ubiquity-os/bot/milestones{/number}\",\n+      \"notifications_url\": \"https://api.github.com/repos/ubiquity-os/bot/notifications{?since,all,participating}\",\n+      \"labels_url\": \"https://api.github.com/repos/ubiquity-os/bot/labels{/name}\",\n+      \"releases_url\": \"https://api.github.com/repos/ubiquity-os/bot/releases{/id}\",\n+      \"deployments_url\": \"https://api.github.com/repos/ubiquity-os/bot/deployments\",","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":16,"wordValue":0,"result":0},"readability":{"fleschKincaid":74.27000000000001,"syllables":22,"sentences":1,"score":0.8573},"multiplier":0,"relevance":0.6}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 53.687 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.42</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>1.267</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/83#issuecomment-2292980436\" target=\"_blank\" rel=\"noopener\">This is tricky for branding. When lowercase perhaps we should hy&hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>1</td><td>2</td><td>1.5</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/83#issuecomment-2295156464\" target=\"_blank\" rel=\"noopener\">For lowercase yes. I think with capitalization UbiquityOS looks &hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>1</td><td>2</td><td>0.92</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124\" target=\"_blank\" rel=\"noopener\">Resolves #83Did a find and replace and carefully reviewed the &hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.267</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124#discussion_r1795443205\" target=\"_blank\" rel=\"noopener\">I asked rndquu to migrate this</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124#discussion_r1795444480\" target=\"_blank\" rel=\"noopener\">Was a little confused about this. Will review more closely to be&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124#discussion_r1795446729\" target=\"_blank\" rel=\"noopener\">I'm assuming mock and tests aren't so important for the links to&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>2</td><td>0</td></tr></tbody></table></details>"},"gentlementlegen":{"total":13.95,"userId":9807008,"comments":[{"id":2295140970,"content":"Sure I can use an hyphen in the name. So `ubiquity-os` should be the official new name then?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/83#issuecomment-2295140970","commentType":"ISSUE_AUTHOR","score":{"reward":2.496,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":98.67808823529413,"syllables":20,"sentences":2,"score":0.6132191176470587},"multiplier":1,"relevance":0.8}},{"id":2463909408,"content":"`.github/.ubiquibot-config.yml` -> `.github/.ubiquity-os.config.yml`\r\nThis implied to rename the organization configs (Ubiquity, Ubiquibot), it also implies creating a configuration within the Org @UbiquityOS, and rename eventual overrides within repos. Also should rename the constants in the Kernel.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/83","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.31,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":15.760227272727292,"syllables":68,"sentences":2,"score":0.5576022727272729},"multiplier":1,"relevance":1}},{"id":1795476311,"content":"Doesn't seem to be published","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124#discussion_r1795476311","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -61,7 +61,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"^1.3.1\",\n+    \"@ubiquity-dao/ubiquity-os-logger\": \"^1.3.1\",","score":{"reward":1.264,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2360416740,"effect":{"addition":197,"deletion":197},"reward":7.88,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 13.95 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>7.88</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.31</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>2.496</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>1.264</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124\" target=\"_blank\" rel=\"noopener\">#124</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+197 -197</td><td>2</td><td>7.88</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/83\" target=\"_blank\" rel=\"noopener\">&#96;.github/.ubiquibot-config.yml&#96; -&gt; &#96;.github/.ubiq&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>1</td><td>1</td><td>2.31</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/83#issuecomment-2295140970\" target=\"_blank\" rel=\"noopener\">Sure I can use an hyphen in the name. So &#96;ubiquity-os&#96; s&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.496</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/124#discussion_r1795476311\" target=\"_blank\" rel=\"noopener\">Doesn't seem to be published</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.8</td><td>2</td><td>1.264</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-sdk_63.json","json":{"gentlementlegen":{"userId":9807008,"total":103.9,"task":{"reward":100,"multiplier":1},"comments":[{"id":2817070754,"content":"The SDK should be able to post to pull-request threads. The API is a bit different for these as it should directly use `pull` from the REST API.\nWhat happens right now:\n- if \"pull_request\" is present in the payload, try to post to the pull-request itself\n- if we wanted to post to the thread, we would need to use `octokit.rest.pulls.createReplyForReviewComment` or `createReviewComment`\n- same thing goes for updating the comment that needs a different API\n- maybe we could consider having an extra argument in the options to specify a pull-request comment ID","url":"https://github.com/ubiquity-os/plugin-sdk/issues/63","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.9,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":1,"words":{"wordCount":91,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":64.48622710622713,"syllables":120,"sentences":3,"score":0.9551377289377286},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 103.9 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>100</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.9</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/63\" target=\"_blank\" rel=\"noopener\">The SDK should be able to post to pull-request threads. The API &hellip;</a></h6></td><td><details><summary>3.03</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;  result: 0.4&#13;regex:&#13;  wordCount: 91&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>3.9</td></tr></tbody></table></details>"},"whilefoo":{"total":25.606,"userId":139262667,"comments":[{"id":2596680062,"content":"Otherwise it works fine:\r\nhttps://github.com/ubiquibot-whilefoo-testing/testing/issues/13\r\nhttps://github.com/ubiquibot-whilefoo-testing/testing/pull/10","url":"https://github.com/ubiquity-os/plugin-sdk/pull/65#pullrequestreview-2596680062","commentType":"PULL_COLLABORATOR","score":{"reward":1.216,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":2,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":41.72803030303032,"syllables":41,"sentences":3,"score":0.8172803030303032},"multiplier":1,"relevance":0.2}},{"id":1943486704,"content":"If I use `logger.ok(\"something\", { first: 1, second: 2 })`, the metadata I provided won't be in the comment metadata. Was this intended from the beginning?","url":"https://github.com/ubiquity-os/plugin-sdk/pull/65#discussion_r1943486704","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,117 +18,192 @@ export interface CommentOptions {\n   updateComment?: boolean;\n }\n \n+type PostedGithubComment =\n+  | RestEndpointMethodTypes[\"issues\"][\"updateComment\"][\"response\"][\"data\"]\n+  | RestEndpointMethodTypes[\"issues\"][\"createComment\"][\"response\"][\"data\"]\n+  | RestEndpointMethodTypes[\"pulls\"][\"createReplyForReviewComment\"][\"response\"][\"data\"];\n+\n type WithIssueNumber<T> = T & {\n   issueNumber: number;\n };\n \n-export type PostComment = {\n-  (\n-    context: Context,\n-    message: LogReturn | Error,\n-    options?: CommentOptions\n-  ): Promise<WithIssueNumber<\n-    RestEndpointMethodTypes[\"issues\"][\"updateComment\"][\"response\"][\"data\"] | RestEndpointMethodTypes[\"issues\"][\"createComment\"][\"response\"][\"data\"]\n-  > | null>;\n-  lastCommentId?: number;\n-};\n+interface IssueContext {\n+  issueNumber: number;\n+  commentId?: number;\n+  owner: string;\n+  repo: string;\n+}\n \n-/**\n- * Posts a comment on a GitHub issue if the issue exists in the context payload, embedding structured metadata to it.\n- */\n-export const postComment: PostComment = async function (\n+async function updateIssueComment(\n   context: Context,\n-  message: LogReturn | Error,\n-  options: CommentOptions = { updateComment: true, raw: false }\n-) {\n-  let issueNumber;\n-\n-  if (\"issue\" in context.payload) {\n-    issueNumber = context.payload.issue.number;\n-  } else if (\"pull_request\" in context.payload) {\n-    issueNumber = context.payload.pull_request.number;\n-  } else if (\"discussion\" in context.payload) {\n-    issueNumber = context.payload.discussion.number;\n-  } else {\n-    context.logger.info(\"Cannot post comment because issue is not found in the payload.\");\n-    return null;\n+  params: { owner: string; repo: string; body: string; issueNumber: number }\n+): Promise<WithIssueNumber<PostedGithubComment>> {\n+  if (!lastCommentId.issueCommentId) {\n+    throw context.logger.error(\"issueCommentId is missing\");\n   }\n+  const commentData = await context.octokit.rest.issues.updateComment({\n+    owner: params.owner,\n+    repo: params.repo,\n+    comment_id: lastCommentId.issueCommentId,\n+    body: params.body,\n+  });\n+  return { ...commentData.data, issueNumber: params.issueNumber };\n+}\n \n-  if (\"repository\" in context.payload && context.payload.repository?.owner?.login) {\n-    const body = await createStructuredMetadataWithMessage(context, message, options);\n-    if (options.updateComment && postComment.lastCommentId) {\n-      const commentData = await context.octokit.rest.issues.updateComment({\n-        owner: context.payload.repository.owner.login,\n-        repo: context.payload.repository.name,\n-        comment_id: postComment.lastCommentId,\n-        body: body,\n-      });\n-      return { ...commentData.data, issueNumber };\n-    } else {\n-      const commentData = await context.octokit.rest.issues.createComment({\n-        owner: context.payload.repository.owner.login,\n-        repo: context.payload.repository.name,\n-        issue_number: issueNumber,\n-        body: body,\n-      });\n-      postComment.lastCommentId = commentData.data.id;\n-      return { ...commentData.data, issueNumber };\n-    }\n-  } else {\n-    context.logger.info(\"Cannot post comment because repository is not found in the payload.\", { payload: context.payload });\n+async function updateReviewComment(\n+  context: Context,\n+  params: { owner: string; repo: string; body: string; issueNumber: number }\n+): Promise<WithIssueNumber<PostedGithubComment>> {\n+  if (!lastCommentId.reviewCommentId) {\n+    throw context.logger.error(\"reviewCommentId is missing\");\n   }\n-  return null;\n-};\n+  const commentData = await context.octokit.rest.pulls.updateReviewComment({\n+    owner: params.owner,\n+    repo: params.repo,\n+    comment_id: lastCommentId.reviewCommentId,\n+    body: params.body,\n+  });\n+  return { ...commentData.data, issueNumber: params.issueNumber };\n+}\n+\n+async function createNewComment(\n+  context: Context,\n+  params: { owner: string; repo: string; body: string; issueNumber: number; commentId?: number }\n+): Promise<WithIssueNumber<PostedGithubComment>> {\n+  if (params.commentId) {\n+    const commentData = await context.octokit.rest.pulls.createReplyForReviewComment({\n+      owner: params.owner,\n+      repo: params.repo,\n+      pull_number: params.issueNumber,\n+      comment_id: params.commentId,\n+      body: params.body,\n+    });\n+    lastCommentId.reviewCommentId = commentData.data.id;\n+    return { ...commentData.data, issueNumber: params.issueNumber };\n+  }\n+\n+  const commentData = await context.octokit.rest.issues.createComment({\n+    owner: params.owner,\n+    repo: params.repo,\n+    issue_number: params.issueNumber,\n+    body: params.body,\n+  });\n+  lastCommentId.issueCommentId = commentData.data.id;\n+  return { ...commentData.data, issueNumber: params.issueNumber };\n+}\n+\n+function getIssueNumber(context: Context): number | undefined {\n+  if (\"issue\" in context.payload) return context.payload.issue.number;\n+  if (\"pull_request\" in context.payload) return context.payload.pull_request.number;\n+  if (\"discussion\" in context.payload) return context.payload.discussion.number;\n+  return undefined;\n+}\n+\n+function getCommentId(context: Context): number | undefined {\n+  return \"pull_request\" in context.payload && \"comment\" in context.payload ? context.payload.comment.id : undefined;\n+}\n+\n+function extractIssueContext(context: Context): IssueContext | null {\n+  if (!(\"repository\" in context.payload) || !context.payload.repository?.owner?.login) {\n+    return null;\n+  }\n+\n+  const issueNumber = getIssueNumber(context);\n+  if (!issueNumber) return null;\n \n-async function createStructuredMetadataWithMessage(context: Context, message: LogReturn | Error, options: CommentOptions) {\n-  let logMessage;\n-  let callingFnName;\n-  let instigatorName;\n-  let metadata: Metadata;\n+  return {\n+    issueNumber,\n+    commentId: getCommentId(context),\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+  };\n+}\n \n+async function processMessage(context: Context, message: LogReturn | Error) {\n   if (message instanceof Error) {\n-    metadata = {\n+    const metadata = {\n       message: message.message,\n       name: message.name,\n       stack: message.stack,\n     };\n-    callingFnName = message.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1] ?? \"anonymous\";\n-    logMessage = context.logger.error(message.message).logMessage;\n-  } else if (message.metadata) {\n-    metadata = {\n-      message: message.metadata.message,\n-      stack: message.metadata.stack || message.metadata.error?.stack,\n-      caller: message.metadata.caller || message.metadata.error?.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1],\n-    };\n-    logMessage = message.logMessage;\n-    callingFnName = metadata.caller;\n-  } else {\n-    metadata = { ...message };\n+    return { metadata, logMessage: context.logger.error(message.message).logMessage };\n   }\n-  const jsonPretty = sanitizeMetadata(metadata);\n \n-  if (\"installation\" in context.payload && context.payload.installation && \"account\" in context.payload.installation) {\n-    instigatorName = context.payload.installation?.account?.name;\n-  } else {\n-    instigatorName = context.payload.sender?.login || HEADER_NAME;\n+  const metadata = message.metadata\n+    ? {\n+        message: message.metadata.message,\n+        stack: message.metadata.stack || message.metadata.error?.stack,\n+        caller: message.metadata.caller || message.metadata.error?.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1],\n+      }\n+    : { ...message };","score":{"reward":3.04,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":65.555,"syllables":31,"sentences":2,"score":0.9444499999999999},"multiplier":1,"relevance":0.8}},{"id":1943491583,"content":"I'm concerned that this can lead to some bugs. If I understand correctly Cloudflare workers sometimes run multiple requests in the same instance of the worker , so if two requests were posting comments it would cause some of them to get comment id from another request.","url":"https://github.com/ubiquity-os/plugin-sdk/pull/65#discussion_r1943491583","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -5,6 +5,7 @@ import { PluginRuntimeInfo } from \"./helpers/runtime-info\";\n import { sanitizeMetadata } from \"./util\";\n \n const HEADER_NAME = \"UbiquityOS\";\n+const lastCommentId = { reviewCommentId: null as number | null, issueCommentId: null as number | null };","score":{"reward":5.436,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":60.58250000000001,"syllables":68,"sentences":2,"score":0.9941749999999999},"multiplier":1,"relevance":0.9}},{"id":1944469981,"content":"Yeah it was like that from beginning but I've only noticed now","url":"https://github.com/ubiquity-os/plugin-sdk/pull/65#discussion_r1944469981","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,117 +18,192 @@ export interface CommentOptions {\n   updateComment?: boolean;\n }\n \n+type PostedGithubComment =\n+  | RestEndpointMethodTypes[\"issues\"][\"updateComment\"][\"response\"][\"data\"]\n+  | RestEndpointMethodTypes[\"issues\"][\"createComment\"][\"response\"][\"data\"]\n+  | RestEndpointMethodTypes[\"pulls\"][\"createReplyForReviewComment\"][\"response\"][\"data\"];\n+\n type WithIssueNumber<T> = T & {\n   issueNumber: number;\n };\n \n-export type PostComment = {\n-  (\n-    context: Context,\n-    message: LogReturn | Error,\n-    options?: CommentOptions\n-  ): Promise<WithIssueNumber<\n-    RestEndpointMethodTypes[\"issues\"][\"updateComment\"][\"response\"][\"data\"] | RestEndpointMethodTypes[\"issues\"][\"createComment\"][\"response\"][\"data\"]\n-  > | null>;\n-  lastCommentId?: number;\n-};\n+interface IssueContext {\n+  issueNumber: number;\n+  commentId?: number;\n+  owner: string;\n+  repo: string;\n+}\n \n-/**\n- * Posts a comment on a GitHub issue if the issue exists in the context payload, embedding structured metadata to it.\n- */\n-export const postComment: PostComment = async function (\n+async function updateIssueComment(\n   context: Context,\n-  message: LogReturn | Error,\n-  options: CommentOptions = { updateComment: true, raw: false }\n-) {\n-  let issueNumber;\n-\n-  if (\"issue\" in context.payload) {\n-    issueNumber = context.payload.issue.number;\n-  } else if (\"pull_request\" in context.payload) {\n-    issueNumber = context.payload.pull_request.number;\n-  } else if (\"discussion\" in context.payload) {\n-    issueNumber = context.payload.discussion.number;\n-  } else {\n-    context.logger.info(\"Cannot post comment because issue is not found in the payload.\");\n-    return null;\n+  params: { owner: string; repo: string; body: string; issueNumber: number }\n+): Promise<WithIssueNumber<PostedGithubComment>> {\n+  if (!lastCommentId.issueCommentId) {\n+    throw context.logger.error(\"issueCommentId is missing\");\n   }\n+  const commentData = await context.octokit.rest.issues.updateComment({\n+    owner: params.owner,\n+    repo: params.repo,\n+    comment_id: lastCommentId.issueCommentId,\n+    body: params.body,\n+  });\n+  return { ...commentData.data, issueNumber: params.issueNumber };\n+}\n \n-  if (\"repository\" in context.payload && context.payload.repository?.owner?.login) {\n-    const body = await createStructuredMetadataWithMessage(context, message, options);\n-    if (options.updateComment && postComment.lastCommentId) {\n-      const commentData = await context.octokit.rest.issues.updateComment({\n-        owner: context.payload.repository.owner.login,\n-        repo: context.payload.repository.name,\n-        comment_id: postComment.lastCommentId,\n-        body: body,\n-      });\n-      return { ...commentData.data, issueNumber };\n-    } else {\n-      const commentData = await context.octokit.rest.issues.createComment({\n-        owner: context.payload.repository.owner.login,\n-        repo: context.payload.repository.name,\n-        issue_number: issueNumber,\n-        body: body,\n-      });\n-      postComment.lastCommentId = commentData.data.id;\n-      return { ...commentData.data, issueNumber };\n-    }\n-  } else {\n-    context.logger.info(\"Cannot post comment because repository is not found in the payload.\", { payload: context.payload });\n+async function updateReviewComment(\n+  context: Context,\n+  params: { owner: string; repo: string; body: string; issueNumber: number }\n+): Promise<WithIssueNumber<PostedGithubComment>> {\n+  if (!lastCommentId.reviewCommentId) {\n+    throw context.logger.error(\"reviewCommentId is missing\");\n   }\n-  return null;\n-};\n+  const commentData = await context.octokit.rest.pulls.updateReviewComment({\n+    owner: params.owner,\n+    repo: params.repo,\n+    comment_id: lastCommentId.reviewCommentId,\n+    body: params.body,\n+  });\n+  return { ...commentData.data, issueNumber: params.issueNumber };\n+}\n+\n+async function createNewComment(\n+  context: Context,\n+  params: { owner: string; repo: string; body: string; issueNumber: number; commentId?: number }\n+): Promise<WithIssueNumber<PostedGithubComment>> {\n+  if (params.commentId) {\n+    const commentData = await context.octokit.rest.pulls.createReplyForReviewComment({\n+      owner: params.owner,\n+      repo: params.repo,\n+      pull_number: params.issueNumber,\n+      comment_id: params.commentId,\n+      body: params.body,\n+    });\n+    lastCommentId.reviewCommentId = commentData.data.id;\n+    return { ...commentData.data, issueNumber: params.issueNumber };\n+  }\n+\n+  const commentData = await context.octokit.rest.issues.createComment({\n+    owner: params.owner,\n+    repo: params.repo,\n+    issue_number: params.issueNumber,\n+    body: params.body,\n+  });\n+  lastCommentId.issueCommentId = commentData.data.id;\n+  return { ...commentData.data, issueNumber: params.issueNumber };\n+}\n+\n+function getIssueNumber(context: Context): number | undefined {\n+  if (\"issue\" in context.payload) return context.payload.issue.number;\n+  if (\"pull_request\" in context.payload) return context.payload.pull_request.number;\n+  if (\"discussion\" in context.payload) return context.payload.discussion.number;\n+  return undefined;\n+}\n+\n+function getCommentId(context: Context): number | undefined {\n+  return \"pull_request\" in context.payload && \"comment\" in context.payload ? context.payload.comment.id : undefined;\n+}\n+\n+function extractIssueContext(context: Context): IssueContext | null {\n+  if (!(\"repository\" in context.payload) || !context.payload.repository?.owner?.login) {\n+    return null;\n+  }\n+\n+  const issueNumber = getIssueNumber(context);\n+  if (!issueNumber) return null;\n \n-async function createStructuredMetadataWithMessage(context: Context, message: LogReturn | Error, options: CommentOptions) {\n-  let logMessage;\n-  let callingFnName;\n-  let instigatorName;\n-  let metadata: Metadata;\n+  return {\n+    issueNumber,\n+    commentId: getCommentId(context),\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+  };\n+}\n \n+async function processMessage(context: Context, message: LogReturn | Error) {\n   if (message instanceof Error) {\n-    metadata = {\n+    const metadata = {\n       message: message.message,\n       name: message.name,\n       stack: message.stack,\n     };\n-    callingFnName = message.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1] ?? \"anonymous\";\n-    logMessage = context.logger.error(message.message).logMessage;\n-  } else if (message.metadata) {\n-    metadata = {\n-      message: message.metadata.message,\n-      stack: message.metadata.stack || message.metadata.error?.stack,\n-      caller: message.metadata.caller || message.metadata.error?.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1],\n-    };\n-    logMessage = message.logMessage;\n-    callingFnName = metadata.caller;\n-  } else {\n-    metadata = { ...message };\n+    return { metadata, logMessage: context.logger.error(message.message).logMessage };\n   }\n-  const jsonPretty = sanitizeMetadata(metadata);\n \n-  if (\"installation\" in context.payload && context.payload.installation && \"account\" in context.payload.installation) {\n-    instigatorName = context.payload.installation?.account?.name;\n-  } else {\n-    instigatorName = context.payload.sender?.login || HEADER_NAME;\n+  const metadata = message.metadata\n+    ? {\n+        message: message.metadata.message,\n+        stack: message.metadata.stack || message.metadata.error?.stack,\n+        caller: message.metadata.caller || message.metadata.error?.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1],\n+      }\n+    : { ...message };","score":{"reward":0.81,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.0092307692308,"syllables":17,"sentences":1,"score":0.7699076923076921},"multiplier":1,"relevance":0.3}},{"id":1946744811,"content":"Maybe Context should become a class in the future","url":"https://github.com/ubiquity-os/plugin-sdk/pull/65#discussion_r1946744811","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -5,6 +5,7 @@ import { PluginRuntimeInfo } from \"./helpers/runtime-info\";\n import { sanitizeMetadata } from \"./util\";\n \n const HEADER_NAME = \"UbiquityOS\";\n+const lastCommentId = { reviewCommentId: null as number | null, issueCommentId: null as number | null };","score":{"reward":0.824,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":84.90000000000003,"syllables":12,"sentences":1,"score":0.7509999999999997},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2596680062,"effect":{"addition":271,"deletion":88},"reward":7.18,"priority":2},{"reviewId":2602105157,"effect":{"addition":164,"deletion":155},"reward":6.38,"priority":2},{"reviewId":2602106053,"effect":{"addition":0,"deletion":0},"reward":0,"priority":2}],"url":"https://github.com/ubiquity-os/plugin-sdk/pull/65"},{"reviews":[{"reviewId":2606219592,"effect":{"addition":19,"deletion":17},"reward":0.72,"priority":2}],"url":"https://github.com/ubiquity-os/plugin-template/pull/44"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 25.606 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>14.28</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>11.326</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/65\" target=\"_blank\" rel=\"noopener\">#65</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+271 -88</td><td>2</td><td>7.18</td></tr><tr><td>+164 -155</td><td>2</td><td>6.38</td></tr><tr><td>+0 -0</td><td>2</td><td>0</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/44\" target=\"_blank\" rel=\"noopener\">#44</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+19 -17</td><td>2</td><td>0.72</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/65#pullrequestreview-2596680062\" target=\"_blank\" rel=\"noopener\">Otherwise it works fine:https://github.com/ubiquibot-whilefoo-&hellip;</a></h6></td><td><details><summary>2.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.2</td><td>2</td><td>1.216</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/65#discussion_r1943486704\" target=\"_blank\" rel=\"noopener\">If I use &#96;logger.ok(\"something\", { first: 1, second: 2 })&#9&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.8</td><td>2</td><td>3.04</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/65#discussion_r1943491583\" target=\"_blank\" rel=\"noopener\">I'm concerned that this can lead to some bugs. If I understand c&hellip;</a></h6></td><td><details><summary>2.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.9</td><td>2</td><td>5.436</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/65#discussion_r1944469981\" target=\"_blank\" rel=\"noopener\">Yeah it was like that from beginning but I've only noticed now</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.81</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/65#discussion_r1946744811\" target=\"_blank\" rel=\"noopener\">Maybe Context should become a class in the future</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.4</td><td>2</td><td>0.824</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-plugin-installer_2.json","json":{"Keyrxng":{"userId":106303466,"total":151.176,"task":{"reward":150,"multiplier":1},"comments":[{"id":2467083985,"content":"```diff\r\n+ ~ * checking vibes, please wait... * ~ +\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/2#issuecomment-2467083985","commentType":"ISSUE_ASSIGNEE","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":0.25,"relevance":0}},{"id":2168141919,"content":"Resolves #2\r\nQA:\r\nhttps://github.com/user-attachments/assets/4bf24dab-f13d-41a6-896d-09939d00b77e","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11","commentType":"PULL_SPECIFICATION","score":{"reward":1.176,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":78.87285714285717,"syllables":20,"sentences":2,"score":0.8112714285714283},"multiplier":1,"relevance":0.7}},{"id":2466982974,"content":"It'll be whatever is attached to the Supabase instance, which should be a GitHub App because we need permissions that an oauth app does not have. \r\nI assume that'll be the same one used on `work.ubq`","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11#issuecomment-2466982974","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":37,"wordValue":0,"result":0},"readability":{"fleschKincaid":76.01966216216218,"syllables":49,"sentences":2,"score":0.8398033783783783},"multiplier":0,"relevance":0.8}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 151.176 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>1.176</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/2#issuecomment-2467083985\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff+ ~ * checking vibes, please wait... * ~ +&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11\" target=\"_blank\" rel=\"noopener\">Resolves #2QA:https://github.com/user-attachments/assets/4bf&hellip;</a></h6></td><td><details><summary>1.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.176</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11#issuecomment-2466982974\" target=\"_blank\" rel=\"noopener\">It'll be whatever is attached to the Supabase instance, which sh&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr></tbody></table></details>"},"0x4007":{"total":47.822,"userId":4975670,"comments":[{"id":2466929629,"content":"I actually can't assign @Keyrxng i think you need to comment here","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/2#issuecomment-2466929629","commentType":"ISSUE_AUTHOR","score":{"reward":0.81,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.0092307692308,"syllables":17,"sentences":1,"score":0.7699076923076921},"multiplier":1,"relevance":0.2}},{"id":2527172331,"content":"As per the `readme.md` of this repo, we need to be able to authenticate to write to the config as the user for this tool to work. \r\nThe logic can likely be lifted from https://github.com/ubiquity/work.ubq.fi","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/2","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.65,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":84.50500000000001,"syllables":54,"sentences":5,"score":0.7549499999999999},"multiplier":1,"relevance":1}},{"id":2425855217,"content":"Should be dedicated GitHub app, not ubiquity rewards","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11#pullrequestreview-2425855217","commentType":"PULL_COLLABORATOR","score":{"reward":1.974,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":40.09,"syllables":15,"sentences":1,"score":0.8009000000000001},"multiplier":1,"relevance":0.7}},{"id":2467000043,"content":"Then we need to generalize the app name into something just like UbiquityOS Registration","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11#issuecomment-2467000043","commentType":"PULL_COLLABORATOR","score":{"reward":3.408,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":35.5107142857143,"syllables":26,"sentences":1,"score":0.755107142857143},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2425855217,"effect":{"addition":1166,"deletion":100},"reward":37.98,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 47.822 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>37.98</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.65</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.81</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>5.382</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11\" target=\"_blank\" rel=\"noopener\">#11</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1166 -100</td><td>3</td><td>37.98</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/2\" target=\"_blank\" rel=\"noopener\">As per the &#96;readme.md&#96; of this repo, we need to be able &hellip;</a></h6></td><td><details><summary>2.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>1</td><td>1</td><td>3.65</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/2#issuecomment-2466929629\" target=\"_blank\" rel=\"noopener\">I actually can't assign @Keyrxng i think you need to comment here</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.81</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11#pullrequestreview-2425855217\" target=\"_blank\" rel=\"noopener\">Should be dedicated GitHub app, not ubiquity rewards</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.974</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11#issuecomment-2467000043\" target=\"_blank\" rel=\"noopener\">Then we need to generalize the app name into something just like&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.408</td></tr></tbody></table></details>"},"gentlementlegen":{"total":0,"userId":9807008,"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/11"}]}}},{"name":"results/ubiquity-os_plugin-sdk_41.json","json":{"gentlementlegen":{"userId":9807008,"total":32.212,"task":{"reward":18,"multiplier":1},"comments":[{"id":2553099487,"content":"@Keyrxng The SDK itself uses the logger but maybe having this metadata in the logger pollutes the code base too much as it is specific to GitHub comments probably.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099487","commentType":"ISSUE_AUTHOR","score":{"reward":2.124,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":51.95862068965518,"syllables":43,"sentences":1,"score":0.9195862068965518},"multiplier":1,"relevance":0.3}},{"id":2553099498,"content":"@Keyrxng should we reopen the PR then?","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099498","commentType":"ISSUE_AUTHOR","score":{"reward":0.27,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":2553099508,"content":"@Keyrxng Also goes for the PR you just closed I guess.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099508","commentType":"ISSUE_AUTHOR","score":{"reward":0.378,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":103.37909090909093,"syllables":12,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":2553099517,"content":"Let's see how we do it. If the circular reference can be fixed it can remain inside the kernel and it's fine.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099517","commentType":"ISSUE_AUTHOR","score":{"reward":3.045,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":85.38,"syllables":31,"sentences":2,"score":0.7462000000000001},"multiplier":1,"relevance":0.5}},{"id":2553099529,"content":"Moving this to `plugin-sdk` as it handles what gets inside the `metadata` when `postComment` is called.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099529","commentType":"ISSUE_AUTHOR","score":{"reward":2.793,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":89.51692307692309,"syllables":16,"sentences":1,"score":0.704830769230769},"multiplier":1,"relevance":0.7}},{"id":2749642314,"content":"Revision should point to the current version of the plugin. Within actions this is easy to get, within workers I don't think this is possible, instead we could probably use the version id?\r\n<img width=\"461\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ab21ae9e-795d-4fa2-afdf-da776f92f120\">\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquity-os/ubiquity-os-kernel/pull/169#discussion_r1818077183_","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.54,"formatting":{"content":{"p":{"score":0,"elementCount":3},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":56.86385074626867,"syllables":108,"sentences":5,"score":0.9686385074626866},"multiplier":1,"relevance":1}},{"id":2244809774,"content":"Resolves #41","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42","commentType":"PULL_SPECIFICATION","score":{"reward":0.062,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":1,"relevance":0.2}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 32.212 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>18</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.54</td></tr><tr><td>Issue</td><td>Comment</td><td>5</td><td>8.61</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.062</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41\" target=\"_blank\" rel=\"noopener\">Revision should point to the current version of the plugin. With&hellip;</a></h6></td><td><details><summary>4.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>1</td><td>1</td><td>5.54</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099487\" target=\"_blank\" rel=\"noopener\">@Keyrxng The SDK itself uses the logger but maybe having this me&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.124</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099498\" target=\"_blank\" rel=\"noopener\">@Keyrxng should we reopen the PR then?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.27</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099508\" target=\"_blank\" rel=\"noopener\">@Keyrxng Also goes for the PR you just closed I guess.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.378</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099517\" target=\"_blank\" rel=\"noopener\">Let's see how we do it. If the circular reference can be fixed i&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.5</td><td>3</td><td>3.045</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099529\" target=\"_blank\" rel=\"noopener\">Moving this to &#96;plugin-sdk&#96; as it handles what gets insi&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.793</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42\" target=\"_blank\" rel=\"noopener\">Resolves #41</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.062</td></tr></tbody></table></details>"},"Keyrxng":{"total":7.974,"userId":106303466,"comments":[{"id":2553099480,"content":"@gentlementlegen we gonna built it into the logger or keep it within the sdk?","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099480","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.798,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":59.68214285714288,"syllables":22,"sentences":1,"score":0.9968214285714287},"multiplier":0.25,"relevance":0.7}},{"id":2553099494,"content":"I thought something similar, so best to keep it all within the SDK in error metadata. Can close this or transfer it or whatever as it's resolved within the SDK following the merge of https://github.com/gentlementlegen/ubiquity-os-kernel/pull/1 (will PR the SDK repo now that there is one)","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099494","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":2.544,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":63.23166666666668,"syllables":80,"sentences":3,"score":0.9676833333333331},"multiplier":0.25,"relevance":0.8}},{"id":2553099504,"content":"I'm including all of the logic for this directly into the SDK right? If so then yeah I'll PR the SDK.\r\nJust seen foo's [comment](https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186?notification_referrer_id=NT_kwDOBlYP6rUxMzE3OTQxNDI0NToxMDYzMDM0NjY#issuecomment-2466685830) re: SDK separation complicating things. Waiting to see if the SDK moves back into the kernel or stays separate","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099504","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":2.808,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":77.90875,"syllables":65,"sentences":4,"score":0.8209125},"multiplier":0.25,"relevance":0.9}},{"id":2553099512,"content":"Yes unfortunately, would have been ideal if you had managed to merge into your improvements PR like you suggested but it's all good I'll just re-do them.\r\nI assume the SDK is 100% staying separate from the kernel then yeah and I should PR against it?","url":"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099512","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.824,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":49,"wordValue":0.1,"result":2.37},"readability":{"fleschKincaid":66.28994897959186,"syllables":67,"sentences":2,"score":0.9371005102040815},"multiplier":0.25,"relevance":0.8}},{"id":2593814760,"content":"Lmao happy to help I guess 😅","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2593814760","commentType":"PULL_CONTRIBUTOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":0.25,"relevance":0}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-sdk/pull/42"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 7.974 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>4</td><td>7.974</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099480\" target=\"_blank\" rel=\"noopener\">@gentlementlegen we gonna built it into the logger or keep it wi&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.798</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099494\" target=\"_blank\" rel=\"noopener\">I thought something similar, so best to keep it all within the S&hellip;</a></h6></td><td><details><summary>3.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.544</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099504\" target=\"_blank\" rel=\"noopener\">I'm including all of the logic for this directly into the SDK ri&hellip;</a></h6></td><td><details><summary>3.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.808</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/41#issuecomment-2553099512\" target=\"_blank\" rel=\"noopener\">Yes unfortunately, would have been ideal if you had managed to m&hellip;</a></h6></td><td><details><summary>2.37</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 49&#13;  wordValue: 0.1&#13;  result: 2.37&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.824</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2593814760\" target=\"_blank\" rel=\"noopener\">Lmao happy to help I guess 😅</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr></tbody></table></details>"},"0x4007":{"total":17.373,"userId":4975670,"comments":[{"id":1899066823,"content":"```suggestion\nThe `postComment` function enables users to easily post a comment to an issue, a pull-request, or a pull request review thread.\n```","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1899066823","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,6 +17,10 @@ The `createActionsPlugin` function allows users to create plugins that will be a\n \n The `createPlugin` function enables users to create a plugin that will run on Cloudflare Workers environment.\n \n+### `postComment`\n+\n+The `postComment` function enables users to easily post a comment to an issue, a pull-request or even a conversation.","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.8}},{"id":1899265870,"content":"This should be handled all in the SDK","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1899265870","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,35 +1,76 @@\n+import { LogReturn, Metadata } from \"@ubiquity-os/ubiquity-os-logger\";\n import { Context } from \"./context\";\n-import { LogReturn } from \"@ubiquity-os/ubiquity-os-logger\";\n+import { PluginRuntimeInfo } from \"./helpers/runtime-info\";\n import { sanitizeMetadata } from \"./util\";\n \n-const HEADER_NAME = \"Ubiquity\";\n+const HEADER_NAME = \"UbiquityOS\";","score":{"reward":1.782,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":114.11500000000001,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1903268059,"content":"I didn't mean to post this pending comment","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1903268059","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,35 +1,76 @@\n+import { LogReturn, Metadata } from \"@ubiquity-os/ubiquity-os-logger\";\n import { Context } from \"./context\";\n-import { LogReturn } from \"@ubiquity-os/ubiquity-os-logger\";\n+import { PluginRuntimeInfo } from \"./helpers/runtime-info\";\n import { sanitizeMetadata } from \"./util\";\n \n-const HEADER_NAME = \"Ubiquity\";\n+const HEADER_NAME = \"UbiquityOS\";","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":94.30000000000001,"syllables":11,"sentences":1,"score":0.6569999999999999},"multiplier":1,"relevance":0}},{"id":2565014260,"content":"Code changes look fine. \nInterested to see the rendered metadata in a QA example.","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2565014260","commentType":"PULL_COLLABORATOR","score":{"reward":3.108,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":66.7871428571429,"syllables":22,"sentences":2,"score":0.9321285714285711},"multiplier":1,"relevance":0.7}},{"id":2565460056,"content":"Looks informative but what is the second field with the value of your username?","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2565460056","commentType":"PULL_COLLABORATOR","score":{"reward":2.235,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":65.72500000000001,"syllables":21,"sentences":1,"score":0.9427499999999999},"multiplier":1,"relevance":0.5}},{"id":2565493553,"content":"Sure we can leave it then.","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2565493553","commentType":"PULL_COLLABORATOR","score":{"reward":0.474,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}},{"id":2567433122,"content":"Actually the invoker field should be last for search reasons.","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2567433122","commentType":"PULL_COLLABORATOR","score":{"reward":2.394,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":69.78500000000001,"syllables":15,"sentences":1,"score":0.9021499999999999},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2524885164,"effect":{"addition":132,"deletion":40},"reward":5.16,"priority":3},{"reviewId":2525144154,"effect":{"addition":42,"deletion":32},"reward":2.22,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-sdk/pull/42"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 17.373 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>7.38</td></tr><tr><td>Review</td><td>Comment</td><td>7</td><td>9.993</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42\" target=\"_blank\" rel=\"noopener\">#42</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+132 -40</td><td>3</td><td>5.16</td></tr><tr><td>+42 -32</td><td>3</td><td>2.22</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1899066823\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionThe &#96;postComment&#96; function ena&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1899265870\" target=\"_blank\" rel=\"noopener\">This should be handled all in the SDK</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.782</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1903268059\" target=\"_blank\" rel=\"noopener\">I didn't mean to post this pending comment</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2565014260\" target=\"_blank\" rel=\"noopener\">Code changes look fine. Interested to see the rendered metadata&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.108</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2565460056\" target=\"_blank\" rel=\"noopener\">Looks informative but what is the second field with the value of&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.235</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2565493553\" target=\"_blank\" rel=\"noopener\">Sure we can leave it then.</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.474</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2567433122\" target=\"_blank\" rel=\"noopener\">Actually the invoker field should be last for search reasons.</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.394</td></tr></tbody></table></details>"},"whilefoo":{"total":18,"userId":139262667,"comments":[{"id":1900446156,"content":"To get the worker name kernel needs to be updated to send URL in the `ref`? Another way to get worker name would be to retrieve it from the TOML and upload it to the env during deployment?\r\nIsn't `workerUrl.split(\"//\")[1]` the same as `workerUrl.hostname`?\r\nAlso feels weird to have to call `getInstance` to initialize it and I would be cautious using a global instance with Cloudflare Workers as weird things might happen","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900446156","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -79,6 +80,16 @@ export function createPlugin<TConfig = unknown, TEnv = unknown, TCommand = unkno\n       env = ctx.env as TEnv;\n     }\n \n+    const workerUrl = new URL(inputs.ref).origin;\n+    let workerName;\n+\n+    if (workerUrl.includes(\"localhost\")) {\n+      workerName = \"localhost\";\n+    } else {\n+      workerName = `${workerUrl.split(\"//\")[1].split(\".\")[0]}`;\n+    }\n+    PluginRuntimeInfo.getInstance({ ...env, CLOUFLARE_WORKER_NAME: workerName });","score":{"reward":8.748,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":69,"wordValue":0.1,"result":2.59},"readability":{"fleschKincaid":76.52625000000003,"syllables":92,"sentences":4,"score":0.8347374999999997},"multiplier":1,"relevance":0.9}},{"id":1900446628,"content":"These two ifs could be merged","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900446628","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -107,9 +118,9 @@ export function createPlugin<TConfig = unknown, TEnv = unknown, TCommand = unkno\n     } catch (error) {\n       console.error(error);\n \n-      let loggerError: LogReturn | null;\n+      let loggerError: LogReturn | Error | null;\n       if (error instanceof Error) {\n-        loggerError = context.logger.error(`Error: ${error}`, { error: error });\n+        loggerError = error;\n       } else if (error instanceof LogReturn) {\n         loggerError = error;","score":{"reward":1.422,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1900446783,"content":"what does `installation.account.name` refer to?","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900446783","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,35 +1,76 @@\n+import { LogReturn, Metadata } from \"@ubiquity-os/ubiquity-os-logger\";\n import { Context } from \"./context\";\n-import { LogReturn } from \"@ubiquity-os/ubiquity-os-logger\";\n+import { PluginRuntimeInfo } from \"./helpers/runtime-info\";\n import { sanitizeMetadata } from \"./util\";\n \n-const HEADER_NAME = \"Ubiquity\";\n+const HEADER_NAME = \"UbiquityOS\";\n \n /**\n  * Posts a comment on a GitHub issue if the issue exists in the context payload, embedding structured metadata to it.\n  */\n-export async function postComment(context: Context, message: LogReturn) {\n-  if (\"issue\" in context.payload && context.payload.repository?.owner?.login) {\n-    const metadata = createStructuredMetadata(message.metadata?.name, message);\n+export async function postComment(context: Context, message: LogReturn | Error, raw = false) {\n+  let issueNumber;\n+\n+  if (\"issue\" in context.payload) {\n+    issueNumber = context.payload.issue.number;\n+  } else if (\"pull_request\" in context.payload) {\n+    issueNumber = context.payload.pull_request.number;\n+  } else if (\"discussion\" in context.payload) {\n+    issueNumber = context.payload.discussion.number;\n+  } else {\n+    context.logger.info(\"Cannot post comment because issue is not found in the payload.\");\n+    return;\n+  }\n+\n+  if (\"repository\" in context.payload && context.payload.repository?.owner?.login) {\n+    const body = await createStructuredMetadataWithMessage(context, message, raw);\n     await context.octokit.rest.issues.createComment({\n       owner: context.payload.repository.owner.login,\n       repo: context.payload.repository.name,\n-      issue_number: context.payload.issue.number,\n-      body: [message.logMessage.diff, metadata].join(\"\\n\"),\n+      issue_number: issueNumber,\n+      body: body,\n     });\n   } else {\n-    context.logger.info(\"Cannot post comment because issue is not found in the payload\");\n+    context.logger.info(\"Cannot post comment because repository is not found in the payload.\", { payload: context.payload });\n   }\n }\n \n-function createStructuredMetadata(className: string | undefined, logReturn: LogReturn) {\n-  const logMessage = logReturn.logMessage;\n-  const metadata = logReturn.metadata;\n+async function createStructuredMetadataWithMessage(context: Context, message: LogReturn | Error, raw = false) {\n+  let logMessage;\n+  let callingFnName;\n+  let instigatorName;\n+  let metadata: Metadata;\n \n+  if (message instanceof Error) {\n+    metadata = {\n+      message: message.message,\n+      name: message.name,\n+      stack: message.stack,\n+    };\n+    callingFnName = message.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1] ?? \"anonymous\";\n+  } else if (message.metadata) {\n+    logMessage = message.logMessage;\n+    metadata = message.metadata;\n+\n+    if (metadata.stack || metadata.error) {\n+      metadata.stack = metadata.stack || metadata.error?.stack;\n+      metadata.caller = metadata.caller || metadata.error?.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1];\n+    }\n+    callingFnName = metadata.caller;\n+  } else {\n+    metadata = { ...message };\n+  }\n   const jsonPretty = sanitizeMetadata(metadata);\n-  const stack = logReturn.metadata?.stack;\n-  const stackLine = (Array.isArray(stack) ? stack.join(\"\\n\") : stack)?.split(\"\\n\")[2] ?? \"\";\n-  const caller = stackLine.match(/at (\\S+)/)?.[1] ?? \"\";\n-  const ubiquityMetadataHeader = `<!-- ${HEADER_NAME} - ${className} - ${caller} - ${metadata?.revision}`;\n+\n+  if (\"installation\" in context.payload && context.payload.installation && \"account\" in context.payload.installation) {\n+    instigatorName = context.payload.installation?.account?.name;\n+  } else {\n+    instigatorName = context.payload.sender?.login || HEADER_NAME;\n+  }","score":{"reward":0.78,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.5}},{"id":1900448597,"content":"You could just set `logMessage` to `content` in the first if statement and then you don't need this if statement","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900448597","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -43,6 +84,11 @@ function createStructuredMetadata(className: string | undefined, logReturn: LogR\n     metadataSerialized = metadataSerializedHidden;\n   }\n \n+  if (message instanceof Error) {\n+    const content = context.logger.error(message.message).logMessage;\n+    return `${raw ? content.raw : content.diff}\\n\\n${metadataSerialized}\\n`;\n+  }","score":{"reward":3.675,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":85.13947368421054,"syllables":23,"sentences":1,"score":0.7486052631578946},"multiplier":1,"relevance":0.7}},{"id":1900448716,"content":"why not `message instanceof LogReturn`?","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900448716","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,35 +1,76 @@\n+import { LogReturn, Metadata } from \"@ubiquity-os/ubiquity-os-logger\";\n import { Context } from \"./context\";\n-import { LogReturn } from \"@ubiquity-os/ubiquity-os-logger\";\n+import { PluginRuntimeInfo } from \"./helpers/runtime-info\";\n import { sanitizeMetadata } from \"./util\";\n \n-const HEADER_NAME = \"Ubiquity\";\n+const HEADER_NAME = \"UbiquityOS\";\n \n /**\n  * Posts a comment on a GitHub issue if the issue exists in the context payload, embedding structured metadata to it.\n  */\n-export async function postComment(context: Context, message: LogReturn) {\n-  if (\"issue\" in context.payload && context.payload.repository?.owner?.login) {\n-    const metadata = createStructuredMetadata(message.metadata?.name, message);\n+export async function postComment(context: Context, message: LogReturn | Error, raw = false) {\n+  let issueNumber;\n+\n+  if (\"issue\" in context.payload) {\n+    issueNumber = context.payload.issue.number;\n+  } else if (\"pull_request\" in context.payload) {\n+    issueNumber = context.payload.pull_request.number;\n+  } else if (\"discussion\" in context.payload) {\n+    issueNumber = context.payload.discussion.number;\n+  } else {\n+    context.logger.info(\"Cannot post comment because issue is not found in the payload.\");\n+    return;\n+  }\n+\n+  if (\"repository\" in context.payload && context.payload.repository?.owner?.login) {\n+    const body = await createStructuredMetadataWithMessage(context, message, raw);\n     await context.octokit.rest.issues.createComment({\n       owner: context.payload.repository.owner.login,\n       repo: context.payload.repository.name,\n-      issue_number: context.payload.issue.number,\n-      body: [message.logMessage.diff, metadata].join(\"\\n\"),\n+      issue_number: issueNumber,\n+      body: body,\n     });\n   } else {\n-    context.logger.info(\"Cannot post comment because issue is not found in the payload\");\n+    context.logger.info(\"Cannot post comment because repository is not found in the payload.\", { payload: context.payload });\n   }\n }\n \n-function createStructuredMetadata(className: string | undefined, logReturn: LogReturn) {\n-  const logMessage = logReturn.logMessage;\n-  const metadata = logReturn.metadata;\n+async function createStructuredMetadataWithMessage(context: Context, message: LogReturn | Error, raw = false) {\n+  let logMessage;\n+  let callingFnName;\n+  let instigatorName;\n+  let metadata: Metadata;\n \n+  if (message instanceof Error) {\n+    metadata = {\n+      message: message.message,\n+      name: message.name,\n+      stack: message.stack,\n+    };\n+    callingFnName = message.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1] ?? \"anonymous\";\n+  } else if (message.metadata) {","score":{"reward":0.792,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":120.20500000000001,"syllables":2,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1900449222,"content":"What's the point of assigning it again? I think it would look cleaner to set it once:\r\n```js\r\nmetadata = {\r\n  message: message.metadata.message,\r\n  stack: message.metadata.stack || message.metadata.error?.stack,\r\n  caller: message.metadata.caller || message.metadata.error?.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1],\r\n}\r\n```","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900449222","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,35 +1,76 @@\n+import { LogReturn, Metadata } from \"@ubiquity-os/ubiquity-os-logger\";\n import { Context } from \"./context\";\n-import { LogReturn } from \"@ubiquity-os/ubiquity-os-logger\";\n+import { PluginRuntimeInfo } from \"./helpers/runtime-info\";\n import { sanitizeMetadata } from \"./util\";\n \n-const HEADER_NAME = \"Ubiquity\";\n+const HEADER_NAME = \"UbiquityOS\";\n \n /**\n  * Posts a comment on a GitHub issue if the issue exists in the context payload, embedding structured metadata to it.\n  */\n-export async function postComment(context: Context, message: LogReturn) {\n-  if (\"issue\" in context.payload && context.payload.repository?.owner?.login) {\n-    const metadata = createStructuredMetadata(message.metadata?.name, message);\n+export async function postComment(context: Context, message: LogReturn | Error, raw = false) {\n+  let issueNumber;\n+\n+  if (\"issue\" in context.payload) {\n+    issueNumber = context.payload.issue.number;\n+  } else if (\"pull_request\" in context.payload) {\n+    issueNumber = context.payload.pull_request.number;\n+  } else if (\"discussion\" in context.payload) {\n+    issueNumber = context.payload.discussion.number;\n+  } else {\n+    context.logger.info(\"Cannot post comment because issue is not found in the payload.\");\n+    return;\n+  }\n+\n+  if (\"repository\" in context.payload && context.payload.repository?.owner?.login) {\n+    const body = await createStructuredMetadataWithMessage(context, message, raw);\n     await context.octokit.rest.issues.createComment({\n       owner: context.payload.repository.owner.login,\n       repo: context.payload.repository.name,\n-      issue_number: context.payload.issue.number,\n-      body: [message.logMessage.diff, metadata].join(\"\\n\"),\n+      issue_number: issueNumber,\n+      body: body,\n     });\n   } else {\n-    context.logger.info(\"Cannot post comment because issue is not found in the payload\");\n+    context.logger.info(\"Cannot post comment because repository is not found in the payload.\", { payload: context.payload });\n   }\n }\n \n-function createStructuredMetadata(className: string | undefined, logReturn: LogReturn) {\n-  const logMessage = logReturn.logMessage;\n-  const metadata = logReturn.metadata;\n+async function createStructuredMetadataWithMessage(context: Context, message: LogReturn | Error, raw = false) {\n+  let logMessage;\n+  let callingFnName;\n+  let instigatorName;\n+  let metadata: Metadata;\n \n+  if (message instanceof Error) {\n+    metadata = {\n+      message: message.message,\n+      name: message.name,\n+      stack: message.stack,\n+    };\n+    callingFnName = message.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1] ?? \"anonymous\";\n+  } else if (message.metadata) {\n+    logMessage = message.logMessage;\n+    metadata = message.metadata;\n+\n+    if (metadata.stack || metadata.error) {\n+      metadata.stack = metadata.stack || metadata.error?.stack;\n+      metadata.caller = metadata.caller || metadata.error?.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1];\n+    }","score":{"reward":3.96,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":94.30000000000001,"syllables":22,"sentences":2,"score":0.6569999999999999},"multiplier":1,"relevance":0.8}},{"id":1901931808,"content":"it's fine, I just didn't know what it is","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1901931808","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,35 +1,76 @@\n+import { LogReturn, Metadata } from \"@ubiquity-os/ubiquity-os-logger\";\n import { Context } from \"./context\";\n-import { LogReturn } from \"@ubiquity-os/ubiquity-os-logger\";\n+import { PluginRuntimeInfo } from \"./helpers/runtime-info\";\n import { sanitizeMetadata } from \"./util\";\n \n-const HEADER_NAME = \"Ubiquity\";\n+const HEADER_NAME = \"UbiquityOS\";\n \n /**\n  * Posts a comment on a GitHub issue if the issue exists in the context payload, embedding structured metadata to it.\n  */\n-export async function postComment(context: Context, message: LogReturn) {\n-  if (\"issue\" in context.payload && context.payload.repository?.owner?.login) {\n-    const metadata = createStructuredMetadata(message.metadata?.name, message);\n+export async function postComment(context: Context, message: LogReturn | Error, raw = false) {\n+  let issueNumber;\n+\n+  if (\"issue\" in context.payload) {\n+    issueNumber = context.payload.issue.number;\n+  } else if (\"pull_request\" in context.payload) {\n+    issueNumber = context.payload.pull_request.number;\n+  } else if (\"discussion\" in context.payload) {\n+    issueNumber = context.payload.discussion.number;\n+  } else {\n+    context.logger.info(\"Cannot post comment because issue is not found in the payload.\");\n+    return;\n+  }\n+\n+  if (\"repository\" in context.payload && context.payload.repository?.owner?.login) {\n+    const body = await createStructuredMetadataWithMessage(context, message, raw);\n     await context.octokit.rest.issues.createComment({\n       owner: context.payload.repository.owner.login,\n       repo: context.payload.repository.name,\n-      issue_number: context.payload.issue.number,\n-      body: [message.logMessage.diff, metadata].join(\"\\n\"),\n+      issue_number: issueNumber,\n+      body: body,\n     });\n   } else {\n-    context.logger.info(\"Cannot post comment because issue is not found in the payload\");\n+    context.logger.info(\"Cannot post comment because repository is not found in the payload.\", { payload: context.payload });\n   }\n }\n \n-function createStructuredMetadata(className: string | undefined, logReturn: LogReturn) {\n-  const logMessage = logReturn.logMessage;\n-  const metadata = logReturn.metadata;\n+async function createStructuredMetadataWithMessage(context: Context, message: LogReturn | Error, raw = false) {\n+  let logMessage;\n+  let callingFnName;\n+  let instigatorName;\n+  let metadata: Metadata;\n \n+  if (message instanceof Error) {\n+    metadata = {\n+      message: message.message,\n+      name: message.name,\n+      stack: message.stack,\n+    };\n+    callingFnName = message.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1] ?? \"anonymous\";\n+  } else if (message.metadata) {\n+    logMessage = message.logMessage;\n+    metadata = message.metadata;\n+\n+    if (metadata.stack || metadata.error) {\n+      metadata.stack = metadata.stack || metadata.error?.stack;\n+      metadata.caller = metadata.caller || metadata.error?.stack?.split(\"\\n\")[2]?.match(/at (\\S+)/)?.[1];\n+    }\n+    callingFnName = metadata.caller;\n+  } else {\n+    metadata = { ...message };\n+  }\n   const jsonPretty = sanitizeMetadata(metadata);\n-  const stack = logReturn.metadata?.stack;\n-  const stackLine = (Array.isArray(stack) ? stack.join(\"\\n\") : stack)?.split(\"\\n\")[2] ?? \"\";\n-  const caller = stackLine.match(/at (\\S+)/)?.[1] ?? \"\";\n-  const ubiquityMetadataHeader = `<!-- ${HEADER_NAME} - ${className} - ${caller} - ${metadata?.revision}`;\n+\n+  if (\"installation\" in context.payload && context.payload.installation && \"account\" in context.payload.installation) {\n+    instigatorName = context.payload.installation?.account?.name;\n+  } else {\n+    instigatorName = context.payload.sender?.login || HEADER_NAME;\n+  }","score":{"reward":0.378,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":111.07000000000002,"syllables":11,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":1901933841,"content":"First time I'm hearing of this. Why would `fetch` manipulate the body of a request? I only know that `Host` header gets filled automatically, maybe I'm missing something\r\n---\r\nNow you changed to only use hostname but you don't split the domain anymore, I tested and it didn't work with the whole hostname so I think you still need to take the first part of the domain","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1901933841","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -79,6 +80,16 @@ export function createPlugin<TConfig = unknown, TEnv = unknown, TCommand = unkno\n       env = ctx.env as TEnv;\n     }\n \n+    const workerUrl = new URL(inputs.ref).origin;\n+    let workerName;\n+\n+    if (workerUrl.includes(\"localhost\")) {\n+      workerName = \"localhost\";\n+    } else {\n+      workerName = `${workerUrl.split(\"//\")[1].split(\".\")[0]}`;\n+    }\n+    PluginRuntimeInfo.getInstance({ ...env, CLOUFLARE_WORKER_NAME: workerName });","score":{"reward":8.856,"formatting":{"content":{"p":{"score":0,"elementCount":2},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":68,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":69.36950980392159,"syllables":92,"sentences":3,"score":0.9063049019607842},"multiplier":1,"relevance":0.9}},{"id":2571618150,"content":"@gentlementlegen I think you missed my [comment](https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1901933841)","url":"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2571618150","commentType":"PULL_COLLABORATOR","score":{"reward":1.335,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":54.70142857142861,"syllables":12,"sentences":1,"score":0.947014285714286},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2526914779,"effect":{"addition":162,"deletion":46},"reward":6.24,"priority":3},{"reviewId":2530944519,"effect":{"addition":12,"deletion":26},"reward":1.14,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-sdk/pull/42"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 18 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>⚠️ Your rewards have been limited to the task price of 18 XP.</h6><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>7.38</td></tr><tr><td>Review</td><td>Comment</td><td>9</td><td>29.946</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42\" target=\"_blank\" rel=\"noopener\">#42</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+162 -46</td><td>3</td><td>6.24</td></tr><tr><td>+12 -26</td><td>3</td><td>1.14</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900446156\" target=\"_blank\" rel=\"noopener\">To get the worker name kernel needs to be updated to send URL in&hellip;</a></h6></td><td><details><summary>2.59</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 69&#13;  wordValue: 0.1&#13;  result: 2.59&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.748</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900446628\" target=\"_blank\" rel=\"noopener\">These two ifs could be merged</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.422</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900446783\" target=\"_blank\" rel=\"noopener\">what does &#96;installation.account.name&#96; refer to?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.5</td><td>3</td><td>0.78</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900448597\" target=\"_blank\" rel=\"noopener\">You could just set &#96;logMessage&#96; to &#96;content&#96; in &hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.675</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900448716\" target=\"_blank\" rel=\"noopener\">why not &#96;message instanceof LogReturn&#96;?</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.8</td><td>3</td><td>0.792</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1900449222\" target=\"_blank\" rel=\"noopener\">What's the point of assigning it again? I think it would look cl&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.96</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1901931808\" target=\"_blank\" rel=\"noopener\">it's fine, I just didn't know what it is</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.378</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#discussion_r1901933841\" target=\"_blank\" rel=\"noopener\">First time I'm hearing of this. Why would &#96;fetch&#96; manipu&hellip;</a></h6></td><td><details><summary>2.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 68&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.856</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/42#issuecomment-2571618150\" target=\"_blank\" rel=\"noopener\">@gentlementlegen I think you missed my [comment](https://github.&hellip;</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.335</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_39.json","json":{"gentlementlegen":{"userId":9807008,"total":604.64,"task":{"reward":600,"multiplier":1},"comments":[{"id":2294401975,"content":"We should have the capability of running the plugins inside Workers, which would be very useful for short-lived tasks that require responsiveness like commands for example. Currently, we only support Actions, which works fine but takes ~1 minute response time, which is not user friendly when it comes to using commands with the bot.\r\nIn the configuration, for each plugin it is possible to specify a [`type`](https://github.com/ubiquity/ubiquibot-kernel/blob/c8da3c0e07eb2735b0e7d63d5f2997a138fd2135/src/github/types/plugin-configuration.ts#L37) that should determine what kind of plugin it is. A new value like `worker` should be added, and should make the plugin run on a worker instead of calling a GitHub Action.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.64,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":98,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":55.06750000000001,"syllables":147,"sentences":4,"score":0.950675},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 604.64 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>600</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.64</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39\" target=\"_blank\" rel=\"noopener\">We should have the capability of running the plugins inside Work&hellip;</a></h6></td><td><details><summary>3.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 98&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>1</td><td>1</td><td>4.64</td></tr></tbody></table></details>"},"0x4007":{"total":71.148,"userId":4975670,"comments":[{"id":2111838546,"content":"My vision was to derive the type based on the plugin id in the config and whether it includes a protocol prefix (https://) \nFor example:\nid: https://bot-assistive-pricing.workers.dev\nNo protocol prefix means that it's hosted on GitHub. \nid: ubiquibot/assistive-pricing","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2111838546","commentType":"ISSUE_COLLABORATOR","score":{"reward":16.02,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":64.58423913043481,"syllables":71,"sentences":4,"score":0.9541576086956519},"multiplier":1,"relevance":1}},{"id":2119192268,"content":"Should be 3. \nAs we discussed some time ago, all auth should be from the kernel. The plugins should just act as functions that accept input and return output to the kernel. The kernel should be the only module with direct read/write access to the partner repositories. \nI assume that by passing the context object, the plugins have all the data they need. If it's a lot of data, in the further future in the config we can specify what data needs to be passed, but for now, we should pass everything which includes all the org, repo, issue, pull, webhook event information.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119192268","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.84,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":105,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":69.02107142857145,"syllables":149,"sentences":6,"score":0.9097892857142855},"multiplier":1,"relevance":1}},{"id":2119281445,"content":"We should not be passing the token. I think it's a lazy approach and introduces security issues. \nPerhaps for a prototype we can pass the token, but for v1 we should never pass the authentication token to any plugins. We should only pass the data they need.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119281445","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.97,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":69.5175,"syllables":71,"sentences":4,"score":0.904825},"multiplier":1,"relevance":1}},{"id":2119300239,"content":"Due to the serverless architecture we can not preserve the token \"in memory\" during the entire plugin execution workflow. \nBecause of this I agree we can store it temporarily in something like KV. Not to introduce new technologies but a technology like Redis might seem to be appropriate as well.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119300239","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.176,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":46.09833333333336,"syllables":85,"sentences":3,"score":0.8609833333333335},"multiplier":1,"relevance":0.8}},{"id":2119339521,"content":"GitHub apps can definitely access private repo info I implemented that personally. \nDon't pass the auth. Just pass all the contextual information please reread my comments carefully.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119339521","commentType":"ISSUE_COLLABORATOR","score":{"reward":6.075,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":40.24738095238098,"syllables":52,"sentences":3,"score":0.8024738095238098},"multiplier":1,"relevance":0.9}},{"id":2122678056,"content":"I'm sure this is possible to do. Like I said before we can consider passing token auth for the prototype but in the future, for security reasons, all read/writes should proxy through the kernel. I'm sure we can build a generalized proxy of sorts, and just ban certain APIs from making it to the other side.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2122678056","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.64,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":59,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":67.85977401129944,"syllables":83,"sentences":3,"score":0.9214022598870056},"multiplier":1,"relevance":0.9}},{"id":1606473926,"content":"```suggestion\n    const ref = isGithubPluginObject ? plugin.ref ?? (await getDefaultBranch(context, plugin.owner, plugin.repo)) : null;\n```\nHow about no empty strings?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1606473926","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -73,13 +84,17 @@ async function handleEvent(event: EmitterWebhookEvent, eventHandler: InstanceTyp\n       inputs: new Array(pluginChain.uses.length),\n     };\n \n-    const ref = plugin.ref ?? (await getDefaultBranch(context, plugin.owner, plugin.repo));\n+    const ref = isGithubPluginObject ? plugin.ref ?? (await getDefaultBranch(context, plugin.owner, plugin.repo)) : \"\";","score":{"reward":1.56,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.8}},{"id":1606474356,"content":"Does it make sense to throw messages instead?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1606474356","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -33,6 +34,10 @@ export async function repositoryDispatch(context: GitHubContext<\"repository_disp\n   }\n \n   const currentPlugin = state.pluginChain[state.currentPlugin];\n+  if (!isGithubPlugin(currentPlugin.plugin)) {\n+    console.error(\"Trying to call a non-github plugin.\");\n+    return;","score":{"reward":1.911,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.7}},{"id":1606477492,"content":"I wonder if there are any special headers we should include for plugin developers. For example, org/repo information. Perhaps some type of auth mechanism etc.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1606477492","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -32,6 +32,17 @@ export async function dispatchWorkflow(context: GitHubContext, options: Workflow\n   });\n }\n \n+export async function dispatchWorker(targetUrl: string, payload: Record<string, unknown>) {\n+  const result = await fetch(targetUrl, {\n+    body: JSON.stringify(payload),\n+    method: \"POST\",\n+    headers: {\n+      \"Content-Type\": \"application/json\",","score":{"reward":6.075,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":58.12294871794876,"syllables":43,"sentences":3,"score":0.9812294871794875},"multiplier":1,"relevance":0.9}},{"id":2119339694,"content":"@rndquu youre admin please facilitate","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#issuecomment-2119339694","commentType":"PULL_COLLABORATOR","score":{"reward":0.201,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":49.48000000000002,"syllables":9,"sentences":1,"score":0.8948000000000002},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":2065733836,"effect":{"addition":108,"deletion":48},"reward":4.68,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 71.148 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>4.68</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>56.721</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>9.747</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42\" target=\"_blank\" rel=\"noopener\">#42</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+108 -48</td><td>3</td><td>4.68</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2111838546\" target=\"_blank\" rel=\"noopener\">My vision was to derive the type based on the plugin id in the c&hellip;</a></h6></td><td><details><summary>4.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>1</td><td>3</td><td>16.02</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119192268\" target=\"_blank\" rel=\"noopener\">Should be 3. As we discussed some time ago, all auth should be &hellip;</a></h6></td><td><details><summary>2.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 105&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>1</td><td>3</td><td>9.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119281445\" target=\"_blank\" rel=\"noopener\">We should not be passing the token. I think it's a lazy approach&hellip;</a></h6></td><td><details><summary>2.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 48&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>1</td><td>3</td><td>8.97</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119300239\" target=\"_blank\" rel=\"noopener\">Due to the serverless architecture we can not preserve the token&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.176</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119339521\" target=\"_blank\" rel=\"noopener\">GitHub apps can definitely access private repo info I implemente&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.075</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2122678056\" target=\"_blank\" rel=\"noopener\">I'm sure this is possible to do. Like I said before we can consi&hellip;</a></h6></td><td><details><summary>2.51</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 59&#13;  wordValue: 0.1&#13;  result: 2.51&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.64</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1606473926\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionconst ref = isGithubPluginObject ?&hellip;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.56</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1606474356\" target=\"_blank\" rel=\"noopener\">Does it make sense to throw messages instead?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.911</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1606477492\" target=\"_blank\" rel=\"noopener\">I wonder if there are any special headers we should include for &hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.075</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#issuecomment-2119339694\" target=\"_blank\" rel=\"noopener\">@rndquu youre admin please facilitate</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.201</td></tr></tbody></table></details>"},"whilefoo":{"total":52.057,"userId":139262667,"comments":[{"id":2119240879,"content":"Using cloudflare queues requires plugins to be in the same Cloudflare account as far as I know and also the messages are not delivered in the same [order](https://developers.cloudflare.com/queues/reference/how-queues-works/#what-is-a-queue).\r\nSecond option also requires plugins to be in the same account, which is fine if we only have our own plugins but we also plan to support third party plugins. We could use this option only for our own plugins but this increases complexity since we have to support two ways to call plugins.\r\nThird option works with both our own plugins and third-party plugins but has another problem (aside from the one @gentlementlegen mentioned where our bot token which has read/write access to the repo is shared with any URL endpoint) that the callback mechanism (like `repository_dispatch` for Actions plugins) needs to be secure.\r\nOne idea is to generate a unique ID for every plugin in the chain alongside the state ID which is same for all plugins in the executing chain. This is passed with the HTTPS request and passed back in the response.\r\nThe problem with Workers plugins is that you can't see the deployed code like on Github, but if we use Workers plugins only for our first-party plugins and only allow Github Actions for third-party plugins, then we avoid this problem and can use option 2 which is safer","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119240879","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.092,"formatting":{"content":{"p":{"score":0,"elementCount":5},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":226,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":55.02606194690266,"syllables":318,"sentences":7,"score":0.9502606194690266},"multiplier":1,"relevance":0.95}},{"id":2119328098,"content":"The reason we pass token to the plugin is because if a repo is private then plugin can't access it, also some plugins like assistive-pricing set labels so they need write access to the repo. \r\nEDIT: I think a Github app can't access a repo even if it's public if the app is not installed on the repo. The plugin could use a personal access token (which is bound to a user) which isn't really its intended use","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119328098","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.207,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":83,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":61.53646586345383,"syllables":115,"sentences":3,"score":0.9846353413654617},"multiplier":1,"relevance":0.9}},{"id":2122434485,"content":"I've just tested to be sure. A Github App can access any public repo, but it can only access private repo if the app is installed on that repo.\r\nIf we don't pass token then the plugin needs its own Github app which means it won't be able to access private repos or do any write actions like posting a comment or assigning a label.\r\nWe can solve comments by letting the plugin return comment HTML back to the kernel, but we can't really proxy every write action through the kernel","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2122434485","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.543,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":95,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":66.96032894736844,"syllables":130,"sentences":4,"score":0.9303967105263156},"multiplier":1,"relevance":0.85}},{"id":1608963527,"content":"I suppose worker plugins will be only used for short-running tasks so it's probably fine to get results back directly from the response instead of having a callback","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1608963527","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -32,6 +32,17 @@ export async function dispatchWorkflow(context: GitHubContext, options: Workflow\n   });\n }\n \n+export async function dispatchWorker(targetUrl: string, payload: Record<string, unknown>) {\n+  const result = await fetch(targetUrl, {\n+    body: JSON.stringify(payload),\n+    method: \"POST\",\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+    },\n+  });\n+  return result.json();","score":{"reward":5.04,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":52.305000000000035,"syllables":44,"sentences":1,"score":0.9230500000000004},"multiplier":1,"relevance":0.7}},{"id":1608965854,"content":"if previous plugin is a github plugin, then next plugin might be a worker plugin so you should call `dispatchWorker` or `dispatchWorkflow` depending on what the next plugin is","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1608965854","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -46,6 +50,9 @@ export async function repositoryDispatch(context: GitHubContext<\"repository_disp\n     await context.eventHandler.pluginChainState.put(pluginOutput.state_id, state);\n     return;\n   }\n+  if (!isGithubPlugin(nextPlugin.plugin)) {\n+    throw new Error(\"Trying to call a non-github plugin.\");","score":{"reward":6.237,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":60.363333333333344,"syllables":38,"sentences":1,"score":0.9963666666666665},"multiplier":1,"relevance":0.9}},{"id":1610574134,"content":"We could make a callback but it needs to secure, one idea I posted in the issue was to generate a UUID every time you call a worker plugin and store it in the KV, and in the callback we can validate that state id and invocation id match","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1610574134","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -32,6 +32,17 @@ export async function dispatchWorkflow(context: GitHubContext, options: Workflow\n   });\n }\n \n+export async function dispatchWorker(targetUrl: string, payload: Record<string, unknown>) {\n+  const result = await fetch(targetUrl, {\n+    body: JSON.stringify(payload),\n+    method: \"POST\",\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+    },\n+  });\n+  return result.json();","score":{"reward":7.104,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":49,"wordValue":0.1,"result":2.37},"readability":{"fleschKincaid":43.14897959183676,"syllables":66,"sentences":1,"score":0.8314897959183676},"multiplier":1,"relevance":0.8}},{"id":2135563732,"content":"we can merge this, right?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#issuecomment-2135563732","commentType":"PULL_COLLABORATOR","score":{"reward":0.414,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"reviews":[{"reviewId":2069641841,"effect":{"addition":106,"deletion":48},"reward":4.62,"priority":3},{"reviewId":2074399543,"effect":{"addition":33,"deletion":27},"reward":1.8,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 52.057 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>6.42</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>26.842</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>18.795</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42\" target=\"_blank\" rel=\"noopener\">#42</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+106 -48</td><td>3</td><td>4.62</td></tr><tr><td>+33 -27</td><td>3</td><td>1.8</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119240879\" target=\"_blank\" rel=\"noopener\">Using cloudflare queues requires plugins to be in the same Cloud&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 226&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.95</td><td>3</td><td>9.092</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2119328098\" target=\"_blank\" rel=\"noopener\">The reason we pass token to the plugin is because if a repo is p&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 83&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>3</td><td>9.207</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/39#issuecomment-2122434485\" target=\"_blank\" rel=\"noopener\">I've just tested to be sure. A Github App can access any public &hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 95&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.85</td><td>3</td><td>8.543</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1608963527\" target=\"_blank\" rel=\"noopener\">I suppose worker plugins will be only used for short-running tas&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.04</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1608965854\" target=\"_blank\" rel=\"noopener\">if previous plugin is a github plugin, then next plugin might be&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.237</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#discussion_r1610574134\" target=\"_blank\" rel=\"noopener\">We could make a callback but it needs to secure, one idea I post&hellip;</a></h6></td><td><details><summary>2.37</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 49&#13;  wordValue: 0.1&#13;  result: 2.37&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.104</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#issuecomment-2135563732\" target=\"_blank\" rel=\"noopener\">we can merge this, right?</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.414</td></tr></tbody></table></details>"},"rndquu":{"total":3.066,"userId":119500907,"comments":[{"id":2119834796,"content":"@gentlementlegen \r\nCheck this [workflow](https://github.com/ubiquity/ubiquibot-kernel/actions/runs/9149319076/workflow?pr=42)\r\nHow it works right now:\r\n1. PR is opened\r\n2. The **development** branch is checked out [here](https://github.com/ubiquity/ubiquibot-kernel/actions/runs/9149319076/workflow?pr=42#L22) (not the PR branch because the workflow is running on `pull_request_target`)\r\n3. Tests are run against the development branch\r\nIf [here](https://github.com/ubiquity/ubiquibot-kernel/actions/runs/9149319076/workflow?pr=42#L22) we change the code to checkout the PR branch using `pull_request_target` then any fork will have access to [these](https://github.com/ubiquity/ubiquibot-kernel/actions/runs/9149319076/workflow?pr=42#L9-L11) env variables.\r\nSo right now [this](https://github.com/ubiquity/ubiquibot-kernel/actions/runs/9149319076/workflow?pr=42) workflow is literally 1 line away from leaking secrets.\r\nThere are viable 2 options:\r\n1. Refactor tests and mock everything in a way that we wouldn't need to provide any env vars\r\n2. Keep using [this](https://github.com/ubiquity/ubiquibot-kernel/actions/runs/9149319076/workflow?pr=42) workflow with `pull_request_target`, checkout the PR branch [here](https://github.com/ubiquity/ubiquibot-kernel/actions/runs/9149319076/workflow?pr=42#L22), hardcode env variables and use some dummy values that are used only for testing","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#issuecomment-2119834796","commentType":"PULL_COLLABORATOR","score":{"reward":3.066,"formatting":{"content":{"p":{"score":0,"elementCount":11},"ol":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":5},"a":{"score":1,"elementCount":1}},"result":1.5},"priority":3,"words":{"wordCount":117,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":51.55769230769231,"syllables":160,"sentences":3,"score":0.9155769230769231},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 3.066 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>3.066</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/42#issuecomment-2119834796\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Check this [workflow](https://github.com/ubiq&hellip;</a></h6></td><td><details><summary>4.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 11&#13;    ol:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.5&#13;regex:&#13;  wordCount: 117&#13;  wordValue: 0.1&#13;  result: 2.51&#13;</pre></details></td><td>0.2</td><td>3</td><td>3.066</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_3.json","json":{"EresDev":{"userId":11886219,"total":75,"task":{"reward":75,"multiplier":0.5},"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1"},{"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1"},{"url":"https://github.com/ubiquity-os/plugin-sdk/pull/70"},{"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/3"},{"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/4"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 75 XP ]</a>&nbsp;</h3><h6>@EresDev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>0.5</td><td>75</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"whilefoo":{"userId":139262667,"total":83.473,"task":{"reward":75,"multiplier":0.5},"comments":[{"id":2313791707,"content":"Resolves https://github.com/ubiquity-os/plugins-wishlist/issues/3","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1","commentType":"PULL_SPECIFICATION","score":{"reward":0.58,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":49.48000000000002,"syllables":18,"sentences":2,"score":0.8948000000000002},"multiplier":1,"relevance":0.4}},{"id":1944621643,"content":"You're right, I'll use the new decryption method that checks the org/repo","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944621643","commentType":"PULL_AUTHOR","diffHunk":"@@ -0,0 +1 @@\n+GITHUB_PAT_ENCRYPTED: 4SjBaP65FdfrDM3Mt9c9IyNRDYL7LvvvBHs6WoM3tXRzQRDpHoh8_-x_TnT-5P8Im2QS1Ib-NCMAQo5KIRqp9atIT1zCXi1W-PLyKnnPZh0eMoI-q48HUQ","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0,"result":0},"readability":{"fleschKincaid":84.45000000000003,"syllables":19,"sentences":1,"score":0.7554999999999997},"multiplier":0,"relevance":0.7}},{"id":1948894978,"content":"It should've spell checked markdown files because it's not listed in `ignorePaths`, if we use `files` instead of `ignorePaths` then you need to explicitly set all paths","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948894978","commentType":"PULL_AUTHOR","diffHunk":"@@ -1,93 +1,54 @@\n-# `@ubiquity-os/plugin-template`\n+# `@ubiquity-os/personal-agent`\n \n-## Prerequisites\n+The Personal Agent is a [UbiquityOS](https://github.com/apps/ubiquity-os) plugin designed to run actions in user's Github account. It is forked, configured, and hosted by a Github user. Any issue comment beginning with `@username` is forwarded to this plugin for processing. Find below a list features offered by the plugin:\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+- `@username say hello`\n+  The plugin should respond with a `Hello, world!`.\n \n-## Getting Started\n+More features coming soon...\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `bun`.\n+Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the [Personal Agent](https://github.com/ubiquity-os-marketplace/personal-agent) plugin is handled by [Personal Agent Bridge](https://github.com/ubiquity-os-marketplace/personal-agent-bridge).\n \n-## Creating a new plugin\n+## How to set up?\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+- Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-input.ts](./src/types/plugin-input.ts) to match the `with:` settings in your org or repo level configuration.\n+- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n \n-- Your plugin config should look similar to this:\n+- Generate a Github clasic Personal Access Token PAT with access to repositories.","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0,"result":0},"readability":{"fleschKincaid":73.06807692307696,"syllables":33,"sentences":1,"score":0.8693192307692305},"multiplier":0,"relevance":0.8}},{"id":1948913671,"content":"it's automatically updated, it will be `development` once it merges","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948913671","commentType":"PULL_AUTHOR","diffHunk":"@@ -1,25 +1,11 @@\n {\n-  \"name\": \"ts-template\",\n-  \"description\": \"ts-template for UbiquityOS plugins.\",\n+  \"name\": \"Personal Agent\",\n+  \"description\": \"Personal agent processes commands from UbiquityOS in user's Github actions\",\n   \"ubiquity:listeners\": [\"issue_comment.created\"],\n-  \"commands\": {\n-    \"hello\": {\n-      \"ubiquity:example\": \"/hello argument\",\n-      \"description\": \"Hello command with an argument.\"\n-    }\n-  },\n   \"configuration\": {\n     \"default\": {},\n     \"type\": \"object\",\n-    \"properties\": {\n-      \"configurableResponse\": {\n-        \"default\": \"Hello, world!\",\n-        \"type\": \"string\"\n-      },\n-      \"customStringsUrl\": {\n-        \"type\": \"string\"\n-      }\n-    }\n+    \"properties\": {}\n   },\n-  \"homepage_url\": \"https://your-plugin-name-development.ubiquity.workers.dev\"\n+  \"homepage_url\": \"https://your-plugin-name-agent.ubiquity.workers.dev\"","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0,"result":0},"readability":{"fleschKincaid":61.32500000000002,"syllables":16,"sentences":1,"score":0.9867499999999998},"multiplier":0,"relevance":0.6}},{"id":1948914869,"content":"The bridge doesn't have functionality to generate a signature, I'd have to copy a lot of code from the kernel to the bridge, but then it'd make more sense to just have this as part of the kernel like I suggested before.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948914869","commentType":"PULL_AUTHOR","diffHunk":"@@ -13,6 +13,6 @@ export default createActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\n     envSchema: envSchema,\n     ...(process.env.KERNEL_PUBLIC_KEY && { kernelPublicKey: process.env.KERNEL_PUBLIC_KEY }),\n     postCommentOnError: true,\n-    bypassSignatureVerification: process.env.NODE_ENV === \"local\",\n+    bypassSignatureVerification: true,","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":45,"wordValue":0,"result":0},"readability":{"fleschKincaid":52.12000000000002,"syllables":58,"sentences":1,"score":0.9212000000000002},"multiplier":0,"relevance":0.9}},{"id":1948919564,"content":"Technically this would be possible if user's personal-agent had the Ubiquity app installed, but the problem would be that the SDK creates an Octokit instance from the `authToken` received from the kernel/bridge, so if we didn't any token it would fail.\r\nWe could modify the SDK to look for env variable if `authToken` is empty or supply it when creating the plugin like\r\n```js\r\ncreateActionsPlugin(handler, { customToken: env.GITHUB_PAT })\r\n```","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948919564","commentType":"PULL_AUTHOR","diffHunk":"@@ -0,0 +1 @@\n+GITHUB_PAT_ENCRYPTED: S6K1T2liquv_G9yS2GxGf20NSHMAVDmX7DDx9-hnjG9518z2TKiWuEZrJobREMFzbBPiCvS1R3peatoiyR6phdjVWmeFM4FNAFp6neO5iUu2kVFVU-r2XvXuFAj-rL8RKEF3XC6yInobjcai","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":65,"wordValue":0,"result":0},"readability":{"fleschKincaid":52.804423076923115,"syllables":93,"sentences":2,"score":0.9280442307692311},"multiplier":0,"relevance":0.8}},{"id":1948921461,"content":"The bridge only triggers the personal agent if it matches the owner but I can add the check in the personal agent if you think it's worth","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948921461","commentType":"PULL_AUTHOR","diffHunk":"@@ -23,16 +23,14 @@ on:\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Personal Agent\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n     environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}\n     env:\n       PLUGIN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n       KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n       LOG_LEVEL: ${{ secrets.LOG_LEVEL || 'info' }}","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":28,"wordValue":0,"result":0},"readability":{"fleschKincaid":66.62214285714289,"syllables":37,"sentences":1,"score":0.9337785714285711},"multiplier":0,"relevance":0.5}},{"id":1957194644,"content":"You're approving that we should move the bridge to the kernel?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957194644","commentType":"PULL_AUTHOR","diffHunk":"@@ -13,6 +13,6 @@ export default createActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\n     envSchema: envSchema,\n     ...(process.env.KERNEL_PUBLIC_KEY && { kernelPublicKey: process.env.KERNEL_PUBLIC_KEY }),\n     postCommentOnError: true,\n-    bypassSignatureVerification: process.env.NODE_ENV === \"local\",\n+    bypassSignatureVerification: true,","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0,"result":0},"readability":{"fleschKincaid":88.905,"syllables":15,"sentences":1,"score":0.71095},"multiplier":0,"relevance":0.3}},{"id":1957299566,"content":"Ah yes, we moved the `signPayload` to the SDK however I'd still need to copy the serialization function, but it seems counter-productive to duplicate code. I guess if we are starting to have plugins which call workflows on kernel's behalf we could also move that logic to the SDK.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957299566","commentType":"PULL_AUTHOR","diffHunk":"@@ -13,6 +13,6 @@ export default createActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\n     envSchema: envSchema,\n     ...(process.env.KERNEL_PUBLIC_KEY && { kernelPublicKey: process.env.KERNEL_PUBLIC_KEY }),\n     postCommentOnError: true,\n-    bypassSignatureVerification: process.env.NODE_ENV === \"local\",\n+    bypassSignatureVerification: true,","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":51,"wordValue":0,"result":0},"readability":{"fleschKincaid":63.17602941176473,"syllables":71,"sentences":2,"score":0.9682397058823526},"multiplier":0,"relevance":0.8}},{"id":2313807531,"content":"Resolves https://github.com/ubiquity-os/plugins-wishlist/issues/3\r\nRelated PR: https://github.com/ubiquity-os-marketplace/personal-agent/pull/1\r\nQA: https://github.com/ubiquibot-whilefoo-testing/testing/issues/12\r\nBased on: https://github.com/EresDevOrg/personal-agent-bridge/pull/3\r\nWhat I changed:\r\n- uses new template\r\n- bridge passes the classic PAT tokens to the `personal-agent` via `authToken` which automatically gets picked up by the SDK so we don't need two tokens like before\r\n- some other small improvements\r\nOne caveat: the signature is just a dummy value and signature verification is disabled in `personal-agent` because the plugin would need `APP_ID` and `APP_PRIVATE_KEY` along with the whole kernel code just to generate a signature. In this case the security is not affected because Github permissions are still needed to trigger the workflow.","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1","commentType":"PULL_SPECIFICATION","score":{"reward":7.893,"formatting":{"content":{"p":{"score":0,"elementCount":9},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3},"a":{"score":1,"elementCount":4}},"result":4.3},"priority":1,"words":{"wordCount":92,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":48.603197674418624,"syllables":208,"sentences":6,"score":0.8860319767441862},"multiplier":1,"relevance":0.9}},{"id":2634120159,"content":"This seems wrong because they are imported, I'l add it to ignore list for now","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2634120159","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0,"result":0},"readability":{"fleschKincaid":90.13250000000001,"syllables":19,"sentences":1,"score":0.6986749999999999},"multiplier":0,"relevance":0.6}},{"id":2636807856,"content":"Yes, technically you can target `ubiquity-os-marketplace/personal-agent-bridge@bridge` in the config and fork [personal-agent](https://github.com/ubiquity-os-marketplace/personal-agent/tree/agent) to your personal account, both repos need the Github app installed, and then you can trigger it with a mention","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2636807856","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":32,"wordValue":0,"result":0},"readability":{"fleschKincaid":47.45500000000003,"syllables":48,"sentences":1,"score":0.8745500000000003},"multiplier":0,"relevance":0.8}},{"id":2639682921,"content":"It seems the README doesn't specify that the file should be at `.github/personal-agent.config.yml`","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2639682921","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0,"result":0},"readability":{"fleschKincaid":89.51692307692309,"syllables":16,"sentences":1,"score":0.704830769230769},"multiplier":0,"relevance":0.7}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 83.473 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>0.5</td><td>75</td></tr><tr><td>Review</td><td>Comment</td><td>13</td><td>8.473</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquity-os/plugins-wishlist/issues/3</a></h6></td><td><details><summary>1.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.58</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944621643\" target=\"_blank\" rel=\"noopener\">You're right, I'll use the new decryption method that checks the&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948894978\" target=\"_blank\" rel=\"noopener\">It should've spell checked markdown files because it's not liste&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948913671\" target=\"_blank\" rel=\"noopener\">it's automatically updated, it will be &#96;development&#96; onc&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948914869\" target=\"_blank\" rel=\"noopener\">The bridge doesn't have functionality to generate a signature, I&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948919564\" target=\"_blank\" rel=\"noopener\">Technically this would be possible if user's personal-agent had &hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 65&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948921461\" target=\"_blank\" rel=\"noopener\">The bridge only triggers the personal agent if it matches the ow&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.5</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957194644\" target=\"_blank\" rel=\"noopener\">You're approving that we should move the bridge to the kernel?</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.3</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957299566\" target=\"_blank\" rel=\"noopener\">Ah yes, we moved the &#96;signPayload&#96; to the SDK however I'&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquity-os/plugins-wishlist/issues/&hellip;</a></h6></td><td><details><summary>6.93</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 9&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 4&#13;  result: 4.3&#13;regex:&#13;  wordCount: 92&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>1</td><td>7.893</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2634120159\" target=\"_blank\" rel=\"noopener\">This seems wrong because they are imported, I'l add it to ignore&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2636807856\" target=\"_blank\" rel=\"noopener\">Yes, technically you can target &#96;ubiquity-os-marketplace/per&hellip;</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2639682921\" target=\"_blank\" rel=\"noopener\">It seems the README doesn't specify that the file should be at &&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr></tbody></table></details>"},"0x4007":{"total":150,"userId":4975670,"comments":[{"id":2382648273,"content":"@gentlementlegen how would this look from a plugin config standpoint? Perhaps we make a special adapter? For example, we attach an `issues_comment.created` plugin that will route the request to one's \"personal agent\"?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2382648273","commentType":"ISSUE_AUTHOR","score":{"reward":7.211,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":61.17708333333337,"syllables":51,"sentences":3,"score":0.9882291666666663},"multiplier":1,"relevance":0.95}},{"id":2382835575,"content":"I take that as a yes. Then we can make the only config option to be the host repository name. For example:\r\n```yml\r\n   - with:\r\n       name: ubiquity-os-agent\r\n```\r\nThen it will relay the payload to 0x4007/ubiquity-os-agent","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2382835575","commentType":"ISSUE_AUTHOR","score":{"reward":6.75,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":72.61545454545457,"syllables":48,"sentences":3,"score":0.8738454545454544},"multiplier":1,"relevance":0.9}},{"id":2386785358,"content":"@sshivaditya2019 this is becoming recursive so I don't think its working correctly. It just keeps stacking more every time I create a new issue.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2386785358","commentType":"ISSUE_AUTHOR","score":{"reward":4.29,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":62.17150000000001,"syllables":39,"sentences":2,"score":0.978285},"multiplier":1,"relevance":0.65}},{"id":2504011409,"content":"2. The bridge makes sense. This was basically my suggestion [here](https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2382648273).","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2504011409","commentType":"ISSUE_AUTHOR","score":{"reward":3.213,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":1}},"result":0.1},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":74.86000000000003,"syllables":15,"sentences":2,"score":0.8513999999999997},"multiplier":1,"relevance":0.85}},{"id":2510616305,"content":"Normally you're supposed to open a pull on your own repository and link it here so that we can keep track of progress. You should do that now to maintain your assignment.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2510616305","commentType":"ISSUE_AUTHOR","score":{"reward":4.482,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":74.72386363636366,"syllables":45,"sentences":2,"score":0.8527613636363633},"multiplier":1,"relevance":0.6}},{"id":2513509400,"content":"Actually it only works if you target the default branch, `development`","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2513509400","commentType":"ISSUE_AUTHOR","score":{"reward":2.394,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":69.78500000000001,"syllables":15,"sentences":1,"score":0.9021499999999999},"multiplier":1,"relevance":0.7}},{"id":2519363349,"content":"This is perfectly acceptable. \nIt must be configured to do so with the yml file so this shouldn't happen unintentionally \nWe have our built in encryption with the X25519 key so we can do the same if necessary.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2519363349","commentType":"ISSUE_AUTHOR","score":{"reward":6.696,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":61.2271153846154,"syllables":58,"sentences":2,"score":0.9877288461538459},"multiplier":1,"relevance":0.8}},{"id":2677237871,"content":"@gentlementlegen disqualifier seems to repeat itself when there are multiple assignees.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2677237871","commentType":"ISSUE_AUTHOR","score":{"reward":1.008,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":11.088181818181852,"syllables":24,"sentences":1,"score":0.5108818181818185},"multiplier":1,"relevance":0.3}},{"id":2704116287,"content":"Somebody should go in and change all the Cautions to Warnings unless they are real errors bubbled up (like real thrown errors with internal problems)","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2704116287","commentType":"ISSUE_AUTHOR","score":{"reward":1.326,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":59.636000000000024,"syllables":36,"sentences":1,"score":0.9963600000000002},"multiplier":1,"relevance":0.2}},{"id":2705183260,"content":"I feel like we need a slash command to handle this edge case. I don't like the idea of even an admin (me) not being able to push this through.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2705183260","commentType":"ISSUE_AUTHOR","score":{"reward":1.392,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":90.12830645161293,"syllables":37,"sentences":2,"score":0.6987169354838707},"multiplier":1,"relevance":0.2}},{"id":2705344945,"content":"You can also \"link back\" or reference other issues to pollute their timelines as well and there's nothing the repository maintainers can do about removing those.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2705344945","commentType":"ISSUE_AUTHOR","score":{"reward":1.98,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":38.43000000000001,"syllables":45,"sentences":1,"score":0.7843000000000001},"multiplier":1,"relevance":0.3}},{"id":2705585992,"content":"Hmm something tells me this task time was under estimated. \nWe should have a protocol for this that is trust minimized. \nThe labels are used as training data for the fine tuned model that will be automatically setting labels for us.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2705585992","commentType":"ISSUE_AUTHOR","score":{"reward":2.529,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":67.09504065040652,"syllables":61,"sentences":3,"score":0.9290495934959349},"multiplier":1,"relevance":0.3}},{"id":2708788887,"content":"There isn't an incentive to lie. It's an interesting idea for collaborators only!","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2708788887","commentType":"ISSUE_AUTHOR","score":{"reward":0.93,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":52.58250000000001,"syllables":26,"sentences":2,"score":0.9258250000000001},"multiplier":1,"relevance":0.2}},{"id":2710128222,"content":"It can because we already see this happen with disqualifier. \nI think this makes sense, yes. \nAs a side note I expect that most pulls the bot might not have access to, like envision a new contributor. It's unlikely they installed the bot. \nBut it would look the best if we see the bot close everything out before distributing rewards.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2710128222","commentType":"ISSUE_AUTHOR","score":{"reward":2.862,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":73.79298360655739,"syllables":87,"sentences":5,"score":0.8620701639344261},"multiplier":1,"relevance":0.3}},{"id":2716050053,"content":"I think if their fork is targeting our repository we don't own the pull and can't admin it.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2716050053","commentType":"ISSUE_AUTHOR","score":{"reward":1.122,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":72.32500000000003,"syllables":27,"sentences":1,"score":0.8767499999999997},"multiplier":1,"relevance":0.2}},{"id":2716056845,"content":"For now you can post here how long this should have taken for reference.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2716056845","commentType":"ISSUE_AUTHOR","score":{"reward":0.84,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":89.89642857142859,"syllables":17,"sentences":1,"score":0.7010357142857141},"multiplier":1,"relevance":0.2}},{"id":2719297294,"content":"We definitely should increase focus on the conversation and far less on repository details @shiv810","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2719297294","commentType":"ISSUE_AUTHOR","score":{"reward":0.876,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":28.05000000000001,"syllables":29,"sentences":1,"score":0.6805000000000001},"multiplier":1,"relevance":0.2}},{"id":2719447695,"content":"@whilefoo could you help me make a personal agent that will rewrite and correct typos from mobile? I can possibly drop in a signature when writing from mobile like a line break at the end (the keyboard on iOS always covers the bottom lines of my draft)","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2719447695","commentType":"ISSUE_AUTHOR","score":{"reward":6.342,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":60.58250000000001,"syllables":68,"sentences":2,"score":0.9941749999999999},"multiplier":1,"relevance":0.7}},{"id":2720650728,"content":"It only rewrites when I double line break at the end","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2720650728","commentType":"ISSUE_AUTHOR","score":{"reward":2.124,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":87.99727272727276,"syllables":14,"sentences":1,"score":0.7200272727272724},"multiplier":1,"relevance":0.6}},{"id":2208105478,"content":"# Task\r\n- This will be registered under `issues_comment.created`\r\n- This will look for username tags at the beginning of any comment, and relay everything to their self hosted plugin. \r\n- The rest of the magic happens within their own self hosted plugin so this should be a super simple plugin to build.\r\n### Config\r\nThe host repository name. For example:\r\n```yml\r\nplugins:\r\n  - uses:\r\n    - plugin: ubiquity-os-marketplace/ubiquity-os-agent\r\n      with:\r\n        target: ubiquity-os-agent\r\n```\r\nThen comments starting with `@0x4007` will relay the full `issues_comment.created` payload to `0x4007/ubiquity-os-agent`\r\n# Context\r\nThis one I'm very excited about. The vision here is that we can make custom user \"agents\" (i.e. plugins with LLMs) that are hosted by the user's GitHub (so they can modify it) and will automate actions for the user (with their PAT to authorize as them) with the full context of a particular repository/organization.  \r\n- We make a repository that power users are intended to fork, for example `@ubiquibot/personal-agent` -> `@pavlovcik/personal-agent`\r\n- A repository/organization configures personal agents command to be `/@<user's name>` `/@pavlovcik` maybe something like that. This should also support arguments, for example a sentence that can be parsed by an LLM `/@pavlovcik review my pull #123`\r\n   - This technically would allow other users to invoke other user's agents. We can easily see if the invoker is an \"authorized\" user by checking the event context, and hard coding authorized users (self) in the boilerplate plugin code. \r\n   - I wonder if it would be more useful if we just look for comments that start with a username tag instead, it might be more natural to set up automations for common questions/requests i.e. `@pavlovcik can i work on this issue?` then my agent, with my PAT, and my custom prompt saying what to do in this situation, would just automatically assign them and explain the `/start` command.\r\n- The kernel will invoke a request (and pass all parameters) to that user's plugin/agent (hosted at `@username/personal-agent` actions)\r\n- The user can grant access to their PAT from their agent, allowing the agent to act on behalf of the owner inheriting their permissions. \r\nThere are some ways we can make the template code which will be forked:\r\n1. simple starting point would be just template/boilerplate that doesn't do anything\r\n2. code makes a call to an LLM (we could even run a small model locally on the GitHub Action runner potentially in order to make dealing with credentials/API keys more hands off, at the tradeoff of it being dumber than ChatGPT etc but decentralization/free is cool)\r\n   1. this LLM has a big prompt in the template that explains the context (you're running in a github action runner and a user invoked you from this repo...) and its capabilities (we can provide some local functions from our SDK that it can invoke to perform specific tasks by using an authenticated octokit instance using the person's PAT. It also receives all of the context of the event invocation (which user called the function, what repository and organization is it coming in from? possibly even scraping all the linked issues and pull requests for more context)\r\n      2. If we can reliably get the LLM to write working code with Octokit (or just raw CURLs with the PAT) then we can have a context aware and english language input to any function a user can perform on GitHub (limited to the PAT permissions) which is quite interesting. \r\n      3. The user can \"fine-tune\" their LLM by adding extra details and preferences to their prompt in their forked code. I imagine that I would continue to add new sections as I see repetitive questions/queries.\r\n---\r\nAssuming that the org config enables support for personal agents, technically we can extend personal agent capabilities beyond GitHub. Generic telegram example: `@pavlovcik send me the credentials on Telegram @username` with the right code in my personal agent, the GitHub Action can send information to their Telegram. All invoked from the GitHub Action runner!\r\nThis could make plugin development a lot more exciting and rapid. If the team all works on their own agents, and tests them in production, we could extract useful bits from eachothers' and release \"official\" plugins which may normally have slower r&d cycles. \r\nIn the further future, our kernel can support webhooks coming in from other services (like Telegram) and invoke user agents which can be a very powerful architecture for platform composability. For example, a bot call (can be \"inline\" in a dm to someone as well) that will pass along the conversation context to our kernel, then to a user's personal agent (github action) back to kernel and then back to Telegram\r\n### Notes for @pavlovcik/personal-agent\r\n- I want to make use of the XP system (as an admin) to soft incentivize/disincentivize behaviors. \r\n   - Prompt follow ups: there are situations where I tag team members for input and they take days to reply. I think if they take longer than 24 hours to reply, I would want to dock XP, and include an automated follow up (perhaps even on Telegram dm!) High performing team members generally reply promptly. XP can be used as a heartbeat for how actively engaged the contributor is, and how well they are performing, which is important for performance evaluations regarding base pay. \r\n   - On the other end of the spectrum: unnecessary tags. If I make it clear to team members that I am around to help but more for emergencies, I would appreciate not being pinged on things unless its essential. Would be interesting to make a personal agent that will automatically reply (like an away message) explaining this, while also scrubbing out the tag from their message. Assuming it is during my awake/working hours, I would still receive a push notification on my device from the original tag. \r\n## Planned Capabilities\r\n### Comment rewrites:\r\nFrom my phone sometimes writing comments can be arduous with the custom vocabulary we use and the autocorrect. A simple agent that will save me from a lot of frustration is to edit my comments posted, and correct any typos when I post from my phone. \r\n### Review and follow up:\r\nSometimes a pull request will be 99% of the way there. It will be something like \"just make sure CI passes\" or \"fix merge conflicts\" \r\nIdeally the personal agent should monitor pulls that I approved and are still opened. If I said something like this, and if those conditions are met, it should merge the pull. \r\n- Example: https://github.com/ubiquity-os/plugin-template/pull/23#issuecomment-2391416311","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3","commentType":"ISSUE_SPECIFICATION","score":{"reward":12.47,"formatting":{"content":{"h1":{"score":1,"elementCount":2},"ul":{"score":0,"elementCount":6},"li":{"score":0.1,"elementCount":18},"p":{"score":0,"elementCount":27},"h3":{"score":1,"elementCount":4},"ol":{"score":0,"elementCount":3},"hr":{"score":0,"elementCount":1},"h2":{"score":1,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":9.8},"priority":1,"words":{"wordCount":1034,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":50.835378787878824,"syllables":1615,"sentences":42,"score":0.9083537878787883},"multiplier":1,"relevance":1}},{"id":1944133156,"content":"If we use the same strategy as our evm private key, the decryption method checks the encoded organization or repository id inside of this string and only honors it if it matches. \nSo the source decrypted string may look something like\n```\nmy_pat_token:organization_id:repository_id\n```","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944133156","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1 @@\n+GITHUB_PAT_ENCRYPTED: 4SjBaP65FdfrDM3Mt9c9IyNRDYL7LvvvBHs6WoM3tXRzQRDpHoh8_-x_TnT-5P8Im2QS1Ib-NCMAQo5KIRqp9atIT1zCXi1W-PLyKnnPZh0eMoI-q48HUQ","score":{"reward":7.695,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":58.09579268292684,"syllables":62,"sentences":2,"score":0.9809579268292684},"multiplier":1,"relevance":0.9}},{"id":1944133767,"content":"CSpell should have caught this. Are your pre commit hooks running?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944133767","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,54 @@\n-# `@ubiquity-os/plugin-template`\n+# `@ubiquity-os/personal-agent`\n \n-## Prerequisites\n+The Personal Agent is a [UbiquityOS](https://github.com/apps/ubiquity-os) plugin designed to run actions in user's Github account. It is forked, configured, and hosted by a Github user. Any issue comment beginning with `@username` is forwarded to this plugin for processing. Find below a list features offered by the plugin:\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+- `@username say hello`\n+  The plugin should respond with a `Hello, world!`.\n \n-## Getting Started\n+More features coming soon...\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `bun`.\n+Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the [Personal Agent](https://github.com/ubiquity-os-marketplace/personal-agent) plugin is handled by [Personal Agent Bridge](https://github.com/ubiquity-os-marketplace/personal-agent-bridge).\n \n-## Creating a new plugin\n+## How to set up?\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+- Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-input.ts](./src/types/plugin-input.ts) to match the `with:` settings in your org or repo level configuration.\n+- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n \n-- Your plugin config should look similar to this:\n+- Generate a Github clasic Personal Access Token PAT with access to repositories.","score":{"reward":2.646,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":101.27068181818181,"syllables":13,"sentences":2,"score":1},"multiplier":1,"relevance":0.7}},{"id":1944533527,"content":"Perhaps we should add markdown files as well!","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944533527","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,54 @@\n-# `@ubiquity-os/plugin-template`\n+# `@ubiquity-os/personal-agent`\n \n-## Prerequisites\n+The Personal Agent is a [UbiquityOS](https://github.com/apps/ubiquity-os) plugin designed to run actions in user's Github account. It is forked, configured, and hosted by a Github user. Any issue comment beginning with `@username` is forwarded to this plugin for processing. Find below a list features offered by the plugin:\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+- `@username say hello`\n+  The plugin should respond with a `Hello, world!`.\n \n-## Getting Started\n+More features coming soon...\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `bun`.\n+Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the [Personal Agent](https://github.com/ubiquity-os-marketplace/personal-agent) plugin is handled by [Personal Agent Bridge](https://github.com/ubiquity-os-marketplace/personal-agent-bridge).\n \n-## Creating a new plugin\n+## How to set up?\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+- Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-input.ts](./src/types/plugin-input.ts) to match the `with:` settings in your org or repo level configuration.\n+- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n \n-- Your plugin config should look similar to this:\n+- Generate a Github clasic Personal Access Token PAT with access to repositories.","score":{"reward":1.41,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.5}},{"id":1948898760,"content":"Hey actually this should just be in the repository secrets. No need for a new config file or encryption @whilefoo","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948898760","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1 @@\n+GITHUB_PAT_ENCRYPTED: S6K1T2liquv_G9yS2GxGf20NSHMAVDmX7DDx9-hnjG9518z2TKiWuEZrJobREMFzbBPiCvS1R3peatoiyR6phdjVWmeFM4FNAFp6neO5iUu2kVFVU-r2XvXuFAj-rL8RKEF3XC6yInobjcai","score":{"reward":5.157,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":57.09500000000003,"syllables":33,"sentences":2,"score":0.9709500000000003},"multiplier":1,"relevance":0.9}},{"id":1948901545,"content":"Why not leave as `development`","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948901545","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,25 +1,11 @@\n {\n-  \"name\": \"ts-template\",\n-  \"description\": \"ts-template for UbiquityOS plugins.\",\n+  \"name\": \"Personal Agent\",\n+  \"description\": \"Personal agent processes commands from UbiquityOS in user's Github actions\",\n   \"ubiquity:listeners\": [\"issue_comment.created\"],\n-  \"commands\": {\n-    \"hello\": {\n-      \"ubiquity:example\": \"/hello argument\",\n-      \"description\": \"Hello command with an argument.\"\n-    }\n-  },\n   \"configuration\": {\n     \"default\": {},\n     \"type\": \"object\",\n-    \"properties\": {\n-      \"configurableResponse\": {\n-        \"default\": \"Hello, world!\",\n-        \"type\": \"string\"\n-      },\n-      \"customStringsUrl\": {\n-        \"type\": \"string\"\n-      }\n-    }\n+    \"properties\": {}\n   },\n-  \"homepage_url\": \"https://your-plugin-name-development.ubiquity.workers.dev\"\n+  \"homepage_url\": \"https://your-plugin-name-agent.ubiquity.workers.dev\"","score":{"reward":1.197,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1948901866,"content":"Why true?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948901866","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -13,6 +13,6 @@ export default createActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\n     envSchema: envSchema,\n     ...(process.env.KERNEL_PUBLIC_KEY && { kernelPublicKey: process.env.KERNEL_PUBLIC_KEY }),\n     postCommentOnError: true,\n-    bypassSignatureVerification: process.env.NODE_ENV === \"local\",\n+    bypassSignatureVerification: true,","score":{"reward":0.792,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":120.20500000000001,"syllables":2,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1948902862,"content":"I think there is a way to dynamically check the owner of the repository so that we can automatically catch the correct `@xxx` name","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948902862","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -23,16 +23,14 @@ on:\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Personal Agent\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n     environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}\n     env:\n       PLUGIN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n       KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n       LOG_LEVEL: ${{ secrets.LOG_LEVEL || 'info' }}","score":{"reward":4.824,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":43.716086956521764,"syllables":38,"sentences":1,"score":0.8371608695652176},"multiplier":1,"relevance":0.8}},{"id":1949502860,"content":"Let's go with your suggestion. I've never worked with the kernel code so I have limited insight.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1949502860","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -13,6 +13,6 @@ export default createActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\n     envSchema: envSchema,\n     ...(process.env.KERNEL_PUBLIC_KEY && { kernelPublicKey: process.env.KERNEL_PUBLIC_KEY }),\n     postCommentOnError: true,\n-    bypassSignatureVerification: process.env.NODE_ENV === \"local\",\n+    bypassSignatureVerification: true,","score":{"reward":2.625,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":85.87671052631579,"syllables":25,"sentences":2,"score":0.7412328947368421},"multiplier":1,"relevance":0.5}},{"id":1957239593,"content":"If you and @gentlementlegen have consensus on a decision then I'm sure it's the best one!","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957239593","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -13,6 +13,6 @@ export default createActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\n     envSchema: envSchema,\n     ...(process.env.KERNEL_PUBLIC_KEY && { kernelPublicKey: process.env.KERNEL_PUBLIC_KEY }),\n     postCommentOnError: true,\n-    bypassSignatureVerification: process.env.NODE_ENV === \"local\",\n+    bypassSignatureVerification: true,","score":{"reward":1.593,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":66.36500000000001,"syllables":26,"sentences":1,"score":0.9363499999999999},"multiplier":1,"relevance":0.3}},{"id":1983542199,"content":"Not sure what we are supposed to do when we do key rotations. It seems like we have several systems that rely on the same key. \r\nhttps://github.com/ubiquity/demo.ubq.fi/blob/18702c8d8cd00da994efd3c7b5c36c3a9e491a05/static/scripts/demo/auth-context.ts#L19","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1983542199","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -13,13 +13,21 @@ Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the\n \n - Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n+- Fork this repository with exactly the same name `personal-agent` under your personal account.\n \n-- Generate a Github clasic Personal Access Token PAT with access to repositories.\n+- Generate a GitHub classic Personal Access Token PAT with access to repositories.\n \n - Encrypt your PAT with UbiquityOS's `X25519_PUBLIC_KEY` using [keygen.ubq.fi](https://keygen.ubq.fi/).","score":{"reward":8.208,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":77.87357142857145,"syllables":61,"sentences":7,"score":0.8212642857142854},"multiplier":1,"relevance":0.8}},{"id":2647742668,"content":"Thinking is not posted in the [review thread](https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948903492). Also should have the tip syntax:\r\n---\r\n@shiv810 can you address these","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2647742668","commentType":"PULL_COLLABORATOR","score":{"reward":3.633,"formatting":{"content":{"p":{"score":0,"elementCount":2},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":90.32934210526317,"syllables":24,"sentences":2,"score":0.6967065789473683},"multiplier":1,"relevance":0.7}},{"id":2658526945,"content":"It doesn't post to review threads at all anymore","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2658526945","commentType":"PULL_COLLABORATOR","score":{"reward":1.98,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.6}},{"id":2692249553,"content":"It probably does that for every comment which is a problem. Remove the thrown error.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2692249553","commentType":"PULL_COLLABORATOR","score":{"reward":3.696,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":69.5025,"syllables":23,"sentences":2,"score":0.904975},"multiplier":1,"relevance":0.8}},{"id":2696849648,"content":"We need to stop prepending Error: on every error message. I keep seeing Error: Error: wrapped in error syntax which is redundant.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2696849648","commentType":"PULL_COLLABORATOR","score":{"reward":4.872,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":57.23363636363638,"syllables":36,"sentences":2,"score":0.9723363636363638},"multiplier":1,"relevance":0.8}},{"id":2704147912,"content":"Why don't we make an endpoint on the kernel that we can query what the public key is over an API? \r\nWe already have three disconnected systems that rely on the same public key. Key rotation will be a mess. \r\nBest if we query when using these tools so that its always synchronized.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2704147912","commentType":"PULL_COLLABORATOR","score":{"reward":8.181,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":78.76583333333336,"syllables":73,"sentences":4,"score":0.8123416666666664},"multiplier":1,"relevance":0.9}},{"id":2705347815,"content":"We should rotate keys occasionally. I do this with:\n- The treasury multisig signing keys\n- the kernel x25519 key \n- the UbiquityOS wallet","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2705347815","commentType":"PULL_COLLABORATOR","score":{"reward":4.872,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":51.1489285714286,"syllables":36,"sentences":2,"score":0.911489285714286},"multiplier":1,"relevance":0.7}},{"id":2593033268,"content":"QA, code, and CI seem fine","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#pullrequestreview-2593033268","commentType":"PULL_COLLABORATOR","score":{"reward":1.422,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":2632614560,"content":"There's merge conflicts","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2632614560","commentType":"PULL_COLLABORATOR","score":{"reward":1.092,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.7}},{"id":2635813161,"content":"@gentlementlegen You should review asap","url":"https://github.com/ubiquity-os/plugin-sdk/pull/70#pullrequestreview-2635813161","commentType":"PULL_COLLABORATOR","score":{"reward":0.93,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":15.640000000000015,"syllables":11,"sentences":1,"score":0.5564000000000001},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2597708726,"effect":{"addition":64,"deletion":177},"reward":7.23,"priority":3},{"reviewId":2605496518,"effect":{"addition":8,"deletion":7},"reward":0.45,"priority":3},{"reviewId":2664763877,"effect":{"addition":28,"deletion":23},"reward":1.53,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1"},{"reviews":[{"reviewId":2593033268,"effect":{"addition":269,"deletion":181},"reward":13.5,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1"},{"reviews":[{"reviewId":2635813161,"effect":{"addition":51,"deletion":0},"reward":1.53,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-sdk/pull/70"},{"reviews":[{"reviewId":2644273500,"effect":{"addition":49,"deletion":20},"reward":2.07,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/3"},{"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/4"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 150 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>6</td><td>26.31</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>12.47</td></tr><tr><td>Issue</td><td>Comment</td><td>19</td><td>58.367</td></tr><tr><td>Review</td><td>Comment</td><td>19</td><td>66.825</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+64 -177</td><td>3</td><td>7.23</td></tr><tr><td>+8 -7</td><td>3</td><td>0.45</td></tr><tr><td>+28 -23</td><td>3</td><td>1.53</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+269 -181</td><td>3</td><td>13.5</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/70\" target=\"_blank\" rel=\"noopener\">#70</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+51 -0</td><td>3</td><td>1.53</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/3\" target=\"_blank\" rel=\"noopener\">#3</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+49 -20</td><td>3</td><td>2.07</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3\" target=\"_blank\" rel=\"noopener\"># Task- This will be registered under &#96;issues_comment.crea&hellip;</a></h6></td><td><details><summary>9.8</summary><pre>content:&#13;  content:&#13;    h1:&#13;      score: 1&#13;      elementCount: 2&#13;    ul:&#13;      score: 0&#13;      elementCount: 6&#13;    li:&#13;      score: 0.1&#13;      elementCount: 18&#13;    p:&#13;      score: 0&#13;      elementCount: 27&#13;    h3:&#13;      score: 1&#13;      elementCount: 4&#13;    ol:&#13;      score: 0&#13;      elementCount: 3&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 9.8&#13;regex:&#13;  wordCount: 1034&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>1</td><td>1</td><td>12.47</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2382648273\" target=\"_blank\" rel=\"noopener\">@gentlementlegen how would this look from a plugin config standp&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.95</td><td>3</td><td>7.211</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2382835575\" target=\"_blank\" rel=\"noopener\">I take that as a yes. Then we can make the only config option to&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.75</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2386785358\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 this is becoming recursive so I don't think its&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.65</td><td>3</td><td>4.29</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2504011409\" target=\"_blank\" rel=\"noopener\">2. The bridge makes sense. This was basically my suggestion [her&hellip;</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 1&#13;  result: 0.1&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.85</td><td>3</td><td>3.213</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2510616305\" target=\"_blank\" rel=\"noopener\">Normally you're supposed to open a pull on your own repository a&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.482</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2513509400\" target=\"_blank\" rel=\"noopener\">Actually it only works if you target the default branch, &#96;de&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.394</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2519363349\" target=\"_blank\" rel=\"noopener\">This is perfectly acceptable. It must be configured to do so wi&hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.696</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2677237871\" target=\"_blank\" rel=\"noopener\">@gentlementlegen disqualifier seems to repeat itself when there &hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.008</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2704116287\" target=\"_blank\" rel=\"noopener\">Somebody should go in and change all the Cautions to Warnings un&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.326</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2705183260\" target=\"_blank\" rel=\"noopener\">I feel like we need a slash command to handle this edge case. I &hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.392</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2705344945\" target=\"_blank\" rel=\"noopener\">You can also \"link back\" or reference other issues to pollute th&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.98</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2705585992\" target=\"_blank\" rel=\"noopener\">Hmm something tells me this task time was under estimated. We s&hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.529</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2708788887\" target=\"_blank\" rel=\"noopener\">There isn't an incentive to lie. It's an interesting idea for co&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.93</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2710128222\" target=\"_blank\" rel=\"noopener\">It can because we already see this happen with disqualifier. I &hellip;</a></h6></td><td><details><summary>2.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.862</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2716050053\" target=\"_blank\" rel=\"noopener\">I think if their fork is targeting our repository we don't own t&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.122</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2716056845\" target=\"_blank\" rel=\"noopener\">For now you can post here how long this should have taken for re&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2719297294\" target=\"_blank\" rel=\"noopener\">We definitely should increase focus on the conversation and far &hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.876</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2719447695\" target=\"_blank\" rel=\"noopener\">@whilefoo could you help me make a personal agent that will rewr&hellip;</a></h6></td><td><details><summary>2.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.342</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2720650728\" target=\"_blank\" rel=\"noopener\">It only rewrites when I double line break at the end</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.124</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944133156\" target=\"_blank\" rel=\"noopener\">If we use the same strategy as our evm private key, the decrypti&hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.9</td><td>3</td><td>7.695</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944133767\" target=\"_blank\" rel=\"noopener\">CSpell should have caught this. Are your pre commit hooks runnin&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.646</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944533527\" target=\"_blank\" rel=\"noopener\">Perhaps we should add markdown files as well!</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.41</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948898760\" target=\"_blank\" rel=\"noopener\">Hey actually this should just be in the repository secrets. No n&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.157</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948901545\" target=\"_blank\" rel=\"noopener\">Why not leave as &#96;development&#96;</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.197</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948901866\" target=\"_blank\" rel=\"noopener\">Why true?</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.8</td><td>3</td><td>0.792</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1948902862\" target=\"_blank\" rel=\"noopener\">I think there is a way to dynamically check the owner of the rep&hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.824</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1949502860\" target=\"_blank\" rel=\"noopener\">Let's go with your suggestion. I've never worked with the kernel&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.625</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957239593\" target=\"_blank\" rel=\"noopener\">If you and @gentlementlegen have consensus on a decision then I'&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.593</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1983542199\" target=\"_blank\" rel=\"noopener\">Not sure what we are supposed to do when we do key rotations. It&hellip;</a></h6></td><td><details><summary>2.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.8</td><td>3</td><td>8.208</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2647742668\" target=\"_blank\" rel=\"noopener\">Thinking is not posted in the [review thread](https://github.com&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.633</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2658526945\" target=\"_blank\" rel=\"noopener\">It doesn't post to review threads at all anymore</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.98</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2692249553\" target=\"_blank\" rel=\"noopener\">It probably does that for every comment which is a problem. Remo&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.696</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2696849648\" target=\"_blank\" rel=\"noopener\">We need to stop prepending Error: on every error message. I keep&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.872</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2704147912\" target=\"_blank\" rel=\"noopener\">Why don't we make an endpoint on the kernel that we can query wh&hellip;</a></h6></td><td><details><summary>2.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 54&#13;  wordValue: 0.1&#13;  result: 2.44&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.181</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2705347815\" target=\"_blank\" rel=\"noopener\">We should rotate keys occasionally. I do this with:- The treasu&hellip;</a></h6></td><td><details><summary>1.82</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.872</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#pullrequestreview-2593033268\" target=\"_blank\" rel=\"noopener\">QA, code, and CI seem fine</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.422</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2632614560\" target=\"_blank\" rel=\"noopener\">There's merge conflicts</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.092</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/70#pullrequestreview-2635813161\" target=\"_blank\" rel=\"noopener\">@gentlementlegen You should review asap</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.5</td><td>3</td><td>0.93</td></tr></tbody></table></details>"},"gentlementlegen":{"total":150,"userId":9807008,"comments":[{"id":2382714347,"content":"If you do like other plugins and hook it to the `issue_comment.created` you will already get the full payload for that event, how would this differ?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2382714347","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.778,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":73.17200000000001,"syllables":32,"sentences":1,"score":0.8682799999999999},"multiplier":1,"relevance":0.9}},{"id":2382971703,"content":"As long as you have the bot installed in your organization, you can hook any plugin from your organization you want to see running so\r\n```\r\nplugins:\r\n  - uses: 0x4007/ubiquity-os-agent\r\n```\r\nwould run your agent.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2382971703","commentType":"ISSUE_COLLABORATOR","score":{"reward":6.453,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":57.793103448275886,"syllables":41,"sentences":1,"score":0.9779310344827589},"multiplier":1,"relevance":0.9}},{"id":2512183219,"content":"I think it didn't pick up the pull-request because you do not target this repository / organization.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2512183219","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.168,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":52.265000000000015,"syllables":29,"sentences":1,"score":0.9226500000000002},"multiplier":1,"relevance":0.6}},{"id":2677239807,"content":"I am not sure if that is due to having many people or having many linked pull-requests. If the bot fails to post to the linked pull-request, it will post to the issue as a backup. Since we have multiple linked pull-request, if they all fail this would increase the amount of messages posted to the issue as well.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2677239807","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.78,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":62,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":79.42607526881723,"syllables":78,"sentences":3,"score":0.8057392473118277},"multiplier":1,"relevance":0.4}},{"id":2705227212,"content":"I think it's weird that there is no way to manually unlink pull-requests from GitHub's UI, this means you can pollute any repository by linking random pull-requests. I did not find anything to counter this, so yes let's have some command.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2705227212","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.655,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":67.62478260869567,"syllables":63,"sentences":2,"score":0.9237521739130433},"multiplier":1,"relevance":0.3}},{"id":2708770488,"content":"Instead of having to specify organizations in the list, maybe we could just check if the bot has access during the run?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2708770488","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.263,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":61.45045454545455,"syllables":32,"sentences":1,"score":0.9854954545454545},"multiplier":1,"relevance":0.7}},{"id":2664400931,"content":"I am fine with the code changes and I could test it and it works. Only change I would like to see is the `x25519_PUBLIC_KEY` made available somewhere otherwise no one can make personal agents with `ubiquity-os` bot.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#pullrequestreview-2664400931","commentType":"PULL_COLLABORATOR","score":{"reward":6.966,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":78.11500000000001,"syllables":47,"sentences":2,"score":0.8188499999999999},"multiplier":1,"relevance":0.9}},{"id":1943992099,"content":"```suggestion\n- Generate a GitHub classic Personal Access Token PAT with access to repositories.\n```","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1943992099","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,54 @@\n-# `@ubiquity-os/plugin-template`\n+# `@ubiquity-os/personal-agent`\n \n-## Prerequisites\n+The Personal Agent is a [UbiquityOS](https://github.com/apps/ubiquity-os) plugin designed to run actions in user's Github account. It is forked, configured, and hosted by a Github user. Any issue comment beginning with `@username` is forwarded to this plugin for processing. Find below a list features offered by the plugin:\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+- `@username say hello`\n+  The plugin should respond with a `Hello, world!`.\n \n-## Getting Started\n+More features coming soon...\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `bun`.\n+Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the [Personal Agent](https://github.com/ubiquity-os-marketplace/personal-agent) plugin is handled by [Personal Agent Bridge](https://github.com/ubiquity-os-marketplace/personal-agent-bridge).\n \n-## Creating a new plugin\n+## How to set up?\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+- Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-input.ts](./src/types/plugin-input.ts) to match the `with:` settings in your org or repo level configuration.\n+- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n \n-- Your plugin config should look similar to this:\n+- Generate a Github clasic Personal Access Token PAT with access to repositories.","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1944024113,"content":"Even if this is encrypted, couldn't it be used to impersonate the account that was encrypted in this key?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944024113","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1 @@\n+GITHUB_PAT_ENCRYPTED: 4SjBaP65FdfrDM3Mt9c9IyNRDYL7LvvvBHs6WoM3tXRzQRDpHoh8_-x_TnT-5P8Im2QS1Ib-NCMAQo5KIRqp9atIT1zCXi1W-PLyKnnPZh0eMoI-q48HUQ","score":{"reward":4.488,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":72.32500000000003,"syllables":27,"sentences":1,"score":0.8767499999999997},"multiplier":1,"relevance":0.8}},{"id":1944167971,"content":"Yes CSpell ran: https://github.com/ubiquity-os-marketplace/personal-agent/actions/runs/13137497851/job/36656295119#step:4:66\r\nIt only checks typescript files.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944167971","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,54 @@\n-# `@ubiquity-os/plugin-template`\n+# `@ubiquity-os/personal-agent`\n \n-## Prerequisites\n+The Personal Agent is a [UbiquityOS](https://github.com/apps/ubiquity-os) plugin designed to run actions in user's Github account. It is forked, configured, and hosted by a Github user. Any issue comment beginning with `@username` is forwarded to this plugin for processing. Find below a list features offered by the plugin:\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+- `@username say hello`\n+  The plugin should respond with a `Hello, world!`.\n \n-## Getting Started\n+More features coming soon...\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `bun`.\n+Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the [Personal Agent](https://github.com/ubiquity-os-marketplace/personal-agent) plugin is handled by [Personal Agent Bridge](https://github.com/ubiquity-os-marketplace/personal-agent-bridge).\n \n-## Creating a new plugin\n+## How to set up?\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+- Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-input.ts](./src/types/plugin-input.ts) to match the `with:` settings in your org or repo level configuration.\n+- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n \n-- Your plugin config should look similar to this:\n+- Generate a Github clasic Personal Access Token PAT with access to repositories.","score":{"reward":2.736,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":60.70500000000001,"syllables":38,"sentences":2,"score":0.9929499999999999},"multiplier":1,"relevance":0.4}},{"id":1957209849,"content":"@whilefoo Isn't this signature in the SDK?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957209849","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -13,6 +13,6 @@ export default createActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\n     envSchema: envSchema,\n     ...(process.env.KERNEL_PUBLIC_KEY && { kernelPublicKey: process.env.KERNEL_PUBLIC_KEY }),\n     postCommentOnError: true,\n-    bypassSignatureVerification: process.env.NODE_ENV === \"local\",\n+    bypassSignatureVerification: true,","score":{"reward":2.016,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":71.81500000000001,"syllables":12,"sentences":1,"score":0.8818499999999999},"multiplier":1,"relevance":0.7}},{"id":1957306514,"content":"I think it can be useful since this would be like the third plugin that needs this capability, I agree.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957306514","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -13,6 +13,6 @@ export default createActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\n     envSchema: envSchema,\n     ...(process.env.KERNEL_PUBLIC_KEY && { kernelPublicKey: process.env.KERNEL_PUBLIC_KEY }),\n     postCommentOnError: true,\n-    bypassSignatureVerification: process.env.NODE_ENV === \"local\",\n+    bypassSignatureVerification: true,","score":{"reward":3.402,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":68.09500000000004,"syllables":28,"sentences":1,"score":0.9190499999999996},"multiplier":1,"relevance":0.6}},{"id":1973493253,"content":"Just curious why loading the env is needed? Don't bun and wrangler populate this locally too?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1973493253","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,6 +1,6 @@\n import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n-import \"dotenv/config\";\n import { LOG_LEVEL } from \"@ubiquity-os/ubiquity-os-logger\";\n+import \"dotenv/config\";\n ","score":{"reward":2.49,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":73.79573529411766,"syllables":25,"sentences":2,"score":0.8620426470588234},"multiplier":1,"relevance":0.5}},{"id":1979211038,"content":"```suggestion\n- Generate a GitHub classic Personal Access Token (PAT) with access to repositories.\n```","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1979211038","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,54 @@\n-# `@ubiquity-os/plugin-template`\n+# `@ubiquity-os/personal-agent`\n \n-## Prerequisites\n+The Personal Agent is a [UbiquityOS](https://github.com/apps/ubiquity-os) plugin designed to run actions in user's Github account. It is forked, configured, and hosted by a Github user. Any issue comment beginning with `@username` is forwarded to this plugin for processing. Find below a list features offered by the plugin:\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+- `@username say hello`\n+  The plugin should respond with a `Hello, world!`.\n \n-## Getting Started\n+More features coming soon...\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `bun`.\n+Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the [Personal Agent](https://github.com/ubiquity-os-marketplace/personal-agent) plugin is handled by [Personal Agent Bridge](https://github.com/ubiquity-os-marketplace/personal-agent-bridge).\n \n-## Creating a new plugin\n+## How to set up?\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+- Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-input.ts](./src/types/plugin-input.ts) to match the `with:` settings in your org or repo level configuration.\n+- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n \n-- Your plugin config should look similar to this:\n+- Generate a Github clasic Personal Access Token PAT with access to repositories.","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.5}},{"id":1982861482,"content":"Do we have a link for this key available anywhere?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1982861482","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -13,13 +13,21 @@ Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the\n \n - Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n+- Fork this repository with exactly the same name `personal-agent` under your personal account.\n \n-- Generate a Github clasic Personal Access Token PAT with access to repositories.\n+- Generate a GitHub classic Personal Access Token PAT with access to repositories.\n \n - Encrypt your PAT with UbiquityOS's `X25519_PUBLIC_KEY` using [keygen.ubq.fi](https://keygen.ubq.fi/).","score":{"reward":2.736,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":69.78500000000001,"syllables":15,"sentences":1,"score":0.9021499999999999},"multiplier":1,"relevance":0.8}},{"id":1983200774,"content":"I was just trying to think with the perspective of someone new trying to setup its own personal agent, who would probably get stuck here, so either prefill, link it or provide it directly here would be helpful","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1983200774","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -13,13 +13,21 @@ Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the\n \n - Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n+- Fork this repository with exactly the same name `personal-agent` under your personal account.\n \n-- Generate a Github clasic Personal Access Token PAT with access to repositories.\n+- Generate a GitHub classic Personal Access Token PAT with access to repositories.\n \n - Encrypt your PAT with UbiquityOS's `X25519_PUBLIC_KEY` using [keygen.ubq.fi](https://keygen.ubq.fi/).","score":{"reward":7.317,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":50.270263157894775,"syllables":53,"sentences":1,"score":0.9027026315789477},"multiplier":1,"relevance":0.9}},{"id":1983316839,"content":"That makes the two of us then haha\r\nProbably @0x4007 knows the key?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1983316839","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -13,13 +13,21 @@ Communication between [UbiquityOS](https://github.com/apps/ubiquity-os) and the\n \n - Make sure the Personal Agent Bridge is also configured. You can read its [documentation](https://github.com/ubiquity-os-marketplace/personal-agent-bridge/blob/development/README.md).\n \n-- Fork this repository with exactly the same name `personal-agent` under your personal or your organization account.\n+- Fork this repository with exactly the same name `personal-agent` under your personal account.\n \n-- Generate a Github clasic Personal Access Token PAT with access to repositories.\n+- Generate a GitHub classic Personal Access Token PAT with access to repositories.\n \n - Encrypt your PAT with UbiquityOS's `X25519_PUBLIC_KEY` using [keygen.ubq.fi](https://keygen.ubq.fi/).","score":{"reward":1.995,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":89.51692307692309,"syllables":16,"sentences":1,"score":0.704830769230769},"multiplier":1,"relevance":0.5}},{"id":2692173914,"content":"@whilefoo I tested and the hello world seems to work fine. However, when I type `/help` I get this error:\r\nhttps://github.com/gentlementlegen/personal-agent/issues/2#issuecomment-2692173562\r\nIs it me having the wrong setup or does it happen on your side as well?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2692173914","commentType":"PULL_COLLABORATOR","score":{"reward":9.312,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":67.53000000000003,"syllables":66,"sentences":3,"score":0.9246999999999997},"multiplier":1,"relevance":0.8}},{"id":2692564993,"content":"@whilefoo my configuration only has the `personal-bridge` with no other plugin, this is how it should be set up correct? I'll pull your changes and test again.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2692564993","commentType":"PULL_COLLABORATOR","score":{"reward":4.704,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":74.06583333333336,"syllables":38,"sentences":2,"score":0.8593416666666664},"multiplier":1,"relevance":0.7}},{"id":2694640767,"content":"https://github.com/gentlementlegen/personal-agent/issues/2#issuecomment-2694627919\r\nSeems to have been fixed with your latest changes? My config was minimal, sorry I ran this locally with your branch and changes, here are the logs now\r\n```\r\n⎔ Starting local server...\r\n        › Executing helloWorld:\r\n        › {\r\n            \"sender\": \"gentlementlegen\",\r\n            \"repo\": \"personal-agent\",\r\n            \"issueNumber\": 2,\r\n            \"owner\": \"gentlementlegen\",\r\n            \"agentOwner\": \"gentlementlegen\",\r\n            \"caller\": \"helloWorld\"\r\n          }\r\n        ✓ Hello, world!\r\n        ✓ {\r\n            \"caller\": \"helloWorld\"\r\n          }\r\n        ✓ Successfully created comment!\r\n        ✓ {\r\n            \"caller\": \"helloWorld\"\r\n          }\r\n[wrangler:inf] POST / 200 OK (1794ms)\r\n```","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2694640767","commentType":"PULL_COLLABORATOR","score":{"reward":7.539,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":67.07833333333336,"syllables":57,"sentences":3,"score":0.9292166666666664},"multiplier":1,"relevance":0.7}},{"id":2696364848,"content":"Yes I was running this locally so no run happened in the Actions, let me re-run with a deployment.\r\nhttps://github.com/gentlementlegen/personal-agent/issues/2#issuecomment-2696467360\r\nhttps://github.com/Meniole/personal-agent-bridge/actions/runs/13648469815/job/38151607248\r\nIf I understand this right, I should provide `GITHUB_PAT_ENCRYPTED` inside of the configuration at `personal-agent.config.yml` which is why it doesn't work. In the docs it states to uses the `x25519_PUBLIC_KEY` but it is not linked anywhere?\r\n---\r\nAfter using my own key and github token, I got the following: https://github.com/gentlementlegen/personal-agent/issues/2#issuecomment-2696551880 (underlying error being `Personal agent PAT does not allow running on gentlementlegen/personal-agent`), so please fix the formatting to not display [object Object]. For the PAT, I used the OAuth token, maybe that's why it is complaning?","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2696364848","commentType":"PULL_COLLABORATOR","score":{"reward":16.146,"formatting":{"content":{"p":{"score":0,"elementCount":5},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":94,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":61.934464285714284,"syllables":192,"sentences":8,"score":0.9806553571428571},"multiplier":1,"relevance":0.9}},{"id":2697149745,"content":"@whilefoo Thanks for reminding me this, had forgotten you need to provide the ids afterwards. Maybe would be worth mentioning this in the README.\r\nMy other mistake was that I was modifying the token inside of the `agent` branch and not the default one.\r\nNew QA:\r\nhttps://github.com/gentlementlegen/personal-agent/issues/2#issuecomment-2697141212","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2697149745","commentType":"PULL_COLLABORATOR","score":{"reward":10.152,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":64.9245454545455,"syllables":85,"sentences":5,"score":0.9507545454545451},"multiplier":1,"relevance":0.8}},{"id":2705215583,"content":"Well that would solve the key rotation as well I suppose, that can work.","url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2705215583","commentType":"PULL_COLLABORATOR","score":{"reward":2.1,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":89.89642857142859,"syllables":17,"sentences":1,"score":0.7010357142857141},"multiplier":1,"relevance":0.5}},{"id":2636793432,"content":"@whilefoo thank you for the fix, how exactly can I test this one? I need the personal agent bridge up and running in my org, and create some dummy plugin to be called?","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2636793432","commentType":"PULL_COLLABORATOR","score":{"reward":5.166,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":79.85113636363639,"syllables":43,"sentences":2,"score":0.8014886363636361},"multiplier":1,"relevance":0.7}},{"id":2638597248,"content":"Currently trying to run it but the signature always fail on development, because I believe the values are wrong for development at the moment:\r\nhttps://github.com/ubiquity-os-marketplace/personal-agent-bridge/actions/runs/13170364016\r\nWill try to update them and re-run. Interesting that the runs are appearing here as \"deployments\".\r\n---\r\nI got the plugin to run, but now get the error `No personal agent config found on gentlementlegen/personal-agent`. Maybe that would be helpful to display that for the user in a comment?\r\nAlso, the configuration states: `Encrypt your PAT with UbiquityOS's `X25519_PUBLIC_KEY` using [keygen.ubq.fi]`. Would be handy to have a link to that public key I believe. ~~Also maybe an example of the `personal-agent.config.yml` would be helpful because it just says `add it to the file` which can be confusing~~ The example could be linked within the docs.","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2638597248","commentType":"PULL_COLLABORATOR","score":{"reward":12.555,"formatting":{"content":{"p":{"score":0,"elementCount":5},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":92,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":66.74000000000002,"syllables":156,"sentences":8,"score":0.9325999999999998},"multiplier":1,"relevance":0.9}},{"id":2667353220,"content":"@whilefoo Should the kernel import this code as well to avoid duplicating it?","url":"https://github.com/ubiquity-os/plugin-sdk/pull/70#issuecomment-2667353220","commentType":"PULL_COLLABORATOR","score":{"reward":2.556,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":56.97846153846157,"syllables":21,"sentences":1,"score":0.9697846153846157},"multiplier":1,"relevance":0.6}},{"id":1971409792,"content":"I trust you that this key is revoked and does not grant any priviledges 😄","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/3#discussion_r1971409792","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -176,6 +176,23 @@ function createContextInner(\n     config: {},\n     env: {\n       X25519_PRIVATE_KEY: \"lkQCx6wMxB7V8oXVxWDdEY2xqAF5VqJx7dLIK4qMyIw\",\n+      APP_ID: \"test\",\n+      APP_PRIVATE_KEY: `-----BEGIN PRIVATE KEY-----","score":{"reward":2.52,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":89.89642857142859,"syllables":17,"sentences":1,"score":0.7010357142857141},"multiplier":1,"relevance":0.6}},{"id":2703078518,"content":"Just a bit concerned that the user might not understand what is going on if they didn't set up their agent properly and get no feedback, but I guess we will see when people use it if they figure it out easily.","url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/4#issuecomment-2703078518","commentType":"PULL_COLLABORATOR","score":{"reward":6.069,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":54.98069767441861,"syllables":55,"sentences":1,"score":0.9498069767441861},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2597505369,"effect":{"addition":64,"deletion":177},"reward":7.23,"priority":3},{"reviewId":2619510885,"effect":{"addition":8,"deletion":7},"reward":0.45,"priority":3},{"reviewId":2647629137,"effect":{"addition":14,"deletion":18},"reward":0.96,"priority":3},{"reviewId":2657030179,"effect":{"addition":5,"deletion":4},"reward":0.27,"priority":3},{"reviewId":2663619556,"effect":{"addition":11,"deletion":3},"reward":0.42,"priority":3},{"reviewId":2664400931,"effect":{"addition":3,"deletion":3},"reward":0.18,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1"},{"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1"},{"reviews":[{"reviewId":2635842897,"effect":{"addition":51,"deletion":0},"reward":1.53,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-sdk/pull/70"},{"reviews":[{"reviewId":2644112002,"effect":{"addition":49,"deletion":20},"reward":2.07,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/3"},{"reviews":[{"reviewId":2663615368,"effect":{"addition":3,"deletion":3},"reward":0.18,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/4"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 150 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>9</td><td>13.29</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>26.097</td></tr><tr><td>Review</td><td>Comment</td><td>22</td><td>112.965</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+64 -177</td><td>3</td><td>7.23</td></tr><tr><td>+8 -7</td><td>3</td><td>0.45</td></tr><tr><td>+14 -18</td><td>3</td><td>0.96</td></tr><tr><td>+5 -4</td><td>3</td><td>0.27</td></tr><tr><td>+11 -3</td><td>3</td><td>0.42</td></tr><tr><td>+3 -3</td><td>3</td><td>0.18</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/70\" target=\"_blank\" rel=\"noopener\">#70</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+51 -0</td><td>3</td><td>1.53</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/3\" target=\"_blank\" rel=\"noopener\">#3</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+49 -20</td><td>3</td><td>2.07</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/4\" target=\"_blank\" rel=\"noopener\">#4</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+3 -3</td><td>3</td><td>0.18</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2382714347\" target=\"_blank\" rel=\"noopener\">If you do like other plugins and hook it to the &#96;issue_comme&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.778</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2382971703\" target=\"_blank\" rel=\"noopener\">As long as you have the bot installed in your organization, you &hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.453</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2512183219\" target=\"_blank\" rel=\"noopener\">I think it didn't pick up the pull-request because you do not ta&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.168</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2677239807\" target=\"_blank\" rel=\"noopener\">I am not sure if that is due to having many people or having man&hellip;</a></h6></td><td><details><summary>2.54</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 62&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>0.4</td><td>3</td><td>3.78</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2705227212\" target=\"_blank\" rel=\"noopener\">I think it's weird that there is no way to manually unlink pull-&hellip;</a></h6></td><td><details><summary>2.31</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 46&#13;  wordValue: 0.1&#13;  result: 2.31&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.655</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2708770488\" target=\"_blank\" rel=\"noopener\">Instead of having to specify organizations in the list, maybe we&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.263</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#pullrequestreview-2664400931\" target=\"_blank\" rel=\"noopener\">I am fine with the code changes and I could test it and it works&hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.966</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1943992099\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion- Generate a GitHub classic Personal A&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944024113\" target=\"_blank\" rel=\"noopener\">Even if this is encrypted, couldn't it be used to impersonate th&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.488</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1944167971\" target=\"_blank\" rel=\"noopener\">Yes CSpell ran: https://github.com/ubiquity-os-marketplace/perso&hellip;</a></h6></td><td><details><summary>1.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.4</td><td>3</td><td>2.736</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957209849\" target=\"_blank\" rel=\"noopener\">@whilefoo Isn't this signature in the SDK?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.016</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1957306514\" target=\"_blank\" rel=\"noopener\">I think it can be useful since this would be like the third plug&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.402</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1973493253\" target=\"_blank\" rel=\"noopener\">Just curious why loading the env is needed? Don't bun and wrangl&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.49</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1979211038\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion- Generate a GitHub classic Personal A&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.5</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1982861482\" target=\"_blank\" rel=\"noopener\">Do we have a link for this key available anywhere?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.736</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1983200774\" target=\"_blank\" rel=\"noopener\">I was just trying to think with the perspective of someone new t&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.9</td><td>3</td><td>7.317</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#discussion_r1983316839\" target=\"_blank\" rel=\"noopener\">That makes the two of us then hahaProbably @0x4007 knows the k&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.995</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2692173914\" target=\"_blank\" rel=\"noopener\">@whilefoo I tested and the hello world seems to work fine. Howev&hellip;</a></h6></td><td><details><summary>3.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.8</td><td>3</td><td>9.312</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2692564993\" target=\"_blank\" rel=\"noopener\">@whilefoo my configuration only has the &#96;personal-bridge&#96&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.704</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2694640767\" target=\"_blank\" rel=\"noopener\">https://github.com/gentlementlegen/personal-agent/issues/2#issue&hellip;</a></h6></td><td><details><summary>2.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.7</td><td>3</td><td>7.539</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2696364848\" target=\"_blank\" rel=\"noopener\">Yes I was running this locally so no run happened in the Actions&hellip;</a></h6></td><td><details><summary>4.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 94&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>3</td><td>16.146</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2697149745\" target=\"_blank\" rel=\"noopener\">@whilefoo Thanks for reminding me this, had forgotten you need t&hellip;</a></h6></td><td><details><summary>3.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.8</td><td>3</td><td>10.152</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1#issuecomment-2705215583\" target=\"_blank\" rel=\"noopener\">Well that would solve the key rotation as well I suppose, that c&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.1</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2636793432\" target=\"_blank\" rel=\"noopener\">@whilefoo thank you for the fix, how exactly can I test this one&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.166</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1#issuecomment-2638597248\" target=\"_blank\" rel=\"noopener\">Currently trying to run it but the signature always fail on deve&hellip;</a></h6></td><td><details><summary>3.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 92&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>3</td><td>12.555</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/70#issuecomment-2667353220\" target=\"_blank\" rel=\"noopener\">@whilefoo Should the kernel import this code as well to avoid du&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.556</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/3#discussion_r1971409792\" target=\"_blank\" rel=\"noopener\">I trust you that this key is revoked and does not grant any priv&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.52</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/4#issuecomment-2703078518\" target=\"_blank\" rel=\"noopener\">Just a bit concerned that the user might not understand what is &hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.069</td></tr></tbody></table></details>"},"Keyrxng":{"total":0.513,"userId":106303466,"comments":[{"id":2556646863,"content":"I thought the official UbiquityOS app is installed via GH marketplace and is a single subscription per org, no? Maybe I've been mistaken in thinking that?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2556646863","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.513,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":64.66583333333335,"syllables":41,"sentences":2,"score":0.9533416666666664},"multiplier":0.25,"relevance":0.3}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/personal-agent/pull/1"},{"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/1"},{"url":"https://github.com/ubiquity-os/plugin-sdk/pull/70"},{"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/3"},{"url":"https://github.com/ubiquity-os-marketplace/personal-agent-bridge/pull/4"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.513 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.513</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/3#issuecomment-2556646863\" target=\"_blank\" rel=\"noopener\">I thought the official UbiquityOS app is installed via GH market&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.513</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_.github_2.json","json":{"zugdev":{"userId":155616000,"total":200,"task":{"reward":200,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 200 XP ]</a>&nbsp;</h3><h6>@zugdev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>200</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"0x4007":{"total":22.684,"userId":4975670,"comments":[{"id":2705092300,"content":"@zugdev","url":"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2705092300","commentType":"ISSUE_AUTHOR","score":{"reward":0.034,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":36.62000000000003,"syllables":2,"sentences":1,"score":0.7662000000000003},"multiplier":1,"relevance":0.1}},{"id":2705093919,"content":"This will be real cool to turn into a public api endpoint and then I envision a chrome extension to be able to overlay the repo/org/global xp next to usernames in the comments. \nOnce this \"core engine\" is refined I'll make a higher priority task to turn it into a robust api endpoint that we can use everywhere.","url":"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2705093919","commentType":"ISSUE_AUTHOR","score":{"reward":5.2,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":55.218483606557385,"syllables":87,"sentences":2,"score":0.9521848360655738},"multiplier":1,"relevance":0.8}},{"id":2705120048,"content":"Not sure why pricing doesn't work here @gentlementlegen","url":"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2705120048","commentType":"ISSUE_AUTHOR","score":{"reward":0.216,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":66.10000000000002,"syllables":14,"sentences":1,"score":0.9389999999999997},"multiplier":1,"relevance":0.1}},{"id":2707782551,"content":"@gentlementlegen Start broke","url":"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2707782551","commentType":"ISSUE_AUTHOR","score":{"reward":0.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":6.390000000000015,"syllables":7,"sentences":1,"score":0.46390000000000015},"multiplier":1,"relevance":0.1}},{"id":2708145203,"content":"I think I need to top up. We should change to open router so I can top up with crypto","url":"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2708145203","commentType":"ISSUE_AUTHOR","score":{"reward":0.35,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":99.39500000000001,"syllables":23,"sentences":2,"score":0.6060499999999999},"multiplier":1,"relevance":0.1}},{"id":2719717606,"content":"You need to throw this error. But also we should be able to recover the old one by going through git blame. I'm mobile now so it's not easy for me to fix.","url":"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2719717606","commentType":"ISSUE_AUTHOR","score":{"reward":0.984,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":91.05619047619048,"syllables":43,"sentences":3,"score":0.6894380952380952},"multiplier":1,"relevance":0.2}},{"id":2901573020,"content":"Generated by ChatGPT \nA minimal command-line interface (CLI) to calculate XP earned by users.\nRead all earnings from supabase. Sum them up to figure out users XP. \n### Usage\nCalculate XP by user:\n- **Global XP** (all orgs/repos):\n  ```bash\n  xp-cli calculate --user=username\n  ```\n- **Organization-specific XP**:\n  ```bash\n  xp-cli calculate --user=username --org=organization_name\n  ```\n- **Repository-specific XP**:\n  ```bash\n  xp-cli calculate --user=username --org=organization_name --repo=repository_name\n  ```\n### Output Format\n```\nUser:  username\nGlobal XP: 1234\n```\nFor org-specific or repo-specific calculations, clearly specify the context:\n```\nUser: john_doe\nOrganization (my-org) XP: 567\n```\n```\nUser: john_doe\nRepository (my-repo) XP: 89\n```\n### Optional Caching\n- Caching support optional, enabled if performance is slow.","url":"https://github.com/ubiquity-os/.github/issues/2","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.4,"formatting":{"content":{"p":{"score":0,"elementCount":3},"h3":{"score":1,"elementCount":3},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":4}},"result":3.4},"priority":1,"words":{"wordCount":59,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":44.17222457627122,"syllables":103,"sentences":4,"score":0.8417222457627122},"multiplier":1,"relevance":1}}],"reviewRewards":[{"reviews":[{"reviewId":2669051690,"effect":{"addition":303,"deletion":118},"reward":8.42,"priority":2}],"url":"https://github.com/ubiquity-os/xp/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 22.684 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>8.42</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.4</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>6.864</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/xp/pull/2\" target=\"_blank\" rel=\"noopener\">#2</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+303 -118</td><td>2</td><td>8.42</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2\" target=\"_blank\" rel=\"noopener\">Generated by ChatGPT A minimal command-line interface (CLI) to &hellip;</a></h6></td><td><details><summary>5.91</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    h3:&#13;      score: 1&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;  result: 3.4&#13;regex:&#13;  wordCount: 59&#13;  wordValue: 0.1&#13;  result: 2.51&#13;</pre></details></td><td>1</td><td>1</td><td>7.4</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2705092300\" target=\"_blank\" rel=\"noopener\">@zugdev</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.034</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2705093919\" target=\"_blank\" rel=\"noopener\">This will be real cool to turn into a public api endpoint and th&hellip;</a></h6></td><td><details><summary>2.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>0.8</td><td>2</td><td>5.2</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2705120048\" target=\"_blank\" rel=\"noopener\">Not sure why pricing doesn't work here @gentlementlegen</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.216</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2707782551\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Start broke</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.08</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2708145203\" target=\"_blank\" rel=\"noopener\">I think I need to top up. We should change to open router so I c&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.35</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2719717606\" target=\"_blank\" rel=\"noopener\">You need to throw this error. But also we should be able to reco&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.984</td></tr></tbody></table></details>"},"gentlementlegen":{"total":2.232,"userId":9807008,"comments":[{"id":2705236362,"content":"@0x4007 Configuration was wrong, just updated it: https://github.com/ubiquity-os/.github/commit/85ab1dd40cd6cee5f02618716ebc3640f69f7168\nYou'll also notice that many items are quite old in this custom configuration: https://github.com/ubiquity-os/.github/commit/85ab1dd40cd6cee5f02618716ebc3640f69f7168","url":"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2705236362","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.634,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":46.129405405405436,"syllables":67,"sentences":5,"score":0.8612940540540543},"multiplier":1,"relevance":0.1}},{"id":2719531079,"content":"According to the logs, the `Permit generation module` gets disable because of an invalid / missing configuration:\nhttps://github.com/ubiquity-os-marketplace/text-conversation-rewards/actions/runs/13824764886/job/38677577975#step:3:1544\nLemme try to fix the configuration.\n---\nOkay never mind the message is wrong, it is `EventIncentivesModule` that gets disabled. The problem is that the key is not allowed to run on this organization: https://github.com/ubiquity-os-marketplace/text-conversation-rewards/actions/runs/13824764886/job/38677577975#step:3:1560","url":"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2719531079","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.102,"formatting":{"content":{"h2":{"score":1,"elementCount":1},"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":2},"priority":2,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":54.7954683544304,"syllables":127,"sentences":5,"score":0.947954683544304},"multiplier":1,"relevance":0.1}},{"id":2719928926,"content":"No we should not throw as modules are intended to be disabled through the configuration, this is very useful. We can have a footnote saying that x module got disabled however.","url":"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2719928926","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.496,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":57.379919354838734,"syllables":49,"sentences":2,"score":0.9737991935483873},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/xp/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.232 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>3</td><td>2.232</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2705236362\" target=\"_blank\" rel=\"noopener\">@0x4007 Configuration was wrong, just updated it: https://github&hellip;</a></h6></td><td><details><summary>2.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.634</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2719531079\" target=\"_blank\" rel=\"noopener\">According to the logs, the &#96;Permit generation module&#96; ge&hellip;</a></h6></td><td><details><summary>4.29</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 2&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.1</td><td>2</td><td>1.102</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/2#issuecomment-2719928926\" target=\"_blank\" rel=\"noopener\">No we should not throw as modules are intended to be disabled th&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.496</td></tr></tbody></table></details>"},"Keyrxng":{"total":0.132,"userId":106303466,"comments":[{"id":2718903724,"content":"Just found this repo and I'm sorry that I did too late.\r\nPlease see https://github.com/ubiquity/pay.ubq.fi/issues/392","url":"https://github.com/ubiquity-os/xp/pull/2#issuecomment-2718903724","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.132,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":92.68800000000002,"syllables":31,"sentences":5,"score":0.6731199999999998},"multiplier":0.25,"relevance":0.1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/xp/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.132 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>0.132</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/xp/pull/2#issuecomment-2718903724\" target=\"_blank\" rel=\"noopener\">Just found this repo and I'm sorry that I did too late.Please &hellip;</a></h6></td><td><details><summary>2.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.132</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_5.json","json":{"gentlementlegen":{"userId":9807008,"total":53.63,"task":{"reward":50,"multiplier":1},"comments":[{"id":2224626927,"content":"The package is usable as a GitHub action but does not offer any option to be directly imported in the code of another project.\r\nHaving it as a NPM Package would greatly facitate integration within other projects without the hassle of importing submodules, or using Actions.\r\nThe package should also offer an option to be GitHub Action agnostic, because its purpose is simply to generate permits.\r\nTasks to be carried on:\r\n- package, bundle and type the functions within `.d.ts` files\r\n- export the package to NPM\r\n- make overloads of GitHub agnostic permit generation","url":"https://github.com/ubiquity-os/permit-generation/issues/5","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.63,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":1,"words":{"wordCount":91,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":39.644848901098925,"syllables":155,"sentences":4,"score":0.7964484890109893},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 53.63 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.63</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/5\" target=\"_blank\" rel=\"noopener\">The package is usable as a GitHub action but does not offer any &hellip;</a></h6></td><td><details><summary>2.93</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 91&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>3.63</td></tr></tbody></table></details>"},"0x4007":{"total":17.41,"userId":4975670,"comments":[{"id":2036335194,"content":"1. Be sure to provide a time estimate \n2. What's the motivation? The only places it's used now is in the pay.ubq.fi repo just for development/testing purposes, and this plugin \nIn the vision I propose about summing payment requests, this means that a permit will only be generated in this plugin, not inside of other plugins. I don't think this task is necessary.","url":"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2036335194","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.53,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":1,"words":{"wordCount":67,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":69.49071641791046,"syllables":98,"sentences":5,"score":0.9050928358208954},"multiplier":1,"relevance":1}},{"id":2036365020,"content":"I replied and definitely think this is not a task worth pursing.","url":"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2036365020","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.33,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":67.75500000000001,"syllables":18,"sentences":1,"score":0.9224499999999999},"multiplier":1,"relevance":1}},{"id":2036409959,"content":"If you want to implement this as a temporary solution, i.e. tech debt, then perhaps it makes sense so that we can get back on track with our schedule.","url":"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2036409959","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.079,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":83.88500000000002,"syllables":40,"sentences":3,"score":0.7611499999999998},"multiplier":1,"relevance":0.9}},{"id":2045442568,"content":"We got rate limited https://github.com/ubiquibot/comment-incentives/actions/runs/8617933701/job/23619113189\r\nSeems like this can be a problem as we pick up on activity in our network.","url":"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2045442568","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.632,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":68.2960483870968,"syllables":45,"sentences":2,"score":0.917039516129032},"multiplier":1,"relevance":0.2}},{"id":1555584951,"content":"I agree that optional parameters should be placed last in typescript","url":"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555584951","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -19,10 +19,10 @@ export async function generatePayoutPermit(context: Context, permitRequests: Per\n     let permit: Permit;\n     switch (type) {\n       case \"ERC20\":\n-        permit = await generateErc20PermitSignature(context, username, amount);\n+        permit = await generateErc20PermitSignature(username, amount, context);","score":{"reward":0.984,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":49.54272727272729,"syllables":19,"sentences":1,"score":0.895427272727273},"multiplier":1,"relevance":0.8}},{"id":2041933985,"content":"I don't have time to look through code, and will instead focus on communication. \r\nI think that permit requests make sense to make a library for, but actual permit generation should only happen in one place- and after our [earlier discussion](https://github.com/ubiquibot/permit-generation/issues/5#issuecomment-2036352529), perhaps from within the bot kernel. \r\nDue to this, I would expect that most of the logic to be related to \"permit requests\" from each planned plugin.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2041933985","commentType":"PULL_COLLABORATOR","score":{"reward":3.248,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":69,"wordValue":0.1,"result":2.59},"readability":{"fleschKincaid":62.10739130434784,"syllables":99,"sentences":3,"score":0.9789260869565216},"multiplier":1,"relevance":0.7}},{"id":2043989804,"content":"Knip: the Sisyphusian task","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2043989804","commentType":"PULL_COLLABORATOR","score":{"reward":0.057,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":54.72500000000002,"syllables":7,"sentences":1,"score":0.9472500000000003},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":1986019159,"effect":{"addition":350,"deletion":205},"reward":5.55,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/7"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 17.41 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>5.55</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>7.571</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>4.289</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/7\" target=\"_blank\" rel=\"noopener\">#7</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+350 -205</td><td>1</td><td>5.55</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2036335194\" target=\"_blank\" rel=\"noopener\">1. Be sure to provide a time estimate 2. What's the motivation?&hellip;</a></h6></td><td><details><summary>2.78</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 67&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>1</td><td>1</td><td>3.53</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2036365020\" target=\"_blank\" rel=\"noopener\">I replied and definitely think this is not a task worth pursing.</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>1</td><td>1</td><td>1.33</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2036409959\" target=\"_blank\" rel=\"noopener\">If you want to implement this as a temporary solution, i.e. tech&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.079</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2045442568\" target=\"_blank\" rel=\"noopener\">We got rate limited https://github.com/ubiquibot/comment-incenti&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.632</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555584951\" target=\"_blank\" rel=\"noopener\">I agree that optional parameters should be placed last in typesc&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.984</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2041933985\" target=\"_blank\" rel=\"noopener\">I don't have time to look through code, and will instead focus o&hellip;</a></h6></td><td><details><summary>3.59</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 69&#13;  wordValue: 0.1&#13;  result: 2.59&#13;</pre></details></td><td>0.7</td><td>1</td><td>3.248</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2043989804\" target=\"_blank\" rel=\"noopener\">Knip: the Sisyphusian task</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.057</td></tr></tbody></table></details>"},"gitcoindev":{"total":50,"userId":88761781,"comments":[{"id":2056640741,"content":"I triggered once more in debug mode, will not spam anymore here -)","url":"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2056640741","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.032,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":81.85500000000002,"syllables":16,"sentences":1,"score":0.7814499999999999},"multiplier":0.25,"relevance":0.1}},{"id":1555283826,"content":"actions/checkout and in general actions can be upgraded to v4, which is compatible by default with Node 20 and has several enhancements over v3, which targeted Node 16.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555283826","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,28 @@\n+name: Publish Package\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  release-please:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: google-github-actions/release-please-action@v3\n+        with:\n+          release-type: node\n+          package-name: @ubiquibot/permit-generation\n+          default-branch: main\n+      - uses: actions/checkout@v3","score":{"reward":0.464,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":43.20689655172416,"syllables":46,"sentences":1,"score":0.8320689655172415},"multiplier":0.25,"relevance":0.8}},{"id":1555450639,"content":"I am not sure about changing context as the last function argument. By convention it was the first argument, also checked at e.g. https://github.com/actions/github-script/blob/main/src/async-function.ts#L10\r\nI found a good article explaining why context is first passed in Go https://www.bytesizego.com/blog/context-should-be-first-go and I think similar can be argued about Typescript. \r\nPlease let know if you think otherwise, that it should be passed as the last argument.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555450639","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -19,10 +19,10 @@ export async function generatePayoutPermit(context: Context, permitRequests: Per\n     let permit: Permit;\n     switch (type) {\n       case \"ERC20\":\n-        permit = await generateErc20PermitSignature(context, username, amount);\n+        permit = await generateErc20PermitSignature(username, amount, context);","score":{"reward":1.278,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":62,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":76.81830065359479,"syllables":121,"sentences":9,"score":0.8318169934640521},"multiplier":0.25,"relevance":0.9}},{"id":1555684166,"content":"All right, thank you for the explanation, lets merge this as is then.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555684166","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -19,10 +19,10 @@ export async function generatePayoutPermit(context: Context, permitRequests: Per\n     let permit: Permit;\n     switch (type) {\n       case \"ERC20\":\n-        permit = await generateErc20PermitSignature(context, username, amount);\n+        permit = await generateErc20PermitSignature(username, amount, context);","score":{"reward":0.165,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":89.51692307692309,"syllables":16,"sentences":1,"score":0.704830769230769},"multiplier":0.25,"relevance":0.5}},{"id":2042193674,"content":"I noticed Knip is failing in this repo, I will fix this today.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042193674","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.238,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.0092307692308,"syllables":17,"sentences":1,"score":0.7699076923076921},"multiplier":0.25,"relevance":0.7}},{"id":2042543323,"content":"I fixed Knip configuration and opened an another pull request, should be green after merging. We can either merge this one first and fix any detected issues later, or merge https://github.com/ubiquibot/permit-generation/pull/9 first . \r\nIf Knip will be merged first we should be able to see if this one does not introduce any new regressions.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042543323","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.872,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":52,"wordValue":0.1,"result":2.41},"readability":{"fleschKincaid":68.94000000000003,"syllables":87,"sentences":4,"score":0.9105999999999997},"multiplier":0.25,"relevance":0.8}},{"id":2042858834,"content":"@gentlementlegen as expected after merging there are a few conflicts that have to be resolved by rebase / merge against fresh development branch, perhaps I will be able to resolve them directly in the GitHub's web editor.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042858834","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.448,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":34.377297297297304,"syllables":59,"sentences":1,"score":0.7437729729729731},"multiplier":0.25,"relevance":0.7}},{"id":2042927113,"content":"I found a few issues and fixed them, it complains about jest types, I will revert this asap and we should be ready to merge.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042927113","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.424,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":76.55600000000001,"syllables":31,"sentences":1,"score":0.8344399999999998},"multiplier":0.25,"relevance":0.8}},{"id":2042952105,"content":"Knip kung-fu and Jest tests green (tests passing on branch locally). I see that pull_request_target workflow is used for tests, perhaps we need to change this to pull_request as pull_request_target uses base branch, not pr branch.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042952105","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.536,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":69.1602027027027,"syllables":52,"sentences":2,"score":0.908397972972973},"multiplier":0.25,"relevance":0.8}},{"id":2043033250,"content":"Sure, I will have a look today. I have just checked locally and tests work on my machine, I will compare and fix this.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2043033250","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.3,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":92.43000000000002,"syllables":29,"sentences":2,"score":0.6756999999999997},"multiplier":0.25,"relevance":0.6}},{"id":2043530792,"content":"@gentlementlegen I fixed tests, had to add explicit imports and fix a few types that compiler complained with TS2345 error. Knip is also green, and I think we can merge this now and continue rework in next prs. I leave @whilefoo to re-review, approve from his side and merge.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2043530792","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.675,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":73.17033333333337,"syllables":69,"sentences":3,"score":0.8682966666666663},"multiplier":0.25,"relevance":0.9}},{"id":2044207168,"content":"![myths-legends-greek-greek_mythology-myth-legends-zeus-wda2048_low](https://github.com/ubiquibot/permit-generation/assets/88761781/c2cb589f-4116-454e-94ba-e4911b8b55a5)\r\n:smile:","url":"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2044207168","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.004,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":36.62000000000003,"syllables":2,"sentences":1,"score":0.7662000000000003},"multiplier":0.25,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":1985536016,"effect":{"addition":350,"deletion":205},"reward":5.55,"priority":1},{"reviewId":1987287426,"effect":{"addition":8258,"deletion":41},"reward":82.99,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/7"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 50 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>88.54</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.032</td></tr><tr><td>Review</td><td>Comment</td><td>11</td><td>5.404</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/7\" target=\"_blank\" rel=\"noopener\">#7</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+350 -205</td><td>1</td><td>5.55</td></tr><tr><td>+8258 -41</td><td>1</td><td>82.99</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/5#issuecomment-2056640741\" target=\"_blank\" rel=\"noopener\">I triggered once more in debug mode, will not spam anymore here &hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.032</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555283826\" target=\"_blank\" rel=\"noopener\">actions/checkout and in general actions can be upgraded to v4, w&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.464</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555450639\" target=\"_blank\" rel=\"noopener\">I am not sure about changing context as the last function argume&hellip;</a></h6></td><td><details><summary>4.54</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 62&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.278</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555684166\" target=\"_blank\" rel=\"noopener\">All right, thank you for the explanation, lets merge this as is &hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.165</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042193674\" target=\"_blank\" rel=\"noopener\">I noticed Knip is failing in this repo, I will fix this today.</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.238</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042543323\" target=\"_blank\" rel=\"noopener\">I fixed Knip configuration and opened an another pull request, s&hellip;</a></h6></td><td><details><summary>3.41</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 52&#13;  wordValue: 0.1&#13;  result: 2.41&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.872</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042858834\" target=\"_blank\" rel=\"noopener\">@gentlementlegen as expected after merging there are a few confl&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.448</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042927113\" target=\"_blank\" rel=\"noopener\">I found a few issues and fixed them, it complains about jest typ&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.424</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2042952105\" target=\"_blank\" rel=\"noopener\">Knip kung-fu and Jest tests green (tests passing on branch local&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.536</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2043033250\" target=\"_blank\" rel=\"noopener\">Sure, I will have a look today. I have just checked locally and &hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.3</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2043530792\" target=\"_blank\" rel=\"noopener\">@gentlementlegen I fixed tests, had to add explicit imports and &hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.9</td><td>1</td><td>0.675</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#issuecomment-2044207168\" target=\"_blank\" rel=\"noopener\">![myths-legends-greek-greek_mythology-myth-legends-zeus-wda2048_&hellip;</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.004</td></tr></tbody></table></details>"},"whilefoo":{"total":8.914,"userId":139262667,"comments":[{"id":1555958708,"content":"Wouldn't it be better to use union type here?\r\nDoing it like this reduces type safety because you can still put a number as `contextOrNetworkId` but specify `undefined` as `userId`.","url":"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555958708","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,41 +1,77 @@\n import { PERMIT2_ADDRESS, PermitTransferFrom, SignatureTransfer } from \"@uniswap/permit2-sdk\";\n import { ethers, keccak256, MaxInt256, parseUnits, toUtf8Bytes } from \"ethers\";\n-import { Context } from \"../types/context\";\n+import { Context, Logger } from \"../types/context\";\n import { Permit } from \"../types/permits\";\n import { decryptKeys } from \"../utils/keys\";\n import { getPayoutConfigByNetworkId } from \"../utils/payoutConfigByNetworkId\";\n \n-export async function generateErc20PermitSignature(context: Context, username: string, amount: number): Promise<Permit> {\n-  const config = context.config;\n-  const logger = context.logger;\n-  const { evmNetworkId, evmPrivateEncrypted } = config;\n-  const { user, wallet } = context.adapters.supabase;\n+export async function generateErc20PermitSignature(\n+  username: string,\n+  amount: number,\n+  evmNetworkId: number,\n+  evmPrivateEncrypted: string,\n+  userId: number,\n+  walletAddress: string,\n+  issueId: number,\n+  logger: Logger\n+): Promise<Permit>;\n+export async function generateErc20PermitSignature(username: string, amount: number, context: Context): Promise<Permit>;\n+export async function generateErc20PermitSignature(\n+  username: string,\n+  amount: number,\n+  contextOrNetworkId: Context | number,","score":{"reward":1.904,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":80.83214285714287,"syllables":37,"sentences":2,"score":0.7916785714285713},"multiplier":1,"relevance":0.85}}],"reviewRewards":[{"reviews":[{"reviewId":1986645565,"effect":{"addition":427,"deletion":221},"reward":6.48,"priority":1},{"reviewId":1989184036,"effect":{"addition":24,"deletion":29},"reward":0.53,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/7"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 8.914 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>7.01</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>1.904</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/7\" target=\"_blank\" rel=\"noopener\">#7</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+427 -221</td><td>1</td><td>6.48</td></tr><tr><td>+24 -29</td><td>1</td><td>0.53</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/7#discussion_r1555958708\" target=\"_blank\" rel=\"noopener\">Wouldn't it be better to use union type here?Doing it like thi&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.85</td><td>1</td><td>1.904</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_28.json","json":{"gentlementlegen":{"userId":9807008,"total":51.035,"task":{"reward":50,"multiplier":1},"comments":[{"id":2188979640,"content":"My guess is that because the package was previously released manually, it doesn't match the version on the repo. Afaik `release-please` will look for the all the commit names, then check the current package version and the repo latest tag. And it seems there is currently no tag inside this repository which would bring it back to `1.0.0` (just a guess).\r\nAlso the package should be changed to https://github.com/googleapis/release-please since the previous one is now deprecated.","url":"https://github.com/ubiquity-os/permit-generation/issues/28#issuecomment-2188979640","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.035,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":74,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":70.04,"syllables":114,"sentences":5,"score":0.8996},"multiplier":0.25,"relevance":0.9}}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 51.035 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.035</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/28#issuecomment-2188979640\" target=\"_blank\" rel=\"noopener\">My guess is that because the package was previously released man&hellip;</a></h6></td><td><details><summary>3.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 74&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.035</td></tr></tbody></table></details>"},"rndquu":{"total":8.365,"userId":119500907,"comments":[{"id":2188132408,"content":"@gentlementlegen Pls check the description","url":"https://github.com/ubiquity-os/permit-generation/issues/28#issuecomment-2188132408","commentType":"ISSUE_AUTHOR","score":{"reward":0.248,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":15.640000000000015,"syllables":11,"sentences":1,"score":0.5564000000000001},"multiplier":1,"relevance":0.4}},{"id":2219638848,"content":"So this issue should be closed as completed, right?","url":"https://github.com/ubiquity-os/permit-generation/issues/28#issuecomment-2219638848","commentType":"ISSUE_AUTHOR","score":{"reward":0.707,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":94.30000000000001,"syllables":11,"sentences":1,"score":0.6569999999999999},"multiplier":1,"relevance":0.7}},{"id":2371853109,"content":"Check [this](https://github.com/ubiquibot/permit-generation/pull/23) PR which was created automatically by [this](https://github.com/ubiquibot/permit-generation/blob/37e28cca5f9a31f62a03e622eeeb7dcfad132aa4/.github/workflows/publish-package.yml) workflow.\r\n[Initially](https://github.com/ubiquibot/permit-generation/pull/23/commits/a43f502d23c00362897b98b21dd2c950cd399941) that PR downgraded the package version to `1.0.0` although the expected behavior was to bump the version.\r\nWhat should be done:\r\n- find out and fix the root cause why [google-github-actions/release-please-action](https://github.com/ubiquibot/permit-generation/blob/37e28cca5f9a31f62a03e622eeeb7dcfad132aa4/.github/workflows/publish-package.yml#L17) downgrades the version instead of bumping it \r\n- make sure that on every new commit with message pattern `feat: *` a new PR is created with a bumped version\r\nP.S. Expected release [flow](https://github.com/ubiquibot/permit-generation/pull/23#issuecomment-2178005450)","url":"https://github.com/ubiquity-os/permit-generation/issues/28","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.41,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":3}},"result":3.2},"priority":1,"words":{"wordCount":76,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":68.95963157894738,"syllables":110,"sentences":5,"score":0.9104036842105262},"multiplier":1,"relevance":1}}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 8.365 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.41</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>0.955</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/28\" target=\"_blank\" rel=\"noopener\">Check [this](https://github.com/ubiquibot/permit-generation/pull&hellip;</a></h6></td><td><details><summary>5.82</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.2&#13;regex:&#13;  wordCount: 76&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>1</td><td>1</td><td>7.41</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/28#issuecomment-2188132408\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Pls check the description</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.248</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/28#issuecomment-2219638848\" target=\"_blank\" rel=\"noopener\">So this issue should be closed as completed, right?</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.707</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_171.json","json":{"whilefoo":{"userId":139262667,"total":1610.6,"task":{"reward":1600,"multiplier":1},"comments":[{"id":2440024992,"content":"I think a week would be fine","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2440024992","commentType":"ISSUE_AUTHOR","score":{"reward":0.72,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":115.13000000000002,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}},{"id":2616503295,"content":"The goal of this task is to simplify developer experience when setting up the kernel.\r\nTo do this we need to create an interactive CLI tool that will help with setting up the Github App and preparing Cloudflare for deployment of the kernel\r\nThis setup tool should be inspired by [Probot's setup flow](https://probot.github.io/docs/development/#generating-a-new-app)\r\n### 1. Setup Cloudflare and Wrangler\r\n- Make the user login with Wrangler\r\n- Create a KV namespace and put the ID in wrangler.toml (we already have a [script](https://github.com/ubiquity-os/ubiquity-os-kernel/blob/development/deploy/setup-kv-namespace.ts) that can be used and/or modified)\r\n### 2. GitHub App Setup Automation\r\nThis can be done with [Github App Manifest](https://docs.github.com/en/apps/sharing-github-apps/registering-a-github-app-from-a-manifest)\r\n- Automate creation of a GitHub App\r\n- Subscribe to all required GitHub events\r\n- Set necessary permissions for the App\r\n- Convert the private key to PKCS#8\r\n- Populate App ID, private key and webhook secret into `.dev.vars` file and in Cloudflare Worker secrets.\r\nAdditionally we can make an option in the SDK to disable signature verification in order to ease the development of new plugins.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171","commentType":"ISSUE_SPECIFICATION","score":{"reward":9.88,"formatting":{"content":{"p":{"score":0,"elementCount":12},"h3":{"score":1,"elementCount":2},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":7},"a":{"score":1,"elementCount":3}},"result":5.7},"priority":1,"words":{"wordCount":163,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":48.98721370143153,"syllables":251,"sentences":6,"score":0.8898721370143153},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1610.6 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>1600</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>9.88</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.72</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171\" target=\"_blank\" rel=\"noopener\">The goal of this task is to simplify developer experience when s&hellip;</a></h6></td><td><details><summary>7.8</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 12&#13;    h3:&#13;      score: 1&#13;      elementCount: 2&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 7&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 5.7&#13;regex:&#13;  wordCount: 163&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>1</td><td>1</td><td>9.88</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2440024992\" target=\"_blank\" rel=\"noopener\">I think a week would be fine</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.2</td><td>4</td><td>0.72</td></tr></tbody></table></details>"},"0x4007":{"total":35.816,"userId":4975670,"comments":[{"id":2439972333,"content":"Time estimate please","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2439972333","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.26,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":62.79000000000002,"syllables":5,"sentences":1,"score":0.9720999999999997},"multiplier":1,"relevance":0.7}},{"id":2453483872,"content":"This again @gentlementlegen 👀","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2453483872","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.7,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":-21.809999999999945,"syllables":8,"sentences":1,"score":0},"multiplier":1,"relevance":0.5}},{"id":2458184895,"content":"It's too tedious to do from mobile unfortunately","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2458184895","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.212,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":28.50000000000003,"syllables":18,"sentences":1,"score":0.6850000000000003},"multiplier":1,"relevance":0.3}},{"id":2437883955,"content":"Tested and it works well!","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#pullrequestreview-2437883955","commentType":"PULL_COLLABORATOR","score":{"reward":0.828,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":2482158468,"content":"@gentlementlegen daemon-merge should take daemon-disqualifier into account. \nMerge is designed to merge when reviewers are too slow \nDisqualifier may disqualify before the merge occurs so we need a solution for the merge to happen just before the disqualification.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2482158468","commentType":"PULL_COLLABORATOR","score":{"reward":7.504,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":36.37000000000003,"syllables":71,"sentences":2,"score":0.7637000000000004},"multiplier":1,"relevance":0.7}},{"id":2483574341,"content":"@gentlementlegen  this looks wrong","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2483574341","commentType":"PULL_COLLABORATOR","score":{"reward":0.432,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":33.57500000000002,"syllables":8,"sentences":1,"score":0.7357500000000001},"multiplier":1,"relevance":0.2}},{"id":2484311869,"content":"This is whilefoo pull request so it doesn't make sense to follow up here for someone else. Should default to follow up on the issue in this scenario.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2484311869","commentType":"PULL_COLLABORATOR","score":{"reward":4.6,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":78.34508620689657,"syllables":39,"sentences":2,"score":0.8165491379310343},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2437883955,"effect":{"addition":480,"deletion":2},"reward":19.28,"priority":4}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 35.816 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>19.28</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>3.172</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>13.364</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198\" target=\"_blank\" rel=\"noopener\">#198</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+480 -2</td><td>4</td><td>19.28</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2439972333\" target=\"_blank\" rel=\"noopener\">Time estimate please</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>4</td><td>1.26</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2453483872\" target=\"_blank\" rel=\"noopener\">This again @gentlementlegen 👀</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.5</td><td>4</td><td>0.7</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2458184895\" target=\"_blank\" rel=\"noopener\">It's too tedious to do from mobile unfortunately</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.3</td><td>4</td><td>1.212</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#pullrequestreview-2437883955\" target=\"_blank\" rel=\"noopener\">Tested and it works well!</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.3</td><td>4</td><td>0.828</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2482158468\" target=\"_blank\" rel=\"noopener\">@gentlementlegen daemon-merge should take daemon-disqualifier in&hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.7</td><td>4</td><td>7.504</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2483574341\" target=\"_blank\" rel=\"noopener\">@gentlementlegen  this looks wrong</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.2</td><td>4</td><td>0.432</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2484311869\" target=\"_blank\" rel=\"noopener\">This is whilefoo pull request so it doesn't make sense to follow&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.5</td><td>4</td><td>4.6</td></tr></tbody></table></details>"},"zugdev":{"total":2.628,"userId":155616000,"comments":[{"id":2451966639,"content":"@vichydra :eyes:","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2451966639","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.024,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-6.694999999999993,"syllables":5,"sentences":1,"score":0},"multiplier":0.25,"relevance":0.1}},{"id":2466877128,"content":"@whilefoo can I start on this one?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2466877128","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.672,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":0.25,"relevance":0.8}},{"id":2479906766,"content":"Whilefoo was asigned and has a pull open, #198, it was also clearly stated a couple comments above that he was actively working on this task and a little bug regards the disqualification plugin. I am sorry, but yes.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2479906766","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.932,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":54.71942307692311,"syllables":61,"sentences":2,"score":0.947194230769231},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.628 XP ]</a>&nbsp;</h3><h6>@zugdev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>3</td><td>2.628</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2451966639\" target=\"_blank\" rel=\"noopener\">@vichydra :eyes:</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.1</td><td>4</td><td>0.024</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2466877128\" target=\"_blank\" rel=\"noopener\">@whilefoo can I start on this one?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>4</td><td>0.672</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2479906766\" target=\"_blank\" rel=\"noopener\">Whilefoo was asigned and has a pull open, #198, it was also clea&hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.7</td><td>4</td><td>1.932</td></tr></tbody></table></details>"},"gentlementlegen":{"total":13.004,"userId":9807008,"comments":[{"id":2453489986,"content":"@0x4007 You can check the logs: https://dash.cloudflare.com/5c0228bee348f4cf48829ffe21b61fe9/workers/services/view/ubiquity-os-kernel-development/production/observability/logs?granularity=0&time=%7B%22type%22%3A%22absolute%22%2C%22to%22%3A1730648160000%2C%22from%22%3A1730648040000%7D\r\nThe `fetch` hung and failed from Cloudflare when invoking the plugin.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2453489986","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.36,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":59.73186224489797,"syllables":78,"sentences":4,"score":0.9973186224489797},"multiplier":1,"relevance":0.2}},{"id":2478174077,"content":"@whilefoo might have been corrected in later wrangler versions, I remember issues when there was either multiple accounts or multiple KV name spaces that would stop wrangler from working. I'll give this a try soon.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2478174077","commentType":"PULL_COLLABORATOR","score":{"reward":6.408,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":64.015,"syllables":53,"sentences":2,"score":0.95985},"multiplier":1,"relevance":0.6}},{"id":2484100678,"content":"@henalolp is currently the user assigned to the task so it makes sense to me? What was expected","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2484100678","commentType":"PULL_COLLABORATOR","score":{"reward":1.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":80.20000000000003,"syllables":25,"sentences":2,"score":0.7979999999999997},"multiplier":1,"relevance":0.2}},{"id":2484379847,"content":"@0x4007 This PR should have been closed in the first place because a user that is not assigned should get denied from opening PRs linked to that issue either way.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2484379847","commentType":"PULL_COLLABORATOR","score":{"reward":2.868,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":69.22500000000004,"syllables":38,"sentences":1,"score":0.9077499999999996},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 13.004 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>2.36</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>10.644</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2453489986\" target=\"_blank\" rel=\"noopener\">@0x4007 You can check the logs: https://dash.cloudflare.com/5c02&hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.2</td><td>4</td><td>2.36</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2478174077\" target=\"_blank\" rel=\"noopener\">@whilefoo might have been corrected in later wrangler versions, &hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.6</td><td>4</td><td>6.408</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2484100678\" target=\"_blank\" rel=\"noopener\">@henalolp is currently the user assigned to the task so it makes&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.2</td><td>4</td><td>1.368</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198#issuecomment-2484379847\" target=\"_blank\" rel=\"noopener\">@0x4007 This PR should have been closed in the first place becau&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.3</td><td>4</td><td>2.868</td></tr></tbody></table></details>"},"Keyrxng":{"total":1.84,"userId":106303466,"comments":[{"id":2457513297,"content":"[Tail workers](https://developers.cloudflare.com/workers/observability/logs/tail-workers/) seem like a solid solution to this sort of thing. \r\nOne worker to catch all exceptions in other workers; it could then ping via TG the exception that happened, where, when, who and how straight into a private chat filled with proactive trusted contributors.\r\nRequires a paid plan, something we have avoided but eventually we are going to have to bite that bullet I think.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2457513297","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.84,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":67,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":66.73681592039803,"syllables":93,"sentences":3,"score":0.9326318407960197},"multiplier":0.25,"relevance":0.4}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.84 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.84</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171#issuecomment-2457513297\" target=\"_blank\" rel=\"noopener\">[Tail workers](https://developers.cloudflare.com/workers/observa&hellip;</a></h6></td><td><details><summary>3.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 67&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>0.4</td><td>4</td><td>1.84</td></tr></tbody></table></details>"},"henalolp":{"total":0,"userId":153296577,"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/198"}]}}},{"name":"results/ubiquity-os_configuration-loader_3.json","json":{"gentlementlegen":{"userId":9807008,"total":25,"task":{"reward":25,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 25 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"0x4007":{"total":18.604,"userId":4975670,"comments":[{"id":1956600685,"content":"Oh man I broke something for the claims due to the RPCs I added. Let me fix this bug now sorry about that!\r\nSeems that its intermittent, as I was[ able to claim ](https://gnosisscan.io/tx/0x7691cce6f13731666758a753121e09498b66fb535da93661a9ed085217c60d99)after waiting a bit. I'll debug.","url":"https://github.com/ubiquity-os/configuration-loader/issues/3#issuecomment-1956600685","commentType":"ISSUE_AUTHOR","score":{"reward":0.772,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":88.82000000000002,"syllables":51,"sentences":4,"score":0.7117999999999998},"multiplier":1,"relevance":0.1}},{"id":2141804012,"content":"Make sure that tests pass in CI before it can deploy to `npm`\r\n- Set up test environment. Use [this commit](https://github.com/pavlovcik/conversation-rewards/commit/0820b8f0c8a76d26c91f0ba5255ce5755241f8fd).\r\n- Set up `npm` deploy CI. Can use [this file](https://github.com/pavlovcik/conversation-rewards/blob/feat/get-all-merged-linked-pulls/.github/workflows/test-links.yml).\r\n_Originally posted by @pavlovcik in https://github.com/ubiquibot/configuration/issues/2#issuecomment-1951935697_","url":"https://github.com/ubiquity-os/configuration-loader/issues/3","commentType":"ISSUE_SPECIFICATION","score":{"reward":6.67,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":3}},"result":3.2},"priority":1,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":61.65038617886182,"syllables":67,"sentences":6,"score":0.9834961382113818},"multiplier":1,"relevance":1}},{"id":1495355976,"content":"```suggestion\n      - uses: actions/checkout@v4\r\n```","url":"https://github.com/ubiquity-os/configuration-loader/pull/4#discussion_r1495355976","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,34 @@\n+name: Run Jest testing suite\r\n+on:\r\n+  workflow_dispatch:\r\n+  push:\r\n+    branches:\r\n+      - development\r\n+  pull_request:\r\n+\r\n+env:\r\n+  NODE_ENV: 'test'\r\n+\r\n+jobs:\r\n+  testing:\r\n+    runs-on: ubuntu-latest\r\n+    steps:\r\n+      - uses: actions/setup-node@v4\r\n+        with:\r\n+          node-version: latest\r\n+      - uses: actions/checkout@master\r","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":2,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.8}},{"id":1495357692,"content":"This one I'm skeptical about. There's a lot more properties we support in the yml. The yml is the \"source\" and then it is interpreted and handled inside of the program logic as the json representation you are aware of above.","url":"https://github.com/ubiquity-os/configuration-loader/pull/4#discussion_r1495357692","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":3.962,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":74.24015503875972,"syllables":60,"sentences":3,"score":0.8575984496124027},"multiplier":1,"relevance":0.7}},{"id":1497489699,"content":"We usually use `moment.js` for these but for the tests should be fine.","url":"https://github.com/ubiquity-os/configuration-loader/pull/4#discussion_r1497489699","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,46 @@\n+import * as fs from \"fs\";\n+import path from \"node:path\";\n+import { BotConfig, generateConfiguration, parseYaml, transformConfig } from \"../src\";\n+import validConfig from \"./mocks/test-valid-conf-obj\";\n+\n+const filePath = path.join(__dirname, \"./mocks/test-valid-config.yml\");\n+\n+describe(\"Configuration generation\", () => {\n+  test(\"Parse Yaml file\", () => {\n+    const fileContent = fs.readFileSync(filePath, { encoding: \"utf8\" });\n+    const parsed = parseYaml(fileContent);\n+    expect(() => parseYaml(\"$@-test-123\\\\\\ntest -: test\")).toThrow();\n+    const parseEmpty = parseYaml(null);\n+    expect(parseEmpty).toBeNull();\n+    expect(parsed).toStrictEqual({\n+      \"price-multiplier\": 1.5,\n+      \"command-settings\": [{ name: \"start\", enabled: false }],\n+    });\n+  });\n+\n+  test(\"Generate configuration\", async () => {\n+    const cfg = await generateConfiguration();\n+    expect(cfg).toStrictEqual(validConfig);\n+    await expect(async () => {\n+      await generateConfiguration({ keys: [\"123\"] } as unknown as BotConfig);\n+    }).rejects.toThrow();\n+  });\n+\n+  test(\"Transform configuration\", async () => {\n+    const cfg = await generateConfiguration();\n+    expect(() => {\n+      transformConfig(cfg);\n+    }).toThrow();\n+    const stringCfg = {\n+      ...cfg,\n+      timers: {\n+        reviewDelayTolerance: \"86400000\",\n+        taskStaleTimeoutDuration: \"2419200000\",\n+        taskFollowUpDuration: \"302400000\",\n+        taskDisqualifyDuration: \"604800000\",","score":{"reward":0.992,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":95.955,"syllables":14,"sentences":1,"score":0.64045},"multiplier":1,"relevance":0.4}},{"id":1953634732,"content":"https://github.com/ubiquity/ts-template/pull/13#issuecomment-1953591959","url":"https://github.com/ubiquity-os/configuration-loader/pull/4#issuecomment-1953634732","commentType":"PULL_COLLABORATOR","score":{"reward":0.508,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":49.48000000000002,"syllables":18,"sentences":2,"score":0.8948000000000002},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"reviews":[{"reviewId":1889669824,"effect":{"addition":279,"deletion":3},"reward":5.64,"priority":2},{"reviewId":1893122439,"effect":{"addition":2,"deletion":1},"reward":0.06,"priority":2}],"url":"https://github.com/ubiquity-os/configuration-loader/pull/4"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 18.604 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>5.7</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>6.67</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.772</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>5.462</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/configuration-loader/pull/4\" target=\"_blank\" rel=\"noopener\">#4</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+279 -3</td><td>2</td><td>5.64</td></tr><tr><td>+2 -1</td><td>2</td><td>0.06</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/3\" target=\"_blank\" rel=\"noopener\">Make sure that tests pass in CI before it can deploy to &#96;npm&hellip;</a></h6></td><td><details><summary>5.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.2&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>1</td><td>1</td><td>6.67</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/3#issuecomment-1956600685\" target=\"_blank\" rel=\"noopener\">Oh man I broke something for the claims due to the RPCs I added.&hellip;</a></h6></td><td><details><summary>3.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.772</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/4#discussion_r1495355976\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion- uses: actions/checkout@v4&#9&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/4#discussion_r1495357692\" target=\"_blank\" rel=\"noopener\">This one I'm skeptical about. There's a lot more properties we s&hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.7</td><td>2</td><td>3.962</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/4#discussion_r1497489699\" target=\"_blank\" rel=\"noopener\">We usually use &#96;moment.js&#96; for these but for the tests s&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.4</td><td>2</td><td>0.992</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/4#issuecomment-1953634732\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity/ts-template/pull/13#issuecomment-195&hellip;</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.508</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_45.json","json":{"gentlementlegen":{"userId":9807008,"total":108.122,"task":{"reward":100,"multiplier":1},"comments":[{"id":2167530003,"content":"@0x4007 I know right, it's the first time I see it, but now at least I have an example to re-implement it on the new version I guess. C.f. https://github.com/ubiquibot/plugins-wishlist/issues/11","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167530003","commentType":"ISSUE_AUTHOR","score":{"reward":2.148,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":88.73500000000001,"syllables":52,"sentences":5,"score":0.7126499999999999},"multiplier":1,"relevance":0.3}},{"id":2167538875,"content":"Thanks for trying, will make that functional on v2. I know there is already the `/allow` command implemented.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167538875","commentType":"ISSUE_AUTHOR","score":{"reward":0.656,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":78.77220588235295,"syllables":24,"sentences":2,"score":0.8122779411764705},"multiplier":1,"relevance":0.2}},{"id":2176962805,"content":"@whilefoo If you don't mind me re-generating haha","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2176962805","commentType":"ISSUE_AUTHOR","score":{"reward":0.234,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":61.32500000000002,"syllables":16,"sentences":1,"score":0.9867499999999998},"multiplier":1,"relevance":0.1}},{"id":2317653704,"content":"The `type` element should be removed as the actual type of the plugin will be inferred from the data passed inside the `plugin` field (URL is a Worker, otherwise a GitHub Action).\r\n[Related conversation](https://github.com/ubiquibot/command-query-user/pull/1#discussion_r1614781222)","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.83,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":61.05125000000001,"syllables":49,"sentences":2,"score":0.9894874999999999},"multiplier":1,"relevance":1}},{"id":1926479763,"content":"Resolves #45 \r\nOn merge, need to update https://github.com/ubiquity/ubiquibot-config/blob/development/.github/.ubiquibot-config.yml","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/57","commentType":"PULL_SPECIFICATION","score":{"reward":1.254,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":38.230631578947396,"syllables":37,"sentences":5,"score":0.782306315789474},"multiplier":1,"relevance":0.6}},{"id":2176961961,"content":"Updated config, on [this commit](https://github.com/ubiquity/ubiquibot-config/commit/33dfd98272277bd33c4a7fe79439558dceb2b471).","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/57#issuecomment-2176961961","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":5,"wordValue":0,"result":0},"readability":{"fleschKincaid":66.40000000000003,"syllables":8,"sentences":1,"score":0.9359999999999996},"multiplier":0,"relevance":0.7}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 108.122 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>100</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.83</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>3.038</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>1.254</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45\" target=\"_blank\" rel=\"noopener\">The &#96;type&#96; element should be removed as the actual type &hellip;</a></h6></td><td><details><summary>2.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>1</td><td>1</td><td>3.83</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167530003\" target=\"_blank\" rel=\"noopener\">@0x4007 I know right, it's the first time I see it, but now at l&hellip;</a></h6></td><td><details><summary>2.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.3</td><td>2</td><td>2.148</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167538875\" target=\"_blank\" rel=\"noopener\">Thanks for trying, will make that functional on v2. I know there&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.656</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2176962805\" target=\"_blank\" rel=\"noopener\">@whilefoo If you don't mind me re-generating haha</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.234</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/57\" target=\"_blank\" rel=\"noopener\">Resolves #45 On merge, need to update https://github.com/ubiqu&hellip;</a></h6></td><td><details><summary>1.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.254</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/57#issuecomment-2176961961\" target=\"_blank\" rel=\"noopener\">Updated config, on [this commit](https://github.com/ubiquity/ubi&hellip;</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>2</td><td>0</td></tr></tbody></table></details>"},"0x4007":{"total":1.896,"userId":4975670,"comments":[{"id":2167526064,"content":"This feature seems to have come back from the dead","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167526064","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.468,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":103.625,"syllables":11,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}},{"id":2167532071,"content":"The following command always had terrible ergonomics but let me give it a shot:","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167532071","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.298,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":53.639285714285734,"syllables":23,"sentences":1,"score":0.9363928571428574},"multiplier":1,"relevance":0.1}},{"id":2167537836,"content":"It worked at one point when it was under /allow. It is now broken it seems.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167537836","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.302,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":98.25250000000001,"syllables":19,"sentences":2,"score":0.6174749999999999},"multiplier":1,"relevance":0.1}},{"id":2167550140,"content":"It's supposed to be allow but maybe we were more specific about labels because perhaps allow was to enable other permissions - which elude me at the moment.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167550140","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.454,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":45.4721428571429,"syllables":44,"sentences":1,"score":0.854721428571429},"multiplier":1,"relevance":0.1}},{"id":2126470068,"content":"Glad to see it","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/57#pullrequestreview-2126470068","commentType":"PULL_COLLABORATOR","score":{"reward":0.114,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":2126470068,"effect":{"addition":1,"deletion":12},"reward":0.26,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/57"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.896 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.26</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>1.522</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.114</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/57\" target=\"_blank\" rel=\"noopener\">#57</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1 -12</td><td>2</td><td>0.26</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167526064\" target=\"_blank\" rel=\"noopener\">This feature seems to have come back from the dead</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.468</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167532071\" target=\"_blank\" rel=\"noopener\">The following command always had terrible ergonomics but let me &hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.298</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167537836\" target=\"_blank\" rel=\"noopener\">It worked at one point when it was under /allow. It is now broke&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.302</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/45#issuecomment-2167550140\" target=\"_blank\" rel=\"noopener\">It's supposed to be allow but maybe we were more specific about &hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.454</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/57#pullrequestreview-2126470068\" target=\"_blank\" rel=\"noopener\">Glad to see it</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.114</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_246.json","json":{"gentlementlegen":{"userId":9807008,"total":87.05,"task":{"reward":75,"multiplier":1},"comments":[{"id":2661270751,"content":"I think the way to go is at the point when we evaluate if we should skip the plugin or not, to also check if the plugin specified to listen to `issue_command.created` and in such case we should always forward the event to the plugin.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2661270751","commentType":"ISSUE_AUTHOR","score":{"reward":8.73,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":54.502272727272754,"syllables":56,"sentences":1,"score":0.9450227272727275},"multiplier":1,"relevance":1}},{"id":2667343369,"content":"@0x4007 This repo was using the Action instead of pointing to the worker which is why it didn't work.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2667343369","commentType":"ISSUE_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":76.55500000000004,"syllables":26,"sentences":1,"score":0.8344499999999997},"multiplier":1,"relevance":0}},{"id":2852902865,"content":"If the manifest describes a command for a plugin, and the plugin also listens for `issue_comment.created`, the `issue_comment.created` does not get called if it doesn't match the command. This can be problematic if a plugin needs to both listen to the command and take other actions on `issue_comment.created`.\nThe current workaround is to not specify the command, and just handle handle `issue_command.created`. The downside is that the command will not show when invoking the `/help` command. This is the case for `/demo` for example.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.32,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":79,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":71.92964556962026,"syllables":111,"sentences":5,"score":0.8807035443037974},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 87.05 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>75</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.32</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>8.73</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246\" target=\"_blank\" rel=\"noopener\">If the manifest describes a command for a plugin, and the plugin&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 79&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>3.32</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2661270751\" target=\"_blank\" rel=\"noopener\">I think the way to go is at the point when we evaluate if we sho&hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 44&#13;  wordValue: 0.1&#13;  result: 2.27&#13;</pre></details></td><td>1</td><td>3</td><td>8.73</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2667343369\" target=\"_blank\" rel=\"noopener\">@0x4007 This repo was using the Action instead of pointing to th&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr></tbody></table></details>"},"0x4007":{"total":10.491,"userId":4975670,"comments":[{"id":2658525187,"content":"A solution isn't described here. What are you planning to do? What's the trade offs?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2658525187","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.768,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":96.57745098039217,"syllables":21,"sentences":3,"score":0.6342254901960783},"multiplier":1,"relevance":0.8}},{"id":2664210135,"content":"@whilefoo  RFC","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2664210135","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.279,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":35.60500000000002,"syllables":4,"sentences":1,"score":0.7560500000000002},"multiplier":1,"relevance":0.3}},{"id":2667014089,"content":"So is this the best solution?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2667014089","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.554,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.7}},{"id":2667154960,"content":"@gentlementlegen  I'm assuming label plugin also misconfigured in this org. Is it because I edited the rewards the other day from mobile? Does it mess up the indentation or something?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2667154960","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.458,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":48.978924731182815,"syllables":54,"sentences":3,"score":0.8897892473118282},"multiplier":1,"relevance":0.2}},{"id":2720664876,"content":"This happens so frequently what's the problem here.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720664876","commentType":"PULL_COLLABORATOR","score":{"reward":0.63,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.50000000000003,"syllables":13,"sentences":1,"score":0.8449999999999998},"multiplier":1,"relevance":0.2}},{"id":2720846792,"content":"That should throw to be more clear for debugging.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720846792","commentType":"PULL_COLLABORATOR","score":{"reward":1.515,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":94.30000000000001,"syllables":11,"sentences":1,"score":0.6569999999999999},"multiplier":1,"relevance":0.5}},{"id":2726110573,"content":"This precheck is getting annoying. It throws so many errors. It should be fixed","url":"https://github.com/ubiquity-os/plugin-sdk/pull/78#issuecomment-2726110573","commentType":"PULL_COLLABORATOR","score":{"reward":1.287,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":81.24119047619048,"syllables":20,"sentences":3,"score":0.7875880952380951},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262"},{"url":"https://github.com/ubiquity-os/plugin-sdk/pull/78"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 10.491 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>4</td><td>7.059</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>3.432</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2658525187\" target=\"_blank\" rel=\"noopener\">A solution isn't described here. What are you planning to do? Wh&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.768</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2664210135\" target=\"_blank\" rel=\"noopener\">@whilefoo  RFC</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.279</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2667014089\" target=\"_blank\" rel=\"noopener\">So is this the best solution?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.554</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2667154960\" target=\"_blank\" rel=\"noopener\">@gentlementlegen  I'm assuming label plugin also misconfigured i&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.458</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720664876\" target=\"_blank\" rel=\"noopener\">This happens so frequently what's the problem here.</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.63</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720846792\" target=\"_blank\" rel=\"noopener\">That should throw to be more clear for debugging.</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.515</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/78#issuecomment-2726110573\" target=\"_blank\" rel=\"noopener\">This precheck is getting annoying. It throws so many errors. It &hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.287</td></tr></tbody></table></details>"},"whilefoo":{"total":45.351,"userId":139262667,"comments":[{"id":2666574998,"content":"There are 2 scenarios:\n### 1. Plugin has a command and `issue_command.created` listener\nCurrently: The kernel will only send the event if the command matches\nSolution: The kernel should forward every event to the plugin\n### 2. Plugin has a command but no `issue_command.created` listener\nCurrently: The kernel won't forward any event.\nSolution: The kernel should only forward the event if the command matches","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2666574998","commentType":"ISSUE_COLLABORATOR","score":{"reward":17.55,"formatting":{"content":{"p":{"score":0,"elementCount":3},"h3":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":56.82838114754102,"syllables":97,"sentences":4,"score":0.9682838114754102},"multiplier":1,"relevance":1}},{"id":1994142123,"content":"there's one edge case where the plugin has a command but also listens to any `issue_comment.created` events and `pull_request_review_comment.created` event comes through that matches the command but this `if` won't execute because of the second condition","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#discussion_r1994142123","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,10 +7,49 @@ import { Value } from \"@sinclair/typebox/value\";\n \n const _manifestCache: Record<string, Manifest> = {};\n \n-export function getPluginsForEvent(plugins: PluginConfiguration[\"plugins\"], event: EmitterWebhookEventName) {\n-  return plugins.filter((plugin) => {\n-    return plugin.uses?.[0].runsOn?.includes(event);\n-  });\n+function isCommentCreatedPayload(\n+  payload: GitHubContext[\"payload\"]\n+): payload is GitHubContext<\"issue_comment.created\" | \"pull_request_review_comment.created\">[\"payload\"] {\n+  return \"comment\" in payload && typeof payload.comment !== \"string\";\n+}\n+\n+export async function shouldSkipPlugin(context: GitHubContext, pluginChain: PluginConfiguration[\"plugins\"][0], event: EmitterWebhookEventName) {\n+  if (pluginChain.uses[0].skipBotEvents && \"sender\" in context.payload && context.payload.sender?.type === \"Bot\") {\n+    console.log(`Skipping plugin ${JSON.stringify(pluginChain.uses[0].plugin)} in the chain because the sender is a bot`);\n+    return true;\n+  }\n+  const commentEvents = [\"issue_comment.created\", \"pull_request_review_comment.created\"] as EmitterWebhookEventName[];\n+  if (commentEvents.includes(context.key)) {\n+    const manifest = await getManifest(context, pluginChain.uses[0].plugin);\n+    if (\n+      manifest?.commands &&\n+      !manifest[\"ubiquity:listeners\"]?.some((event) => commentEvents.includes(event)) &&\n+      isCommentCreatedPayload(context.payload) &&\n+      context.payload.comment?.body.trim().startsWith(`/`) &&\n+      Object.keys(manifest.commands).length","score":{"reward":7.074,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":55.28714285714287,"syllables":48,"sentences":1,"score":0.9528714285714287},"multiplier":1,"relevance":0.9}},{"id":1994149182,"content":"what about a test where the plugin has a command and issue_comment.created listener and the comment doesn't match the event and also the edge case I described above","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#discussion_r1994149182","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,127 @@\n+import { afterAll, afterEach, beforeAll, describe, expect, it, jest } from \"@jest/globals\";\n+import { GitHubContext } from \"../src/github/github-context\";\n+import { shouldSkipPlugin } from \"../src/github/utils/plugins\";\n+import { PluginConfiguration } from \"../src/github/types/plugin-configuration\";\n+import { server } from \"./__mocks__/node\";\n+import { http, HttpResponse } from \"msw\";\n+\n+beforeAll(() => {\n+  server.listen();\n+});\n+afterEach(() => {\n+  server.resetHandlers();\n+  jest.clearAllMocks();\n+  jest.resetAllMocks();\n+  jest.resetModules();\n+});\n+afterAll(() => {\n+  server.close();\n+});\n+\n+describe(\"Plugin tests\", () => {\n+  it(\"Should skip plugins if needed\", async () => {\n+    const pluginAddress = \"http://localhost\";\n+    const issueCommentCreated = \"issue_comment.created\";\n+    const pullRequestOpened = \"pull_request.opened\";\n+    server.use(\n+      http.get(\"http://localhost/manifest.json\", () => {\n+        return HttpResponse.json({\n+          name: \"command\",\n+          commands: {\n+            command: {\n+              description: \"command\",\n+              \"ubiquity:example\": \"/command\",\n+            },\n+          },\n+        });\n+      })\n+    );\n+    const pluginChain = {\n+      uses: [{ skipBotEvents: true, plugin: pluginAddress }],\n+    } as PluginConfiguration[\"plugins\"][0];\n+    // Skip bot comment\n+    await expect(\n+      shouldSkipPlugin(\n+        {\n+          payload: {\n+            sender: {\n+              type: \"Bot\",\n+            },\n+          },\n+        } as unknown as GitHubContext,\n+        pluginChain,\n+        issueCommentCreated\n+      )\n+    ).resolves.toBe(true);\n+    // Skipping non-matching command\n+    await expect(\n+      shouldSkipPlugin(\n+        {\n+          key: issueCommentCreated,\n+          payload: {\n+            sender: {\n+              type: \"User\",\n+            },\n+            comment: {\n+              body: \"/wrong-command\",","score":{"reward":5.736,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":70.35000000000002,"syllables":43,"sentences":2,"score":0.8964999999999997},"multiplier":1,"relevance":0.8}},{"id":1996179155,"content":"`runsOn` would have only `issue_comment.created` but the event would be `pull_request_review_comment.created` which should run because it matches command","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#discussion_r1996179155","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,10 +7,49 @@ import { Value } from \"@sinclair/typebox/value\";\n \n const _manifestCache: Record<string, Manifest> = {};\n \n-export function getPluginsForEvent(plugins: PluginConfiguration[\"plugins\"], event: EmitterWebhookEventName) {\n-  return plugins.filter((plugin) => {\n-    return plugin.uses?.[0].runsOn?.includes(event);\n-  });\n+function isCommentCreatedPayload(\n+  payload: GitHubContext[\"payload\"]\n+): payload is GitHubContext<\"issue_comment.created\" | \"pull_request_review_comment.created\">[\"payload\"] {\n+  return \"comment\" in payload && typeof payload.comment !== \"string\";\n+}\n+\n+export async function shouldSkipPlugin(context: GitHubContext, pluginChain: PluginConfiguration[\"plugins\"][0], event: EmitterWebhookEventName) {\n+  if (pluginChain.uses[0].skipBotEvents && \"sender\" in context.payload && context.payload.sender?.type === \"Bot\") {\n+    console.log(`Skipping plugin ${JSON.stringify(pluginChain.uses[0].plugin)} in the chain because the sender is a bot`);\n+    return true;\n+  }\n+  const commentEvents = [\"issue_comment.created\", \"pull_request_review_comment.created\"] as EmitterWebhookEventName[];\n+  if (commentEvents.includes(context.key)) {\n+    const manifest = await getManifest(context, pluginChain.uses[0].plugin);\n+    if (\n+      manifest?.commands &&\n+      !manifest[\"ubiquity:listeners\"]?.some((event) => commentEvents.includes(event)) &&\n+      isCommentCreatedPayload(context.payload) &&\n+      context.payload.comment?.body.trim().startsWith(`/`) &&\n+      Object.keys(manifest.commands).length","score":{"reward":3.108,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":84.45000000000003,"syllables":19,"sentences":1,"score":0.7554999999999997},"multiplier":1,"relevance":0.7}},{"id":1997279559,"content":"yes now you fixed it, I didn't see it","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#discussion_r1997279559","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,10 +7,49 @@ import { Value } from \"@sinclair/typebox/value\";\n \n const _manifestCache: Record<string, Manifest> = {};\n \n-export function getPluginsForEvent(plugins: PluginConfiguration[\"plugins\"], event: EmitterWebhookEventName) {\n-  return plugins.filter((plugin) => {\n-    return plugin.uses?.[0].runsOn?.includes(event);\n-  });\n+function isCommentCreatedPayload(\n+  payload: GitHubContext[\"payload\"]\n+): payload is GitHubContext<\"issue_comment.created\" | \"pull_request_review_comment.created\">[\"payload\"] {\n+  return \"comment\" in payload && typeof payload.comment !== \"string\";\n+}\n+\n+export async function shouldSkipPlugin(context: GitHubContext, pluginChain: PluginConfiguration[\"plugins\"][0], event: EmitterWebhookEventName) {\n+  if (pluginChain.uses[0].skipBotEvents && \"sender\" in context.payload && context.payload.sender?.type === \"Bot\") {\n+    console.log(`Skipping plugin ${JSON.stringify(pluginChain.uses[0].plugin)} in the chain because the sender is a bot`);\n+    return true;\n+  }\n+  const commentEvents = [\"issue_comment.created\", \"pull_request_review_comment.created\"] as EmitterWebhookEventName[];\n+  if (commentEvents.includes(context.key)) {\n+    const manifest = await getManifest(context, pluginChain.uses[0].plugin);\n+    if (\n+      manifest?.commands &&\n+      !manifest[\"ubiquity:listeners\"]?.some((event) => commentEvents.includes(event)) &&\n+      isCommentCreatedPayload(context.payload) &&\n+      context.payload.comment?.body.trim().startsWith(`/`) &&\n+      Object.keys(manifest.commands).length","score":{"reward":1.053,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":112.08500000000001,"syllables":10,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2683085904,"effect":{"addition":197,"deletion":55},"reward":7.56,"priority":3},{"reviewId":2688288544,"effect":{"addition":97,"deletion":12},"reward":3.27,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262"},{"url":"https://github.com/ubiquity-os/plugin-sdk/pull/78"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 45.351 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>10.83</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>17.55</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>16.971</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262\" target=\"_blank\" rel=\"noopener\">#262</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+197 -55</td><td>3</td><td>7.56</td></tr><tr><td>+97 -12</td><td>3</td><td>3.27</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/246#issuecomment-2666574998\" target=\"_blank\" rel=\"noopener\">There are 2 scenarios:### 1. Plugin has a command and &#96;issu&hellip;</a></h6></td><td><details><summary>4.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    h3:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>1</td><td>3</td><td>17.55</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#discussion_r1994142123\" target=\"_blank\" rel=\"noopener\">there's one edge case where the plugin has a command but also li&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.9</td><td>3</td><td>7.074</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#discussion_r1994149182\" target=\"_blank\" rel=\"noopener\">what about a test where the plugin has a command and issue_comme&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.736</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#discussion_r1996179155\" target=\"_blank\" rel=\"noopener\">&#96;runsOn&#96; would have only &#96;issue_comment.created&#96;&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.108</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#discussion_r1997279559\" target=\"_blank\" rel=\"noopener\">yes now you fixed it, I didn't see it</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.053</td></tr></tbody></table></details>"},"Keyrxng":{"total":1.905,"userId":106303466,"comments":[{"id":2720762129,"content":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/issues/12 you should re-open the issue for it dude.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720762129","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.531,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":65.555,"syllables":31,"sentences":2,"score":0.9444499999999999},"multiplier":0.25,"relevance":0.3}},{"id":2720810220,"content":"Not what I'd have guessed, nice catch. @0x4007 bro you've re-opened the wrong issue my man 😂","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720810220","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.276,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":103.68723684210525,"syllables":21,"sentences":2,"score":1},"multiplier":0.25,"relevance":0.2}},{"id":2720858326,"content":"it shouldn't really be throwing at all. This PR diff is tiny, even if it's pulling the entire `bun.lock` file, that should be excluded itself and the rest fed as context.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720858326","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.098,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":79.5575,"syllables":42,"sentences":2,"score":0.804425},"multiplier":0.25,"relevance":0.6}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262"},{"url":"https://github.com/ubiquity-os/plugin-sdk/pull/78"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.905 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>3</td><td>1.905</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720762129\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os-marketplace/daemon-pull-review/is&hellip;</a></h6></td><td><details><summary>1.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.531</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720810220\" target=\"_blank\" rel=\"noopener\">Not what I'd have guessed, nice catch. @0x4007 bro you've re-ope&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.276</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/262#issuecomment-2720858326\" target=\"_blank\" rel=\"noopener\">it shouldn't really be throwing at all. This PR diff is tiny, ev&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.098</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_configuration-loader_13.json","json":{"gentlementlegen":{"userId":9807008,"total":153.22,"task":{"reward":150,"multiplier":1},"comments":[{"id":2277195422,"content":"AJV is used to validate the configuration alongside TypeBox. AJV relies a lot on the NodeJs API which is not (or partially) supported inside of CloudFlare workers, making it unusable in that context. We need the configuration to be versatile and pluggable anywhere, which is why it should be removed and replace with something more compatible with non NodeJs environments.\r\n`typebox-validators` seems to integrate nicely and solves the issue, while offering the same functionalities.","url":"https://github.com/ubiquity-os/configuration-loader/issues/13","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.22,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":73,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":37.65371575342468,"syllables":130,"sentences":4,"score":0.7765371575342468},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 153.22 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.22</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/13\" target=\"_blank\" rel=\"noopener\">AJV is used to validate the configuration alongside TypeBox. AJV&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 73&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>1</td><td>1</td><td>3.22</td></tr></tbody></table></details>"},"molecula451":{"total":2.715,"userId":41552663,"comments":[{"id":2093825730,"content":"great work gentleman!","url":"https://github.com/ubiquity-os/configuration-loader/issues/13#issuecomment-2093825730","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.033,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":62.79000000000002,"syllables":5,"sentences":1,"score":0.9720999999999997},"multiplier":0.25,"relevance":0.1}},{"id":2038990633,"content":"looks perfect","url":"https://github.com/ubiquity-os/configuration-loader/pull/14#pullrequestreview-2038990633","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.072,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":0.25,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2038990633,"effect":{"addition":47,"deletion":40},"reward":2.61,"priority":3}],"url":"https://github.com/ubiquity-os/configuration-loader/pull/14"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.715 XP ]</a>&nbsp;</h3><h6>@molecula451</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>2.61</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.033</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.072</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/configuration-loader/pull/14\" target=\"_blank\" rel=\"noopener\">#14</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+47 -40</td><td>3</td><td>2.61</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/13#issuecomment-2093825730\" target=\"_blank\" rel=\"noopener\">great work gentleman!</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.033</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/14#pullrequestreview-2038990633\" target=\"_blank\" rel=\"noopener\">looks perfect</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.072</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_7.json","json":{"gentlementlegen":{"userId":9807008,"total":638.748,"task":{"reward":600,"multiplier":1},"comments":[{"id":2126438257,"content":"@Keyrxng I think this can be standalone because events would be sent from the kernel, so it doesn't matter if `start | stop` is invoked. I think this should be a watcher that updates the assignee status in the task according to reasons specified in the spec (time elapsed, activity, linked pr, commits and whatnot). Reached a certain point, a reminder is posted (maybe something like \"are you still working on it? If not, unassign yourself before the bot does), and if nothing ensues simply unassign, and eventually apply XP penalties (still don't have any XP system so don't worry about it yet I guess).","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2126438257","commentType":"ISSUE_AUTHOR","score":{"reward":10.02,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":105,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":57.7226785714286,"syllables":152,"sentences":4,"score":0.977226785714286},"multiplier":1,"relevance":1}},{"id":2146814440,"content":"So basically, whenever the user is detected as active, we push the deadline by the length of the task? E.g. it's a <1 Day task, each time activity is detected, we push the deadline by 1 day?\r\nAlso technically it is allowed on GitHub to have multiple users assigned on the same issue, should any activity of any user be counted to push the deadline? The old bot has some code but I suspect it never worked because it counts the same timers for everyone so either everyone is in the deadline or outside: https://github.com/ubiquity/ubiquibot/blob/8aaf055c091cc3e7f2b42c9f1cf88f45b1d86d17/src/handlers/wildcard/unassign/assign-event-found.ts#L20","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2146814440","commentType":"ISSUE_AUTHOR","score":{"reward":12.528,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":96,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":66.48035714285714,"syllables":167,"sentences":8,"score":0.9351964285714286},"multiplier":1,"relevance":0.9}},{"id":2146841021,"content":"In the provided example, it doesn't work because the calculation is the same for each user\r\n```TypeScript\r\nconst assigneesWithinGracePeriod = assignees.filter(() => now - latestAssignEventTime < taskDisqualifyDuration);\r\n```\r\nAll these values do not seem to be user based, but rather all the same for every user, just based on the latest event.\r\n---\r\nOkay so to sum it up:\r\n- on user activity, add `3.5 days` before the next reminder (configurable)\r\n- on user activity, add `7 days` before the complete disqualify (configurable)\r\n- user based time tracking, considering that multiple users could be assigned to an issue","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2146841021","commentType":"ISSUE_AUTHOR","score":{"reward":10.56,"formatting":{"content":{"p":{"score":0,"elementCount":6},"hr":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":3,"words":{"wordCount":79,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":27.52731012658228,"syllables":130,"sentences":2,"score":0.6752731012658227},"multiplier":1,"relevance":1}},{"id":2292563383,"content":"**wildcard/unassign:** we should create a plugin that checks certain conditions across every assigned task to determine if the assignee is still actively working on it. If not, give them a follow up. If they abandoned the task then unassign. Make sure to punish them by subtracting XP!\r\n[See code reference](https://github.com/ubiquity/ubiquibot/tree/8aaf055c091cc3e7f2b42c9f1cf88f45b1d86d17/src/handlers/wildcard/unassign)\r\nRelated repository: https://github.com/ubiquibot/user-activity-watcher","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.64,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":54.07850574712646,"syllables":98,"sentences":6,"score":0.9407850574712646},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 638.748 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>600</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.64</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>33.108</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7\" target=\"_blank\" rel=\"noopener\">**wildcard/unassign:** we should create a plugin that checks cer&hellip;</a></h6></td><td><details><summary>4.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0.1&#13;  result: 2.4&#13;</pre></details></td><td>1</td><td>1</td><td>5.64</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2126438257\" target=\"_blank\" rel=\"noopener\">@Keyrxng I think this can be standalone because events would be &hellip;</a></h6></td><td><details><summary>2.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 105&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>1</td><td>3</td><td>10.02</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2146814440\" target=\"_blank\" rel=\"noopener\">So basically, whenever the user is detected as active, we push t&hellip;</a></h6></td><td><details><summary>3.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 96&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>3</td><td>12.528</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2146841021\" target=\"_blank\" rel=\"noopener\">In the provided example, it doesn't work because the calculation&hellip;</a></h6></td><td><details><summary>2.93</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 79&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>3</td><td>10.56</td></tr></tbody></table></details>"},"Keyrxng":{"total":2.682,"userId":106303466,"comments":[{"id":2116365639,"content":"I can only really think of this plugin being an invoker of #9, wouldn't you agree?\r\nIf that is the case then #9 should not handle XP mods and this plugin should handle it? \r\nAlternatively, I've setup #9 such that an invoker passes `directive === \"start\" | \"stop\"` and `xpAmount: number` and then #9 would handle the XP mods.\r\nWhat's the best approach?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2116365639","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.872,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":3,"words":{"wordCount":59,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":80.01968220338985,"syllables":78,"sentences":4,"score":0.7998031779661016},"multiplier":0.25,"relevance":0.8}},{"id":2127187169,"content":"@jordan-ae is taking care of this task and yeah I understand. I made the relevant changes in `start/stop` thank you","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2127187169","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.81,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":86.70500000000001,"syllables":26,"sentences":2,"score":0.7329499999999999},"multiplier":0.25,"relevance":0.6}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.682 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.682</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2116365639\" target=\"_blank\" rel=\"noopener\">I can only really think of this plugin being an invoker of #9, w&hellip;</a></h6></td><td><details><summary>2.51</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 59&#13;  wordValue: 0.1&#13;  result: 2.51&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.872</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2127187169\" target=\"_blank\" rel=\"noopener\">@jordan-ae is taking care of this task and yeah I understand. I &hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.81</td></tr></tbody></table></details>"},"0x4007":{"total":126.231,"userId":4975670,"comments":[{"id":2146804481,"content":"The purpose of this capability is to disqualify contributors that neglect to complete the task. A very common scenario is that a contributor will begin a task, and then give up, which means that the task is being blocked (other people will not work on it while it is already assigned.)\r\nBefore disqualification, the manager should ask for an update. If the contributor still has no updates, then the manager should disqualify the contributor by unassigning them, and ideally, not allowing them to reassign themselves (we could check in the `/start` command if the contributor was ever unassigned within the issue timeline.)\r\nIn addition, the XP of the contributor should be deducted (not sure about a static amount, or if we should do it based on the price/priority of the task.)\r\nAny user activity that shows they are working on the task should be considered valid to restart the manager's timer. Ideally we should be able to configure this. \r\n- Definitely include watching commits. \r\n- Possibly include watching comments on either the pull or the issue. \r\nI think these are the only two types of contributor events we should watch for.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2146804481","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.77,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":3,"words":{"wordCount":190,"wordValue":0.1,"result":1.83},"readability":{"fleschKincaid":51.74473684210528,"syllables":305,"sentences":10,"score":0.9174473684210528},"multiplier":1,"relevance":1}},{"id":2146820093,"content":"Actually, this is configurable but we always did the following default settings. `3.5 days` for follow up, `7 days` for disqualify. I like these default settings as they allow for flexibility for holidays/weekends. The time estimate label is mostly used for pricing, but otherwise is not really leveraged in other aspects of our system. \r\nI am skeptical about enforcing based on the time labels because this assumes the contributor is already onboarded to the codebase and ecosystem, which is not always the case. \r\nIt seems like a detail I may have implemented, but in practice we never have multiple assignees to tasks. I think this could be useful for when companies/teams get involved in the future. I think it is more precise to manage on the per capita level, so we should consider each assignee individually as what appears to be implemented in your provided example.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2146820093","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.857,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":144,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":49.91500000000002,"syllables":236,"sentences":8,"score":0.8991500000000002},"multiplier":1,"relevance":0.9}},{"id":2155517290,"content":"This is a novel approach I never did research on in the past so I need more information before I'm convinced. But it seems a bit heavy to write a workflow file somewhere regularly and then delete regularly.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2155517290","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.493,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":56.88865384615386,"syllables":60,"sentences":2,"score":0.9688865384615386},"multiplier":1,"relevance":0.3}},{"id":2180712959,"content":"I think the comment rewards are too high here. Especially with the occasional double counts","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2180712959","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.404,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":63.86250000000001,"syllables":24,"sentences":2,"score":0.9613749999999999},"multiplier":1,"relevance":0.3}},{"id":2181159559,"content":"Can claim I just need to adjust the settings I guess. https://github.com/ubiquibot/ubiquibot-config/commit/5ec796f09578609cd5e0836adf86559e40eba793","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2181159559","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.482,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":44.564561403508776,"syllables":35,"sentences":3,"score":0.8456456140350878},"multiplier":1,"relevance":0.2}},{"id":1632606729,"content":"You just reminded me that GitHub has some type of feature to associate metadata with each repository. Perhaps we can write whatever data we need here for minimizing runs?\r\n_Source https://www.perplexity.ai/search/github-repository-metadata-RuF2Q8b0S9aPo9t0CZRJug_","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1632606729","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,16 @@\n+import { Result } from \"../proxy\";\n+import { Context } from \"../types/context\";\n+import { EnvConfigType } from \"../types/env-type\";\n+\n+/**\n+ * On issue closed, we want to delete the entry to stop watching this issue.\n+ */\n+export async function handleIssueClosed(context: Context, env: EnvConfigType): Promise<Result> {\n+  const {\n+    adapters: {\n+      supabase: { repositories },\n+    },\n+  } = context;\n+  await repositories.delete(context.payload.issue.html_url);","score":{"reward":2.154,"formatting":{"content":{"p":{"score":0,"elementCount":2},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":42.73338461538464,"syllables":72,"sentences":5,"score":0.8273338461538464},"multiplier":1,"relevance":0.2}},{"id":1635356333,"content":"The checks are being managed at the repository level. Notice the code later it checks the repository URL and then will loop down through all the issues if the conditions are fine based on the repository last check time, as I understand.","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1635356333","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,67 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Context } from \"../types/context\";\n+import { Database } from \"../types/database\";\n+\n+export function createAdapters(supabaseClient: SupabaseClient<Database>, context: Context) {\n+  return {\n+    supabase: {\n+      repositories: {","score":{"reward":3.468,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":42,"wordValue":0.1,"result":2.23},"readability":{"fleschKincaid":58.62000000000002,"syllables":63,"sentences":2,"score":0.9862000000000002},"multiplier":1,"relevance":0.4}},{"id":1635357760,"content":"Months might be useful for some less precise organizations.","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1635357760","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,44 @@\n+import { Duration } from \"luxon\";\n+import { Context } from \"../types/context\";\n+\n+export async function getTimeEstimate(context: Context) {\n+  const timeLabelRegex = /Time: <(\\d+)/i;\n+  const labels = await context.octokit.issues.listLabelsOnIssue({\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+    issue_number: context.payload.issue.number,\n+  });\n+  const durationLabel = labels.data.find((o) => o.name.match(timeLabelRegex));\n+  if (!durationLabel) {\n+    return Duration.invalid(\"No time label was found.\");\n+  }\n+  return parseDurationString(durationLabel.name);\n+}\n+\n+export function parseDurationString(durationString: string) {\n+  const match = durationString.match(/<(\\d+)\\s*(\\w+)/);\n+  if (!match) {\n+    throw new Error(\"Invalid duration string format.\");\n+  }\n+\n+  const [, value, unit] = match;\n+  let duration;\n+  switch (unit.toLowerCase()) {\n+    case \"hour\":\n+    case \"hours\":\n+      duration = { hours: parseInt(value) };\n+      break;\n+    case \"day\":\n+    case \"days\":\n+      duration = { days: parseInt(value) };\n+      break;\n+    case \"week\":\n+    case \"weeks\":\n+      duration = { weeks: parseInt(value) };\n+      break;\n+    default:\n+      throw new Error(\"Unsupported duration unit.\");","score":{"reward":2.226,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":47.30000000000004,"syllables":16,"sentences":1,"score":0.8730000000000004},"multiplier":1,"relevance":0.7}},{"id":1643046078,"content":"Although I understand your logic, the purpose of these labels are to be coarse estimates. Many project managers think in the resolution of \"months\" for projects, which on average, are ~30 days. \r\nWe obviously don't use them at Ubiquity because we are quite precise (we are all developers) but it is our duty to make the system as user friendly as possible. Most project managers I would expect to be using \"months\" for larger initatives","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1643046078","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,44 @@\n+import { Duration } from \"luxon\";\n+import { Context } from \"../types/context\";\n+\n+export async function getTimeEstimate(context: Context) {\n+  const timeLabelRegex = /Time: <(\\d+)/i;\n+  const labels = await context.octokit.issues.listLabelsOnIssue({\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+    issue_number: context.payload.issue.number,\n+  });\n+  const durationLabel = labels.data.find((o) => o.name.match(timeLabelRegex));\n+  if (!durationLabel) {\n+    return Duration.invalid(\"No time label was found.\");\n+  }\n+  return parseDurationString(durationLabel.name);\n+}\n+\n+export function parseDurationString(durationString: string) {\n+  const match = durationString.match(/<(\\d+)\\s*(\\w+)/);\n+  if (!match) {\n+    throw new Error(\"Invalid duration string format.\");\n+  }\n+\n+  const [, value, unit] = match;\n+  let duration;\n+  switch (unit.toLowerCase()) {\n+    case \"hour\":\n+    case \"hours\":\n+      duration = { hours: parseInt(value) };\n+      break;\n+    case \"day\":\n+    case \"days\":\n+      duration = { days: parseInt(value) };\n+      break;\n+    case \"week\":\n+    case \"weeks\":\n+      duration = { weeks: parseInt(value) };\n+      break;\n+    default:\n+      throw new Error(\"Unsupported duration unit.\");","score":{"reward":9.072,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":76,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":53.97105263157897,"syllables":120,"sentences":4,"score":0.9397105263157897},"multiplier":1,"relevance":0.9}},{"id":1644041746,"content":"`Duration.fromObject` I am not familiar with this method, or object. I thought you said there was no support for months, so I assumed you would manually handle it as \"30 days\" at this line of code.","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1644041746","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -22,5 +22,14 @@ export function parseDurationString(durationString: string) {\n     throw new Error(\"Invalid duration string format.\");\n   }\n   const [, value] = match;\n+  // Custom support for months, based on a 30 days duration\n+  if (/months?/i.test(value)) {\n+    const monthsMatch = value.match(/\\d+/);\n+    if (monthsMatch) {\n+      return Duration.fromObject({ months: Number(monthsMatch[0]) }).shiftToAll();","score":{"reward":4.518,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":82.71821428571431,"syllables":44,"sentences":2,"score":0.7728178571428569},"multiplier":1,"relevance":0.6}},{"id":1644042791,"content":"Is it worth adding tests for non plural as well? i.e. `Time: <1 Month` as well as for the other resolutions i.e. `Hour`, `Day`","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1644042791","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -61,5 +61,6 @@ describe(\"Run tests\", () => {\n     expect(parseDurationString(\"Time: <1 Week\").get(\"weeks\")).toEqual(1);\n     expect(parseDurationString(\"Time: <4 Hours\").get(\"hours\")).toEqual(4);\n     expect(parseDurationString(\"Time: <8 Weeks\").get(\"months\")).toEqual(2);\n+    expect(parseDurationString(\"Time: <3 Months\").get(\"months\")).toEqual(3);","score":{"reward":4.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":94.51107142857143,"syllables":27,"sentences":6,"score":0.6548892857142857},"multiplier":1,"relevance":0.8}},{"id":2173794542,"content":"My only feedback is to [add support for months](https://github.com/ubiquibot/user-activity-watcher/pull/1#discussion_r1643046078) and consider them 30 days.","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2173794542","commentType":"PULL_COLLABORATOR","score":{"reward":5.649,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":77.81071428571428,"syllables":19,"sentences":1,"score":0.8218928571428572},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2106673689,"effect":{"addition":1781,"deletion":1},"reward":53.46,"priority":3},{"reviewId":2111242349,"effect":{"addition":43,"deletion":53},"reward":2.88,"priority":3},{"reviewId":2124840053,"effect":{"addition":455,"deletion":126},"reward":17.43,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 126.231 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>73.77</td></tr><tr><td>Issue</td><td>Comment</td><td>5</td><td>21.006</td></tr><tr><td>Review</td><td>Comment</td><td>7</td><td>31.455</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1781 -1</td><td>3</td><td>53.46</td></tr><tr><td>+43 -53</td><td>3</td><td>2.88</td></tr><tr><td>+455 -126</td><td>3</td><td>17.43</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2146804481\" target=\"_blank\" rel=\"noopener\">The purpose of this capability is to disqualify contributors tha&hellip;</a></h6></td><td><details><summary>2.03</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 190&#13;  wordValue: 0.1&#13;  result: 1.83&#13;</pre></details></td><td>1</td><td>3</td><td>7.77</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2146820093\" target=\"_blank\" rel=\"noopener\">Actually, this is configurable but we always did the following d&hellip;</a></h6></td><td><details><summary>2.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 144&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.9</td><td>3</td><td>7.857</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2155517290\" target=\"_blank\" rel=\"noopener\">This is a novel approach I never did research on in the past so &hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.493</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2180712959\" target=\"_blank\" rel=\"noopener\">I think the comment rewards are too high here. Especially with t&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.404</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/7#issuecomment-2181159559\" target=\"_blank\" rel=\"noopener\">Can claim I just need to adjust the settings I guess. https://gi&hellip;</a></h6></td><td><details><summary>1.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.482</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1632606729\" target=\"_blank\" rel=\"noopener\">You just reminded me that GitHub has some type of feature to ass&hellip;</a></h6></td><td><details><summary>2.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.2</td><td>3</td><td>2.154</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1635356333\" target=\"_blank\" rel=\"noopener\">The checks are being managed at the repository level. Notice the&hellip;</a></h6></td><td><details><summary>2.23</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 42&#13;  wordValue: 0.1&#13;  result: 2.23&#13;</pre></details></td><td>0.4</td><td>3</td><td>3.468</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1635357760\" target=\"_blank\" rel=\"noopener\">Months might be useful for some less precise organizations.</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.226</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1643046078\" target=\"_blank\" rel=\"noopener\">Although I understand your logic, the purpose of these labels ar&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 76&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>3</td><td>9.072</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1644041746\" target=\"_blank\" rel=\"noopener\">&#96;Duration.fromObject&#96; I am not familiar with this method&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.518</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1644042791\" target=\"_blank\" rel=\"noopener\">Is it worth adding tests for non plural as well? i.e. &#96;Time:&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.368</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2173794542\" target=\"_blank\" rel=\"noopener\">My only feedback is to [add support for months](https://github.c&hellip;</a></h6></td><td><details><summary>2.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.649</td></tr></tbody></table></details>"},"whilefoo":{"total":102.762,"userId":139262667,"comments":[{"id":1633619108,"content":"```suggestion\r\n  return Value.Decode(envConfigSchema, process.env);\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1633619108","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,13 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import { ValidationException } from \"typebox-validators\";\n+import envConfigSchema, { envConfigValidator } from \"../types/env-type\";\n+\n+export async function getEnv() {\n+  if (!envConfigValidator.test(process.env)) {\n+    for (const error of envConfigValidator.errors(process.env)) {\n+      console.error(error);\n+    }\n+    return Promise.reject(new ValidationException(\"The environment is invalid.\"));\n+  }\n+  return Promise.resolve(Value.Decode(envConfigSchema, process.env));","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1633619264,"content":"```suggestion\r\n    return new ValidationException(\"The environment is invalid.\");\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1633619264","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,13 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import { ValidationException } from \"typebox-validators\";\n+import envConfigSchema, { envConfigValidator } from \"../types/env-type\";\n+\n+export async function getEnv() {\n+  if (!envConfigValidator.test(process.env)) {\n+    for (const error of envConfigValidator.errors(process.env)) {\n+      console.error(error);\n+    }\n+    return Promise.reject(new ValidationException(\"The environment is invalid.\"));","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1634954021,"content":"won't this mean that when there are 2 assignees and one gets unassigned, it will be removed from DB?","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1634954021","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,27 @@\n+import { handleIssueAssigned } from \"../handlers/issue-assigned\";\n+import { handleIssueClosed } from \"../handlers/issue-closed\";\n+import { Context } from \"../types/context\";\n+import { EnvConfigType } from \"../types/env-type\";\n+import { SupportedEvents } from \"../types/plugin-inputs\";\n+\n+export interface Result {\n+  status: \"ok\" | \"failed\" | \"skipped\";\n+  content?: string;\n+  reason?: string;\n+}\n+\n+const callbacks: { [k in SupportedEvents]: (context: Context, env: EnvConfigType) => Result | Promise<Result> } = {\n+  \"issues.closed\": handleIssueClosed,\n+  \"issues.assigned\": handleIssueAssigned,\n+  \"issues.unassigned\": handleIssueClosed,","score":{"reward":4.941,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":80.78500000000003,"syllables":25,"sentences":1,"score":0.7921499999999998},"multiplier":1,"relevance":0.9}},{"id":1634966258,"content":"I think it's better to match without `<` for extra flexibility","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1634966258","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,44 @@\n+import { Duration } from \"luxon\";\n+import { Context } from \"../types/context\";\n+\n+export async function getTimeEstimate(context: Context) {\n+  const timeLabelRegex = /Time: <(\\d+)/i;\n+  const labels = await context.octokit.issues.listLabelsOnIssue({\n+    owner: context.payload.repository.owner.login,\n+    repo: context.payload.repository.name,\n+    issue_number: context.payload.issue.number,\n+  });\n+  const durationLabel = labels.data.find((o) => o.name.match(timeLabelRegex));\n+  if (!durationLabel) {\n+    return Duration.invalid(\"No time label was found.\");\n+  }\n+  return parseDurationString(durationLabel.name);\n+}\n+\n+export function parseDurationString(durationString: string) {\n+  const match = durationString.match(/<(\\d+)\\s*(\\w+)/);","score":{"reward":3,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":57.23363636363638,"syllables":18,"sentences":1,"score":0.9723363636363638},"multiplier":1,"relevance":0.8}},{"id":1634992439,"content":"personally I'd move the second part out of the function because the name of the function doesn't imply that it will also filter events since last check","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1634992439","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,172 @@\n+import { DateTime } from \"luxon\";\n+import { Context } from \"../types/context\";\n+import { Database } from \"../types/database\";\n+import { parseGitHubUrl } from \"./github-url\";\n+\n+async function unassignUserFromIssue(context: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\n+  const {\n+    adapters: { supabase },\n+    logger,\n+    config,\n+  } = context;\n+\n+  if (config.unassignUserThreshold <= 0) {\n+    logger.info(\"The unassign threshold is <= 0, won't unassign users.\");\n+  } else {\n+    logger.info(`Passed the deadline on ${issue.url} and no activity is detected, removing assignees.`);\n+    if (await removeIdleAssignees(context, issue)) {\n+      await supabase.repositories.delete(issue.url);\n+    }\n+  }\n+}\n+\n+async function remindAssigneesForIssue(context: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\n+  const {\n+    adapters: { supabase },\n+    logger,\n+    config,\n+  } = context;\n+  const now = DateTime.now();\n+  const deadline = DateTime.fromISO(issue.deadline);\n+\n+  if (config.sendRemindersThreshold <= 0) {\n+    logger.info(\"The reminder threshold is <= 0, won't send any reminder.\");\n+  } else {\n+    const lastReminder = issue.last_reminder;\n+    logger.info(`We are passed the deadline on ${issue.url}, should we send a reminder? ${!lastReminder}`);\n+    if (!lastReminder && (await remindAssignees(context, issue))) {\n+      await supabase.repositories.upsert({\n+        url: issue.url,\n+        deadline: deadline.toJSDate(),\n+        lastReminder: now.toJSDate(),\n+        lastCheck: now.toJSDate(),\n+      });\n+    }\n+  }\n+}\n+\n+async function updateReminders(context: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\n+  const {\n+    adapters: { supabase },\n+    logger,\n+    config,\n+  } = context;\n+  const now = DateTime.now();\n+  const activity = await getAssigneesActivityForIssue(context, issue);\n+  const deadline = DateTime.fromISO(issue.deadline);\n+  const deadlineWithThreshold = deadline.plus({ day: config.unassignUserThreshold });\n+  const reminderWithThreshold = deadline.plus({ day: config.sendRemindersThreshold });\n+\n+  if (activity?.length) {\n+    const lastCheck = DateTime.fromISO(issue.last_check);\n+    const timeDiff = now.diff(lastCheck);\n+    const newDeadline = deadline.plus(timeDiff);\n+    logger.info(\n+      `Activity found on ${issue.url}, will move the deadline forward from ${deadline.toLocaleString(DateTime.DATETIME_MED)} to ${newDeadline.toLocaleString(DateTime.DATETIME_MED)}`\n+    );\n+    await supabase.repositories.upsert({ url: issue.url, deadline: newDeadline.toJSDate(), lastCheck: now.toJSDate() });\n+  } else {\n+    if (now >= deadlineWithThreshold) {\n+      await unassignUserFromIssue(context, issue);\n+    } else if (now >= reminderWithThreshold) {\n+      await remindAssigneesForIssue(context, issue);\n+    } else {\n+      logger.info(\n+        `Nothing to do for ${issue.url}, still within due-time (now: ${now.toLocaleString(DateTime.DATETIME_MED)}, reminder ${reminderWithThreshold.toLocaleString(DateTime.DATETIME_MED)}, deadline: ${deadlineWithThreshold.toLocaleString(DateTime.DATETIME_MED)})`\n+      );\n+    }\n+  }\n+}\n+\n+export async function updateTasks(context: Context) {\n+  const {\n+    adapters: { supabase },\n+    logger,\n+  } = context;\n+  const watchedRepoList = await supabase.repositories.get();\n+\n+  if (!watchedRepoList?.length) {\n+    logger.info(\"No watched repos have been found, no work to do.\");\n+    return false;\n+  }\n+  for (const watchedIssue of watchedRepoList) {\n+    await updateReminders(context, watchedIssue);\n+  }\n+  return true;\n+}\n+\n+async function getAssigneesActivityForIssue({ octokit, payload }: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\n+  const { repo, owner, issue_number } = parseGitHubUrl(issue.url);\n+  return octokit.paginate(\n+    octokit.rest.issues.listEvents,\n+    {\n+      owner,\n+      repo,\n+      issue_number,\n+      per_page: 100,\n+    },\n+    (res) =>\n+      res.data.filter(\n+        (o) =>\n+          payload.issue?.assignees?.find((assignee) => assignee?.login === o.actor.login) &&\n+          DateTime.fromISO(o.created_at) >= DateTime.fromISO(issue.last_check)","score":{"reward":5.76,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":60.71034482758621,"syllables":40,"sentences":1,"score":0.9928965517241379},"multiplier":1,"relevance":0.8}},{"id":1635005988,"content":"```suggestion\r\nasync function removeAllAssignees(context: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\r\n```\r\nI think this better reflects what the function does","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1635005988","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,172 @@\n+import { DateTime } from \"luxon\";\n+import { Context } from \"../types/context\";\n+import { Database } from \"../types/database\";\n+import { parseGitHubUrl } from \"./github-url\";\n+\n+async function unassignUserFromIssue(context: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\n+  const {\n+    adapters: { supabase },\n+    logger,\n+    config,\n+  } = context;\n+\n+  if (config.unassignUserThreshold <= 0) {\n+    logger.info(\"The unassign threshold is <= 0, won't unassign users.\");\n+  } else {\n+    logger.info(`Passed the deadline on ${issue.url} and no activity is detected, removing assignees.`);\n+    if (await removeIdleAssignees(context, issue)) {\n+      await supabase.repositories.delete(issue.url);\n+    }\n+  }\n+}\n+\n+async function remindAssigneesForIssue(context: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\n+  const {\n+    adapters: { supabase },\n+    logger,\n+    config,\n+  } = context;\n+  const now = DateTime.now();\n+  const deadline = DateTime.fromISO(issue.deadline);\n+\n+  if (config.sendRemindersThreshold <= 0) {\n+    logger.info(\"The reminder threshold is <= 0, won't send any reminder.\");\n+  } else {\n+    const lastReminder = issue.last_reminder;\n+    logger.info(`We are passed the deadline on ${issue.url}, should we send a reminder? ${!lastReminder}`);\n+    if (!lastReminder && (await remindAssignees(context, issue))) {\n+      await supabase.repositories.upsert({\n+        url: issue.url,\n+        deadline: deadline.toJSDate(),\n+        lastReminder: now.toJSDate(),\n+        lastCheck: now.toJSDate(),\n+      });\n+    }\n+  }\n+}\n+\n+async function updateReminders(context: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\n+  const {\n+    adapters: { supabase },\n+    logger,\n+    config,\n+  } = context;\n+  const now = DateTime.now();\n+  const activity = await getAssigneesActivityForIssue(context, issue);\n+  const deadline = DateTime.fromISO(issue.deadline);\n+  const deadlineWithThreshold = deadline.plus({ day: config.unassignUserThreshold });\n+  const reminderWithThreshold = deadline.plus({ day: config.sendRemindersThreshold });\n+\n+  if (activity?.length) {\n+    const lastCheck = DateTime.fromISO(issue.last_check);\n+    const timeDiff = now.diff(lastCheck);\n+    const newDeadline = deadline.plus(timeDiff);\n+    logger.info(\n+      `Activity found on ${issue.url}, will move the deadline forward from ${deadline.toLocaleString(DateTime.DATETIME_MED)} to ${newDeadline.toLocaleString(DateTime.DATETIME_MED)}`\n+    );\n+    await supabase.repositories.upsert({ url: issue.url, deadline: newDeadline.toJSDate(), lastCheck: now.toJSDate() });\n+  } else {\n+    if (now >= deadlineWithThreshold) {\n+      await unassignUserFromIssue(context, issue);\n+    } else if (now >= reminderWithThreshold) {\n+      await remindAssigneesForIssue(context, issue);\n+    } else {\n+      logger.info(\n+        `Nothing to do for ${issue.url}, still within due-time (now: ${now.toLocaleString(DateTime.DATETIME_MED)}, reminder ${reminderWithThreshold.toLocaleString(DateTime.DATETIME_MED)}, deadline: ${deadlineWithThreshold.toLocaleString(DateTime.DATETIME_MED)})`\n+      );\n+    }\n+  }\n+}\n+\n+export async function updateTasks(context: Context) {\n+  const {\n+    adapters: { supabase },\n+    logger,\n+  } = context;\n+  const watchedRepoList = await supabase.repositories.get();\n+\n+  if (!watchedRepoList?.length) {\n+    logger.info(\"No watched repos have been found, no work to do.\");\n+    return false;\n+  }\n+  for (const watchedIssue of watchedRepoList) {\n+    await updateReminders(context, watchedIssue);\n+  }\n+  return true;\n+}\n+\n+async function getAssigneesActivityForIssue({ octokit, payload }: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\n+  const { repo, owner, issue_number } = parseGitHubUrl(issue.url);\n+  return octokit.paginate(\n+    octokit.rest.issues.listEvents,\n+    {\n+      owner,\n+      repo,\n+      issue_number,\n+      per_page: 100,\n+    },\n+    (res) =>\n+      res.data.filter(\n+        (o) =>\n+          payload.issue?.assignees?.find((assignee) => assignee?.login === o.actor.login) &&\n+          DateTime.fromISO(o.created_at) >= DateTime.fromISO(issue.last_check)\n+      )\n+  );\n+}\n+\n+async function remindAssignees(context: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {\n+  const { octokit, logger } = context;\n+  const githubIssue = await getGithubIssue(context, issue);\n+  const { repo, owner, issue_number } = parseGitHubUrl(issue.url);\n+\n+  if (!githubIssue?.assignees?.length) {\n+    logger.warn(`Missing Assignees from ${issue.url}`);\n+    return false;\n+  }\n+  const logins = githubIssue.assignees\n+    .map((o) => o?.login)\n+    .filter((o) => !!o)\n+    .join(\", @\");\n+  await octokit.rest.issues.createComment({\n+    owner,\n+    repo,\n+    issue_number,\n+    body: `@${logins}, this task has been idle for a while. Please provide an update.`,\n+  });\n+  return true;\n+}\n+\n+async function removeIdleAssignees(context: Context, issue: Database[\"public\"][\"Tables\"][\"repositories\"][\"Row\"]) {","score":{"reward":2.163,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":84.90000000000003,"syllables":12,"sentences":1,"score":0.7509999999999997},"multiplier":1,"relevance":0.7}},{"id":1635011089,"content":"`repositories` is a bit odd name because these are basically issues","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1635011089","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,67 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Context } from \"../types/context\";\n+import { Database } from \"../types/database\";\n+\n+export function createAdapters(supabaseClient: SupabaseClient<Database>, context: Context) {\n+  return {\n+    supabase: {\n+      repositories: {","score":{"reward":2.394,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":69.78500000000001,"syllables":15,"sentences":1,"score":0.9021499999999999},"multiplier":1,"relevance":0.7}},{"id":1638501384,"content":"oh that's because the validation exception should be thrown and not returned, my mistake in above comment","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1638501384","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,13 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import { ValidationException } from \"typebox-validators\";\n+import envConfigSchema, { envConfigValidator } from \"../types/env-type\";\n+\n+export async function getEnv() {\n+  if (!envConfigValidator.test(process.env)) {\n+    for (const error of envConfigValidator.errors(process.env)) {\n+      console.error(error);\n+    }\n+    return Promise.reject(new ValidationException(\"The environment is invalid.\"));\n+  }\n+  return Promise.resolve(Value.Decode(envConfigSchema, process.env));","score":{"reward":3.204,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":56.965,"syllables":28,"sentences":1,"score":0.96965},"multiplier":1,"relevance":0.6}},{"id":1639887408,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1639887408","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,45 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import { ValidationException } from \"typebox-validators\";\n+import { run } from \"./run\";\n+import { EnvConfigType, envConfigValidator } from \"./types/env-type\";\n+import { userActivityWatcherSettingsSchema } from \"./types/plugin-inputs\";\n+\n+export default {\n+  async fetch(request: Request, env: EnvConfigType): Promise<Response> {\n+    try {\n+      if (request.method !== \"POST\") {\n+        return new Response(JSON.stringify({ error: `Only POST requests are supported.` }), {\n+          status: 405,\n+          headers: { \"content-type\": \"application/json\", Allow: \"POST\" },\n+        });\n+      }\n+      const contentType = request.headers.get(\"content-type\");\n+      if (contentType !== \"application/json\") {\n+        return new Response(JSON.stringify({ error: `Error: ${contentType} is not a valid content type` }), {\n+          status: 400,\n+          headers: { \"content-type\": \"application/json\" },\n+        });\n+      }\n+      if (!envConfigValidator.test(env)) {\n+        for (const error of envConfigValidator.errors(env)) {\n+          console.error(error);\n+        }\n+        return Promise.reject(new ValidationException(\"The environment is invalid.\"));\n+      }\n+      const webhookPayload = await request.json();\n+      const settings = Value.Decode(userActivityWatcherSettingsSchema, Value.Default(userActivityWatcherSettingsSchema, JSON.parse(webhookPayload.settings)));\n+      webhookPayload.eventPayload = JSON.parse(webhookPayload.eventPayload);","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1639888136,"content":"```suggestion\r\n      const settings = Value.Decode(userActivityWatcherSettingsSchema, Value.Default(userActivityWatcherSettingsSchema, webhookPayload.settings));\r\n```\r\nfor workers settings and eventPayload are not even encoded anymore, only for Github actions","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1639888136","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,45 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import { ValidationException } from \"typebox-validators\";\n+import { run } from \"./run\";\n+import { EnvConfigType, envConfigValidator } from \"./types/env-type\";\n+import { userActivityWatcherSettingsSchema } from \"./types/plugin-inputs\";\n+\n+export default {\n+  async fetch(request: Request, env: EnvConfigType): Promise<Response> {\n+    try {\n+      if (request.method !== \"POST\") {\n+        return new Response(JSON.stringify({ error: `Only POST requests are supported.` }), {\n+          status: 405,\n+          headers: { \"content-type\": \"application/json\", Allow: \"POST\" },\n+        });\n+      }\n+      const contentType = request.headers.get(\"content-type\");\n+      if (contentType !== \"application/json\") {\n+        return new Response(JSON.stringify({ error: `Error: ${contentType} is not a valid content type` }), {\n+          status: 400,\n+          headers: { \"content-type\": \"application/json\" },\n+        });\n+      }\n+      if (!envConfigValidator.test(env)) {\n+        for (const error of envConfigValidator.errors(env)) {\n+          console.error(error);\n+        }\n+        return Promise.reject(new ValidationException(\"The environment is invalid.\"));\n+      }\n+      const webhookPayload = await request.json();\n+      const settings = Value.Decode(userActivityWatcherSettingsSchema, Value.Default(userActivityWatcherSettingsSchema, JSON.parse(webhookPayload.settings)));","score":{"reward":3.408,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":35.5107142857143,"syllables":26,"sentences":1,"score":0.755107142857143},"multiplier":1,"relevance":0.8}},{"id":1639891991,"content":"```suggestion\r\n  const timeLabelRegex = /Time: <?(\\d+)/i;\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1639891991","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,26 @@\n+import { Duration } from \"luxon\";\n+import { Context } from \"../types/context\";\n+import ms from \"ms\";\n+\n+export async function getTimeEstimate(context: Context) {\n+  const timeLabelRegex = /Time: <(\\d+)/i;","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.8}},{"id":2161617963,"content":"That would be difficult to implement because if there is another plugin in `issues.unassigned`, how can we know that `issues.closed` plugin wants to use all previous events.\r\nThe only solution is using this syntax:\r\n```\r\nplugins:\r\n   [issues.assigned, issues.unassigned, issues.closed]:\r\n     - uses:\r\n         - plugin: ubiquibot/user-activity-watcher\r\n           type: github\r\n           with:\r\n             unassignUserThreshold: 5\r\n             sendRemindersThreshold: 1\r\n```\r\nBut I think that's a problem because JS objects can't have arrays as keys but it seems that yaml library can use a Map instead of an object but that destroys type safety","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2161617963","commentType":"PULL_COLLABORATOR","score":{"reward":4.95,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":67,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":52.87727611940299,"syllables":95,"sentences":2,"score":0.92877276119403},"multiplier":1,"relevance":0.5}},{"id":2163479543,"content":"In your example you can't make a plugin chain (multiple plugins that run in order and share inputs/outputs)\r\nIf we do it like this we can still have plugins chains but there is still a problem of merging:\r\n```yaml\r\nplugins:\r\n    - runsOn: [ 'issues.opened', 'issues.closed', 'issues.assigned' ]\r\n      uses:\r\n        - plugin: ubiquibot/user-activity-watcher\r\n          with:\r\n            unassignUserThreshold: 5\r\n            sendRemindersThreshold: 1\r\n        - plugin: ubiquibot/plugin-2\r\n          with:\r\n            test: true\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2163479543","commentType":"PULL_COLLABORATOR","score":{"reward":3.372,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":56.255000000000024,"syllables":52,"sentences":1,"score":0.9625500000000002},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2108409032,"effect":{"addition":1745,"deletion":1},"reward":52.38,"priority":3},{"reviewId":2116279932,"effect":{"addition":442,"deletion":122},"reward":16.92,"priority":3},{"reviewId":2118491167,"effect":{"addition":2,"deletion":2},"reward":0.12,"priority":3},{"reviewId":2120341999,"effect":{"addition":2,"deletion":3},"reward":0.15,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 102.762 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>69.57</td></tr><tr><td>Review</td><td>Comment</td><td>13</td><td>33.192</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1745 -1</td><td>3</td><td>52.38</td></tr><tr><td>+442 -122</td><td>3</td><td>16.92</td></tr><tr><td>+2 -2</td><td>3</td><td>0.12</td></tr><tr><td>+2 -3</td><td>3</td><td>0.15</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1633619108\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionreturn Value.Decode(envConfigSchema&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1633619264\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionreturn new ValidationException(\"T&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1634954021\" target=\"_blank\" rel=\"noopener\">won't this mean that when there are 2 assignees and one gets una&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.941</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1634966258\" target=\"_blank\" rel=\"noopener\">I think it's better to match without &#96;&lt;&#96; for extra fl&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>3</td><td>3</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1634992439\" target=\"_blank\" rel=\"noopener\">personally I'd move the second part out of the function because &hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.76</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1635005988\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionasync function removeAllAssignees(con&hellip;</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.163</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1635011089\" target=\"_blank\" rel=\"noopener\">&#96;repositories&#96; is a bit odd name because these are basic&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.394</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1638501384\" target=\"_blank\" rel=\"noopener\">oh that's because the validation exception should be thrown and &hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.204</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1639887408\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1639888136\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionconst settings = Value.Decode(u&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.408</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1639891991\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionconst timeLabelRegex = /Time: &lt;?&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2161617963\" target=\"_blank\" rel=\"noopener\">That would be difficult to implement because if there is another&hellip;</a></h6></td><td><details><summary>2.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 67&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>0.5</td><td>3</td><td>4.95</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2163479543\" target=\"_blank\" rel=\"noopener\">In your example you can't make a plugin chain (multiple plugins &hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.4</td><td>3</td><td>3.372</td></tr></tbody></table></details>"},"rndquu":{"total":121.218,"userId":119500907,"comments":[{"id":1634456852,"content":"@gentlementlegen Why do we need to grant so many sensitive (delete, insert, update, etc...) permissions to the `anon` users?","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1634456852","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,63 @@\n+create table \"public\".\"repositories\" (\n+    \"id\" bigint generated by default as identity not null,\n+    \"created_at\" timestamp with time zone not null default now(),\n+    \"url\" character varying not null,\n+    \"last_reminder\" timestamp with time zone default null,\n+    \"last_check\" timestamp with time zone not null default now(),\n+    \"deadline\" timestamp with time zone not null\n+);\n+\n+\n+alter table \"public\".\"repositories\" enable row level security;\n+\n+CREATE UNIQUE INDEX repositories_pkey ON public.repositories USING btree (id);\n+\n+CREATE UNIQUE INDEX repositories_url_key ON public.repositories USING btree (url);\n+\n+alter table \"public\".\"repositories\" add constraint \"repositories_pkey\" PRIMARY KEY using index \"repositories_pkey\";\n+\n+alter table \"public\".\"repositories\" add constraint \"repositories_url_key\" UNIQUE using index \"repositories_url_key\";\n+\n+grant delete on table \"public\".\"repositories\" to \"anon\";","score":{"reward":4.224,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":52.00000000000003,"syllables":31,"sentences":2,"score":0.9200000000000003},"multiplier":1,"relevance":0.8}},{"id":2157713843,"content":"@gentlementlegen I'm getting `[ERROR] SyntaxError: \"[object Object]\" is not valid JSON` error when running this plugin as a worker with [this](https://github.com/rndquu-org/test-repo/blob/bb82387db22e7f8c46a024c20a82605d000af935/.github/.ubiquibot-config.yml) config (mostly taken from README). What am I doing wrong?","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2157713843","commentType":"PULL_COLLABORATOR","score":{"reward":7.14,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":67.75500000000001,"syllables":36,"sentences":2,"score":0.9224499999999999},"multiplier":1,"relevance":0.7}},{"id":2158559088,"content":"@gentlementlegen Is [this one](https://github.com/rndquu-org/test-repo/blob/9a57f04eae649d31b7564541a2408055ef17bafe/.github/.ubiquibot-config.yml) a valid syntax for calling a specific branch of the plugin? I took this example from README at https://github.com/ubiquibot/plugin-template.","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2158559088","commentType":"PULL_COLLABORATOR","score":{"reward":8.316,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":58.37595238095241,"syllables":46,"sentences":3,"score":0.9837595238095241},"multiplier":1,"relevance":0.6}},{"id":2159224913,"content":"@gentlementlegen Help\r\nI'm getting the `Failed to run user-activity-watcher: Error: [parseGitHubUrl] Invalid url: [https://github.com/rndquu-org/test-repo]` error in [this](https://github.com/rndquu/user-activity-watcher/actions/runs/9455000675/job/26043811384) workflow. What URL is expected to be in the `repositories.url` column in the Supabase DB?\r\nP.S. It seems that RLS policies are not applied in the [migration script](https://github.com/ubiquibot/user-activity-watcher/pull/1/files#diff-27c68f9d4869303fb1fd77f691d6b7cfe1a7a5444ce411c75a91b07280803465R11). So they should be added manually via Supabase UI to enable them and to allow read access for public anon key.","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2159224913","commentType":"PULL_COLLABORATOR","score":{"reward":18.63,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":3}},"result":3},"priority":3,"words":{"wordCount":58,"wordValue":0.1,"result":2.49},"readability":{"fleschKincaid":74.49919540229887,"syllables":84,"sentences":6,"score":0.8550080459770113},"multiplier":1,"relevance":0.9}},{"id":2160141209,"content":"@gentlementlegen \r\nQuestions:\r\n1. How github issues (that should be watched for activities in the `repositories.url` DB field) are created in the first place? I mean this plugin (as far as I understand) read already saved github issues from a DB and check for assignee activities but doesn't insert any github issues itself. So there should be a piece of code that initially inserts github issues that should be watched.\r\n2. Why do we need to store issues in a DB? Bot v1 used only github APIs for opening/closing issues.","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2160141209","commentType":"PULL_COLLABORATOR","score":{"reward":7.623,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":3,"words":{"wordCount":88,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":65.91645454545456,"syllables":128,"sentences":5,"score":0.9408354545454545},"multiplier":1,"relevance":0.7}},{"id":2160188503,"content":"@gentlementlegen So what is the expected config that partners should use? This one:\r\n```\r\nplugins:\r\n  issues.assigned:\r\n    - uses:\r\n        - plugin: ubiquibot/user-activity-watcher\r\n          type: github\r\n          with:\r\n            unassignUserThreshold: 5\r\n            sendRemindersThreshold: 1\r\n  issues.unassigned:\r\n    - uses:\r\n        - plugin: ubiquibot/user-activity-watcher\r\n          type: github\r\n          with:\r\n            unassignUserThreshold: 5\r\n            sendRemindersThreshold: 1\r\n  issues.closed:\r\n    - uses:\r\n        - plugin: ubiquibot/user-activity-watcher\r\n          type: github\r\n          with:\r\n            unassignUserThreshold: 5\r\n            sendRemindersThreshold: 1\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2160188503","commentType":"PULL_COLLABORATOR","score":{"reward":2.52,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":70.08365384615385,"syllables":20,"sentences":2,"score":0.8991634615384615},"multiplier":1,"relevance":0.6}},{"id":2160304490,"content":"@gentlementlegen Does the kernel support this syntax?\r\n```\r\nplugins:\r\n  issues.assigned:\r\n  issues.unassigned:\r\n  issues.closed:\r\n    - uses:\r\n        - plugin: ubiquibot/user-activity-watcher\r\n          type: github\r\n          with:\r\n            unassignUserThreshold: 5\r\n            sendRemindersThreshold: 1\r\n```\r\nIf not, should we support it? At least it could be useful for `ubiquibot/user-activity-watcher`.","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2160304490","commentType":"PULL_COLLABORATOR","score":{"reward":2.805,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":73.16833333333334,"syllables":30,"sentences":3,"score":0.8683166666666666},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2109763284,"effect":{"addition":1745,"deletion":1},"reward":52.38,"priority":3},{"reviewId":2125847442,"effect":{"addition":460,"deletion":126},"reward":17.58,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 121.218 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>69.96</td></tr><tr><td>Review</td><td>Comment</td><td>7</td><td>51.258</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1745 -1</td><td>3</td><td>52.38</td></tr><tr><td>+460 -126</td><td>3</td><td>17.58</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#discussion_r1634456852\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Why do we need to grant so many sensitive (dele&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.224</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2157713843\" target=\"_blank\" rel=\"noopener\">@gentlementlegen I'm getting &#96;[ERROR] SyntaxError: \"[object &hellip;</a></h6></td><td><details><summary>2.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.7</td><td>3</td><td>7.14</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2158559088\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Is [this one](https://github.com/rndquu-org/tes&hellip;</a></h6></td><td><details><summary>3.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.6</td><td>3</td><td>8.316</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2159224913\" target=\"_blank\" rel=\"noopener\">@gentlementlegen HelpI'm getting the &#96;Failed to run user-a&hellip;</a></h6></td><td><details><summary>5.49</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3&#13;regex:&#13;  wordCount: 58&#13;  wordValue: 0.1&#13;  result: 2.49&#13;</pre></details></td><td>0.9</td><td>3</td><td>18.63</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2160141209\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Questions:1. How github issues (that should&hellip;</a></h6></td><td><details><summary>2.83</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 88&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.7</td><td>3</td><td>7.623</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2160188503\" target=\"_blank\" rel=\"noopener\">@gentlementlegen So what is the expected config that partners sh&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.52</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/1#issuecomment-2160304490\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Does the kernel support this syntax?&#96;&#96&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.805</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_81.json","json":{"gentlementlegen":{"userId":9807008,"total":27.64,"task":{"reward":25,"multiplier":1},"comments":[{"id":2435578397,"content":"When a specific branch or version is specified for a Github Action plugin, the Kernel tries to look within the default branch if the `manifest.json` exists. It should use the specified branch to retrieve the configuration.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/81","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.64,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":58.54678571428573,"syllables":54,"sentences":2,"score":0.9854678571428573},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 27.64 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.64</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/81\" target=\"_blank\" rel=\"noopener\">When a specific branch or version is specified for a Github Acti&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>1</td><td>1</td><td>2.64</td></tr></tbody></table></details>"},"0x4007":{"total":3.127,"userId":4975670,"comments":[{"id":1740569764,"content":"Empty string always seems like a bad idea. This seems to be extremely error prone compared to explicitly handling this with `null` and skipping the subsequent code blocks that use this value. It's why I have the proposal in ts-template to flag empty strings.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/99#discussion_r1740569764","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,8 +17,8 @@ export function getManifest(context: GitHubContext, plugin: string | GithubPlugi\n   return isGithubPlugin(plugin) ? fetchActionManifest(context, plugin) : fetchWorkerManifest(plugin);\n }\n \n-async function fetchActionManifest(context: GitHubContext<\"issue_comment.created\">, { owner, repo }: GithubPlugin): Promise<Manifest | null> {\n-  const manifestKey = `${owner}:${repo}`;\n+async function fetchActionManifest(context: GitHubContext<\"issue_comment.created\">, { owner, repo, ref }: GithubPlugin): Promise<Manifest | null> {\n+  const manifestKey = `${owner}:${repo}:${ref ?? \"\"}`;","score":{"reward":2.328,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":69.41000000000003,"syllables":65,"sentences":3,"score":0.9058999999999997},"multiplier":1,"relevance":0.8}},{"id":2325278533,"content":"Merge after 3.5 days?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/99#issuecomment-2325278533","commentType":"PULL_COLLABORATOR","score":{"reward":0.069,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":102.77750000000002,"syllables":6,"sentences":2,"score":1},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":2275078705,"effect":{"addition":71,"deletion":2},"reward":0.73,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/99"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 3.127 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.73</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>2.397</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/99\" target=\"_blank\" rel=\"noopener\">#99</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+71 -2</td><td>1</td><td>0.73</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/99#discussion_r1740569764\" target=\"_blank\" rel=\"noopener\">Empty string always seems like a bad idea. This seems to be extr&hellip;</a></h6></td><td><details><summary>2.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.328</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/99#issuecomment-2325278533\" target=\"_blank\" rel=\"noopener\">Merge after 3.5 days?</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.069</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_18.json","json":{"Keyrxng":{"userId":106303466,"total":50.11,"task":{"reward":50,"multiplier":1},"comments":[{"id":1923067562,"content":"Resolves #18 \r\nRequires #17","url":"https://github.com/ubiquity-os/permit-generation/pull/19","commentType":"PULL_SPECIFICATION","score":{"reward":0.11,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.2}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 50.11 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.11</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19\" target=\"_blank\" rel=\"noopener\">Resolves #18 Requires #17</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.11</td></tr></tbody></table></details>"},"rndquu":{"total":7.206,"userId":119500907,"comments":[{"id":2352957669,"content":"Right now RPC urls used for reading onchain data are hardcoded in [this](https://github.com/ubiquibot/permit-generation/blob/e2633b36678a6e1749eb703dfc87bd294f47018f/src/utils/payoutConfigByNetworkId.ts) file.\r\nWhat should be done:\r\n- refactor the code to use https://github.com/ubiquity/rpc-handler that fetches the best RPC url for the provided network id\r\n- remove hardcoded RPC URLs","url":"https://github.com/ubiquity-os/permit-generation/issues/18","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.41,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2.2},"priority":1,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":76.584696969697,"syllables":60,"sentences":3,"score":0.8341530303030299},"multiplier":1,"relevance":1}},{"id":2212480936,"content":"@Keyrxng Could you fix https://github.com/ubiquibot/permit-generation/actions/runs/9821721152/job/27117704115 ?","url":"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2212480936","commentType":"PULL_COLLABORATOR","score":{"reward":1.116,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":63.86250000000001,"syllables":24,"sentences":2,"score":0.9613749999999999},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2159122974,"effect":{"addition":43,"deletion":25},"reward":0.68,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/19"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 7.206 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.68</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.41</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>1.116</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/19\" target=\"_blank\" rel=\"noopener\">#19</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+43 -25</td><td>1</td><td>0.68</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/18\" target=\"_blank\" rel=\"noopener\">Right now RPC urls used for reading onchain data are hardcoded i&hellip;</a></h6></td><td><details><summary>4.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.2&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>1</td><td>1</td><td>5.41</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2212480936\" target=\"_blank\" rel=\"noopener\">@Keyrxng Could you fix https://github.com/ubiquibot/permit-gener&hellip;</a></h6></td><td><details><summary>1.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.116</td></tr></tbody></table></details>"},"0x4007":{"total":2.047,"userId":4975670,"comments":[{"id":2161594834,"content":"Implicit ok","url":"https://github.com/ubiquity-os/permit-generation/pull/19#pullrequestreview-2161594834","commentType":"PULL_COLLABORATOR","score":{"reward":0.093,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":35.60500000000002,"syllables":4,"sentences":1,"score":0.7560500000000002},"multiplier":1,"relevance":0.3}},{"id":1643922389,"content":"Are these being used?","url":"https://github.com/ubiquity-os/permit-generation/pull/19#discussion_r1643922389","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,6 +3,9 @@ import { SupabaseClient } from \"@supabase/supabase-js\";\n import { Super } from \"./supabase\";\n import { Context } from \"../../../types/context\";\n \n+const FAILED_TO_GET_USER = \"Failed to get user\";\n+const SUCCESSFULLY_FETCHED_USER = \"Successfully fetched user\";","score":{"reward":0.342,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":2211922904,"content":"@rndquu Wrote the spec and approved the pull so I think it's an automatic accept \n@gentlementlegen We should consider this for the auto pull merge plugin","url":"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2211922904","commentType":"PULL_COLLABORATOR","score":{"reward":0.912,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":54.09666666666669,"syllables":40,"sentences":1,"score":0.940966666666667},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2124652981,"effect":{"addition":44,"deletion":25},"reward":0.69,"priority":1},{"reviewId":2161594834,"effect":{"addition":0,"deletion":1},"reward":0.01,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/19"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.047 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>0.7</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>1.347</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/19\" target=\"_blank\" rel=\"noopener\">#19</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+44 -25</td><td>1</td><td>0.69</td></tr><tr><td>+0 -1</td><td>1</td><td>0.01</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#pullrequestreview-2161594834\" target=\"_blank\" rel=\"noopener\">Implicit ok</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.093</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#discussion_r1643922389\" target=\"_blank\" rel=\"noopener\">Are these being used?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.342</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2211922904\" target=\"_blank\" rel=\"noopener\">@rndquu Wrote the spec and approved the pull so I think it's an &hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.912</td></tr></tbody></table></details>"},"gentlementlegen":{"total":9.24,"userId":9807008,"comments":[{"id":1644033434,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os/permit-generation/pull/19#discussion_r1644033434","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,27 @@\n+// @ts-expect-error - no types\n+import { RPCHandler, HandlerConstructorConfig } from \"@ubiquity-dao/rpc-handler\"\n+import { JsonRpcProvider } from \"ethers\";\n+\n+function getHandler(networkId: number | string) {\n+  const config = {\n+    networkId,\n+    autoStorage: false,\n+    cacheRefreshCycles: 5,\n+    rpcTimeout: 1500,\n+    networkName: null,\n+    runtimeRpcs: null,\n+    networkRpcs: null,\n+  };\n+\n+  return new RPCHandler(config as HandlerConstructorConfig)\n+}\n+\n+export async function getFastestProvider(networkId: number | string): Promise<JsonRpcProvider> {\n+  try {\n+    const handler = getHandler(networkId)\n+    return await handler.getFastestRpcProvider()\n+","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":1,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.9}},{"id":2175484169,"content":"Tests seem to works but some of them do not exit properly, I suspect some import containing async calls that is not awaited, see [here](https://github.com/ubiquibot/permit-generation/pull/19/checks#step:4:62).","url":"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2175484169","commentType":"PULL_COLLABORATOR","score":{"reward":2.768,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":66.40400000000001,"syllables":34,"sentences":1,"score":0.9359599999999999},"multiplier":1,"relevance":0.8}},{"id":2175842988,"content":"@Keyrxng A common scenario I encountered is when you import a file (`import 'my-file'`) and within this file some function is directly called such as:\r\n```TypeScript\r\nrun().then().catch(e => {})\r\n```\r\nThis mean on import, async functions run instantly but are not awaited and run beyond the tear down of Jest, if that helps you.","url":"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2175842988","commentType":"PULL_COLLABORATOR","score":{"reward":2.457,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":40.33,"syllables":66,"sentences":1,"score":0.8033},"multiplier":1,"relevance":0.85}},{"id":2177884347,"content":"@Keyrxng Could you then try to:\r\n- hard code these calls and see if that solves the issue\r\n- if it does, might be better to mock these for testing","url":"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2177884347","commentType":"PULL_COLLABORATOR","score":{"reward":1.845,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":1,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":84.75071428571431,"syllables":31,"sentences":1,"score":0.7524928571428569},"multiplier":1,"relevance":0.75}},{"id":2180424240,"content":"I think this should be solved, because at the moment you just get a warning that some code is running after Jest tear down, but if that code was actually outputting things using `console.log` Jest would throw an error saying some code is attempting to log after tear down.","url":"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2180424240","commentType":"PULL_COLLABORATOR","score":{"reward":1.48,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":47.077500000000015,"syllables":63,"sentences":1,"score":0.8707750000000002},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2124826330,"effect":{"addition":44,"deletion":25},"reward":0.69,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/19"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 9.24 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.69</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>8.55</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/19\" target=\"_blank\" rel=\"noopener\">#19</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+44 -25</td><td>1</td><td>0.69</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#discussion_r1644033434\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>1</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2175484169\" target=\"_blank\" rel=\"noopener\">Tests seem to works but some of them do not exit properly, I sus&hellip;</a></h6></td><td><details><summary>2.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.768</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2175842988\" target=\"_blank\" rel=\"noopener\">@Keyrxng A common scenario I encountered is when you import a fi&hellip;</a></h6></td><td><details><summary>2.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.85</td><td>1</td><td>2.457</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2177884347\" target=\"_blank\" rel=\"noopener\">@Keyrxng Could you then try to:- hard code these calls and see&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.75</td><td>1</td><td>1.845</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#issuecomment-2180424240\" target=\"_blank\" rel=\"noopener\">I think this should be solved, because at the moment you just ge&hellip;</a></h6></td><td><details><summary>2.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 48&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>0.5</td><td>1</td><td>1.48</td></tr></tbody></table></details>"},"whilefoo":{"total":1.079,"userId":139262667,"comments":[{"id":1645141279,"content":"`rpc-handler` seems to have types?","url":"https://github.com/ubiquity-os/permit-generation/pull/19#discussion_r1645141279","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,26 @@\n+// @ts-expect-error - no types","score":{"reward":0.399,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2126620620,"effect":{"addition":43,"deletion":25},"reward":0.68,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/19"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.079 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.68</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.399</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/19\" target=\"_blank\" rel=\"noopener\">#19</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+43 -25</td><td>1</td><td>0.68</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/19#discussion_r1645141279\" target=\"_blank\" rel=\"noopener\">&#96;rpc-handler&#96; seems to have types?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.399</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-template_5.json","json":{"gentlementlegen":{"userId":9807008,"total":30.622,"task":{"reward":25,"multiplier":1},"comments":[{"id":2359866998,"content":"We are using an old version of `eslint` which differs in the way of how the configuration is defined. A new format called `flat format` is now in used, and has benefits like having a fully type supported `typescript` check within the configuration. It would be nice to benefit from that upgrade for the new plugins.\r\nReferences:\r\nhttps://eslint.org/docs/latest/use/migrate-to-9.0.0\r\nhttps://typescript-eslint.io/getting-started","url":"https://github.com/ubiquity-os/plugin-template/issues/5","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.56,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":74.67946428571432,"syllables":102,"sentences":8,"score":0.8532053571428568},"multiplier":1,"relevance":1}},{"id":1926784257,"content":"Resolves #5","url":"https://github.com/ubiquity-os/plugin-template/pull/6","commentType":"PULL_SPECIFICATION","score":{"reward":0.062,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":1,"relevance":0.2}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 30.622 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.56</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.062</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/5\" target=\"_blank\" rel=\"noopener\">We are using an old version of &#96;eslint&#96; which differs in&hellip;</a></h6></td><td><details><summary>4.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>1</td><td>1</td><td>5.56</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6\" target=\"_blank\" rel=\"noopener\">Resolves #5</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.062</td></tr></tbody></table></details>"},"0x4007":{"total":6.241,"userId":4975670,"comments":[{"id":2177918449,"content":"I guess the rewards calculation for the pull comments are very broken this time @gentlementlegen \r\nWhen v2?","url":"https://github.com/ubiquity-os/plugin-template/issues/5#issuecomment-2177918449","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":50.2388235294118,"syllables":28,"sentences":1,"score":0.902388235294118},"multiplier":1,"relevance":0}},{"id":1645050375,"content":"```suggestion\r\n    \"format\": \"run-p yarn:format:*\",\r\n```\r\nWe already have run-p for this.","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645050375","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -4,11 +4,12 @@\n   \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n   \"author\": \"Ubiquity DAO\",\n   \"license\": \"MIT\",\n+  \"main\": \"src/worker.ts\",\n   \"engines\": {\n     \"node\": \">=20.10.0\"\n   },\n   \"scripts\": {\n-    \"format\": \"run-s format:lint format:prettier format:cspell\",\n+    \"format\": \"concurrently yarn:format:*\",","score":{"reward":0.664,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.8}},{"id":1645050489,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645050489","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -26,45 +27,43 @@\n     \"open-source\"\n   ],\n   \"dependencies\": {\n-    \"@actions/core\": \"^1.10.1\",\n-    \"@actions/github\": \"^6.0.0\",\n-    \"@octokit/rest\": \"^20.0.2\",\n-    \"@octokit/webhooks\": \"^13.1.0\",\n-    \"@sinclair/typebox\": \"^0.32.5\",\n-    \"@supabase/supabase-js\": \"2.42.0\",\n-    \"dotenv\": \"^16.4.4\",\n-    \"ms\": \"^2.1.3\",\n-    \"typebox-validators\": \"^0.3.5\"\n+    \"@actions/core\": \"1.10.1\",\n+    \"@actions/github\": \"6.0.0\",\n+    \"@octokit/rest\": \"20.1.1\",\n+    \"@octokit/webhooks\": \"13.2.7\",\n+    \"@sinclair/typebox\": \"0.32.33\",\n+    \"@supabase/supabase-js\": \"2.43.5\",\n+    \"dotenv\": \"16.4.5\",\n+    \"typebox-validators\": \"0.3.5\"\n   },\n   \"devDependencies\": {\n-    \"@commitlint/cli\": \"^18.6.1\",\n-    \"@commitlint/config-conventional\": \"^18.6.2\",\n-    \"@cspell/dict-node\": \"^4.0.3\",\n-    \"@cspell/dict-software-terms\": \"^3.3.18\",\n-    \"@cspell/dict-typescript\": \"^3.1.2\",\n+    \"@commitlint/cli\": \"19.3.0\",\n+    \"@commitlint/config-conventional\": \"19.2.2\",\n+    \"@cspell/dict-node\": \"5.0.1\",\n+    \"@cspell/dict-software-terms\": \"3.4.6\",\n+    \"@cspell/dict-typescript\": \"3.1.5\",\n+    \"@eslint/js\": \"9.5.0\",\n     \"@jest/globals\": \"29.7.0\",\n     \"@mswjs/data\": \"0.16.1\",\n-    \"@types/jest\": \"29.5.12\",\n-    \"@types/node\": \"^20.11.19\",\n-    \"@typescript-eslint/eslint-plugin\": \"^7.0.1\",\n-    \"@typescript-eslint/parser\": \"^7.0.1\",\n-    \"cspell\": \"^8.4.0\",\n-    \"eslint\": \"^8.56.0\",\n-    \"eslint-config-prettier\": \"^9.1.0\",\n-    \"eslint-plugin-filename-rules\": \"^1.3.1\",\n-    \"eslint-plugin-prettier\": \"^5.1.3\",\n-    \"eslint-plugin-sonarjs\": \"^0.24.0\",\n-    \"husky\": \"^9.0.11\",\n+    \"@types/node\": \"20.14.5\",\n+    \"concurrently\": \"8.2.2\",","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":1,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.2}},{"id":1645050913,"content":"Why do you rename?","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645050913","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,8 @@\n-import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n import { Octokit } from \"@octokit/rest\";\n-import { PluginSettings } from \"./plugin-inputs\";\n+import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";","score":{"reward":0.364,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.7}},{"id":1645138041,"content":"\"If it ain't broke, don't fix it\"","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645138041","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -4,11 +4,12 @@\n   \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n   \"author\": \"Ubiquity DAO\",\n   \"license\": \"MIT\",\n+  \"main\": \"src/worker.ts\",\n   \"engines\": {\n     \"node\": \">=20.10.0\"\n   },\n   \"scripts\": {\n-    \"format\": \"run-s format:lint format:prettier format:cspell\",\n+    \"format\": \"concurrently yarn:format:*\",","score":{"reward":0.436,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":113.10000000000002,"syllables":9,"sentences":1,"score":1},"multiplier":1,"relevance":0.4}},{"id":1645193667,"content":"```suggestion\r\n    \"format\": \"run-p format:*\",\r\n```","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645193667","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -9,7 +9,7 @@\n     \"node\": \">=20.10.0\"\n   },\n   \"scripts\": {\n-    \"format\": \"concurrently yarn:format:*\",\n+    \"format\": \"npm-run-all -p format:*\",","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":1,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.8}},{"id":1645516958,"content":"`run-s` means run in series. `run-p` means run in parallel.","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645516958","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -4,11 +4,12 @@\n   \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n   \"author\": \"Ubiquity DAO\",\n   \"license\": \"MIT\",\n+  \"main\": \"src/worker.ts\",\n   \"engines\": {\n     \"node\": \">=20.10.0\"\n   },\n   \"scripts\": {\n-    \"format\": \"run-s format:lint format:prettier format:cspell\",","score":{"reward":0.837,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":86.45000000000002,"syllables":11,"sentences":2,"score":0.7354999999999998},"multiplier":1,"relevance":0.9}},{"id":1645518440,"content":"```suggestion\r\nimport { EmitterWebhookEvent, EmitterWebhookEventName } from \"@octokit/webhooks\";\r\n```\r\nSo then it should be like this?","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645518440","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,8 @@\n-import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n import { Octokit } from \"@octokit/rest\";\n-import { PluginSettings } from \"./plugin-inputs\";\n+import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";","score":{"reward":0.63,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":115.13000000000002,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2126487737,"effect":{"addition":262,"deletion":58},"reward":3.2,"priority":1},{"reviewId":2126696890,"effect":{"addition":2,"deletion":2},"reward":0.04,"priority":1},{"reviewId":2127228147,"effect":{"addition":0,"deletion":0},"reward":0,"priority":1},{"reviewId":2127230011,"effect":{"addition":2,"deletion":1},"reward":0.03,"priority":1},{"reviewId":2127247883,"effect":{"addition":2,"deletion":2},"reward":0.04,"priority":1}],"url":"https://github.com/ubiquity-os/plugin-template/pull/6"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 6.241 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>5</td><td>3.31</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0</td></tr><tr><td>Review</td><td>Comment</td><td>7</td><td>2.931</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/6\" target=\"_blank\" rel=\"noopener\">#6</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+262 -58</td><td>1</td><td>3.2</td></tr><tr><td>+2 -2</td><td>1</td><td>0.04</td></tr><tr><td>+0 -0</td><td>1</td><td>0</td></tr><tr><td>+2 -1</td><td>1</td><td>0.03</td></tr><tr><td>+2 -2</td><td>1</td><td>0.04</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/5#issuecomment-2177918449\" target=\"_blank\" rel=\"noopener\">I guess the rewards calculation for the pull comments are very b&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0</td><td>1</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645050375\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"format\": \"run-p yarn:format:*\",&hellip;</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.664</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645050489\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.2</td><td>1</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645050913\" target=\"_blank\" rel=\"noopener\">Why do you rename?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.364</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645138041\" target=\"_blank\" rel=\"noopener\">\"If it ain't broke, don't fix it\"</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.436</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645193667\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"format\": \"run-p format:*\",&#96&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>1</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645516958\" target=\"_blank\" rel=\"noopener\">&#96;run-s&#96; means run in series. &#96;run-p&#96; means run i&hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.9</td><td>1</td><td>0.837</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1645518440\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionimport { EmitterWebhookEvent, Emitter&hellip;</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.63</td></tr></tbody></table></details>"},"Keyrxng":{"total":4.442,"userId":106303466,"comments":[{"id":1644794079,"content":"Is this no longer a config requirement?","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1644794079","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -26,7 +26,6 @@\n - plugin: <plugin-org/owner>/<plugin-repo-name>:compute.yml@development\n   name: plugin-name\n   id: plugin-name-command\n-  type: github | worker","score":{"reward":0.132,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":54.70142857142861,"syllables":12,"sentences":1,"score":0.947014285714286},"multiplier":0.25,"relevance":0.6}},{"id":1644797991,"content":"I think `run-s` is preferred over `yarn &&` see [here](https://github.com/ubiquity/rpc-handler/pull/28#discussion_r1642103541) although I'm not sure of the difference between the two","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1644797991","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -4,11 +4,12 @@\n   \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n   \"author\": \"Ubiquity DAO\",\n   \"license\": \"MIT\",\n+  \"main\": \"src/worker.ts\",\n   \"engines\": {\n     \"node\": \">=20.10.0\"\n   },\n   \"scripts\": {\n-    \"format\": \"run-s format:lint format:prettier format:cspell\",","score":{"reward":0.6,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":75.76500000000001,"syllables":24,"sentences":1,"score":0.8423499999999998},"multiplier":0.25,"relevance":0.8}},{"id":1644798873,"content":"Ahh that makes sense","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1644798873","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -26,7 +26,6 @@\n - plugin: <plugin-org/owner>/<plugin-repo-name>:compute.yml@development\n   name: plugin-name\n   id: plugin-name-command\n-  type: github | worker","score":{"reward":0.042,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":0.25,"relevance":0.3}},{"id":1644819022,"content":"Would be better as a separate issue to replace across the org if taking this approach. I'm okay with `yarn &&`\r\n<hr/>\r\nI see you replaced it, I'll use the same pkg in the linked PR.","url":"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1644819022","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -4,11 +4,12 @@\n   \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n   \"author\": \"Ubiquity DAO\",\n   \"license\": \"MIT\",\n+  \"main\": \"src/worker.ts\",\n   \"engines\": {\n     \"node\": \">=20.10.0\"\n   },\n   \"scripts\": {\n-    \"format\": \"run-s format:lint format:prettier format:cspell\",","score":{"reward":0.448,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":1,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":80.46500000000002,"syllables":46,"sentences":2,"score":0.7953499999999998},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2126063340,"effect":{"addition":261,"deletion":58},"reward":3.19,"priority":1},{"reviewId":2126112484,"effect":{"addition":2,"deletion":1},"reward":0.03,"priority":1}],"url":"https://github.com/ubiquity-os/plugin-template/pull/6"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 4.442 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>3.22</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>1.222</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/6\" target=\"_blank\" rel=\"noopener\">#6</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+261 -58</td><td>1</td><td>3.19</td></tr><tr><td>+2 -1</td><td>1</td><td>0.03</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1644794079\" target=\"_blank\" rel=\"noopener\">Is this no longer a config requirement?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.132</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1644797991\" target=\"_blank\" rel=\"noopener\">I think &#96;run-s&#96; is preferred over &#96;yarn &amp;&amp;&#&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1644798873\" target=\"_blank\" rel=\"noopener\">Ahh that makes sense</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.042</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/6#discussion_r1644819022\" target=\"_blank\" rel=\"noopener\">Would be better as a separate issue to replace across the org if&hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.448</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-template_40.json","json":{"gentlementlegen":{"userId":9807008,"total":75,"task":{"reward":75,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 75 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>75</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"0x4007":{"total":35.199,"userId":4975670,"comments":[{"id":2624679406,"content":"- Reviewing the template now and it still lints `dist/` with `bun run format`\n- The regex lint errors were not addressed. \n- CI bun doesn't do bun run which I'm pretty sure is necessary for the logic to run.\n- `eslint.config.mjs` settings weren't added back \n```\n    \"sonarjs/prefer-immediate-return\": \"error\",\n    \"sonarjs/no-redundant-jump\": \"error\",\n    \"sonarjs/no-same-line-conditional\": \"error\",\n    \"sonarjs/no-small-switch\": \"error\",\n    \"sonarjs/no-unused-collection\": \"error\",\n    \"sonarjs/prefer-object-literal\": \"error\",\n    \"sonarjs/prefer-single-boolean-return\": \"error\",\n    \"sonarjs/prefer-while\": \"error\",\n```\nOn initial check it seems like this is missing a lot of what I fixed in my pull","url":"https://github.com/ubiquity-os/plugin-template/issues/40#issuecomment-2624679406","commentType":"ISSUE_AUTHOR","score":{"reward":10.77,"formatting":{"content":{"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4},"p":{"score":0,"elementCount":1}},"result":0.4},"priority":3,"words":{"wordCount":58,"wordValue":0.1,"result":2.49},"readability":{"fleschKincaid":79.27373563218391,"syllables":74,"sentences":3,"score":0.8072626436781608},"multiplier":1,"relevance":1}},{"id":2626409094,"content":"Regarding the ignores: \nI just told it to format src directory in my package.json which I think worked. \nBut setting in the config is a better solution so if that works then that's good!","url":"https://github.com/ubiquity-os/plugin-template/issues/40#issuecomment-2626409094","commentType":"ISSUE_AUTHOR","score":{"reward":6.939,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":79.50500000000001,"syllables":49,"sentences":3,"score":0.8049499999999999},"multiplier":1,"relevance":0.9}},{"id":2810990806,"content":"I was working on my first plugin and realized that theres some cleanup that needs to be done on the template. I created this pull as a snapshot to serve as a reference point. Its partially including some of my changes for my plugin, but scrutinize the config files more closely. I had to make some changes to fix lint errors and such. \nhttps://github.com/0x4007/command-configure/pull/3","url":"https://github.com/ubiquity-os/plugin-template/issues/40","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.38,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":63,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":81.62698356807515,"syllables":95,"sentences":6,"score":0.7837301643192486},"multiplier":1,"relevance":1}},{"id":2626410465,"content":"This is funny how aggressive it is about not letting you proceed.","url":"https://github.com/ubiquity-os/plugin-template/pull/43#issuecomment-2626410465","commentType":"PULL_COLLABORATOR","score":{"reward":0.798,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":67.75500000000001,"syllables":18,"sentences":1,"score":0.9224499999999999},"multiplier":1,"relevance":0.2}},{"id":2626411995,"content":"Just be sure to carefully review my opened example pull so you don't miss anything.","url":"https://github.com/ubiquity-os/plugin-template/pull/43#issuecomment-2626411995","commentType":"PULL_COLLABORATOR","score":{"reward":2.952,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":58.4075,"syllables":25,"sentences":1,"score":0.984075},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/41"},{"reviews":[{"reviewId":2585771381,"effect":{"addition":159,"deletion":149},"reward":9.24,"priority":3},{"reviewId":2586133647,"effect":{"addition":2,"deletion":2},"reward":0.12,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-template/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 35.199 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>9.36</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.38</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>17.709</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>3.75</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/43\" target=\"_blank\" rel=\"noopener\">#43</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+159 -149</td><td>3</td><td>9.24</td></tr><tr><td>+2 -2</td><td>3</td><td>0.12</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/40\" target=\"_blank\" rel=\"noopener\">I was working on my first plugin and realized that theres some c&hellip;</a></h6></td><td><details><summary>3.55</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 63&#13;  wordValue: 0.1&#13;  result: 2.55&#13;</pre></details></td><td>1</td><td>1</td><td>4.38</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/40#issuecomment-2624679406\" target=\"_blank\" rel=\"noopener\">- Reviewing the template now and it still lints &#96;dist/&#96; &hellip;</a></h6></td><td><details><summary>2.89</summary><pre>content:&#13;  content:&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0.4&#13;regex:&#13;  wordCount: 58&#13;  wordValue: 0.1&#13;  result: 2.49&#13;</pre></details></td><td>1</td><td>3</td><td>10.77</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/40#issuecomment-2626409094\" target=\"_blank\" rel=\"noopener\">Regarding the ignores: I just told it to format src directory i&hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.939</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/43#issuecomment-2626410465\" target=\"_blank\" rel=\"noopener\">This is funny how aggressive it is about not letting you proceed.</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.798</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/43#issuecomment-2626411995\" target=\"_blank\" rel=\"noopener\">Just be sure to carefully review my opened example pull so you d&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.952</td></tr></tbody></table></details>"},"whilefoo":{"total":10.542,"userId":139262667,"comments":[{"id":2615376391,"content":"I'm not sure what I'm doing wrong but I forked your template and the kernel shows: \r\n```\r\n✘ [ERROR] GET /repos/ubiquity-whilefoo/test-plugin-2/contents/manifest.json?ref=main - 404 with id 0619:5E226:902F381:960B8AB:67975B46 in 177ms\r\n```\r\nbut [manifest.json](https://github.com/ubiquity-whilefoo/plugin-test-2/blob/main/manifest.json) exists","url":"https://github.com/ubiquity-os/plugin-template/pull/41#issuecomment-2615376391","commentType":"PULL_COLLABORATOR","score":{"reward":7.44,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":91.84272727272729,"syllables":27,"sentences":2,"score":0.6815727272727271},"multiplier":1,"relevance":0.8}},{"id":2615414686,"content":"I'm running locally, weird","url":"https://github.com/ubiquity-os/plugin-template/pull/41#issuecomment-2615414686","commentType":"PULL_COLLABORATOR","score":{"reward":0.612,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":66.40000000000003,"syllables":8,"sentences":1,"score":0.9359999999999996},"multiplier":1,"relevance":0.3}},{"id":2616135144,"content":"Omg yes, I got the name wrong","url":"https://github.com/ubiquity-os/plugin-template/pull/41#issuecomment-2616135144","commentType":"PULL_COLLABORATOR","score":{"reward":1.62,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":115.13000000000002,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2575831045,"effect":{"addition":16,"deletion":13},"reward":0.87,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-template/pull/41"},{"url":"https://github.com/ubiquity-os/plugin-template/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 10.542 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.87</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>9.672</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/41\" target=\"_blank\" rel=\"noopener\">#41</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+16 -13</td><td>3</td><td>0.87</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/41#issuecomment-2615376391\" target=\"_blank\" rel=\"noopener\">I'm not sure what I'm doing wrong but I forked your template and&hellip;</a></h6></td><td><details><summary>2.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.44</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/41#issuecomment-2615414686\" target=\"_blank\" rel=\"noopener\">I'm running locally, weird</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.612</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/41#issuecomment-2616135144\" target=\"_blank\" rel=\"noopener\">Omg yes, I got the name wrong</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.62</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_10.json","json":{"gentlementlegen":{"userId":9807008,"total":605.36,"task":{"reward":600,"multiplier":1},"comments":[{"id":2294439953,"content":"**command/query:** see statistics on a user. We have wallet address and label access control details. We should eventually include repo/org/global XP as well, and possibly dollars earned if our ledger works.\r\n[See source code](https://github.com/ubiquity/ubiquibot/blob/579c447ce23397d8947e2f3f2a5e665f1c60fedf/src/handlers/comment/handlers/query.ts)\r\n[See related repository](https://github.com/ubiquibot/command-query-user)","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/10","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.36,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":59.16092105263158,"syllables":62,"sentences":4,"score":0.9916092105263158},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 605.36 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>600</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.36</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/10\" target=\"_blank\" rel=\"noopener\">**command/query:** see statistics on a user. We have wallet addr&hellip;</a></h6></td><td><details><summary>4.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>1</td><td>1</td><td>5.36</td></tr></tbody></table></details>"},"whilefoo":{"total":106.452,"userId":139262667,"comments":[{"id":1614718147,"content":"Maybe it'd be a good idea to post a comment with the error so we don't think the bot is down and we can easily see what's wrong","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614718147","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../types/context\";\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && payload.organization) {\n+      const { status } = await octokit.orgs.checkMembershipForUser({\n+        username,\n+        org: payload.organization.login,\n+      });\n+      // @ts-expect-error Somehow typing seems wrong but according to\n+      // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+      // 204 means the user is part of the Organization\n+      if (status !== 204) {\n+        body.push(`\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``);\n+        await octokit.issues.createComment({\n+          body: body.join(\"\\n\"),\n+          owner: payload.repository.owner.login,\n+          repo: payload.repository.name,\n+          issue_number: payload.issue.number,\n+        });\n+        return;\n+      }\n+    }\n+    const access = await supabase.access.getAccess(id);\n+    const wallet = await supabase.wallet.getWallet(id);\n+    if (!access && !wallet) {\n+      body.push(`\\`\\`\\`\n+User information for ${username} was not found.\n+\\`\\`\\``);\n+    } else {\n+      body.push(`\n+| Property | Value |\n+|----------|-------|`);\n+      if (wallet) {\n+        body.push(`| Wallet | ${wallet.address} |`);\n+      }\n+      if (access) {\n+        body.push(`| Access | ${access.multiplier_reason} |`);\n+      }\n+    }\n+    await octokit.issues.createComment({\n+      body: body.join(\"\\n\"),\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: payload.issue.number,\n+    });\n+  } catch (e) {\n+    context.logger.error(\"Could not query user.\", e);","score":{"reward":5.76,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":77.12483870967742,"syllables":36,"sentences":1,"score":0.8287516129032259},"multiplier":1,"relevance":0.8}},{"id":1614719739,"content":"I think access table contains information about which labels the user can set, not sure if multiplier_reason is there. Also I don't see database types?","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614719739","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../types/context\";\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && payload.organization) {\n+      const { status } = await octokit.orgs.checkMembershipForUser({\n+        username,\n+        org: payload.organization.login,\n+      });\n+      // @ts-expect-error Somehow typing seems wrong but according to\n+      // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+      // 204 means the user is part of the Organization\n+      if (status !== 204) {\n+        body.push(`\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``);\n+        await octokit.issues.createComment({\n+          body: body.join(\"\\n\"),\n+          owner: payload.repository.owner.login,\n+          repo: payload.repository.name,\n+          issue_number: payload.issue.number,\n+        });\n+        return;\n+      }\n+    }\n+    const access = await supabase.access.getAccess(id);\n+    const wallet = await supabase.wallet.getWallet(id);\n+    if (!access && !wallet) {\n+      body.push(`\\`\\`\\`\n+User information for ${username} was not found.\n+\\`\\`\\``);\n+    } else {\n+      body.push(`\n+| Property | Value |\n+|----------|-------|`);\n+      if (wallet) {\n+        body.push(`| Wallet | ${wallet.address} |`);\n+      }\n+      if (access) {\n+        body.push(`| Access | ${access.multiplier_reason} |`);","score":{"reward":6.075,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":56.97846153846157,"syllables":42,"sentences":2,"score":0.9697846153846157},"multiplier":1,"relevance":0.9}},{"id":1614720410,"content":"why is the github token retrieved from the env? Normally the token is passed from the kernel","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614720410","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,66 @@\n+import { createClient } from \"@supabase/supabase-js\";\n+import { CommanderError } from \"commander\";\n+import { Octokit } from \"@octokit/rest\";\n+import { createAdapters } from \"./adapters\";\n+import { CommandParser } from \"./handlers/command-parser\";\n+import { Context } from \"./types/context\";\n+import { Env } from \"./types/env\";\n+import { PluginInputs } from \"./types/plugin-input\";\n+\n+export async function run(inputs: PluginInputs, env: Env) {\n+  if (inputs.eventName !== \"issue_comment.created\") {\n+    console.warn(`Unsupported event ${inputs.eventName}, skipping.`);\n+    return;\n+  }\n+  const args = inputs.eventPayload.comment.body.trim().split(/\\s+/);\n+  const octokit = new Octokit({ auth: env.UBIQUIBOT_TOKEN });","score":{"reward":3.444,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":78.77220588235295,"syllables":24,"sentences":2,"score":0.8122779411764705},"multiplier":1,"relevance":0.7}},{"id":1614720859,"content":"You need to check the membership of the user who posted the comment not the user who is queried or maybe I'm missing something","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614720859","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../types/context\";\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && payload.organization) {\n+      const { status } = await octokit.orgs.checkMembershipForUser({\n+        username,","score":{"reward":5.886,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":66.40400000000001,"syllables":34,"sentences":1,"score":0.9359599999999999},"multiplier":1,"relevance":0.9}},{"id":1614721390,"content":"I think we will have a different type for workers plugin or maybe it can be implicitly inferred","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614721390","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,28 +1,47 @@\n-# `@ubiquity/ts-template`\n+# `@ubiquibot/command-query-user`\n \n-This template repository includes support for the following:\n+This package helps users querying their information, from they wallet address, label access control or current XP.\n \n-- TypeScript\n-- Environment Variables\n-- Conventional Commits\n-- Automatic deployment to Cloudflare Pages\n+## Usage\n \n-## Testing\n-\n-### Cypress\n+The following commands are allowed:\n \n-To test with Cypress Studio UI, run\n+```shell\n+/query @user\n+```\n \n+## Running locally\n+### Worker\n+Start the Worker by running\n ```shell\n-yarn cy:open\n+yarn dev\n ```\n \n-Otherwise to simply run the tests through the console, run\n+### Make requests\n+To trigger the worker, `POST` requests should be made to http://localhost:4000 with a `Content-Type: application/json`\n+header and a body looking like\n+```json\n+{\n+  \"stateId\": \"\",\n+  \"eventName\": \"\",\n+  \"eventPayload\": \"\",\n+  \"settings\": \"\",\n+  \"ref\": \"\"\n+}\n+```\n+For convenience, you can find an `.http` file with a valid request [here](/tests/http/request.http).\n \n-```shell\n-yarn cy:run\n+## Configuration\n+A valid configuration can be like:\n+\n+```yaml\n+- plugin: https://ubiquibot-command-query-user.ubq.fi\n+  type: github","score":{"reward":1.593,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":66.36500000000001,"syllables":26,"sentences":1,"score":0.9363499999999999},"multiplier":1,"relevance":0.3}},{"id":1616125826,"content":"But does it make sense to post comment for every log? We should make it like the old bot where the logger returned an error and if it's thrown then a comment will be posted","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616125826","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../types/context\";\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && payload.organization) {\n+      const { status } = await octokit.orgs.checkMembershipForUser({\n+        username,\n+        org: payload.organization.login,\n+      });\n+      // @ts-expect-error Somehow typing seems wrong but according to\n+      // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+      // 204 means the user is part of the Organization\n+      if (status !== 204) {\n+        body.push(`\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``);\n+        await octokit.issues.createComment({\n+          body: body.join(\"\\n\"),\n+          owner: payload.repository.owner.login,\n+          repo: payload.repository.name,\n+          issue_number: payload.issue.number,\n+        });\n+        return;\n+      }\n+    }\n+    const access = await supabase.access.getAccess(id);\n+    const wallet = await supabase.wallet.getWallet(id);\n+    if (!access && !wallet) {\n+      body.push(`\\`\\`\\`\n+User information for ${username} was not found.\n+\\`\\`\\``);\n+    } else {\n+      body.push(`\n+| Property | Value |\n+|----------|-------|`);\n+      if (wallet) {\n+        body.push(`| Wallet | ${wallet.address} |`);\n+      }\n+      if (access) {\n+        body.push(`| Access | ${access.multiplier_reason} |`);\n+      }\n+    }\n+    await octokit.issues.createComment({\n+      body: body.join(\"\\n\"),\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: payload.issue.number,\n+    });\n+  } catch (e) {\n+    context.logger.error(\"Could not query user.\", e);","score":{"reward":5.292,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":87.515,"syllables":43,"sentences":2,"score":0.72485},"multiplier":1,"relevance":0.7}},{"id":1616148795,"content":"You should display `labels`, it's an array like `['time', 'priority']`. We don't really use multiplier anymore","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616148795","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../types/context\";\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && payload.organization) {\n+      const { status } = await octokit.orgs.checkMembershipForUser({\n+        username,\n+        org: payload.organization.login,\n+      });\n+      // @ts-expect-error Somehow typing seems wrong but according to\n+      // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+      // 204 means the user is part of the Organization\n+      if (status !== 204) {\n+        body.push(`\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``);\n+        await octokit.issues.createComment({\n+          body: body.join(\"\\n\"),\n+          owner: payload.repository.owner.login,\n+          repo: payload.repository.name,\n+          issue_number: payload.issue.number,\n+        });\n+        return;\n+      }\n+    }\n+    const access = await supabase.access.getAccess(id);\n+    const wallet = await supabase.wallet.getWallet(id);\n+    if (!access && !wallet) {\n+      body.push(`\\`\\`\\`\n+User information for ${username} was not found.\n+\\`\\`\\``);\n+    } else {\n+      body.push(`\n+| Property | Value |\n+|----------|-------|`);\n+      if (wallet) {\n+        body.push(`| Wallet | ${wallet.address} |`);\n+      }\n+      if (access) {\n+        body.push(`| Access | ${access.multiplier_reason} |`);","score":{"reward":4.104,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":75.14250000000001,"syllables":22,"sentences":2,"score":0.8485749999999999},"multiplier":1,"relevance":0.9}},{"id":1616150439,"content":"My understanding from that conversation was that for the prototype we will still pass the token from the kernel, but later we need to find a better way","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616150439","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,66 @@\n+import { createClient } from \"@supabase/supabase-js\";\n+import { CommanderError } from \"commander\";\n+import { Octokit } from \"@octokit/rest\";\n+import { createAdapters } from \"./adapters\";\n+import { CommandParser } from \"./handlers/command-parser\";\n+import { Context } from \"./types/context\";\n+import { Env } from \"./types/env\";\n+import { PluginInputs } from \"./types/plugin-input\";\n+\n+export async function run(inputs: PluginInputs, env: Env) {\n+  if (inputs.eventName !== \"issue_comment.created\") {\n+    console.warn(`Unsupported event ${inputs.eventName}, skipping.`);\n+    return;\n+  }\n+  const args = inputs.eventPayload.comment.body.trim().split(/\\s+/);\n+  const octokit = new Octokit({ auth: env.UBIQUIBOT_TOKEN });","score":{"reward":4.212,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":57.55785714285717,"syllables":40,"sentences":1,"score":0.9755785714285717},"multiplier":1,"relevance":0.6}},{"id":1617598503,"content":"maybe it'd be better to use [this api](https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators) which will also work if repo is not owned by an org?","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1617598503","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,65 @@\n+import { Context } from \"../types/context\";\n+\n+async function checkUserAccess(context: Context, username: string) {\n+  const { octokit, payload } = context;\n+  if (!payload.organization || !payload.comment.user?.name) {\n+    throw new Error(\"Missing Organization / User from payload, cannot check for organization membership.\");\n+  }\n+  const { status } = await octokit.orgs.checkMembershipForUser({","score":{"reward":7.344,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":88.83428571428574,"syllables":24,"sentences":1,"score":0.7116571428571425},"multiplier":1,"relevance":0.8}},{"id":1617606061,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1617606061","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,9 @@\n+import { Type as T, StaticDecode } from \"@sinclair/typebox\";\n+\n+export const envSchema = T.Object({\n+  SUPABASE_URL: T.String(),\n+  SUPABASE_KEY: T.String(),\n+  UBIQUIBOT_TOKEN: T.String(),","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.4}},{"id":1617632512,"content":"this is not needed because wrangler will load the env file and it will be provided in the `fetch` func below. \r\nit would be a good idea to validate the env and also the request (just the general shape of the json before parsing the payload/settings...) but this can be done as a part of another PR","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1617632512","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,41 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import { config } from \"dotenv\";\n+import { run } from \"./run\";\n+import { Env } from \"./types/env\";\n+import { commandQueryUserScheme } from \"./types/plugin-input\";\n+\n+config();","score":{"reward":6.51,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":57,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":76.2342105263158,"syllables":75,"sentences":3,"score":0.8376578947368419},"multiplier":1,"relevance":0.7}},{"id":1620313878,"content":"I think this is just additional explanation for org-owned repos, I tested and it works with non-org repos too","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1620313878","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,65 @@\n+import { Context } from \"../types/context\";\n+\n+async function checkUserAccess(context: Context, username: string) {\n+  const { octokit, payload } = context;\n+  if (!payload.organization || !payload.comment.user?.name) {\n+    throw new Error(\"Missing Organization / User from payload, cannot check for organization membership.\");\n+  }\n+  const { status } = await octokit.orgs.checkMembershipForUser({","score":{"reward":3.492,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":68.69142857142859,"syllables":29,"sentences":1,"score":0.9130857142857142},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2079046071,"effect":{"addition":569,"deletion":62},"reward":18.93,"priority":3},{"reviewId":2083367442,"effect":{"addition":1025,"deletion":63},"reward":32.64,"priority":3},{"reviewId":2090956097,"effect":{"addition":18,"deletion":21},"reward":1.17,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 106.452 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>52.74</td></tr><tr><td>Review</td><td>Comment</td><td>12</td><td>53.712</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+569 -62</td><td>3</td><td>18.93</td></tr><tr><td>+1025 -63</td><td>3</td><td>32.64</td></tr><tr><td>+18 -21</td><td>3</td><td>1.17</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614718147\" target=\"_blank\" rel=\"noopener\">Maybe it'd be a good idea to post a comment with the error so we&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.76</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614719739\" target=\"_blank\" rel=\"noopener\">I think access table contains information about which labels the&hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.075</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614720410\" target=\"_blank\" rel=\"noopener\">why is the github token retrieved from the env? Normally the tok&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.444</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614720859\" target=\"_blank\" rel=\"noopener\">You need to check the membership of the user who posted the comm&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.886</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614721390\" target=\"_blank\" rel=\"noopener\">I think we will have a different type for workers plugin or mayb&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.593</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616125826\" target=\"_blank\" rel=\"noopener\">But does it make sense to post comment for every log? We should &hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.292</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616148795\" target=\"_blank\" rel=\"noopener\">You should display &#96;labels&#96;, it's an array like &#96;['t&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.104</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616150439\" target=\"_blank\" rel=\"noopener\">My understanding from that conversation was that for the prototy&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.212</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1617598503\" target=\"_blank\" rel=\"noopener\">maybe it'd be better to use [this api](https://docs.github.com/e&hellip;</a></h6></td><td><details><summary>2.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.344</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1617606061\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.4</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1617632512\" target=\"_blank\" rel=\"noopener\">this is not needed because wrangler will load the env file and i&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 57&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.51</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1620313878\" target=\"_blank\" rel=\"noopener\">I think this is just additional explanation for org-owned repos,&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.492</td></tr></tbody></table></details>"},"0x4007":{"total":89.523,"userId":4975670,"comments":[{"id":1614780480,"content":"The logger should automatically handle posting the comment as well I believe. That's how I designed my logger in the old code.","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614780480","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../types/context\";\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && payload.organization) {\n+      const { status } = await octokit.orgs.checkMembershipForUser({\n+        username,\n+        org: payload.organization.login,\n+      });\n+      // @ts-expect-error Somehow typing seems wrong but according to\n+      // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+      // 204 means the user is part of the Organization\n+      if (status !== 204) {\n+        body.push(`\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``);\n+        await octokit.issues.createComment({\n+          body: body.join(\"\\n\"),\n+          owner: payload.repository.owner.login,\n+          repo: payload.repository.name,\n+          issue_number: payload.issue.number,\n+        });\n+        return;\n+      }\n+    }\n+    const access = await supabase.access.getAccess(id);\n+    const wallet = await supabase.wallet.getWallet(id);\n+    if (!access && !wallet) {\n+      body.push(`\\`\\`\\`\n+User information for ${username} was not found.\n+\\`\\`\\``);\n+    } else {\n+      body.push(`\n+| Property | Value |\n+|----------|-------|`);\n+      if (wallet) {\n+        body.push(`| Wallet | ${wallet.address} |`);\n+      }\n+      if (access) {\n+        body.push(`| Access | ${access.multiplier_reason} |`);\n+      }\n+    }\n+    await octokit.issues.createComment({\n+      body: body.join(\"\\n\"),\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: payload.issue.number,\n+    });\n+  } catch (e) {\n+    context.logger.error(\"Could not query user.\", e);","score":{"reward":4.326,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":66.42336956521743,"syllables":35,"sentences":2,"score":0.9357663043478257},"multiplier":1,"relevance":0.7}},{"id":1614780737,"content":"It's supposed to store a JSON object of key value pairs. We should be able to write any key/value. Although come to think of it that was for labels. Not sure about the other user properties.","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614780737","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../types/context\";\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && payload.organization) {\n+      const { status } = await octokit.orgs.checkMembershipForUser({\n+        username,\n+        org: payload.organization.login,\n+      });\n+      // @ts-expect-error Somehow typing seems wrong but according to\n+      // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+      // 204 means the user is part of the Organization\n+      if (status !== 204) {\n+        body.push(`\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``);\n+        await octokit.issues.createComment({\n+          body: body.join(\"\\n\"),\n+          owner: payload.repository.owner.login,\n+          repo: payload.repository.name,\n+          issue_number: payload.issue.number,\n+        });\n+        return;\n+      }\n+    }\n+    const access = await supabase.access.getAccess(id);\n+    const wallet = await supabase.wallet.getWallet(id);\n+    if (!access && !wallet) {\n+      body.push(`\\`\\`\\`\n+User information for ${username} was not found.\n+\\`\\`\\``);\n+    } else {\n+      body.push(`\n+| Property | Value |\n+|----------|-------|`);\n+      if (wallet) {\n+        body.push(`| Wallet | ${wallet.address} |`);\n+      }\n+      if (access) {\n+        body.push(`| Access | ${access.multiplier_reason} |`);","score":{"reward":3.9,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":85.87671052631579,"syllables":50,"sentences":4,"score":0.7412328947368421},"multiplier":1,"relevance":0.5}},{"id":1614781222,"content":"Remove type. It should be inferred by the protocol prefix (or lack thereof)","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614781222","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,28 +1,47 @@\n-# `@ubiquity/ts-template`\n+# `@ubiquibot/command-query-user`\n \n-This template repository includes support for the following:\n+This package helps users querying their information, from they wallet address, label access control or current XP.\n \n-- TypeScript\n-- Environment Variables\n-- Conventional Commits\n-- Automatic deployment to Cloudflare Pages\n+## Usage\n \n-## Testing\n-\n-### Cypress\n+The following commands are allowed:\n \n-To test with Cypress Studio UI, run\n+```shell\n+/query @user\n+```\n \n+## Running locally\n+### Worker\n+Start the Worker by running\n ```shell\n-yarn cy:open\n+yarn dev\n ```\n \n-Otherwise to simply run the tests through the console, run\n+### Make requests\n+To trigger the worker, `POST` requests should be made to http://localhost:4000 with a `Content-Type: application/json`\n+header and a body looking like\n+```json\n+{\n+  \"stateId\": \"\",\n+  \"eventName\": \"\",\n+  \"eventPayload\": \"\",\n+  \"settings\": \"\",\n+  \"ref\": \"\"\n+}\n+```\n+For convenience, you can find an `.http` file with a valid request [here](/tests/http/request.http).\n \n-```shell\n-yarn cy:run\n+## Configuration\n+A valid configuration can be like:\n+\n+```yaml\n+- plugin: https://ubiquibot-command-query-user.ubq.fi\n+  type: github","score":{"reward":2.484,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":76.59134615384617,"syllables":19,"sentences":2,"score":0.8340865384615382},"multiplier":1,"relevance":0.6}},{"id":1616420830,"content":"We should standardize messaging through the kernel ideally, or at minimum via our SDK\nWe should adhere to the `ok`, `info`, `error`, `fatal` message classes with the coloring via the diff styling accordingly as I implemented in v1","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616420830","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,70 @@\n+import { Context } from \"../types/context\";\n+\n+async function checkUserAccess(context: Context, username: string) {\n+  const { octokit, payload } = context;\n+  if (!payload.organization || !payload.comment.user?.name) {\n+    throw new Error(\"Missing Organization / User from payload, cannot check for organization membership.\");\n+  }\n+  const { status } = await octokit.orgs.checkMembershipForUser({\n+    username: payload.comment.user.name,\n+    org: payload.organization.login,\n+  });\n+  // @ts-expect-error Somehow typing seems wrong but according to\n+  // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+  // 204 means the user is part of the Organization\n+  if (status !== 204) {\n+    await octokit.issues.createComment({\n+      body: `\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``,","score":{"reward":6.75,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":40.448529411764724,"syllables":53,"sentences":1,"score":0.8044852941176472},"multiplier":1,"relevance":0.9}},{"id":1616421045,"content":"Shouldn't the logger automatically post the comment? We should only use the logger then instead of octokit post comment.","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616421045","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,70 @@\n+import { Context } from \"../types/context\";\n+\n+async function checkUserAccess(context: Context, username: string) {\n+  const { octokit, payload } = context;\n+  if (!payload.organization || !payload.comment.user?.name) {\n+    throw new Error(\"Missing Organization / User from payload, cannot check for organization membership.\");\n+  }\n+  const { status } = await octokit.orgs.checkMembershipForUser({\n+    username: payload.comment.user.name,\n+    org: payload.organization.login,\n+  });\n+  // @ts-expect-error Somehow typing seems wrong but according to\n+  // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+  // 204 means the user is part of the Organization\n+  if (status !== 204) {\n+    await octokit.issues.createComment({\n+      body: `\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``,\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: payload.issue.number,\n+    });\n+    return false;\n+  }\n+  return true;\n+}\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && !(await checkUserAccess(context, username))) {\n+      return;\n+    }\n+    const access = await supabase.access.getAccess(id);\n+    const wallet = await supabase.wallet.getWallet(id);\n+    if (!access && !wallet) {\n+      body.push(`\\`\\`\\`\n+User information for ${username} was not found.\n+\\`\\`\\``);\n+    } else {\n+      body.push(`\n+| Property | Value |\n+|----------|-------|`);\n+      if (wallet) {\n+        body.push(`| Wallet | ${wallet.address} |`);\n+      }\n+      if (access) {\n+        body.push(`| Access | \\`\\`\\`${Array.isArray(access.labels) ? access.labels.join(\", \") : JSON.stringify(access.labels, null, 2)}\\`\\`\\` |`);\n+      }\n+    }\n+    await octokit.issues.createComment({\n+      body: body.join(\"\\n\"),\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: payload.issue.number,\n+    });\n+  } catch (e) {\n+    await context.logger.fatal(`Could not query user ${username}.`, e);","score":{"reward":4.584,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":57.09500000000003,"syllables":33,"sentences":2,"score":0.9709500000000003},"multiplier":1,"relevance":0.8}},{"id":1616421184,"content":"Should only be using our logger. Never console. How will this be debugged remotely?","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616421184","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,73 @@\n+import { createClient } from \"@supabase/supabase-js\";\n+import { CommanderError } from \"commander\";\n+import { Octokit } from \"@octokit/rest\";\n+import { createAdapters } from \"./adapters\";\n+import { CommandParser } from \"./handlers/command-parser\";\n+import { Context } from \"./types/context\";\n+import { Database } from \"./types/database\";\n+import { Env } from \"./types/env\";\n+import { PluginInputs } from \"./types/plugin-input\";\n+\n+export async function run(inputs: PluginInputs, env: Env) {\n+  if (inputs.eventName !== \"issue_comment.created\") {\n+    console.warn(`Unsupported event ${inputs.eventName}, skipping.`);","score":{"reward":3.6,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":57.06976190476192,"syllables":24,"sentences":3,"score":0.9706976190476192},"multiplier":1,"relevance":0.8}},{"id":1616421420,"content":"Not in spec but if you default to allow everybody to query then it's fine.","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616421420","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,21 @@\n+import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n+import { SupportedEvents } from \"./context\";\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+\n+export interface PluginInputs<T extends WebhookEventName = SupportedEvents> {\n+  stateId: string;\n+  eventName: T;\n+  eventPayload: WebhookEvent<T>[\"payload\"];\n+  settings: CommandQuerySettings;\n+  authToken: string;\n+  ref: string;\n+}\n+\n+export const commandQueryUserScheme = T.Object({\n+  /**\n+   * Allows any user to query anyone else. If false, only org members can query others.\n+   */\n+  allowPublicQuery: T.Boolean({ default: true }),","score":{"reward":2.916,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":68.9825,"syllables":23,"sentences":1,"score":0.910175},"multiplier":1,"relevance":0.6}},{"id":1616422655,"content":"There's an environment variable in the version one of the bots that sets what log level should be commented. For example, `info` logs don't necessarily have to be commented, but `fatal` and `error` yes","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616422655","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../types/context\";\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && payload.organization) {\n+      const { status } = await octokit.orgs.checkMembershipForUser({\n+        username,\n+        org: payload.organization.login,\n+      });\n+      // @ts-expect-error Somehow typing seems wrong but according to\n+      // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+      // 204 means the user is part of the Organization\n+      if (status !== 204) {\n+        body.push(`\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``);\n+        await octokit.issues.createComment({\n+          body: body.join(\"\\n\"),\n+          owner: payload.repository.owner.login,\n+          repo: payload.repository.name,\n+          issue_number: payload.issue.number,\n+        });\n+        return;\n+      }\n+    }\n+    const access = await supabase.access.getAccess(id);\n+    const wallet = await supabase.wallet.getWallet(id);\n+    if (!access && !wallet) {\n+      body.push(`\\`\\`\\`\n+User information for ${username} was not found.\n+\\`\\`\\``);\n+    } else {\n+      body.push(`\n+| Property | Value |\n+|----------|-------|`);\n+      if (wallet) {\n+        body.push(`| Wallet | ${wallet.address} |`);\n+      }\n+      if (access) {\n+        body.push(`| Access | ${access.multiplier_reason} |`);\n+      }\n+    }\n+    await octokit.issues.createComment({\n+      body: body.join(\"\\n\"),\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: payload.issue.number,\n+    });\n+  } catch (e) {\n+    context.logger.error(\"Could not query user.\", e);","score":{"reward":5.313,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":67.03295454545456,"syllables":48,"sentences":2,"score":0.9296704545454544},"multiplier":1,"relevance":0.7}},{"id":1616423007,"content":"We don't really use `multiplier` anymore that's true but one of the first questions that powerhouse asked related to the capabilities of `multiplier` so I feel like we should not neglect this capability as it may find more use in other organizations","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616423007","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../types/context\";\n+\n+export async function queryUser(context: Context, username: string) {\n+  const {\n+    octokit,\n+    payload,\n+    adapters: { supabase },\n+    config,\n+  } = context;\n+  const body: string[] = [];\n+  try {\n+    const {\n+      data: { id },\n+    } = await octokit.users.getByUsername({\n+      username,\n+    });\n+    if (!config.allowPublicQuery && payload.organization) {\n+      const { status } = await octokit.orgs.checkMembershipForUser({\n+        username,\n+        org: payload.organization.login,\n+      });\n+      // @ts-expect-error Somehow typing seems wrong but according to\n+      // https://docs.github.com/en/rest/orgs/members?apiVersion=2022-11-28#check-organization-membership-for-a-user--status-codes\n+      // 204 means the user is part of the Organization\n+      if (status !== 204) {\n+        body.push(`\\`\\`\\`User ${username} cannot request another user as it is not member of the organization.\\`\\`\\``);\n+        await octokit.issues.createComment({\n+          body: body.join(\"\\n\"),\n+          owner: payload.repository.owner.login,\n+          repo: payload.repository.name,\n+          issue_number: payload.issue.number,\n+        });\n+        return;\n+      }\n+    }\n+    const access = await supabase.access.getAccess(id);\n+    const wallet = await supabase.wallet.getWallet(id);\n+    if (!access && !wallet) {\n+      body.push(`\\`\\`\\`\n+User information for ${username} was not found.\n+\\`\\`\\``);\n+    } else {\n+      body.push(`\n+| Property | Value |\n+|----------|-------|`);\n+      if (wallet) {\n+        body.push(`| Wallet | ${wallet.address} |`);\n+      }\n+      if (access) {\n+        body.push(`| Access | ${access.multiplier_reason} |`);","score":{"reward":4.95,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":42,"wordValue":0.1,"result":2.23},"readability":{"fleschKincaid":37.30500000000002,"syllables":63,"sentences":1,"score":0.7730500000000002},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2079085205,"effect":{"addition":569,"deletion":62},"reward":18.93,"priority":3},{"reviewId":2081511609,"effect":{"addition":1013,"deletion":46},"reward":31.77,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 89.523 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>50.7</td></tr><tr><td>Review</td><td>Comment</td><td>9</td><td>38.823</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+569 -62</td><td>3</td><td>18.93</td></tr><tr><td>+1013 -46</td><td>3</td><td>31.77</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614780480\" target=\"_blank\" rel=\"noopener\">The logger should automatically handle posting the comment as we&hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.326</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614780737\" target=\"_blank\" rel=\"noopener\">It's supposed to store a JSON object of key value pairs. We shou&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.5</td><td>3</td><td>3.9</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1614781222\" target=\"_blank\" rel=\"noopener\">Remove type. It should be inferred by the protocol prefix (or la&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.484</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616420830\" target=\"_blank\" rel=\"noopener\">We should standardize messaging through the kernel ideally, or a&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.75</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616421045\" target=\"_blank\" rel=\"noopener\">Shouldn't the logger automatically post the comment? We should o&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.584</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616421184\" target=\"_blank\" rel=\"noopener\">Should only be using our logger. Never console. How will this be&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616421420\" target=\"_blank\" rel=\"noopener\">Not in spec but if you default to allow everybody to query then &hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.916</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616422655\" target=\"_blank\" rel=\"noopener\">There's an environment variable in the version one of the bots t&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.313</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#discussion_r1616423007\" target=\"_blank\" rel=\"noopener\">We don't really use &#96;multiplier&#96; anymore that's true but&hellip;</a></h6></td><td><details><summary>2.23</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 42&#13;  wordValue: 0.1&#13;  result: 2.23&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.95</td></tr></tbody></table></details>"},"rndquu":{"total":11.304,"userId":119500907,"comments":[{"id":2128826034,"content":"@gentlementlegen Help\r\nI'm trying to run this cloudflare worker but getting `SyntaxError: \"[object Object]\" is not valid JSON` error.\r\nI don't fully understand how [this](https://github.com/ubiquibot/command-query-user/blob/ceb9a68f5ea8fda6a9965cdfe5e1388c5df5b60f/src/worker.ts) file is supposed to work:\r\n1. [Here](https://github.com/ubiquibot/command-query-user/blob/ceb9a68f5ea8fda6a9965cdfe5e1388c5df5b60f/src/worker.ts#L19) we transform raw json to a js object\r\n2. [Here](https://github.com/ubiquibot/command-query-user/blob/ceb9a68f5ea8fda6a9965cdfe5e1388c5df5b60f/src/worker.ts#L20C99-L20C134) we're trying to parse a js object instead of raw text hence the error `SyntaxError: \"[object Object]\" is not valid JSON` is thrown\r\nWhat am I doing wrong?","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#issuecomment-2128826034","commentType":"PULL_COLLABORATOR","score":{"reward":11.304,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1.2},"priority":3,"words":{"wordCount":57,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":66.5917105263158,"syllables":75,"sentences":2,"score":0.934082894736842},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 11.304 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>11.304</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#issuecomment-2128826034\" target=\"_blank\" rel=\"noopener\">@gentlementlegen HelpI'm trying to run this cloudflare worker &hellip;</a></h6></td><td><details><summary>3.68</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.2&#13;regex:&#13;  wordCount: 57&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.8</td><td>3</td><td>11.304</td></tr></tbody></table></details>"},"gitcoindev":{"total":1.701,"userId":88761781,"comments":[{"id":2129021322,"content":"I had a similar problem with understanding an another plugin. @gentlementlegen provided then an example. I believe that for each plugin we should have such an example (apart from tests), and a clear instruction on how to execute the example. @gentlementlegen I would be grateful if you added one here as well and added to `README.md` instruction how to execute it.","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1#issuecomment-2129021322","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.701,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":60,"wordValue":0.1,"result":2.52},"readability":{"fleschKincaid":54.84000000000003,"syllables":97,"sentences":4,"score":0.9484000000000004},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/command-query/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.701 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>1.701</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/1#issuecomment-2129021322\" target=\"_blank\" rel=\"noopener\">I had a similar problem with understanding an another plugin. @g&hellip;</a></h6></td><td><details><summary>2.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 60&#13;  wordValue: 0.1&#13;  result: 2.52&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.701</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_25.json","json":{"Keyrxng":{"userId":106303466,"total":600,"task":{"reward":600,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 600 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>600</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"jordan-ae":{"total":0,"userId":33989423,"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2"}]},"0x4007":{"total":324.245,"userId":4975670,"comments":[{"id":2292573891,"content":"https://t.me/UbiquityOS is ready to be used.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2292573891","commentType":"ISSUE_AUTHOR","score":{"reward":3.99,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":80.06750000000002,"syllables":13,"sentences":2,"score":0.7993249999999997},"multiplier":1,"relevance":0.7}},{"id":2322888727,"content":"Perhaps there is an opportunity to use Telegram apps to solve this problem somehow.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2322888727","commentType":"ISSUE_AUTHOR","score":{"reward":3.504,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":47.59642857142859,"syllables":24,"sentences":1,"score":0.8759642857142859},"multiplier":1,"relevance":0.8}},{"id":2339532994,"content":"It seems that our base rate multiplier for priority levels must have been reset to default since the bot upgrade.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2339532994","commentType":"ISSUE_AUTHOR","score":{"reward":0.567,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":68.09500000000004,"syllables":28,"sentences":1,"score":0.9190499999999996},"multiplier":1,"relevance":0.1}},{"id":2436500670,"content":"@gentlementlegen i understand theres been more set up required i presume i should assign both of you","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2436500670","commentType":"ISSUE_AUTHOR","score":{"reward":3.096,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":60.19176470588238,"syllables":26,"sentences":1,"score":0.9980823529411762},"multiplier":1,"relevance":0.6}},{"id":2439741668,"content":"@gentlementlegen You need to implement a fix","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2439741668","commentType":"ISSUE_AUTHOR","score":{"reward":1.548,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":42.61571428571432,"syllables":13,"sentences":1,"score":0.8261571428571431},"multiplier":1,"relevance":0.6}},{"id":2505374215,"content":"I've never seen a summary posted are you sure this is implemented to spec?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2505374215","commentType":"ISSUE_AUTHOR","score":{"reward":4.05,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":78.81000000000003,"syllables":20,"sentences":1,"score":0.8118999999999997},"multiplier":1,"relevance":0.9}},{"id":2371338962,"content":"I realize that some projects require collaboration, and our team has a natural tendency to direct message each other. The problem with this approach is that the collaborative research in direct messages is not auditable. The conversation that occurred would be useful for future reference to post a summary to the completed task. \nIt would be nice if as soon as a task is started, the bot can post a link to a freshly generated telegram chat room that acts as a collaborative \"work room\" to solve that particular task   \nOnce the task is closed as complete, we can use ChatGPT to summarize the essential details from the telegram group chat and post it to the GitHub issue as a conversation summary for future reference   \nInventing the telegram integration will probably take some time so I'll set this to a week.\n---\nIt would be nice to get automatically kicked from the chat when the task is completed so that our telegrams don't get cluttered with these.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/25","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.83,"formatting":{"content":{"h2":{"score":1,"elementCount":1},"br":{"score":0,"elementCount":2},"p":{"score":0,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":168,"wordValue":0.1,"result":2.05},"readability":{"fleschKincaid":44.82385714285715,"syllables":254,"sentences":5,"score":0.8482385714285715},"multiplier":1,"relevance":1}},{"id":2299168003,"content":"Cool stuff for sure. My main problem is the database dependency. I think we should get rid of it. \nHow complex do you think that will be? If it's a big project, we could probably break it off into a separate task.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#pullrequestreview-2299168003","commentType":"PULL_COLLABORATOR","score":{"reward":6.576,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":87.92925581395349,"syllables":56,"sentences":5,"score":0.7207074418604651},"multiplier":1,"relevance":0.8}},{"id":2304365806,"content":"![image](https://github.com/user-attachments/assets/61ab28b6-2d94-4a0d-b66d-3576cb14450d)\nTesting seemed fine.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#pullrequestreview-2304365806","commentType":"PULL_COLLABORATOR","score":{"reward":0.378,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.3}},{"id":1756072881,"content":"Why do you need a database? Just use the APIs as a database this doesn't seem necessary","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756072881","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":4.671,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":75.50000000000003,"syllables":26,"sentences":2,"score":0.8449999999999998},"multiplier":1,"relevance":0.9}},{"id":1756073586,"content":"All Telegram related features need the `TELEGRAM_` prefix for secrets","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756073586","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,96 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Value } from \"@sinclair/typebox/value\";\n+import { envValidator, pluginSettingsSchema, PluginInputs, pluginSettingsValidator } from \"./types\";\n+import { PluginContext } from \"./types/plugin-context-single\";\n+import { bubbleUpErrorComment } from \"./utils/errors\";\n+import dotenv from \"dotenv\";\n+import { proxyWorkflowCallbacks } from \"./handlers/workflow-proxy\";\n+dotenv.config();\n+\n+/**\n+ * Main entry point for the workflow functions\n+ */\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  let env, settings;\n+\n+  const payloadEnv = {\n+    BOT_TOKEN: process.env.BOT_TOKEN,","score":{"reward":2.916,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":56.70000000000002,"syllables":15,"sentences":1,"score":0.9670000000000002},"multiplier":1,"relevance":0.9}},{"id":1756074243,"content":"Is this just for local testing?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756074243","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.554,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.7}},{"id":1756074471,"content":"Perhaps this type should be resolved","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756074471","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,18 @@\n+/**\n+ * This function is a utility that allows us to access deeply nested properties in an object\n+ * primarily for use with the context.payload object. It should not be overused and the developer\n+ * should be aware of the potential performance implications of using this function.\n+ *\n+ * Example usage:\n+ *\n+ * - `getDeepValue(context, \"payload.repository.owner.login\")` will return the owner\n+ * - `getDeepValue(context, [\"payload\", \"repository\", \"owner\", \"login\"])` will return the owner\n+ */\n+export function getDeepValue<T, TK extends string | string[]>(obj: T, path: TK | TK[]) {\n+  if (!obj || !path) return undefined;\n+\n+  const pathArray = Array.isArray(path) ? path : path.split(\".\");\n+\n+  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n+  return pathArray.reduce((prev, key) => prev?.[key], obj as any);","score":{"reward":1.554,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.7}},{"id":1756076282,"content":"Maybe the types should be renamed to say telegram","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756076282","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,14 +1,29 @@\n+import { Update } from \"@grammyjs/types\";\n import { Context } from \"./context\";\n+import { PluginInputs } from \"./plugin-inputs\";\n \n-/**\n- * Typeguards are most helpful when you have a union type and you want to narrow it down to a specific one.\n- * In other words, if `SupportedEvents` has multiple types then these restrict the scope\n- * of `context` to a specific event payload.\n- */\n-\n-/**\n- * Restricts the scope of `context` to the `issue_comment.created` payload.\n- */\n-export function isIssueCommentEvent(context: Context): context is Context<\"issue_comment.created\"> {\n-  return context.eventName === \"issue_comment.created\";\n+export function isIssueOpenedEvent(context: Context): context is Context<\"issues.opened\"> {\n+  return context.eventName === \"issues.opened\";\n+}\n+\n+// eslint-disable-next-line @typescript-eslint/no-explicit-any\n+export function isTelegramPayload(payload: any): payload is Update {","score":{"reward":2.163,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":84.90000000000003,"syllables":12,"sentences":1,"score":0.7509999999999997},"multiplier":1,"relevance":0.7}},{"id":1756077422,"content":"I saw a nice object in another plug-in where I think you can import all the http status codes and then select. \nMaybe it's more convenient with more type information to do this. If not, no big deal.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756077422","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,24 @@\n+import { Context, SupportedEvents, SupportedEventsU } from \"./context\";\n+\n+export type CallbackResult = { status: 200 | 201 | 204 | 404 | 500; reason: string; content?: string | Record<string, unknown> };","score":{"reward":4.806,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":85.4366666666667,"syllables":51,"sentences":3,"score":0.745633333333333},"multiplier":1,"relevance":0.6}},{"id":1756077909,"content":"I think we should look this up based on the ID","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756077909","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -11,19 +11,18 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n   ref: string;\n }\n \n-/**\n- * This should contain the properties of the bot config\n- * that are required for the plugin to function.\n- *\n- * The kernel will extract those and pass them to the plugin,\n- * which are built into the context object from setup().\n- */\n-export const pluginSettingsSchema = T.Object(\n-  {\n-    configurableResponse: T.String(),\n-  },\n-  { default: { configurableResponse: \"Hello, world!\" } }\n-);\n+export const pluginSettingsSchema = T.Object({\n+  /**\n+   * The bot ID, NOT the ID of the personal account.\n+   */\n+  botId: T.Transform(T.Unknown())\n+    .Decode((value) => Number(value))\n+    .Encode((value) => value.toString()),\n+  /**\n+   * The bot username, NOT the username of the personal account.\n+   */\n+  botUsername: T.String(),","score":{"reward":3.024,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":111.07000000000002,"syllables":11,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1756078346,"content":"What is api hash","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756078346","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -4,14 +4,75 @@ import \"dotenv/config\";\n import { StandardValidator } from \"typebox-validators\";\n \n /**\n- * Define sensitive environment variables here.\n- *\n- * These are fed into the worker/workflow as `env` and are\n- * taken from either `dev.vars` or repository secrets.\n- * They are used with `process.env` but are type-safe.\n+ * We can restrict which updates the BotFather bot will receive.\n  */\n-export const envSchema = T.Object({});\n+const allowedUpdates = T.Object({\n+  message: T.String(),\n+  poll: T.String(),\n+  edited_message: T.String(),\n+  channel_post: T.String(),\n+  edited_channel_post: T.String(),\n+  business_connection: T.String(),\n+  business_message: T.String(),\n+  edited_business_message: T.String(),\n+  deleted_business_messages: T.String(),\n+  message_reaction_count: T.String(),\n+});\n \n-export const envValidator = new StandardValidator(envSchema);\n+export const env = T.Object({\n+  /**\n+   * The token for the bot given by the BotFather.\n+   */\n+  BOT_TOKEN: T.String(),\n+  /**\n+   * The url to forward updates to.\n+   */\n+  BOT_WEBHOOK: T.String(),\n+  /**\n+   * The secret to use when forwarding updates.\n+   */\n+  BOT_WEBHOOK_SECRET: T.String(),\n+  /**\n+   * Ids of the users who are allowed to use admin commands.\n+   */\n+  BOT_ADMINS: T.Transform(T.Unknown())\n+    .Decode((str) => (Array.isArray(str) ? str.map(Number) : [Number(str)]))\n+    .Encode((arr) => arr.toString()),\n+  /**\n+   * Which updates the bot should receive, defaults to all.\n+   */\n+  ALLOWED_UPDATES: T.Optional(T.Array(T.KeyOf(allowedUpdates))),\n+  /**\n+   * The supabase instance url for storing chats, sessions, etc.\n+   */\n+  SUPABASE_URL: T.String(),\n+  /**\n+   * The supabase service key for storing chats, sessions, etc.\n+   */\n+  SUPABASE_SERVICE_KEY: T.String(),\n+  /**\n+   * Obtained from https://my.telegram.org/apps\n+   */\n+  TELEGRAM_APP_ID: T.Transform(T.Unknown())\n+    .Decode((str) => Number(str))\n+    .Encode((num) => num.toString()),\n+  /**\n+   * Obtained from https://my.telegram.org/apps\n+   */\n+  TELEGRAM_API_HASH: T.String(),","score":{"reward":1.197,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1756079320,"content":"Why db necessary","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756079320","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,48 +1,22 @@\n-import { Octokit } from \"@octokit/rest\";\n import { Env, PluginInputs } from \"./types\";\n import { Context } from \"./types\";\n-import { isIssueCommentEvent } from \"./types/typeguards\";\n-import { helloWorld } from \"./handlers/hello-world\";\n-import { LogLevel, Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { PluginContext } from \"./types/plugin-context-single\";\n+import { proxyCallbacks } from \"./handlers/worker-proxy\";\n+import { bubbleUpErrorComment } from \"./utils/errors\";\n \n-/**\n- * The main plugin function. Split for easier testing.\n- */\n export async function runPlugin(context: Context) {\n-  const { logger, eventName } = context;\n+  const { eventName } = context;\n \n-  if (isIssueCommentEvent(context)) {\n-    return await helloWorld(context);\n+  try {\n+    return proxyCallbacks(context)[eventName];\n+  } catch (err) {\n+    return bubbleUpErrorComment(context, err);\n   }\n-\n-  logger.error(`Unsupported event: ${eventName}`);\n }\n \n-/**\n- * How a worker executes the plugin.\n- */\n export async function plugin(inputs: PluginInputs, env: Env) {\n-  const octokit = new Octokit({ auth: inputs.authToken });\n-\n-  const context: Context = {\n-    eventName: inputs.eventName,\n-    payload: inputs.eventPayload,\n-    config: inputs.settings,\n-    octokit,\n-    env,\n-    logger: new Logs(\"info\" as LogLevel),\n-  };\n-\n-  /**\n-   * NOTICE: Consider non-database storage solutions unless necessary","score":{"reward":1.161,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":34.59000000000003,"syllables":6,"sentences":1,"score":0.7459000000000003},"multiplier":1,"relevance":0.9}},{"id":1756081023,"content":"Pretty interesting that you're using markdown syntax in your comment","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756081023","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,54 @@\n+import { CallbackResult } from \"#root/types/proxy.js\";\n+import { Context, SupportedEvents } from \"../types\";\n+import { repositoryDispatch } from \"./repository-dispatch\";\n+\n+/**\n+ * It is expected that these workflows being dispatched are in the same repository\n+ * as the worker.\n+ *\n+ * Each workflow enters through `compute.yml` like a typical action plugin with\n+ * the worker forwarding the payload to the appropriate workflow event handler.\n+ *\n+ * The workflow instance has access and more privileges than the worker instance\n+ * because it is connected through the MTProto API vs the Bot rest API.\n+ *\n+ * Consider the following:\n+ *\n+ * - The worker is a bot that can only perform actions that are allowed by the\n+ *   Telegram Bot API.\n+ *\n+ * - The workflow is a personal user account that can perform any action that is\n+ *   allowed by the Telegram API.\n+ *\n+ * - If the worker needs to perform an action that is not allowed by the Bot API,\n+ *   it should dispatch a workflow to perform the action instead.\n+ */\n+\n+/**\n+ * NOTICE:\n+ *          Please follow the comment pattern below to make it easier to track\n+ *          the logic of the workflow functions across the codebase.\n+ */\n+\n+/**\n+ * The logic this function can be found in [../bot/mtproto-api/workrooms/create-chat.ts](../bot/mtproto-api/workrooms/create-chat.ts)\n+ */\n+export async function createWorkroom(context: Context<\"issues.labeled\", SupportedEvents[\"issues.labeled\"]>): Promise<CallbackResult> {\n+  await repositoryDispatch(context, \"create-telegram-chat\").catch(console.error);\n+  return { status: 200, reason: \"workflow_dispatched\" };\n+}\n+/**\n+ * The logic this function can be found in [../bot/mtproto-api/workrooms/close-chat.ts](../bot/mtproto-api/workrooms/close-chat.ts)\n+ */\n+export async function closeWorkroom(context: Context<\"issues.closed\", SupportedEvents[\"issues.closed\"]>): Promise<CallbackResult> {\n+  await repositoryDispatch(context, \"close-telegram-chat\").catch(console.error);\n+  return { status: 200, reason: \"workflow_dispatched\" };\n+}\n+\n+/**\n+ * The logic this function can be found in [../bot/mtproto-api/workrooms/reopen-chat.ts](../bot/mtproto-api/workrooms/reopen-chat.ts)","score":{"reward":1.476,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":49.54272727272729,"syllables":19,"sentences":1,"score":0.895427272727273},"multiplier":1,"relevance":0.4}},{"id":1756081509,"content":"```suggestion\n```","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756081509","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,54 @@\n+import { CallbackResult } from \"#root/types/proxy.js\";\n+import { Context, SupportedEvents } from \"../types\";\n+import { repositoryDispatch } from \"./repository-dispatch\";\n+\n+/**\n+ * It is expected that these workflows being dispatched are in the same repository\n+ * as the worker.\n+ *\n+ * Each workflow enters through `compute.yml` like a typical action plugin with\n+ * the worker forwarding the payload to the appropriate workflow event handler.\n+ *\n+ * The workflow instance has access and more privileges than the worker instance\n+ * because it is connected through the MTProto API vs the Bot rest API.\n+ *\n+ * Consider the following:\n+ *\n+ * - The worker is a bot that can only perform actions that are allowed by the\n+ *   Telegram Bot API.\n+ *\n+ * - The workflow is a personal user account that can perform any action that is\n+ *   allowed by the Telegram API.\n+ *\n+ * - If the worker needs to perform an action that is not allowed by the Bot API,\n+ *   it should dispatch a workflow to perform the action instead.\n+ */\n+\n+/**\n+ * NOTICE:\n+ *          Please follow the comment pattern below to make it easier to track\n+ *          the logic of the workflow functions across the codebase.\n+ */","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.2}},{"id":1756084578,"content":"Why generator?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756084578","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,139 @@\n+import { Context, SupportedEvents } from \"#root/types/context\";\n+import { CallbackResult } from \"#root/types/proxy.js\";\n+import { MtProto } from \"../bot/mtproto\";\n+import { Api } from \"telegram\";\n+import bigInt from \"big-integer\";\n+\n+export async function closeChat(context: Context<\"issues.closed\", SupportedEvents[\"issues.closed\"]>): Promise<CallbackResult> {\n+  const {\n+    payload,\n+    adapters: {\n+      supabase: { chats },\n+    },\n+    logger,\n+  } = context;\n+  const mtProto = new MtProto(context);\n+  await mtProto.initialize();\n+\n+  logger.info(\"Closing chat with name: \", { chatName: payload.issue.title });\n+  const chat = await chats.getChatByTaskNodeId(payload.issue.node_id);\n+\n+  const fetchChat = await mtProto.client.invoke(\n+    new mtProto.api.messages.GetFullChat({\n+      chatId: chat.chatId,\n+    })\n+  );\n+\n+  if (!fetchChat) {\n+    throw new Error(\"Failed to fetch chat\");\n+  }\n+\n+  let chatParticipants;\n+\n+  if (\"participants\" in fetchChat.fullChat) {\n+    chatParticipants = fetchChat.fullChat.participants;\n+  } else {\n+    throw new Error(\"Failed to fetch chat participants\");\n+  }\n+\n+  // archive it\n+  await mtProto.client.invoke(\n+    new mtProto.api.folders.EditPeerFolders({\n+      folderPeers: [\n+        new mtProto.api.InputFolderPeer({\n+          peer: new mtProto.api.InputPeerChat({ chatId: chat.chatId }),\n+          folderId: 1, // 0 is active, 1 is archived\n+        }),\n+      ],\n+    })\n+  );\n+\n+  if (chatParticipants.className === \"ChatParticipants\") {\n+    await mtProto.client.invoke(\n+      new mtProto.api.messages.SendMessage({\n+        message: \"This task has been closed and this chat has been archived.\",\n+        peer: new mtProto.api.InputPeerChat({ chatId: chat.chatId }),\n+      })\n+    );\n+\n+    const participants = chatParticipants.participants;\n+    let creatorId;\n+\n+    const userIds = participants\n+      .map((participant) => {\n+        if (participant.className === \"ChatParticipantCreator\") {\n+          creatorId = participant.userId;\n+          return undefined;\n+        }\n+        return participant.userId;\n+      })\n+      .filter((id) => id !== undefined);\n+\n+    if (!creatorId) {\n+      throw new Error(\"Failed to get chat creator\");\n+    }\n+\n+    userIds.push(creatorId);\n+    const chatInput = await mtProto.client.getInputEntity(chat.chatId);\n+\n+    await chats.userSnapshot(\n+      chat.chatId,\n+      userIds.map((id) => id.toJSNumber())\n+    );\n+\n+    let generator = deleteChatUsers(mtProto, userIds, context, chatInput);\n+    let result = await generator.next();\n+\n+    while (!result.done) {\n+      if (!result.value.success) {\n+        const seconds = result.value.error?.seconds ?? 300;\n+        logger.info(\"Retrying...\", { seconds, er: result.value.error });\n+\n+        await intervalLogger(seconds, 60, logger, new Promise((resolve) => setTimeout(resolve, seconds * 1000)));\n+\n+        generator = deleteChatUsers(mtProto, userIds.slice(result.value.index), context, chatInput);\n+      }\n+      result = await generator.next();\n+    }\n+  }\n+\n+  await chats.updateChatStatus(\"closed\", payload.issue.node_id);\n+  return { status: 200, reason: \"chat_closed\" };\n+}\n+\n+async function* deleteChatUsers(","score":{"reward":0.6,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-6.694999999999993,"syllables":5,"sentences":1,"score":0},"multiplier":1,"relevance":0.8}},{"id":1756085053,"content":"Pretty fancy.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756085053","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,139 @@\n+import { Context, SupportedEvents } from \"#root/types/context\";\n+import { CallbackResult } from \"#root/types/proxy.js\";\n+import { MtProto } from \"../bot/mtproto\";\n+import { Api } from \"telegram\";\n+import bigInt from \"big-integer\";\n+\n+export async function closeChat(context: Context<\"issues.closed\", SupportedEvents[\"issues.closed\"]>): Promise<CallbackResult> {\n+  const {\n+    payload,\n+    adapters: {\n+      supabase: { chats },\n+    },\n+    logger,\n+  } = context;\n+  const mtProto = new MtProto(context);\n+  await mtProto.initialize();\n+\n+  logger.info(\"Closing chat with name: \", { chatName: payload.issue.title });\n+  const chat = await chats.getChatByTaskNodeId(payload.issue.node_id);\n+\n+  const fetchChat = await mtProto.client.invoke(\n+    new mtProto.api.messages.GetFullChat({\n+      chatId: chat.chatId,\n+    })\n+  );\n+\n+  if (!fetchChat) {\n+    throw new Error(\"Failed to fetch chat\");\n+  }\n+\n+  let chatParticipants;\n+\n+  if (\"participants\" in fetchChat.fullChat) {\n+    chatParticipants = fetchChat.fullChat.participants;\n+  } else {\n+    throw new Error(\"Failed to fetch chat participants\");\n+  }\n+\n+  // archive it\n+  await mtProto.client.invoke(\n+    new mtProto.api.folders.EditPeerFolders({\n+      folderPeers: [\n+        new mtProto.api.InputFolderPeer({\n+          peer: new mtProto.api.InputPeerChat({ chatId: chat.chatId }),\n+          folderId: 1, // 0 is active, 1 is archived","score":{"reward":0.279,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":35.60500000000002,"syllables":4,"sentences":1,"score":0.7560500000000002},"multiplier":1,"relevance":0.3}},{"id":1756085762,"content":"Why price label? What is this used for? I'm not really understanding the logic below.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756085762","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,197 @@\n+import { Context, SupportedEvents } from \"#root/types/context\";\n+import { CallbackResult } from \"#root/types/proxy.js\";\n+import { MtProto } from \"./bot/mtproto\";\n+import { Api } from \"telegram\";\n+import { addCommentToIssue } from \"#root/helpers/add-comment-to-issues.js\";\n+\n+function isPriceLabelChange(label: string): boolean {\n+  return label.toLowerCase().includes(\"price\");\n+}","score":{"reward":3.792,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":79.80916666666668,"syllables":23,"sentences":3,"score":0.8019083333333331},"multiplier":1,"relevance":0.8}},{"id":1756086924,"content":"Import directory syntax is interesting #root","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756086924","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,197 @@\n+import { Context, SupportedEvents } from \"#root/types/context\";","score":{"reward":1.242,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":3.344999999999999,"syllables":14,"sentences":1,"score":0.43345},"multiplier":1,"relevance":0.6}},{"id":1756087622,"content":"This fixes auth? Maybe KV is significantly more lightweight. We might even be able to store in secrets automatically? Spinning up a whole database just for a single string is overkill.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756087622","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,47 @@\n+import { Context } from \"#root/types/context.js\";\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { StringSession } from \"telegram/sessions\";\n+\n+/**\n+ * This class extends the StringSession class from the Telegram library.\n+ *\n+ * It adds the ability to save and load the session data from Supabase.","score":{"reward":6.723,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":59.78810483870967,"syllables":51,"sentences":4,"score":0.9978810483870967},"multiplier":1,"relevance":0.9}},{"id":1756090078,"content":"What do we need this for?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756090078","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,24 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+\n+type Wallet = {\n+  address: string;\n+};\n+\n+export class User extends Super {\n+  constructor(supabase: SupabaseClient, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  async getWalletByUserId(userId: number, issueNumber: number) {","score":{"reward":1.896,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1756090402,"content":"We should remove the database dependency","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756090402","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,12 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Context } from \"../../../types/context\";\n+\n+export class Super {\n+  protected supabase: SupabaseClient;\n+  protected context: Context;\n+\n+  constructor(supabase: SupabaseClient, context: Context) {","score":{"reward":1.998,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":31.545000000000016,"syllables":12,"sentences":1,"score":0.7154500000000001},"multiplier":1,"relevance":0.9}},{"id":1756092447,"content":"Very curious to experience this and see if the vibe is as expected when kicked. \nI don't recall if it actually deletes the group from our inbox or if we see the last message. Looking forward to testing it.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756092447","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,122 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+\n+export type Chat = {\n+  chatId: number;\n+  chatName: string;\n+  taskNodeId: string;\n+  status: string;\n+};\n+\n+/**\n+ * Handles all telegram chat storage and retrieval\n+ */\n+export class Chats extends Super {\n+  constructor(supabase: SupabaseClient, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  /**\n+   * Used for storing the userIds of a chat before we\n+   * ban all of them and archive the chat.","score":{"reward":5.712,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":76.97666666666669,"syllables":55,"sentences":3,"score":0.8302333333333332},"multiplier":1,"relevance":0.7}},{"id":1756093851,"content":"Pretty interesting and wild architecture where we're able to procure the benefits from both workers and actions. \nMaybe this is the future of plug-in development","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756093851","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,157 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n \n-## Getting Started\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+## High-Level Overview\n \n-## Creating a new plugin\n+This bot operates in two parts:\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+### Architecture Breakdown\n \n-- Your plugin config should look similar to this:\n+#### Telegram Bot Components\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+## Getting Started\n+\n+### Prerequisites\n \n-## Testing a plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-### Worker Plugins\n+### Installation\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+#### Environment Variables\n \n-```ts\n-await fetch(\"http://localhost:4000/\", {\n-  method: \"POST\",\n-  headers: {\n-    \"Content-Type\": \"application/json\",\n-  },\n-  body: JSON.stringify({\n-    stateId: \"\",\n-    eventName: \"\",\n-    eventPayload: \"\",\n-    settings: \"\",\n-    ref: \"\",\n-    authToken: \"\",\n-  }),\n-});\n+Define these in both `dev.vars` and your GitHub repository secrets:\n+\n+```bash\n+BOT_TOKEN=123:xyz               # Telegram Bot Token from BotFather\n+BOT_WEBHOOK=...                 # Cloudflare Worker URL\n+BOT_WEBHOOK_SECRET=...          # Cloudflare Worker Secret\n+BOT_ADMINS=[1234,5678]          # Telegram User IDs\n+SUPABASE_URL=...                # Supabase URL\n+SUPABASE_SERVICE_KEY=...        # Supabase Service Key\n+TELEGRAM_APP_ID=12345678        # Telegram App ID\n+TELEGRAM_API_HASH=...           # Telegram API Hash\n+APP_PRIVATE_KEY=...             # GitHub App Private Key\n+APP_ID=123456                   # GitHub App ID\n ```\n \n-A full example can be found [here](https://github.com/ubiquibot/assistive-pricing/blob/623ea3f950f04842f2d003bda3fc7b7684e41378/tests/http/request.http).\n+#### Supabase Configuration\n+\n+1. Create or use an existing Supabase project.\n+2. Copy and run the SQL migration file from `./supabase/migrations` in the Supabase dashboard.\n+3. Add your `SUPABASE_URL` and `SUPABASE_SERVICE_KEY` to your environment variables.\n \n-#### Deploying the Worker\n-For testing purposes, the worker can be deployed through the Worker Deploy and Worker Delete workflows. It requires to \n-create a personal [Cloudflare Account](https://www.cloudflare.com/), and fill the `CLOUDFLARE_ACCOUNT_ID` and `CLOUDFLARE_API_TOKEN` within your \n-GitHub Action Secrets.\n+#### Telegram Configuration\n \n-### Action Plugins\n+1. Create a new bot using [BotFather](https://t.me/BotFather).\n+2. Add your `BOT_TOKEN`, `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, and `BOT_ADMINS` to the environment variables.\n+3. Use [Smee.io](https://smee.io/new) to create a webhook and add the URL as `BOT_WEBHOOK`.\n+4. Generate a secret for `BOT_WEBHOOK_SECRET` to verify webhook requests.\n \n-- Ensure the kernel is running and listening for events.\n-- Fire an event in/to the repo where the kernel is installed. This can be done in a number of ways, the easiest being via the GitHub UI or using the GitHub API, such as posting a comment, opening an issue, etc in the org/repo where the kernel is installed.\n-- The kernel will process the event and dispatch it using the settings defined in your `.ubiquibot-config.yml`.\n-- The `compute.yml` workflow will run and execute your plugin's logic.\n-- You can view the logs in the Actions tab of your repo.\n+#### GitHub Configuration\n \n-[Nektos Act](https://github.com/nektos/act) - a tool for running GitHub Actions locally.\n+1. Ensure your Ubiquity OS Kernel is set up.\n+2. Add `APP_PRIVATE_KEY` and `APP_ID` to your environment variables.\n+3. Configure the plugin in your private organization’s repository:\n \n-## More information\n+```yaml\n+- uses:\n+    - plugin: http://localhost:3000\n+      runsOn: [\"issues.opened\", \"issues.labeled\", \"issues.reopened\", \"issues.closed\"]\n+      skipBotEvents: false\n+      with:\n+        botId: 00000000\n+        botUsername: yourBotName\n+```\n+\n+### Usage\n+\n+1. Follow each part of the environment setup to configure your bot.\n+2. Start your Ubiquity OS Kernel with the plugin installed in your repository.\n+3. Run `yarn sms-auth` to authenticate your personal Telegram account with MTProto.\n+4. Start the worker instance with `yarn worker`.\n+5. In another terminal, run `smee -u https://smee.io/your-webhook-url -P \"/webhook\"` to receive Telegram webhook payloads locally.\n+6. Interact with the bot in Telegram chats or trigger GitHub webhooks as defined in `manifest.json`.\n+\n+### Commands\n+\n+TODO: Commands are not fully implemented yet. A couple of helper commands for obtaining IDs etc are available.\n+\n+## Repository Structure\n+\n+```plaintext\n+.\n+├── .github/                    # GitHub Actions workflows (CI/CD, not for workflow-function logic)\n+├── manifest.json               # Plugin manifest for Ubiquity OS Kernel\n+├── supabase/                   # SQL migration files for Supabase schema\n+├── src/                        # Source code\n+│   ├── adapters/               # Storage adapters (e.g., Supabase integrations)\n+│   ├── bot/                    # Core Telegram bot functionality (Worker and Workflow)\n+│   │   ├── features/           # Bot features, including commands and event handlers\n+│   │   ├── filters/            # Grammy filters (e.g., isAdmin, isPrivateChat)\n+│   │   ├── handlers/           # Stateful command handlers based on chat types or user privileges\n+│   │   ├── helpers/            # Utility functions like logging and custom Grammy contexts\n+│   │   ├── middlewares/        # Middleware functions (e.g., rate limiting, session management)\n+│   │   ├── mtproto-api/        # MTProto API client for advanced Telegram features\n+│   │   │   ├── bot/            # MTProto API session management, 2FA auth scripts, Telegram client setup\n+│   │   │   ├── workrooms/      # A collection of Workflow-functions leveraging MTProto API\n+│   │   ├── index/              # Bot initialization, where commands and features are registered\n+│   ├── handlers/               # General plugin handlers (e.g., GitHub API functions, webhook processing)\n+│   ├── server/                 # Hono app for managing Cloudflare Worker instance of the bot\n+│   ├── types/                  # Typebox schemas, TypeScript types, Singleton classes\n+│   ├── utils/                  # General utility functions and helpers\n+│   ├── worker.ts               # Main entry point, routes events (GitHub or Telegram) to appropriate handlers\n+│   ├── plugin.ts               # GitHub event handler, forwards events to `workflow-entry.ts` or processes them\n+│   ├── workflow-entry.ts       # Handles forwarded GitHub events, MTProto API interactions, and workflow logic\n+```\n \n-- [Full Ubiquibot Configuration](https://github.com/ubiquity/ubiquibot/blob/0fde7551585499b1e0618ec8ea5e826f11271c9c/src/types/configuration-types.ts#L62) - helpful for defining your plugin's settings as they are strongly typed and will be validated by the kernel.\n-- [Ubiquibot V1](https://github.com/ubiquity/ubiquibot) - helpful for porting V1 functionality to V2, helper/utility functions, types, etc. Everything is based on the V1 codebase but with a more modular approach. When using V1 code, keep in mind that most all code will need refactored to work with the new V2 architecture.\n+## Considerations\n \n-## Examples\n+The bot has two \"branches\" due to Cloudflare Workers' limitations in handling long-running processes. The **Worker** handles most bot commands and API interactions, while the **Workflow** manages features the bot cannot perform.","score":{"reward":4.809,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":55.265833333333376,"syllables":44,"sentences":2,"score":0.9526583333333337},"multiplier":1,"relevance":0.7}},{"id":1756691376,"content":"That makes sense I just couldn't understand your logic. I recall seeing a `!` operator in the diff, which means when a label is set but not price label. \r\nAnyways, the workroom should only be created once its a project in progress. I guess a minor optimization/adjustment (lets see after actually trying this in production though) would be to generate the workroom when somebody is working on it, like when the project is officially started. Otherwise the conversation should be right on GitHub for DAO contributor convenience to peruse.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756691376","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,197 @@\n+import { Context, SupportedEvents } from \"#root/types/context\";\n+import { CallbackResult } from \"#root/types/proxy.js\";\n+import { MtProto } from \"./bot/mtproto\";\n+import { Api } from \"telegram\";\n+import { addCommentToIssue } from \"#root/helpers/add-comment-to-issues.js\";\n+\n+function isPriceLabelChange(label: string): boolean {\n+  return label.toLowerCase().includes(\"price\");\n+}","score":{"reward":8.136,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":90,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":56.025000000000006,"syllables":141,"sentences":5,"score":0.96025},"multiplier":1,"relevance":0.8}},{"id":1756693261,"content":"I suppose make a mental note of this and remove if we aren't using but maybe could be interesting in the future for deeper integrations with our system (we store user wallets) across GitHub and Telegram.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756693261","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,24 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+\n+type Wallet = {\n+  address: string;\n+};\n+\n+export class User extends Super {\n+  constructor(supabase: SupabaseClient, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  async getWalletByUserId(userId: number, issueNumber: number) {","score":{"reward":5.46,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":38.950270270270266,"syllables":57,"sentences":1,"score":0.7895027027027026},"multiplier":1,"relevance":0.7}},{"id":1756695337,"content":"I think it deletes from inbox. Other services, like Instagram, you can see the group chat and see the latest message \"X person removed you from the group\" and thats what is also visible in your inbox preview, which is not preferred for this workgroup experience.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756695337","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,122 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+\n+export type Chat = {\n+  chatId: number;\n+  chatName: string;\n+  taskNodeId: string;\n+  status: string;\n+};\n+\n+/**\n+ * Handles all telegram chat storage and retrieval\n+ */\n+export class Chats extends Super {\n+  constructor(supabase: SupabaseClient, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  /**\n+   * Used for storing the userIds of a chat before we\n+   * ban all of them and archive the chat.","score":{"reward":6.258,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":63.946521739130446,"syllables":65,"sentences":2,"score":0.9605347826086955},"multiplier":1,"relevance":0.7}},{"id":1759653749,"content":"I think all these secrets prefixes need to include telegram","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1759653749","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,187 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.\n \n-```ts\n-await fetch(\"http://localhost:4000/\", {\n-  method: \"POST\",\n-  headers: {\n-    \"Content-Type\": \"application/json\",\n-  },\n-  body: JSON.stringify({\n-    stateId: \"\",\n-    eventName: \"\",\n-    eventPayload: \"\",\n-    settings: \"\",\n-    ref: \"\",\n-    authToken: \"\",\n-  }),\n-});\n+```typescript\n+interface TELEGRAM_BOT_ENV {\n+  botSettings: {\n+    TELEGRAM_BOT_TOKEN: string; // Telegram Bot Token from BotFather\n+    TELEGRAM_BOT_WEBHOOK: string; // Cloudflare Worker URL\n+    TELEGRAM_BOT_WEBHOOK_SECRET: string; // Cloudflare Worker Secret\n+    TELEGRAM_BOT_ADMINS: number[]; // Telegram User IDs\n+  };\n+  mtProtoSettings: {\n+    TELEGRAM_APP_ID: number; // Telegram App ID\n+    TELEGRAM_API_HASH: string; // Telegram API Hash\n+  };\n+  storageSettings: {\n+    SUPABASE_URL: string; // Supabase URL\n+    SUPABASE_SERVICE_KEY: string; // Supabase Service Key\n+  };\n+  ubiquityOsSettings: {\n+    APP_PRIVATE_KEY: string; // GitHub App Private Key\n+    APP_ID: number; // GitHub App ID\n+  };\n+}\n ```\n \n-A full example can be found [here](https://github.com/ubiquibot/assistive-pricing/blob/623ea3f950f04842f2d003bda3fc7b7684e41378/tests/http/request.http).\n+#### Supabase Configuration\n \n-#### Deploying the Worker\n-For testing purposes, the worker can be deployed through the Worker Deploy and Worker Delete workflows. It requires to \n-create a personal [Cloudflare Account](https://www.cloudflare.com/), and fill the `CLOUDFLARE_ACCOUNT_ID` and `CLOUDFLARE_API_TOKEN` within your \n-GitHub Action Secrets.\n+1. Create or use an existing Supabase project.\n+2. Copy and run the SQL migration file from `./supabase/migrations` in the Supabase dashboard.\n+3. Add your `SUPABASE_URL` and `SUPABASE_SERVICE_KEY` to your environment variables.\n \n-### Action Plugins\n+#### Telegram Configuration\n \n-- Ensure the kernel is running and listening for events.\n-- Fire an event in/to the repo where the kernel is installed. This can be done in a number of ways, the easiest being via the GitHub UI or using the GitHub API, such as posting a comment, opening an issue, etc in the org/repo where the kernel is installed.\n-- The kernel will process the event and dispatch it using the settings defined in your `.ubiquibot-config.yml`.\n-- The `compute.yml` workflow will run and execute your plugin's logic.\n-- You can view the logs in the Actions tab of your repo.\n+1. Create a new bot using [BotFather](https://t.me/BotFather).\n+2. Add your `BOT_TOKEN`, `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, and `BOT_ADMINS` to the environment variables.","score":{"reward":2.736,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":69.78500000000001,"syllables":15,"sentences":1,"score":0.9021499999999999},"multiplier":1,"relevance":0.8}},{"id":1759653979,"content":"What is this? You need to include prefixes for context, like telegram","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1759653979","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -18,12 +18,12 @@ on:\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Telegram-Bot\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n     env:\n-      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n-      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+      TELEGRAM_BOT_ENV: ${{ secrets.TELEGRAM_BOT_ENV }}\n+      REPOSITORY: ${{ secrets.REPOSITORY }}","score":{"reward":3.096,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":80.89500000000001,"syllables":17,"sentences":2,"score":0.7910499999999999},"multiplier":1,"relevance":0.8}},{"id":1760211532,"content":"Why do you need the repo name? Can't this be dynamically read?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1760211532","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -18,12 +18,12 @@ on:\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Telegram-Bot\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n     env:\n-      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n-      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+      TELEGRAM_BOT_ENV: ${{ secrets.TELEGRAM_BOT_ENV }}\n+      REPOSITORY: ${{ secrets.REPOSITORY }}","score":{"reward":2.835,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.09903846153848,"syllables":18,"sentences":2,"score":0.7690096153846152},"multiplier":1,"relevance":0.7}},{"id":1764335458,"content":"Does it make sense to make the \"telegram kernel\" a separate github app? Or would that require more installations for partners? Or can we set it up once and let anyone use it?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1764335458","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":5.145,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":80.30636363636367,"syllables":45,"sentences":3,"score":0.7969363636363633},"multiplier":1,"relevance":0.7}},{"id":1766089679,"content":"As I understand, the initial webhook receiver for this system is a cloudflare worker. This is in case we need a fast response (like a telegram chat bot message) \nSince it is on cloudflare workers to start, I don't think it's possible to directly execute GitHub actions (\"use workflows directly\")","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1766089679","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":7.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":52,"wordValue":0.1,"result":2.41},"readability":{"fleschKincaid":51.91807692307697,"syllables":79,"sentences":2,"score":0.9191807692307696},"multiplier":1,"relevance":0.8}},{"id":1767887848,"content":"Seems like a solution not sure if the most elegant @gentlementlegen  please decide","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1767887848","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":2.1,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":50.470769230769264,"syllables":22,"sentences":1,"score":0.9047076923076927},"multiplier":1,"relevance":0.5}},{"id":1778133794,"content":"I just realized but isn't this considered a new kernel? Does it make sense to call it `ubiquity-os-kernel-telegram`?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1778133794","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,12 +1,12 @@\n-# `@ubiquity-os/telegram-bot`\n+# `@ubiquity-os/telegram-bridge`","score":{"reward":2.97,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":94.30000000000001,"syllables":22,"sentences":2,"score":0.6569999999999999},"multiplier":1,"relevance":0.6}},{"id":2325283179,"content":"Let's do individual chat rooms instead of a group with topics. This is to maximize signal to noise. \nAlso the data should not be deleted, instead, the users should be kicked when the project is closed as complete. This is to reduce clutter on one's telegram inbox and search history. If necessary they can always rejoin from the original link.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2325283179","commentType":"PULL_COLLABORATOR","score":{"reward":8.748,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":62,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":68.71351612903229,"syllables":92,"sentences":5,"score":0.9128648387096772},"multiplier":1,"relevance":0.9}},{"id":2325306947,"content":"Why not make some sort of GitHub actions based micro service that just opens chat rooms? \nIt sounds to me that cloudflare is limiting this due to incompatible node modules.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2325306947","commentType":"PULL_COLLABORATOR","score":{"reward":5.04,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":67.53000000000003,"syllables":44,"sentences":2,"score":0.9246999999999997},"multiplier":1,"relevance":0.7}},{"id":2325975416,"content":"Eventually the bot should reply to messages on Telegram, so building for speed is important.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2325975416","commentType":"PULL_COLLABORATOR","score":{"reward":3.696,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":50.610000000000014,"syllables":25,"sentences":1,"score":0.9061000000000001},"multiplier":1,"relevance":0.8}},{"id":2336535375,"content":"You can try ban and unban if it's the only option.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2336535375","commentType":"PULL_COLLABORATOR","score":{"reward":2.268,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":88.905,"syllables":15,"sentences":1,"score":0.71095},"multiplier":1,"relevance":0.6}},{"id":2336597208,"content":"You should test it","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2336597208","commentType":"PULL_COLLABORATOR","score":{"reward":0.684,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.4}},{"id":2336790474,"content":"Why is the chat permanently inaccessible after the users are kicked? That doesn't seem right. Make sure to unban them. Use the telegram API as your database if you require memory of who was banned. Just search the kicked users in the group chat. \nThe bot user is a \"user\" and I know you can have a normal group chat with a single user inside. \nGroup chat names should follow GitHub naming conventions like  `@ubiquibot/telegram-bot#1`","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2336790474","commentType":"PULL_COLLABORATOR","score":{"reward":8.802,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":75,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":78.64800000000001,"syllables":104,"sentences":7,"score":0.8135199999999999},"multiplier":1,"relevance":0.9}},{"id":2346066747,"content":"Sure. Looking forward to testing now. Resolve the problems I identified in my review and then it should be good for merging. \r\nWe could certainly serialize a JSON object in a single secret if needed. With a property name referencing that its all the Telegram related secrets.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2346066747","commentType":"PULL_COLLABORATOR","score":{"reward":6.279,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":65.89400000000003,"syllables":73,"sentences":5,"score":0.9410599999999997},"multiplier":1,"relevance":0.7}},{"id":2374771393,"content":"Using [YAML anchors](https://github.com/ubiquity-os-marketplace/telegram-bridge/pull/2#discussion_r1774778409) is our solution. \r\nWhen will this be merged @Keyrxng ?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2374771393","commentType":"PULL_COLLABORATOR","score":{"reward":4.464,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":87.94500000000002,"syllables":16,"sentences":2,"score":0.7205499999999998},"multiplier":1,"relevance":0.6}},{"id":2375895379,"content":"Just focus on this no other tasks. You have too many pulls open for weeks on end (I've seen some for months) and none get merged so nothing is getting done.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2375895379","commentType":"PULL_COLLABORATOR","score":{"reward":4.248,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":90.13250000000001,"syllables":38,"sentences":2,"score":0.6986749999999999},"multiplier":1,"relevance":0.6}},{"id":2377296690,"content":"Fix knip and delete the tests so you can pass CI \r\nThen merge and lets try in production\r\nEventually we can use my https://t.me/UbiquityOS account but that will require me to set up the secrets and such which we can handle later","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2377296690","commentType":"PULL_COLLABORATOR","score":{"reward":9.672,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":73.07750000000001,"syllables":59,"sentences":2,"score":0.8692249999999998},"multiplier":1,"relevance":0.8}},{"id":2378860805,"content":"Can you get this running in production today?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2378860805","commentType":"PULL_COLLABORATOR","score":{"reward":1.44,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":71.81500000000001,"syllables":12,"sentences":1,"score":0.8818499999999999},"multiplier":1,"relevance":0.5}},{"id":2378975170,"content":"Every repo here automatically deploys to our Cloudflare Workers on push.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2378975170","commentType":"PULL_COLLABORATOR","score":{"reward":2.088,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":26.470000000000027,"syllables":22,"sentences":1,"score":0.6647000000000003},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2299168003,"effect":{"addition":2528,"deletion":335},"reward":85.89,"priority":3},{"reviewId":2304365806,"effect":{"addition":736,"deletion":306},"reward":31.26,"priority":3},{"reviewId":2305499305,"effect":{"addition":23,"deletion":19},"reward":1.26,"priority":3},{"reviewId":2332943334,"effect":{"addition":353,"deletion":420},"reward":23.19,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 324.245 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>141.6</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.83</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>16.755</td></tr><tr><td>Review</td><td>Comment</td><td>44</td><td>162.06</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2\" target=\"_blank\" rel=\"noopener\">#2</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+2528 -335</td><td>3</td><td>85.89</td></tr><tr><td>+736 -306</td><td>3</td><td>31.26</td></tr><tr><td>+23 -19</td><td>3</td><td>1.26</td></tr><tr><td>+353 -420</td><td>3</td><td>23.19</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/25\" target=\"_blank\" rel=\"noopener\">I realize that some projects require collaboration, and our team&hellip;</a></h6></td><td><details><summary>3.05</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    br:&#13;      score: 0&#13;      elementCount: 2&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 168&#13;  wordValue: 0.1&#13;  result: 2.05&#13;</pre></details></td><td>1</td><td>1</td><td>3.83</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2292573891\" target=\"_blank\" rel=\"noopener\">https://t.me/UbiquityOS is ready to be used.</a></h6></td><td><details><summary>1.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.99</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2322888727\" target=\"_blank\" rel=\"noopener\">Perhaps there is an opportunity to use Telegram apps to solve th&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.504</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2339532994\" target=\"_blank\" rel=\"noopener\">It seems that our base rate multiplier for priority levels must &hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.567</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2436500670\" target=\"_blank\" rel=\"noopener\">@gentlementlegen i understand theres been more set up required i&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.096</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2439741668\" target=\"_blank\" rel=\"noopener\">@gentlementlegen You need to implement a fix</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.548</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2505374215\" target=\"_blank\" rel=\"noopener\">I've never seen a summary posted are you sure this is implemente&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.05</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#pullrequestreview-2299168003\" target=\"_blank\" rel=\"noopener\">Cool stuff for sure. My main problem is the database dependency.&hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.576</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#pullrequestreview-2304365806\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/user-attachments/assets/61ab28b6-2d9&hellip;</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.378</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756072881\" target=\"_blank\" rel=\"noopener\">Why do you need a database? Just use the APIs as a database this&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.671</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756073586\" target=\"_blank\" rel=\"noopener\">All Telegram related features need the &#96;TELEGRAM_&#96; prefi&hellip;</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.916</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756074243\" target=\"_blank\" rel=\"noopener\">Is this just for local testing?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.554</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756074471\" target=\"_blank\" rel=\"noopener\">Perhaps this type should be resolved</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.554</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756076282\" target=\"_blank\" rel=\"noopener\">Maybe the types should be renamed to say telegram</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.163</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756077422\" target=\"_blank\" rel=\"noopener\">I saw a nice object in another plug-in where I think you can imp&hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.806</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756077909\" target=\"_blank\" rel=\"noopener\">I think we should look this up based on the ID</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.024</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756078346\" target=\"_blank\" rel=\"noopener\">What is api hash</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.197</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756079320\" target=\"_blank\" rel=\"noopener\">Why db necessary</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.9</td><td>3</td><td>1.161</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756081023\" target=\"_blank\" rel=\"noopener\">Pretty interesting that you're using markdown syntax in your com&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.476</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756081509\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.2</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756084578\" target=\"_blank\" rel=\"noopener\">Why generator?</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.8</td><td>3</td><td>0.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756085053\" target=\"_blank\" rel=\"noopener\">Pretty fancy.</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.279</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756085762\" target=\"_blank\" rel=\"noopener\">Why price label? What is this used for? I'm not really understan&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.792</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756086924\" target=\"_blank\" rel=\"noopener\">Import directory syntax is interesting #root</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.242</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756087622\" target=\"_blank\" rel=\"noopener\">This fixes auth? Maybe KV is significantly more lightweight. We &hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.723</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756090078\" target=\"_blank\" rel=\"noopener\">What do we need this for?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.896</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756090402\" target=\"_blank\" rel=\"noopener\">We should remove the database dependency</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>1.998</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756092447\" target=\"_blank\" rel=\"noopener\">Very curious to experience this and see if the vibe is as expect&hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.712</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756093851\" target=\"_blank\" rel=\"noopener\">Pretty interesting and wild architecture where we're able to pro&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.809</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756691376\" target=\"_blank\" rel=\"noopener\">That makes sense I just couldn't understand your logic. I recall&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 90&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.8</td><td>3</td><td>8.136</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756693261\" target=\"_blank\" rel=\"noopener\">I suppose make a mental note of this and remove if we aren't usi&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.46</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1756695337\" target=\"_blank\" rel=\"noopener\">I think it deletes from inbox. Other services, like Instagram, y&hellip;</a></h6></td><td><details><summary>2.31</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 46&#13;  wordValue: 0.1&#13;  result: 2.31&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.258</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1759653749\" target=\"_blank\" rel=\"noopener\">I think all these secrets prefixes need to include telegram</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.736</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1759653979\" target=\"_blank\" rel=\"noopener\">What is this? You need to include prefixes for context, like tel&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.096</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1760211532\" target=\"_blank\" rel=\"noopener\">Why do you need the repo name? Can't this be dynamically read?</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.835</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1764335458\" target=\"_blank\" rel=\"noopener\">Does it make sense to make the \"telegram kernel\" a separate gith&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.145</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1766089679\" target=\"_blank\" rel=\"noopener\">As I understand, the initial webhook receiver for this system is&hellip;</a></h6></td><td><details><summary>2.41</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 52&#13;  wordValue: 0.1&#13;  result: 2.41&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.368</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1767887848\" target=\"_blank\" rel=\"noopener\">Seems like a solution not sure if the most elegant @gentlementle&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.1</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1778133794\" target=\"_blank\" rel=\"noopener\">I just realized but isn't this considered a new kernel? Does it &hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.97</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2325283179\" target=\"_blank\" rel=\"noopener\">Let's do individual chat rooms instead of a group with topics. T&hellip;</a></h6></td><td><details><summary>2.54</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 62&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.748</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2325306947\" target=\"_blank\" rel=\"noopener\">Why not make some sort of GitHub actions based micro service tha&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.04</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2325975416\" target=\"_blank\" rel=\"noopener\">Eventually the bot should reply to messages on Telegram, so buil&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.696</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2336535375\" target=\"_blank\" rel=\"noopener\">You can try ban and unban if it's the only option.</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.268</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2336597208\" target=\"_blank\" rel=\"noopener\">You should test it</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.684</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2336790474\" target=\"_blank\" rel=\"noopener\">Why is the chat permanently inaccessible after the users are kic&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 75&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.802</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2346066747\" target=\"_blank\" rel=\"noopener\">Sure. Looking forward to testing now. Resolve the problems I ide&hellip;</a></h6></td><td><details><summary>2.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.279</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2374771393\" target=\"_blank\" rel=\"noopener\">Using [YAML anchors](https://github.com/ubiquity-os-marketplace/&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.464</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2375895379\" target=\"_blank\" rel=\"noopener\">Just focus on this no other tasks. You have too many pulls open &hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.248</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2377296690\" target=\"_blank\" rel=\"noopener\">Fix knip and delete the tests so you can pass CI Then merge an&hellip;</a></h6></td><td><details><summary>3.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.8</td><td>3</td><td>9.672</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2378860805\" target=\"_blank\" rel=\"noopener\">Can you get this running in production today?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.44</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2378975170\" target=\"_blank\" rel=\"noopener\">Every repo here automatically deploys to our Cloudflare Workers &hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.088</td></tr></tbody></table></details>"},"Immanuel-john":{"total":0,"userId":20478067,"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2"}]},"anonyphoenix":{"total":0,"userId":174886611,"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2"}]},"gentlementlegen":{"total":236.592,"userId":9807008,"comments":[{"id":2436508540,"content":"I spent quite some time on the setup because it is complex and @Keyrxng didn't have enough access to the configuration or the Cloudflare, but to be honest I didn't code anything in here.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2436508540","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.586,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":55.145000000000024,"syllables":49,"sentences":1,"score":0.9514500000000002},"multiplier":1,"relevance":0.7}},{"id":2436535054,"content":"Not the first time this error pops up, I wonder if it is just OpenAI not returning the proper JSON response or the logic being flawed.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2436535054","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.007,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":66.56038461538463,"syllables":35,"sentences":1,"score":0.9343961538461536},"multiplier":1,"relevance":0.3}},{"id":2349504995,"content":"We will need to add the manifest action later on for this to have the configuration checked by the kernel.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#pullrequestreview-2349504995","commentType":"PULL_COLLABORATOR","score":{"reward":3.438,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":63.86500000000004,"syllables":29,"sentences":1,"score":0.9613499999999996},"multiplier":1,"relevance":0.6}},{"id":1767897874,"content":"Instead of having 2 entry points in the workflow, couldn't we make this as a worker which is capable to forward events to its own Actions? Not sure if I understand the problem properly.\r\n```yml\r\nplugins:\r\n  - uses: https://telegram-bot.worker\r\n    with:\r\n      - actionCallback: \"ubiquibot/telegram-bot@development\"\r\n```\r\nHaving two entries work, just makes the configuration less user friendly because it would be easy to forget one. But if that's a better solution then it's fine.\r\n---\r\nI realize that indeed the worker might not be able to spawn an Action run, I never tried with this scenario.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1767897874","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":9.099,"formatting":{"content":{"p":{"score":0,"elementCount":3},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":86,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":68.37932558139536,"syllables":123,"sentences":5,"score":0.9162067441860464},"multiplier":1,"relevance":0.9}},{"id":1770734888,"content":"2 entries make sense then, just don't forget to document this in the readme.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1770734888","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":3.108,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":84.45000000000003,"syllables":19,"sentences":1,"score":0.7554999999999997},"multiplier":1,"relevance":0.7}},{"id":1778062748,"content":"You deleted the `worker-delete` and `worker-deploy` but isn't there supposed to be a worker + action?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1778062748","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":3.408,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":83.85357142857143,"syllables":18,"sentences":1,"score":0.7614642857142857},"multiplier":1,"relevance":0.8}},{"id":1778320676,"content":"If we gonna deploy the worker let's have the script as well, helps QA too.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1778320676","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":3.234,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":90.13250000000001,"syllables":19,"sentences":1,"score":0.6986749999999999},"multiplier":1,"relevance":0.7}},{"id":1782045365,"content":"I also noticed the `compute` does not show the payload received anymore, any reason for this?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1782045365","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":3.255,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":67.53000000000003,"syllables":22,"sentences":1,"score":0.9246999999999997},"multiplier":1,"relevance":0.7}},{"id":1782144968,"content":"```suggestion\r\nyarn supabase start\r\n```","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1782144968","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,216 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/kernel-telegram`\n \n-## Prerequisites\n+A Telegram bridge for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bridge Components](#telegram-bridge-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bridge Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: With a dual-scoped configuration we target both the Worker and Workflow instances, enabling seamless integration with Ubiquity OS.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of three key sections: `botSettings`, `mtProtoSettings`, and `storageSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n+\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bridge` > `Collaborators & teams` to add the account as an admin first if needed.\n+\n+The environment variables are stored in the following locations:\n+\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n+\n+##### Environment Variable Sections:\n+\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+\n+```typescript\n+interface TELEGRAM_BOT_ENV {\n+  botSettings: {\n+    TELEGRAM_BOT_TOKEN: string; // Telegram Bot Token from BotFather\n+    TELEGRAM_BOT_WEBHOOK: string; // Cloudflare Worker URL\n+    TELEGRAM_BOT_WEBHOOK_SECRET: string; // Cloudflare Worker Secret\n+    TELEGRAM_BOT_ADMINS: number[]; // Telegram User IDs\n+  };\n+  mtProtoSettings: {\n+    TELEGRAM_APP_ID: number; // Telegram App ID\n+    TELEGRAM_API_HASH: string; // Telegram API Hash\n+  };\n+  storageSettings: {\n+    SUPABASE_URL: string; // Supabase URL\n+    SUPABASE_SERVICE_KEY: string; // Supabase Service Key\n+  };\n+}\n ```\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+#### Telegram Configuration\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+1. Create a new bot using [BotFather](https://t.me/BotFather).\n+2. Add your `TELEGRAM_BOT_TOKEN`, `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, and `TELEGRAM_BOT_ADMINS` to the environment variables.\n+3. Use [Smee.io](https://smee.io/new) to create a webhook and add the URL as `TELEGRAM_BOT_WEBHOOK`.\n+4. Generate a secret for `TELEGRAM_BOT_WEBHOOK_SECRET` to verify webhook requests.\n \n-## Testing a plugin\n+#### GitHub Configuration\n \n-### Worker Plugins\n+1. Ensure your Ubiquity OS Kernel is set up.\n+2. Configure the plugin in your private organization’s repository:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+These URLs **do not** contain url paths, only the domain. This is because as standard, the main entry (`/`) is used for github events and the `/telegram` path is used for Telegram events which is set via the bot's `/setwebhook` command or by worker environment variable.\n \n-```ts\n-await fetch(\"http://localhost:4000/\", {\n-  method: \"POST\",\n-  headers: {\n-    \"Content-Type\": \"application/json\",\n-  },\n-  body: JSON.stringify({\n-    stateId: \"\",\n-    eventName: \"\",\n-    eventPayload: \"\",\n-    settings: \"\",\n-    ref: \"\",\n-    authToken: \"\",\n-  }),\n-});\n+```yaml\n+plugins:\n+  - uses:\n+      - plugin: https://cloudflare-worker-url.dev\n+        with:\n+          botId: 00000000\n+  - uses:\n+      - plugin: http://localhost:3000\n+        with:\n+          botId: 00000000\n ```\n \n-A full example can be found [here](https://github.com/ubiquibot/assistive-pricing/blob/623ea3f950f04842f2d003bda3fc7b7684e41378/tests/http/request.http).\n+#### Supabase Configuration\n \n-#### Deploying the Worker\n-For testing purposes, the worker can be deployed through the Worker Deploy and Worker Delete workflows. It requires to \n-create a personal [Cloudflare Account](https://www.cloudflare.com/), and fill the `CLOUDFLARE_ACCOUNT_ID` and `CLOUDFLARE_API_TOKEN` within your \n-GitHub Action Secrets.\n+1. Create or use an existing Supabase project.\n+2. Run the migration or copypaste the SQL migration file from `./supabase/migrations` in the Supabase dashboard.\n+3. Add your `SUPABASE_URL` and `SUPABASE_SERVICE_KEY` to your environment variables.\n \n-### Action Plugins\n+##### Supabase Commands\n \n-- Ensure the kernel is running and listening for events.\n-- Fire an event in/to the repo where the kernel is installed. This can be done in a number of ways, the easiest being via the GitHub UI or using the GitHub API, such as posting a comment, opening an issue, etc in the org/repo where the kernel is installed.\n-- The kernel will process the event and dispatch it using the settings defined in your `.ubiquibot-config.yml`.\n-- The `compute.yml` workflow will run and execute your plugin's logic.\n-- You can view the logs in the Actions tab of your repo.\n+- To start the Supabase database locally, run the following command:\n+```bash\n+yarn supabase db start","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.5}},{"id":2382581003,"content":"@Keyrxng I'll try to set this up locally for testing. First remarks:\r\n- `supabase` is missing from `devDependencies`\r\n- you say `The `TELEGRAM_BOT_ENV` is a single JSON object` so shall I serialize all the values as a string and put it in the env? the `yarn setup-env` doesn't seem to take care of this part","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382581003","commentType":"PULL_COLLABORATOR","score":{"reward":7.32,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":3,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":84.45000000000003,"syllables":57,"sentences":3,"score":0.7554999999999997},"multiplier":1,"relevance":0.8}},{"id":2382702318,"content":"@Keyrxng I just figured out that the script would keep asking me for my PAT because I had a typo on the `owner/repo` path value. Also `npm install -g supabase` is not supported (cf [here](https://github.com/supabase/cli?tab=readme-ov-file#getting-started)), you have different installation steps for each distrib which is why I think it's more convenient to have it in the packages (also everyone would use the same version). Also you didn't include the `config.toml` so `supabase start` won't work, I don't think that's intended.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382702318","commentType":"PULL_COLLABORATOR","score":{"reward":12.393,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":77,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":70.91320346320347,"syllables":100,"sentences":3,"score":0.8908679653679653},"multiplier":1,"relevance":0.9}},{"id":2382720323,"content":"If you have a way to show some warning / error that either the path specified does not exist or that the key doesn't have the required authorization that would be great haha, spend some time wondering why was this happening.\r\nI can continue once you upload the `config.toml` so I can start a supabase instance.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382720323","commentType":"PULL_COLLABORATOR","score":{"reward":6.699,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":55,"wordValue":0.1,"result":2.46},"readability":{"fleschKincaid":60.48250000000003,"syllables":77,"sentences":2,"score":0.9951749999999997},"multiplier":1,"relevance":0.7}},{"id":2382880582,"content":"Also note that `init.sql` is not a valid name for a migration file because there is no timestamp (should be \"`timestamp_name.sql`\").","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382880582","commentType":"PULL_COLLABORATOR","score":{"reward":4.392,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":67.32894736842107,"syllables":27,"sentences":1,"score":0.9267105263157893},"multiplier":1,"relevance":0.8}},{"id":2382910200,"content":"@Keyrxng Why not just adding a timestamp? `supabase migration new init` will get you covered. Also the next problem I am facing right now is:\r\n```\r\n[2024-09-30T20:19:53.146] [INFO] - [Signed in successfully as Mentlegen | Ubiquity DAO]\r\n        ⚠ Failed to log in:\r\n        ⚠ {\r\n            \"err\": {},\r\n            \"caller\": \"AuthHandler.smsLogin\"\r\n          }\r\n        ⚠   ↳  main (\\telegram-bridge\\src\\bot\\mtproto-api\\bot\\scripts\\sms-auth\\sms-auth.ts:10:3)\r\n```\r\nwhile running `sms-auth`.\r\n---\r\nNever mind I understood that it fails to insert a row in Supabase because the migration never ran.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382910200","commentType":"PULL_COLLABORATOR","score":{"reward":7.506,"formatting":{"content":{"p":{"score":0,"elementCount":3},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":72.62637195121953,"syllables":60,"sentences":4,"score":0.8737362804878047},"multiplier":1,"relevance":0.9}},{"id":2382949726,"content":"The `seed.sql` purpose is to add some data inside the db on start. Migrations are used to define and modify the schemas shape. If we later need to change, add, remove tables we will need migrations anyway, so why not just adding a timestamp to your file name? Adding it solved my issue, I am successfully logged in. I would also advise to add `yarn add -DE smee-client` to have `smee` up and ready for the project, and update wrangler to the latest version to avoid warnings.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382949726","commentType":"PULL_COLLABORATOR","score":{"reward":9.045,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":81,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":69.23644444444446,"syllables":116,"sentences":5,"score":0.9076355555555554},"multiplier":1,"relevance":0.9}},{"id":2382992248,"content":"It stopped me from logging in because the migration for `init` never ran so the table didn't exist so adding the entry into Supabase failed when running the script.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382992248","commentType":"PULL_COLLABORATOR","score":{"reward":4.998,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":54.87586206896553,"syllables":42,"sentences":1,"score":0.9487586206896553},"multiplier":1,"relevance":0.7}},{"id":2383038903,"content":"I guess you are using windows if you get an error with the healthcheck. You have to opt out from the analytics in the toml and everything will be running.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2383038903","commentType":"PULL_COLLABORATOR","score":{"reward":4.935,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":75.99000000000002,"syllables":41,"sentences":2,"score":0.8400999999999997},"multiplier":1,"relevance":0.7}},{"id":2384671856,"content":"@Keyrxng I think I have the full setup, I changed my configuration file and all that the kernel does when I try to use the command `/myid` is `No handler found for event issue_comment`. What am I doing wrong?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2384671856","commentType":"PULL_COLLABORATOR","score":{"reward":5.736,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":84.845,"syllables":40,"sentences":2,"score":0.75155},"multiplier":1,"relevance":0.8}},{"id":2392777073,"content":"I think having the full list of steps numbered that ensure a successful setup would be enough. Sorry I'll test again the setup, working on multiple things.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2392777073","commentType":"PULL_COLLABORATOR","score":{"reward":4.158,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":68.74642857142858,"syllables":41,"sentences":2,"score":0.9125357142857142},"multiplier":1,"relevance":0.6}},{"id":2393158325,"content":"I confirm it works. I got a room chat created on issue creation:\r\n<img width=\"337\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3fd8521f-d99f-4d4e-8634-8985fc210a42\">\r\nhttps://github.com/Meniole/telegram-bridge/issues/4","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2393158325","commentType":"PULL_COLLABORATOR","score":{"reward":8.946,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":79.19776315789476,"syllables":53,"sentences":4,"score":0.8080223684210525},"multiplier":1,"relevance":0.7}},{"id":2393162047,"content":"@Keyrxng Could you add a migration script and type generation script similar to [here](https://github.com/ubiquity-os-marketplace/text-vector-embeddings/blob/development/.github/workflows/database.yml)?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2393162047","commentType":"PULL_COLLABORATOR","score":{"reward":6.648,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":65.72500000000001,"syllables":21,"sentences":1,"score":0.9427499999999999},"multiplier":1,"relevance":0.8}},{"id":2394962973,"content":"@Keyrxng then that is fine.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2394962973","commentType":"PULL_COLLABORATOR","score":{"reward":0.621,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2317153392,"effect":{"addition":2682,"deletion":335},"reward":90.51,"priority":3},{"reviewId":2332832259,"effect":{"addition":353,"deletion":420},"reward":23.19,"priority":3},{"reviewId":2339015747,"effect":{"addition":164,"deletion":38},"reward":6.06,"priority":3},{"reviewId":2349504995,"effect":{"addition":6,"deletion":4},"reward":0.3,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 236.592 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>120.06</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>7.593</td></tr><tr><td>Review</td><td>Comment</td><td>20</td><td>108.939</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2\" target=\"_blank\" rel=\"noopener\">#2</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+2682 -335</td><td>3</td><td>90.51</td></tr><tr><td>+353 -420</td><td>3</td><td>23.19</td></tr><tr><td>+164 -38</td><td>3</td><td>6.06</td></tr><tr><td>+6 -4</td><td>3</td><td>0.3</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2436508540\" target=\"_blank\" rel=\"noopener\">I spent quite some time on the setup because it is complex and @&hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.586</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2436535054\" target=\"_blank\" rel=\"noopener\">Not the first time this error pops up, I wonder if it is just Op&hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.007</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#pullrequestreview-2349504995\" target=\"_blank\" rel=\"noopener\">We will need to add the manifest action later on for this to hav&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.438</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1767897874\" target=\"_blank\" rel=\"noopener\">Instead of having 2 entry points in the workflow, couldn't we ma&hellip;</a></h6></td><td><details><summary>2.64</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 86&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>0.9</td><td>3</td><td>9.099</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1770734888\" target=\"_blank\" rel=\"noopener\">2 entries make sense then, just don't forget to document this in&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.108</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1778062748\" target=\"_blank\" rel=\"noopener\">You deleted the &#96;worker-delete&#96; and &#96;worker-deploy&#&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.408</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1778320676\" target=\"_blank\" rel=\"noopener\">If we gonna deploy the worker let's have the script as well, hel&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.234</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1782045365\" target=\"_blank\" rel=\"noopener\">I also noticed the &#96;compute&#96; does not show the payload r&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.255</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1782144968\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionyarn supabase start&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.5</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382581003\" target=\"_blank\" rel=\"noopener\">@Keyrxng I'll try to set this up locally for testing. First rema&hellip;</a></h6></td><td><details><summary>2.49</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.32</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382702318\" target=\"_blank\" rel=\"noopener\">@Keyrxng I just figured out that the script would keep asking me&hellip;</a></h6></td><td><details><summary>3.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 77&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>3</td><td>12.393</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382720323\" target=\"_blank\" rel=\"noopener\">If you have a way to show some warning / error that either the p&hellip;</a></h6></td><td><details><summary>2.46</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 55&#13;  wordValue: 0.1&#13;  result: 2.46&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.699</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382880582\" target=\"_blank\" rel=\"noopener\">Also note that &#96;init.sql&#96; is not a valid name for a migr&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.392</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382910200\" target=\"_blank\" rel=\"noopener\">@Keyrxng Why not just adding a timestamp? &#96;supabase migratio&hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.9</td><td>3</td><td>7.506</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382949726\" target=\"_blank\" rel=\"noopener\">The &#96;seed.sql&#96; purpose is to add some data inside the db&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 81&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>3</td><td>9.045</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2382992248\" target=\"_blank\" rel=\"noopener\">It stopped me from logging in because the migration for &#96;ini&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.998</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2383038903\" target=\"_blank\" rel=\"noopener\">I guess you are using windows if you get an error with the healt&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.935</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2384671856\" target=\"_blank\" rel=\"noopener\">@Keyrxng I think I have the full setup, I changed my configurati&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.736</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2392777073\" target=\"_blank\" rel=\"noopener\">I think having the full list of steps numbered that ensure a suc&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.158</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2393158325\" target=\"_blank\" rel=\"noopener\">I confirm it works. I got a room chat created on issue creation:&hellip;</a></h6></td><td><details><summary>3.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.7</td><td>3</td><td>8.946</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2393162047\" target=\"_blank\" rel=\"noopener\">@Keyrxng Could you add a migration script and type generation sc&hellip;</a></h6></td><td><details><summary>2.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.648</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2394962973\" target=\"_blank\" rel=\"noopener\">@Keyrxng then that is fine.</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.621</td></tr></tbody></table></details>"},"whilefoo":{"total":234.228,"userId":139262667,"comments":[{"id":2276119619,"content":"I don't know what's going in the code, I'm guessing it's a lot of boilerplate. But the full picture I got is that when issue is created the kernel sends event to this plugin which creates a workroom and deletes it when the issue is deleted.\r\nI also saw there is a telegram webhook, what is the purpose of that?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#pullrequestreview-2276119619","commentType":"PULL_COLLABORATOR","score":{"reward":1.908,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":64,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":78.10979166666668,"syllables":81,"sentences":3,"score":0.8189020833333331},"multiplier":1,"relevance":0.2}},{"id":1758654223,"content":"use `unknown` type if is it's really unknown because it makes you check the object shape but `any` will allow you to do anything so it's more typesafe than `any`","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1758654223","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,14 +1,29 @@\n+import { Update } from \"@grammyjs/types\";\n import { Context } from \"./context\";\n+import { PluginInputs } from \"./plugin-inputs\";\n \n-/**\n- * Typeguards are most helpful when you have a union type and you want to narrow it down to a specific one.\n- * In other words, if `SupportedEvents` has multiple types then these restrict the scope\n- * of `context` to a specific event payload.\n- */\n-\n-/**\n- * Restricts the scope of `context` to the `issue_comment.created` payload.\n- */\n-export function isIssueCommentEvent(context: Context): context is Context<\"issue_comment.created\"> {\n-  return context.eventName === \"issue_comment.created\";\n+export function isIssueOpenedEvent(context: Context): context is Context<\"issues.opened\"> {\n+  return context.eventName === \"issues.opened\";\n+}\n+\n+// eslint-disable-next-line @typescript-eslint/no-explicit-any\n+export function isTelegramPayload(payload: any): payload is Update {","score":{"reward":6.399,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":66.5448275862069,"syllables":38,"sentences":1,"score":0.934551724137931},"multiplier":1,"relevance":0.9}},{"id":1763617777,"content":"you can also use Supabase CLI","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763617777","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.\n+5. **TELEGRAM_BOT_REPOSITORY_FULL_NAME**: A standalone single string value for the full repository name (e.g., `ubiquity-os/telegram-bot`).\n \n-```ts\n-await fetch(\"http://localhost:4000/\", {\n-  method: \"POST\",\n-  headers: {\n-    \"Content-Type\": \"application/json\",\n-  },\n-  body: JSON.stringify({\n-    stateId: \"\",\n-    eventName: \"\",\n-    eventPayload: \"\",\n-    settings: \"\",\n-    ref: \"\",\n-    authToken: \"\",\n-  }),\n-});\n+```typescript\n+interface TELEGRAM_BOT_ENV {\n+  botSettings: {\n+    TELEGRAM_BOT_TOKEN: string; // Telegram Bot Token from BotFather\n+    TELEGRAM_BOT_WEBHOOK: string; // Cloudflare Worker URL\n+    TELEGRAM_BOT_WEBHOOK_SECRET: string; // Cloudflare Worker Secret\n+    TELEGRAM_BOT_ADMINS: number[]; // Telegram User IDs\n+  };\n+  mtProtoSettings: {\n+    TELEGRAM_APP_ID: number; // Telegram App ID\n+    TELEGRAM_API_HASH: string; // Telegram API Hash\n+  };\n+  storageSettings: {\n+    SUPABASE_URL: string; // Supabase URL\n+    SUPABASE_SERVICE_KEY: string; // Supabase Service Key\n+  };\n+  ubiquityOsSettings: {\n+    APP_PRIVATE_KEY: string; // GitHub App Private Key\n+    APP_ID: number; // GitHub App ID\n+  };\n+}\n ```\n \n-A full example can be found [here](https://github.com/ubiquibot/assistive-pricing/blob/623ea3f950f04842f2d003bda3fc7b7684e41378/tests/http/request.http).\n+#### Supabase Configuration\n \n-#### Deploying the Worker\n-For testing purposes, the worker can be deployed through the Worker Deploy and Worker Delete workflows. It requires to \n-create a personal [Cloudflare Account](https://www.cloudflare.com/), and fill the `CLOUDFLARE_ACCOUNT_ID` and `CLOUDFLARE_API_TOKEN` within your \n-GitHub Action Secrets.\n+1. Create or use an existing Supabase project.\n+2. Copy and run the SQL migration file from `./supabase/migrations` in the Supabase dashboard.","score":{"reward":1.386,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.6}},{"id":1763618327,"content":"why is kernel's private key needed?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763618327","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":1.992,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.8}},{"id":1763681200,"content":"why is this transform needed? isn't it the same as setting T.Number() and T.String()?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763681200","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -4,14 +4,108 @@ import \"dotenv/config\";\n import { StandardValidator } from \"typebox-validators\";\n \n /**\n- * Define sensitive environment variables here.\n- *\n- * These are fed into the worker/workflow as `env` and are\n- * taken from either `dev.vars` or repository secrets.\n- * They are used with `process.env` but are type-safe.\n+ * We can restrict which updates the BotFather bot will receive.\n  */\n-export const envSchema = T.Object({});\n+const allowedUpdates = T.Object({\n+  message: T.String(),\n+  poll: T.String(),\n+  edited_message: T.String(),\n+  channel_post: T.String(),\n+  edited_channel_post: T.String(),\n+  business_connection: T.String(),\n+  business_message: T.String(),\n+  edited_business_message: T.String(),\n+  deleted_business_messages: T.String(),\n+  message_reaction_count: T.String(),\n+});\n \n-export const envValidator = new StandardValidator(envSchema);\n+const botSettings = T.Object({\n+  /**\n+   * The token for the bot given by the BotFather.\n+   */\n+  TELEGRAM_BOT_TOKEN: T.String(),\n+  /**\n+   * The url to forward updates to.\n+   */\n+  TELEGRAM_BOT_WEBHOOK: T.String(),\n+  /**\n+   * The secret to use when forwarding updates.\n+   */\n+  TELEGRAM_BOT_WEBHOOK_SECRET: T.String(),\n+  /**\n+   * Ids of the users who are allowed to use admin commands.\n+   */\n+  TELEGRAM_BOT_ADMINS: T.Transform(T.Unknown())\n+    .Decode((str) => (Array.isArray(str) ? str.map(Number) : [Number(str)]))\n+    .Encode((arr) => arr.toString()),\n+  /**\n+   * Which updates the bot should receive, defaults to all.\n+   */\n+  ALLOWED_UPDATES: T.Optional(T.Array(T.Enum(allowedUpdates))),\n+});\n \n-export type Env = StaticDecode<typeof envSchema>;\n+const mtProtoSettings = T.Object({\n+  /**\n+   * Obtained from https://my.telegram.org/apps\n+   */\n+  TELEGRAM_APP_ID: T.Transform(T.Union([T.String(), T.Number()]))\n+    .Decode((str) => Number(str))\n+    .Encode((num) => num.toString()),\n+  /**\n+   * Obtained from https://my.telegram.org/apps\n+   */\n+  TELEGRAM_API_HASH: T.String(),\n+});\n+\n+const ubiquityOsSettings = T.Object({\n+  /**\n+   * Your UbiquityOS app id\n+   */\n+  APP_ID: T.Transform(T.Unknown())\n+    .Decode((str) => Number(str))\n+    .Encode((num) => num.toString()),\n+  /**\n+   * Your UbiquityOS private key\n+   */\n+  APP_PRIVATE_KEY: T.Transform(T.Unknown())\n+    .Decode((str) => String(str))\n+    .Encode((str) => str),","score":{"reward":3.612,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":102.99183823529413,"syllables":20,"sentences":4,"score":1},"multiplier":1,"relevance":0.7}},{"id":1763687826,"content":"after parsing you should also validate it with the schema","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763687826","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -4,14 +4,108 @@ import \"dotenv/config\";\n import { StandardValidator } from \"typebox-validators\";\n \n /**\n- * Define sensitive environment variables here.\n- *\n- * These are fed into the worker/workflow as `env` and are\n- * taken from either `dev.vars` or repository secrets.\n- * They are used with `process.env` but are type-safe.\n+ * We can restrict which updates the BotFather bot will receive.\n  */\n-export const envSchema = T.Object({});\n+const allowedUpdates = T.Object({\n+  message: T.String(),\n+  poll: T.String(),\n+  edited_message: T.String(),\n+  channel_post: T.String(),\n+  edited_channel_post: T.String(),\n+  business_connection: T.String(),\n+  business_message: T.String(),\n+  edited_business_message: T.String(),\n+  deleted_business_messages: T.String(),\n+  message_reaction_count: T.String(),\n+});\n \n-export const envValidator = new StandardValidator(envSchema);\n+const botSettings = T.Object({\n+  /**\n+   * The token for the bot given by the BotFather.\n+   */\n+  TELEGRAM_BOT_TOKEN: T.String(),\n+  /**\n+   * The url to forward updates to.\n+   */\n+  TELEGRAM_BOT_WEBHOOK: T.String(),\n+  /**\n+   * The secret to use when forwarding updates.\n+   */\n+  TELEGRAM_BOT_WEBHOOK_SECRET: T.String(),\n+  /**\n+   * Ids of the users who are allowed to use admin commands.\n+   */\n+  TELEGRAM_BOT_ADMINS: T.Transform(T.Unknown())\n+    .Decode((str) => (Array.isArray(str) ? str.map(Number) : [Number(str)]))\n+    .Encode((arr) => arr.toString()),\n+  /**\n+   * Which updates the bot should receive, defaults to all.\n+   */\n+  ALLOWED_UPDATES: T.Optional(T.Array(T.Enum(allowedUpdates))),\n+});\n \n-export type Env = StaticDecode<typeof envSchema>;\n+const mtProtoSettings = T.Object({\n+  /**\n+   * Obtained from https://my.telegram.org/apps\n+   */\n+  TELEGRAM_APP_ID: T.Transform(T.Union([T.String(), T.Number()]))\n+    .Decode((str) => Number(str))\n+    .Encode((num) => num.toString()),\n+  /**\n+   * Obtained from https://my.telegram.org/apps\n+   */\n+  TELEGRAM_API_HASH: T.String(),\n+});\n+\n+const ubiquityOsSettings = T.Object({\n+  /**\n+   * Your UbiquityOS app id\n+   */\n+  APP_ID: T.Transform(T.Unknown())\n+    .Decode((str) => Number(str))\n+    .Encode((num) => num.toString()),\n+  /**\n+   * Your UbiquityOS private key\n+   */\n+  APP_PRIVATE_KEY: T.Transform(T.Unknown())\n+    .Decode((str) => String(str))\n+    .Encode((str) => str),\n+});\n+\n+const storageSettings = T.Object({\n+  /**\n+   * The supabase instance url for storing chats, sessions, etc.\n+   */\n+  SUPABASE_URL: T.String(),\n+  /**\n+   * The supabase service key for storing chats, sessions, etc.\n+   */\n+  SUPABASE_SERVICE_KEY: T.String(),\n+});\n+\n+const TELEGRAM_BOT_ENV = T.Object({\n+  botSettings,\n+  mtProtoSettings,\n+  ubiquityOsSettings,\n+  storageSettings,\n+});\n+\n+export const env = T.Object({\n+  TELEGRAM_BOT_REPOSITORY_FULL_NAME: T.Optional(T.String({ examples: [\"owner/repo\"], default: \"ubiquibot/telegram-bot\" })),\n+  TELEGRAM_BOT_ENV: T.Transform(T.Union([T.String(), TELEGRAM_BOT_ENV]))\n+    .Decode((str) => {\n+      if (typeof str === \"string\") {\n+        const obj = JSON.parse(str) as StaticDecode<typeof TELEGRAM_BOT_ENV>;","score":{"reward":2.808,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":61.32500000000002,"syllables":16,"sentences":1,"score":0.9867499999999998},"multiplier":1,"relevance":0.8}},{"id":1763692786,"content":"why is this needed?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763692786","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,21 @@\n+import { Context } from \"../types\";\n+/**\n+ * This function is a utility that allows us to access deeply nested properties in an object\n+ * primarily for use with the context.payload object. It should not be overused and the developer\n+ * should be aware of the potential performance implications of using this function.\n+ *\n+ * Example usage:\n+ *\n+ * - `getDeepValue(context, \"payload.repository.owner.login\")` will return the owner\n+ * - `getDeepValue(context, [\"payload\", \"repository\", \"owner\", \"login\"])` will return the owner\n+ */\n+export function getDeepValue<TK extends PropertyKey, T extends Context = Context>(obj: T, path: string | string[]): TK {","score":{"reward":1.197,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1763701781,"content":"instead of accepting both telegram and kernel requests on the same path and trying to figure out which one is it, why not have a separate path like `/webhook/telegram` and `/webhook/kernel`?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763701781","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,70 +1,83 @@\n-import { Value } from \"@sinclair/typebox/value\";\n-import { plugin } from \"./plugin\";\n-import { Env, envValidator, pluginSettingsSchema, pluginSettingsValidator } from \"./types\";\n+import { Env, envValidator } from \"./types\";\n+import { isGithubPayload, isTelegramPayload } from \"./types/typeguards\";\n+import { handleGithubWebhook } from \"./handlers/github-webhook\";\n+import { handleTelegramWebhook } from \"./handlers/telegram-webhook\";\n import manifest from \"../manifest.json\";\n+import { handleUncaughtError } from \"./utils/errors\";\n+import { TelegramBotSingleton } from \"./types/telegram-bot-single\";\n+import { PluginContext } from \"./types/plugin-context-single\";\n+import { Value } from \"@sinclair/typebox/value\";\n \n export default {\n   async fetch(request: Request, env: Env): Promise<Response> {\n-    try {\n-      if (request.method === \"GET\") {\n-        const url = new URL(request.url);\n-        if (url.pathname === \"/manifest.json\") {\n-          return new Response(JSON.stringify(manifest), {\n-            headers: { \"content-type\": \"application/json\" },\n-          });\n-        }\n-      }\n-      if (request.method !== \"POST\") {\n-        return new Response(JSON.stringify({ error: `Only POST requests are supported.` }), {\n-          status: 405,\n-          headers: { \"content-type\": \"application/json\", Allow: \"POST\" },\n-        });\n-      }\n-      const contentType = request.headers.get(\"content-type\");\n-      if (contentType !== \"application/json\") {\n-        return new Response(JSON.stringify({ error: `Error: ${contentType} is not a valid content type` }), {\n-          status: 400,\n+    if (request.method === \"GET\") {\n+      const url = new URL(request.url);\n+      if (url.pathname === \"/manifest.json\") {\n+        return new Response(JSON.stringify(manifest), {\n           headers: { \"content-type\": \"application/json\" },\n         });\n       }\n+    }\n \n-      const webhookPayload = await request.json();\n-      const settings = Value.Decode(pluginSettingsSchema, Value.Default(pluginSettingsSchema, webhookPayload.settings));\n+    if (request.method !== \"POST\") {\n+      return new Response(JSON.stringify({ error: `Only POST requests are supported.` }), {\n+        status: 405,\n+        headers: { \"content-type\": \"application/json\", Allow: \"POST\" },\n+      });\n+    }\n+    const contentType = request.headers.get(\"content-type\");\n+    if (contentType !== \"application/json\") {\n+      return new Response(JSON.stringify({ error: `Error: ${contentType} is not a valid content type` }), {\n+        status: 400,\n+        headers: { \"content-type\": \"application/json\" },\n+      });\n+    }\n+    let payload;\n \n-      if (!pluginSettingsValidator.test(settings)) {\n-        const errors: string[] = [];\n-        for (const error of pluginSettingsValidator.errors(settings)) {\n-          console.error(error);\n-          errors.push(`${error.path}: ${error.message}`);\n-        }\n-        return new Response(JSON.stringify({ error: `Error: \"Invalid settings provided. ${errors.join(\"; \")}\"` }), {\n-          status: 400,\n-          headers: { \"content-type\": \"application/json\" },\n-        });\n+    try {\n+      payload = await request.clone().json();\n+    } catch (err) {\n+      return new Response(JSON.stringify({ error: \"Invalid JSON payload\", err }), {\n+        status: 400,\n+        headers: { \"content-type\": \"application/json\" },\n+      });\n+    }\n+    const envSettings = Value.Decode(envValidator.schema, Value.Default(envValidator.schema, env));\n+    if (!envValidator.test(envSettings)) {\n+      const errors: string[] = [];\n+      for (const error of envValidator.errors(envSettings)) {\n+        console.error(error);\n+        errors.push(`${error.path}: ${error.message}`);\n       }\n-      if (!envValidator.test(env)) {\n-        const errors: string[] = [];\n-        for (const error of envValidator.errors(env)) {\n-          console.error(error);\n-          errors.push(`${error.path}: ${error.message}`);\n-        }\n-        return new Response(JSON.stringify({ error: `Error: \"Invalid environment provided. ${errors.join(\"; \")}\"` }), {\n+      return new Response(JSON.stringify({ error: `Error: \"Invalid environment provided. ${errors.join(\"; \")}\"` }), {\n+        status: 400,\n+        headers: { \"content-type\": \"application/json\" },\n+      });\n+    }\n+\n+    // inits the worker with the telegram bot\n+    await TelegramBotSingleton.initialize(envSettings);\n+\n+    try {\n+      if (isGithubPayload(payload)) {\n+        // inits the worker with the plugin context for this call\n+        PluginContext.initialize(payload, envSettings);\n+        await handleGithubWebhook(request, envSettings);\n+      } else if (isTelegramPayload(payload)) {\n+        await handleTelegramWebhook(request, envSettings);\n+      } else {\n+        return new Response(JSON.stringify({ error: \"Invalid environment provided\" }), {","score":{"reward":5.712,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":63.62758620689657,"syllables":39,"sentences":1,"score":0.9637241379310343},"multiplier":1,"relevance":0.8}},{"id":1764732160,"content":"in the case of worker plugins you specify the URL in the config so it can have a custom path.\r\ni'm a bit confused now, why do we need a hono server and also a worker server?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1764732160","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,70 +1,83 @@\n-import { Value } from \"@sinclair/typebox/value\";\n-import { plugin } from \"./plugin\";\n-import { Env, envValidator, pluginSettingsSchema, pluginSettingsValidator } from \"./types\";\n+import { Env, envValidator } from \"./types\";\n+import { isGithubPayload, isTelegramPayload } from \"./types/typeguards\";\n+import { handleGithubWebhook } from \"./handlers/github-webhook\";\n+import { handleTelegramWebhook } from \"./handlers/telegram-webhook\";\n import manifest from \"../manifest.json\";\n+import { handleUncaughtError } from \"./utils/errors\";\n+import { TelegramBotSingleton } from \"./types/telegram-bot-single\";\n+import { PluginContext } from \"./types/plugin-context-single\";\n+import { Value } from \"@sinclair/typebox/value\";\n \n export default {\n   async fetch(request: Request, env: Env): Promise<Response> {\n-    try {\n-      if (request.method === \"GET\") {\n-        const url = new URL(request.url);\n-        if (url.pathname === \"/manifest.json\") {\n-          return new Response(JSON.stringify(manifest), {\n-            headers: { \"content-type\": \"application/json\" },\n-          });\n-        }\n-      }\n-      if (request.method !== \"POST\") {\n-        return new Response(JSON.stringify({ error: `Only POST requests are supported.` }), {\n-          status: 405,\n-          headers: { \"content-type\": \"application/json\", Allow: \"POST\" },\n-        });\n-      }\n-      const contentType = request.headers.get(\"content-type\");\n-      if (contentType !== \"application/json\") {\n-        return new Response(JSON.stringify({ error: `Error: ${contentType} is not a valid content type` }), {\n-          status: 400,\n+    if (request.method === \"GET\") {\n+      const url = new URL(request.url);\n+      if (url.pathname === \"/manifest.json\") {\n+        return new Response(JSON.stringify(manifest), {\n           headers: { \"content-type\": \"application/json\" },\n         });\n       }\n+    }\n \n-      const webhookPayload = await request.json();\n-      const settings = Value.Decode(pluginSettingsSchema, Value.Default(pluginSettingsSchema, webhookPayload.settings));\n+    if (request.method !== \"POST\") {\n+      return new Response(JSON.stringify({ error: `Only POST requests are supported.` }), {\n+        status: 405,\n+        headers: { \"content-type\": \"application/json\", Allow: \"POST\" },\n+      });\n+    }\n+    const contentType = request.headers.get(\"content-type\");\n+    if (contentType !== \"application/json\") {\n+      return new Response(JSON.stringify({ error: `Error: ${contentType} is not a valid content type` }), {\n+        status: 400,\n+        headers: { \"content-type\": \"application/json\" },\n+      });\n+    }\n+    let payload;\n \n-      if (!pluginSettingsValidator.test(settings)) {\n-        const errors: string[] = [];\n-        for (const error of pluginSettingsValidator.errors(settings)) {\n-          console.error(error);\n-          errors.push(`${error.path}: ${error.message}`);\n-        }\n-        return new Response(JSON.stringify({ error: `Error: \"Invalid settings provided. ${errors.join(\"; \")}\"` }), {\n-          status: 400,\n-          headers: { \"content-type\": \"application/json\" },\n-        });\n+    try {\n+      payload = await request.clone().json();\n+    } catch (err) {\n+      return new Response(JSON.stringify({ error: \"Invalid JSON payload\", err }), {\n+        status: 400,\n+        headers: { \"content-type\": \"application/json\" },\n+      });\n+    }\n+    const envSettings = Value.Decode(envValidator.schema, Value.Default(envValidator.schema, env));\n+    if (!envValidator.test(envSettings)) {\n+      const errors: string[] = [];\n+      for (const error of envValidator.errors(envSettings)) {\n+        console.error(error);\n+        errors.push(`${error.path}: ${error.message}`);\n       }\n-      if (!envValidator.test(env)) {\n-        const errors: string[] = [];\n-        for (const error of envValidator.errors(env)) {\n-          console.error(error);\n-          errors.push(`${error.path}: ${error.message}`);\n-        }\n-        return new Response(JSON.stringify({ error: `Error: \"Invalid environment provided. ${errors.join(\"; \")}\"` }), {\n+      return new Response(JSON.stringify({ error: `Error: \"Invalid environment provided. ${errors.join(\"; \")}\"` }), {\n+        status: 400,\n+        headers: { \"content-type\": \"application/json\" },\n+      });\n+    }\n+\n+    // inits the worker with the telegram bot\n+    await TelegramBotSingleton.initialize(envSettings);\n+\n+    try {\n+      if (isGithubPayload(payload)) {\n+        // inits the worker with the plugin context for this call\n+        PluginContext.initialize(payload, envSettings);\n+        await handleGithubWebhook(request, envSettings);\n+      } else if (isTelegramPayload(payload)) {\n+        await handleTelegramWebhook(request, envSettings);\n+      } else {\n+        return new Response(JSON.stringify({ error: \"Invalid environment provided\" }), {","score":{"reward":4.806,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":76.2342105263158,"syllables":50,"sentences":2,"score":0.8376578947368419},"multiplier":1,"relevance":0.6}},{"id":1764751081,"content":"when the plugin receives `issues.opened` event, is it just forwarding the event to the workflow or is it doing any other work? \r\nIf so, it doesn't make sense to just forward events when you can use workflows directly, for example you can just define both workflow and worker endpoints in the config, so there is not need for forwarding.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1764751081","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":8.802,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":59,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":60.74673728813562,"syllables":81,"sentences":2,"score":0.9925326271186438},"multiplier":1,"relevance":0.9}},{"id":1764764400,"content":"so you're trying to avoid this:\r\n```js\r\nif (!(\"repository\" in context.payload)) {\r\n  return\r\n}\r\nconst owner = context.payload.repository?.owner?.login;\r\nif (!owner) {\r\n  return\r\n}\r\n```\r\nbut I think `getDeepValue` reduces type safety because you have to specify the return type and can introduce bugs because you can make a typo and there won't be any warnings","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1764764400","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,21 @@\n+import { Context } from \"../types\";\n+/**\n+ * This function is a utility that allows us to access deeply nested properties in an object\n+ * primarily for use with the context.payload object. It should not be overused and the developer\n+ * should be aware of the potential performance implications of using this function.\n+ *\n+ * Example usage:\n+ *\n+ * - `getDeepValue(context, \"payload.repository.owner.login\")` will return the owner\n+ * - `getDeepValue(context, [\"payload\", \"repository\", \"owner\", \"login\"])` will return the owner\n+ */\n+export function getDeepValue<TK extends PropertyKey, T extends Context = Context>(obj: T, path: string | string[]): TK {","score":{"reward":6.576,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":54.722894736842136,"syllables":51,"sentences":1,"score":0.9472289473684213},"multiplier":1,"relevance":0.8}},{"id":1766511604,"content":"Yes\r\nActually the [kernel SDK](https://github.com/ubiquity/ubiquibot-kernel/blob/development/src/sdk/server.ts) uses Hono, although I haven't implemented the option to change the path, it can be implemented quickly. \r\nAnd the SDK returns the Hono app instance which means you can add additional HTTP handlers like in this example for the telegram webhooks\r\nIf you want to use Hono with Cloudflare workers you can just make a [default export](https://hono.dev/docs/getting-started/cloudflare-workers#_2-hello-world) of the Hono app and it should work out of the box","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1766511604","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,70 +1,83 @@\n-import { Value } from \"@sinclair/typebox/value\";\n-import { plugin } from \"./plugin\";\n-import { Env, envValidator, pluginSettingsSchema, pluginSettingsValidator } from \"./types\";\n+import { Env, envValidator } from \"./types\";\n+import { isGithubPayload, isTelegramPayload } from \"./types/typeguards\";\n+import { handleGithubWebhook } from \"./handlers/github-webhook\";\n+import { handleTelegramWebhook } from \"./handlers/telegram-webhook\";\n import manifest from \"../manifest.json\";\n+import { handleUncaughtError } from \"./utils/errors\";\n+import { TelegramBotSingleton } from \"./types/telegram-bot-single\";\n+import { PluginContext } from \"./types/plugin-context-single\";\n+import { Value } from \"@sinclair/typebox/value\";\n \n export default {\n   async fetch(request: Request, env: Env): Promise<Response> {\n-    try {\n-      if (request.method === \"GET\") {\n-        const url = new URL(request.url);\n-        if (url.pathname === \"/manifest.json\") {\n-          return new Response(JSON.stringify(manifest), {\n-            headers: { \"content-type\": \"application/json\" },\n-          });\n-        }\n-      }\n-      if (request.method !== \"POST\") {\n-        return new Response(JSON.stringify({ error: `Only POST requests are supported.` }), {\n-          status: 405,\n-          headers: { \"content-type\": \"application/json\", Allow: \"POST\" },\n-        });\n-      }\n-      const contentType = request.headers.get(\"content-type\");\n-      if (contentType !== \"application/json\") {\n-        return new Response(JSON.stringify({ error: `Error: ${contentType} is not a valid content type` }), {\n-          status: 400,\n+    if (request.method === \"GET\") {\n+      const url = new URL(request.url);\n+      if (url.pathname === \"/manifest.json\") {\n+        return new Response(JSON.stringify(manifest), {\n           headers: { \"content-type\": \"application/json\" },\n         });\n       }\n+    }\n \n-      const webhookPayload = await request.json();\n-      const settings = Value.Decode(pluginSettingsSchema, Value.Default(pluginSettingsSchema, webhookPayload.settings));\n+    if (request.method !== \"POST\") {\n+      return new Response(JSON.stringify({ error: `Only POST requests are supported.` }), {\n+        status: 405,\n+        headers: { \"content-type\": \"application/json\", Allow: \"POST\" },\n+      });\n+    }\n+    const contentType = request.headers.get(\"content-type\");\n+    if (contentType !== \"application/json\") {\n+      return new Response(JSON.stringify({ error: `Error: ${contentType} is not a valid content type` }), {\n+        status: 400,\n+        headers: { \"content-type\": \"application/json\" },\n+      });\n+    }\n+    let payload;\n \n-      if (!pluginSettingsValidator.test(settings)) {\n-        const errors: string[] = [];\n-        for (const error of pluginSettingsValidator.errors(settings)) {\n-          console.error(error);\n-          errors.push(`${error.path}: ${error.message}`);\n-        }\n-        return new Response(JSON.stringify({ error: `Error: \"Invalid settings provided. ${errors.join(\"; \")}\"` }), {\n-          status: 400,\n-          headers: { \"content-type\": \"application/json\" },\n-        });\n+    try {\n+      payload = await request.clone().json();\n+    } catch (err) {\n+      return new Response(JSON.stringify({ error: \"Invalid JSON payload\", err }), {\n+        status: 400,\n+        headers: { \"content-type\": \"application/json\" },\n+      });\n+    }\n+    const envSettings = Value.Decode(envValidator.schema, Value.Default(envValidator.schema, env));\n+    if (!envValidator.test(envSettings)) {\n+      const errors: string[] = [];\n+      for (const error of envValidator.errors(envSettings)) {\n+        console.error(error);\n+        errors.push(`${error.path}: ${error.message}`);\n       }\n-      if (!envValidator.test(env)) {\n-        const errors: string[] = [];\n-        for (const error of envValidator.errors(env)) {\n-          console.error(error);\n-          errors.push(`${error.path}: ${error.message}`);\n-        }\n-        return new Response(JSON.stringify({ error: `Error: \"Invalid environment provided. ${errors.join(\"; \")}\"` }), {\n+      return new Response(JSON.stringify({ error: `Error: \"Invalid environment provided. ${errors.join(\"; \")}\"` }), {\n+        status: 400,\n+        headers: { \"content-type\": \"application/json\" },\n+      });\n+    }\n+\n+    // inits the worker with the telegram bot\n+    await TelegramBotSingleton.initialize(envSettings);\n+\n+    try {\n+      if (isGithubPayload(payload)) {\n+        // inits the worker with the plugin context for this call\n+        PluginContext.initialize(payload, envSettings);\n+        await handleGithubWebhook(request, envSettings);\n+      } else if (isTelegramPayload(payload)) {\n+        await handleTelegramWebhook(request, envSettings);\n+      } else {\n+        return new Response(JSON.stringify({ error: \"Invalid environment provided\" }), {","score":{"reward":10.566,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":75,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":50.332500000000024,"syllables":105,"sentences":2,"score":0.9033250000000003},"multiplier":1,"relevance":0.6}},{"id":1766516363,"content":"Yes, exactly. I think it would simplify things and also you don't need the kernel's private key which makes it more secure.","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1766516363","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":4.305,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":81.85500000000002,"syllables":32,"sentences":2,"score":0.7814499999999999},"multiplier":1,"relevance":0.7}},{"id":1770608793,"content":"another option is:\r\n```yaml\r\nplugins:\r\n  - uses: [\"https://telegram-bot.worker\", \"ubiquibot/telegram-bot@development\"]\r\n    with:\r\n      - ...\r\n```\r\nbut this might break the kernel if there is a second plugin in the chain because the kernel waits for the first plugin's response and in this case it would get 2 responses","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1770608793","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":4.095,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":59.528648648648655,"syllables":48,"sentences":1,"score":0.9952864864864865},"multiplier":1,"relevance":0.5}},{"id":1774778409,"content":"you can avoid copy pasting by using [YAML anchors](https://support.atlassian.com/bitbucket-cloud/docs/yaml-anchors/)","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1774778409","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,91 +1,188 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/telegram-bot`\n \n-## Prerequisites\n+A dual-architecture Telegram bot for Ubiquity OS, uniquely combining Cloudflare Workers and GitHub Actions to deliver seamless integration with both Telegram and GitHub. This hybrid plugin is the first of its kind to support both worker and workflow functionality, running across Cloudflare V8 and Node.js environments for enhanced flexibility and performance across multiple runtimes.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Table of Contents\n+\n+- [High-Level Overview](#high-level-overview)\n+  - [Architecture Breakdown](#architecture-breakdown)\n+    - [Telegram Bot Components](#telegram-bot-components)\n+    - [Ubiquity OS Plugin](#ubiquity-os-plugin)\n+    - [Worker Instance](#worker-instance)\n+    - [Workflow Instance](#workflow-instance)\n+- [Getting Started](#getting-started)\n+  - [Prerequisites](#prerequisites)\n+  - [Installation](#installation)\n+    - [Environment Variables](#environment-variables)\n+    - [Supabase Configuration](#supabase-configuration)\n+    - [Telegram Configuration](#telegram-configuration)\n+    - [GitHub Configuration](#github-configuration)\n+  - [Usage](#usage)\n+  - [Commands](#commands)\n+- [Repository Structure](#repository-structure)\n+- [Considerations](#considerations)\n+\n+## High-Level Overview\n+\n+This bot operates in two parts:\n+\n+- **Bot API**: Hosted on Cloudflare Workers, interacts with the Telegram Bot API.\n+- **Client API**: Runs in a Node.js environment (GitHub Actions) and interacts with the MTProto API via a Telegram User account.\n+\n+### Architecture Breakdown\n+\n+#### Telegram Bot Components\n+\n+- **Worker Instance**: Runs Bot API methods on Cloudflare Workers. Handles bot commands, events, and chat interactions using a Telegram Bot created via BotFather.\n+- **Client Instance**: Runs Client API methods on GitHub Actions, responsible for features unavailable to the bot, like creating groups or sending messages as a user.\n+\n+#### Ubiquity OS Plugin\n+\n+- **Worker Plugin**: This is a worker plugin with workflow capabilities, allowing it to run on both Cloudflare Workers and GitHub Actions.\n+- **Actions as a Feature**: By forwarding worker requests to the workflows, we enable collaboration between the two, maximizing functionality.\n+- **Hybrid Architecture**: Combines the best of both worlds, leveraging Cloudflare Workers for speed and GitHub Actions for long-running features or those that require a Node.js environment.\n+- **Bridges the Gap**: Connects our GitHub events to our Telegram bot instantaneously, enabling real-time interactions and seamless integration.\n+\n+### Worker Instance\n+\n+1. **Hono App**: Handles webhook payloads from Telegram, manages bot commands and event reactions.\n+2. **GrammyJS**: Utilizes GrammyJS for interacting with the Telegram Bot API, responsible for sending/editing messages, handling commands, and more. Learn more [here](https://grammy.dev).\n+\n+### Workflow Instance\n+\n+1. **NodeJS Server**: Handles tasks beyond the bot’s capabilities, such as managing Telegram groups or sending direct messages.\n+2. **GramJS**: Built on top of [Telethon](https://docs.telethon.dev/en/stable/), interacts with the MTProto API for more advanced Telegram functionalities. Learn more [here](https://gram.js.org/beta/).\n \n ## Getting Started\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+### Prerequisites\n \n-## Creating a new plugin\n+- Personal Telegram account\n+- Telegram Bot Token (via BotFather)\n+- Ubiquity OS Kernel\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+### Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n+#### Environment Variables\n \n-- Your plugin config should look similar to this:\n+The `TELEGRAM_BOT_ENV` is a single JSON object that encapsulates all necessary environment variables for the bot's operation. It consists of four key sections: `botSettings`, `mtProtoSettings`, `storageSettings`, and `ubiquityOsSettings`.\n \n-```yml\n-plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n-      - plugin: http://localhost:4000\n-        with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-```\n+You can set up your environment variables by using the provided utility script:\n+\n+- Run `yarn setup-env`, which prompts you to enter each value via the CLI. The values will be serialized and stored both locally and in your repository secrets.\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n+- **GITHUB_PAT_TOKEN**: Create a classic personal access token (PAT) with the `repo` scope. Set the expiry to 24 hours. This token will be used to generate repository secrets for the environment variables and will be removed from `.env` after the secrets are saved.\n+- **Account Permission**: The account in which the PAT is associated with _must_ be an `admin` of the repository to be able to save secrets this way. Visit your repository settings `telegram-bot` > `Collaborators & teams` to add the account as an admin first if needed.\n \n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n+The environment variables are stored in the following locations:\n \n-## Testing a plugin\n+- `.env` file: Required to run the `yarn sms-auth` command.\n+- `.dev.vars` file: For the Cloudflare Worker instance.\n+- **GitHub Secrets**: Used by the GitHub Actions workflow.\n \n-### Worker Plugins\n+##### Environment Variable Sections:\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n+1. **botSettings**: Contains bot-specific settings like `TELEGRAM_BOT_TOKEN`, `TELEGRAM_BOT_WEBHOOK_SECRET`, etc.\n+2. **mtProtoSettings**: Contains settings for the MTProto API like `TELEGRAM_APP_ID`, `TELEGRAM_API_HASH`, etc.\n+3. **storageSettings**: Contains settings for the Supabase database like `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, etc.\n+4. **ubiquityOsSettings**: Contains settings for the UbiquityOS Kernel like `APP_PRIVATE_KEY`, `APP_ID`, etc.","score":{"reward":4.248,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":66.10000000000002,"syllables":14,"sentences":1,"score":0.9389999999999997},"multiplier":1,"relevance":0.6}},{"id":2325886100,"content":"Why does the worker need to start the workflow, the kernel can directly start the workflow? Actually is there any reason why even use a worker if we move everything to the workflow?","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2325886100","commentType":"PULL_COLLABORATOR","score":{"reward":6.831,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":67.03295454545456,"syllables":48,"sentences":2,"score":0.9296704545454544},"multiplier":1,"relevance":0.9}},{"id":2376972585,"content":"it's not a feature of the kernel, but of YAML 1.2, which our parser supports","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2376972585","commentType":"PULL_COLLABORATOR","score":{"reward":1.422,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":93.70161764705884,"syllables":21,"sentences":2,"score":0.6629838235294117},"multiplier":1,"relevance":0.3}},{"id":2378868001,"content":"You can do like this:\r\n```yaml\r\nplugins:\r\n    - uses:\r\n      - plugin: https://test.workers.dev\r\n        with: &with\r\n          botId: 123456\r\n    - uses:\r\n      - plugin: ubiquity-os/test\r\n        with: *with\r\n```","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2378868001","commentType":"PULL_COLLABORATOR","score":{"reward":1.449,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":2397834927,"content":"@Keyrxng I get this error when I put a label on an issue:\r\n```js\r\n[2024-10-07T20:27:25.477] [INFO] - [Running gramJS version 2.24.10]\r\n[2024-10-0[7](https://github.com/ubiquity-whilefoo/telegram-bot/actions/runs/11223403676/job/31197960956#step:6:8)T20:27:25.480] [INFO] - [Connecting to 149.154.167.91:80/TCPFull...]\r\n[2024-10-07T20:27:25.5[8](https://github.com/ubiquity-whilefoo/telegram-bot/actions/runs/11223403676/job/31197960956#step:6:9)3] [INFO] - [Connection to 149.154.167.91:80/TCPFull complete!]\r\n[2024-10-07T20:27:25.584] [INFO] - [Using LAYER 184 for initial connect]\r\n\t› Creating chat with name: \r\n\t› {\r\n\t    \"chatName\": \"@ubiquibot-whilefoo-testing/testing#1\",\r\n\t    \"caller\": \"createChat\"\r\n\t  }\r\n\t›   ↳  <anonymous> (/home/runner/work/telegram-bot/telegram-bot/src/handlers/workflow-proxy.ts:28:[9](https://github.com/ubiquity-whilefoo/telegram-bot/actions/runs/11223403676/job/31197960956#step:6:10))\r\n\t⚠ Error in creating chat: \r\n\t⚠ {\r\n\t    \"er\": {},\r\n\t    \"caller\": \"createChat\"\r\n\t  }\r\n\t⚠   ↳  <anonymous> (/home/runner/work/telegram-bot/telegram-bot/src/handlers/workflow-proxy.ts:28:9)\r\n```\r\nhttps://github.com/ubiquity-whilefoo/telegram-bot/actions/runs/11223403676/job/31197960956","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2397834927","commentType":"PULL_COLLABORATOR","score":{"reward":3.204,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":68.93950000000002,"syllables":37,"sentences":2,"score":0.9106049999999998},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2276119619,"effect":{"addition":1146,"deletion":246},"reward":41.76,"priority":3},{"reviewId":2302815314,"effect":{"addition":2181,"deletion":472},"reward":79.59,"priority":3},{"reviewId":2310381591,"effect":{"addition":743,"deletion":309},"reward":31.56,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 234.228 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>152.91</td></tr><tr><td>Review</td><td>Comment</td><td>19</td><td>81.318</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2\" target=\"_blank\" rel=\"noopener\">#2</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1146 -246</td><td>3</td><td>41.76</td></tr><tr><td>+2181 -472</td><td>3</td><td>79.59</td></tr><tr><td>+743 -309</td><td>3</td><td>31.56</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#pullrequestreview-2276119619\" target=\"_blank\" rel=\"noopener\">I don't know what's going in the code, I'm guessing it's a lot o&hellip;</a></h6></td><td><details><summary>2.55</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 64&#13;  wordValue: 0.1&#13;  result: 2.55&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.908</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1758654223\" target=\"_blank\" rel=\"noopener\">use &#96;unknown&#96; type if is it's really unknown because it &hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.399</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763617777\" target=\"_blank\" rel=\"noopener\">you can also use Supabase CLI</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.386</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763618327\" target=\"_blank\" rel=\"noopener\">why is kernel's private key needed?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.992</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763681200\" target=\"_blank\" rel=\"noopener\">why is this transform needed? isn't it the same as setting T.Num&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.612</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763687826\" target=\"_blank\" rel=\"noopener\">after parsing you should also validate it with the schema</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.808</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763692786\" target=\"_blank\" rel=\"noopener\">why is this needed?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.197</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1763701781\" target=\"_blank\" rel=\"noopener\">instead of accepting both telegram and kernel requests on the sa&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.712</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1764732160\" target=\"_blank\" rel=\"noopener\">in the case of worker plugins you specify the URL in the config &hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.806</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1764751081\" target=\"_blank\" rel=\"noopener\">when the plugin receives &#96;issues.opened&#96; event, is it ju&hellip;</a></h6></td><td><details><summary>2.51</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 59&#13;  wordValue: 0.1&#13;  result: 2.51&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.802</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1764764400\" target=\"_blank\" rel=\"noopener\">so you're trying to avoid this:&#96;&#96;&#96;jsif (!(\"repos&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.576</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1766511604\" target=\"_blank\" rel=\"noopener\">YesActually the [kernel SDK](https://github.com/ubiquity/ubiqu&hellip;</a></h6></td><td><details><summary>4.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 75&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.6</td><td>3</td><td>10.566</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1766516363\" target=\"_blank\" rel=\"noopener\">Yes, exactly. I think it would simplify things and also you don'&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.305</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1770608793\" target=\"_blank\" rel=\"noopener\">another option is:&#96;&#96;&#96;yamlplugins:- uses: [\"h&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>0.5</td><td>3</td><td>4.095</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#discussion_r1774778409\" target=\"_blank\" rel=\"noopener\">you can avoid copy pasting by using [YAML anchors](https://suppo&hellip;</a></h6></td><td><details><summary>1.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.248</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2325886100\" target=\"_blank\" rel=\"noopener\">Why does the worker need to start the workflow, the kernel can d&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.831</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2376972585\" target=\"_blank\" rel=\"noopener\">it's not a feature of the kernel, but of YAML 1.2, which our par&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.422</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2378868001\" target=\"_blank\" rel=\"noopener\">You can do like this:&#96;&#96;&#96;yamlplugins:- uses&hellip;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.449</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2397834927\" target=\"_blank\" rel=\"noopener\">@Keyrxng I get this error when I put a label on an issue:&#96;&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.4</td><td>3</td><td>3.204</td></tr></tbody></table></details>"},"rndquu":{"total":31.484,"userId":119500907,"comments":[{"id":2330172529,"content":"Ubiquity telegram bot is not connected with the \"workroom\" feature.\r\nAs far as I understand telegram bots can't create chat groups so we have to use a real telegram account for authorization and https://core.telegram.org/method/messages.createChat.\r\nThe \"workroom\" feature (which should be responsible for simply opening telegram chat groups for all github issues) could be converted to a separate ubiquibot plugin. \r\nHow it could work:\r\n1. Price label is added\r\n2. `telegram-plugin` listens for `issues.labeled`\r\n3. `telegram-plugin` then:\r\n  a) Authorizes via a real account (credentials are provided in the config)\r\n  b) Creates a new group\r\n  c) Adds `ubiquibot` telegram bot to the group\r\n So overall we could:\r\n 1. Create a new repository like `ubiquibot/telegram-plugin` which should be responsible for creating telegram chats.\r\n 2. Use current repository (https://github.com/ubiquibot/telegram-bot) solely for the `ubiquibot` telegram bot which should \"Eventually reply to messages on Telegram\"","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2330172529","commentType":"PULL_COLLABORATOR","score":{"reward":16.091,"formatting":{"content":{"p":{"score":0,"elementCount":13},"ol":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":5},"a":{"score":1,"elementCount":2}},"result":2.5},"priority":3,"words":{"wordCount":127,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":52.66468253968256,"syllables":229,"sentences":9,"score":0.9266468253968256},"multiplier":1,"relevance":0.85}},{"id":2330284751,"content":"I don't understand. Can telegram bots create group chats or not?\r\nI suppose it should be extensible.\r\nI remember using https://docs.telethon.dev/en/stable/index.html for creating a few thousands of telegram group chats (not sure if this library is still alive + it uses `python`).\r\nCheck [this](https://docs.telethon.dev/en/stable/basic/signing-in.html) section for auth.\r\nYes, I think it makes sense to separate code bases:\r\n- https://github.com/ubiquibot/telegram-bot: listens for telegram events (use cases: AI agent, can't find related issue)\r\n- `telegram-plugin`: listens for github events (use cases: \"workroom\" chats)","url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2330284751","commentType":"PULL_COLLABORATOR","score":{"reward":15.393,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":3}},"result":3.2},"priority":3,"words":{"wordCount":76,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":73.62000000000003,"syllables":132,"sentences":10,"score":0.8637999999999997},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 31.484 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>2</td><td>31.484</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2330172529\" target=\"_blank\" rel=\"noopener\">Ubiquity telegram bot is not connected with the \"workroom\" featu&hellip;</a></h6></td><td><details><summary>4.94</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 13&#13;    ol:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.5&#13;regex:&#13;  wordCount: 127&#13;  wordValue: 0.1&#13;  result: 2.44&#13;</pre></details></td><td>0.85</td><td>3</td><td>16.091</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/pull/2#issuecomment-2330284751\" target=\"_blank\" rel=\"noopener\">I don't understand. Can telegram bots create group chats or not?&hellip;</a></h6></td><td><details><summary>5.82</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.2&#13;regex:&#13;  wordCount: 76&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.7</td><td>3</td><td>15.393</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-plugin-installer_20.json","json":{"Keyrxng":{"userId":106303466,"total":152.177,"task":{"reward":150,"multiplier":1},"comments":[{"id":2182442506,"content":"Resolves https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/20\r\nRequires #13 \r\nQA:\r\nhttps://github.com/user-attachments/assets/1334b3e1-927b-462e-9c38-9fa6db8fde05","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23","commentType":"PULL_SPECIFICATION","score":{"reward":2.177,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":51.61525641025645,"syllables":45,"sentences":3,"score":0.9161525641025645},"multiplier":1,"relevance":0.7}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 152.177 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>2.177</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquity-os/ubiquity-os-plugin-insta&hellip;</a></h6></td><td><details><summary>2.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>1</td><td>2.177</td></tr></tbody></table></details>"},"rndquu":{"total":78.523,"userId":119500907,"comments":[{"id":2661857793,"content":"Depends on https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13\r\nRIght now partner is able to select only an organization where the bot' config should be edited.\r\nPartner should be able to add/edit config either for an organization either for an individual repository.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/20","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.79,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":37.93333333333334,"syllables":85,"sentences":3,"score":0.7793333333333333},"multiplier":1,"relevance":1}},{"id":2470227207,"content":"As far as I understand right now a new partner (which doesn't have the `.ubiquity-os` repository for organization wide config) can not create a config for a whole organization. It should be possible.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23#pullrequestreview-2470227207","commentType":"PULL_COLLABORATOR","score":{"reward":6.096,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":54.21477272727276,"syllables":53,"sentences":2,"score":0.9421477272727276},"multiplier":1,"relevance":0.8}},{"id":2472726348,"content":"Works fine","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23#pullrequestreview-2472726348","commentType":"PULL_COLLABORATOR","score":{"reward":0.297,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":120.20500000000001,"syllables":2,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2470227207,"effect":{"addition":1438,"deletion":788},"reward":66.78,"priority":3},{"reviewId":2472726348,"effect":{"addition":45,"deletion":7},"reward":1.56,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 78.523 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>68.34</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.79</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>6.393</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23\" target=\"_blank\" rel=\"noopener\">#23</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1438 -788</td><td>3</td><td>66.78</td></tr><tr><td>+45 -7</td><td>3</td><td>1.56</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/20\" target=\"_blank\" rel=\"noopener\">Depends on https://github.com/ubiquity-os/ubiquity-os-plugin-ins&hellip;</a></h6></td><td><details><summary>3.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>1</td><td>1</td><td>3.79</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23#pullrequestreview-2470227207\" target=\"_blank\" rel=\"noopener\">As far as I understand right now a new partner (which doesn't ha&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.096</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23#pullrequestreview-2472726348\" target=\"_blank\" rel=\"noopener\">Works fine</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.297</td></tr></tbody></table></details>"},"zugdev":{"total":0.207,"userId":155616000,"comments":[{"id":2494650516,"content":"Is this a subset of commits in #25?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23#issuecomment-2494650516","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.207,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":0.25,"relevance":0.3}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.207 XP ]</a>&nbsp;</h3><h6>@zugdev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>0.207</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23#issuecomment-2494650516\" target=\"_blank\" rel=\"noopener\">Is this a subset of commits in #25?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.207</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_122.json","json":{"whilefoo":{"userId":139262667,"total":101.72,"task":{"reward":100,"multiplier":1},"comments":[{"id":2395366372,"content":"we could have two configs `.ubiquibot-config.yml` and `.ubiquibot-config.dev.yml` and env variable that switches the bot between production and development","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/122#issuecomment-2395366372","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.72,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":60.19176470588238,"syllables":26,"sentences":1,"score":0.9980823529411762},"multiplier":0.25,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 101.72 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>100</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.72</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/122#issuecomment-2395366372\" target=\"_blank\" rel=\"noopener\">we could have two configs &#96;.ubiquibot-config.yml&#96; and &#&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>1</td><td>4</td><td>1.72</td></tr></tbody></table></details>"},"0x4007":{"total":21.75,"userId":4975670,"comments":[{"id":2395340584,"content":"@whilefoo perhaps you can take this one on?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/122#issuecomment-2395340584","commentType":"ISSUE_AUTHOR","score":{"reward":3.384,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.9}},{"id":2567748984,"content":"_Originally posted by @0x4007 in https://github.com/ubiquity/work.ubq.fi/issues/54#issuecomment-2394988488_\r\nThe problem to solve is that we can't have both bots installed normally on an org or else we have both responding to user actions and it gets noisy. We need to install both to be able to dispatch actions/events on the ubiquity-os-marketplace. But we need to disable the config for one or the other so that it won't respond to user actions like comments/commands. \r\nLets do that.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/122","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.59,"formatting":{"content":{"p":{"score":0,"elementCount":3},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":79,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":71.58500000000001,"syllables":130,"sentences":7,"score":0.8841499999999999},"multiplier":1,"relevance":1}},{"id":1790131228,"content":"Do you think we should define the strings and import them for implementation?\r\n```typescript\r\nexport const environments = {\r\n  PRODUCTION: \"production\",\r\n  DEVELOPMENT: \"development\"\r\n};\r\n```\r\nAlthough this can probably be done cleaner with some type of `as const` or `enum`","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123#discussion_r1790131228","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -143,7 +144,7 @@ async function download({ context, repository, owner }: { context: GitHubContext\n     const { data } = await context.octokit.rest.repos.getContent({\n       owner,\n       repo: repository,\n-      path: CONFIG_FULL_PATH,\n+      path: context.eventHandler.environment === \"production\" ? CONFIG_FULL_PATH : DEV_CONFIG_FULL_PATH,","score":{"reward":6.816,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":75.70750000000002,"syllables":35,"sentences":2,"score":0.8429249999999997},"multiplier":1,"relevance":0.8}},{"id":1791178070,"content":"```suggestion\n  owner: { login: \"ubiquity-os-marketplace\" },\n```","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123#discussion_r1791178070","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -12,6 +12,15 @@ import { shouldSkipPlugin } from \"../src/github/handlers\";\n config({ path: \".dev.vars\" });\n \n const issueOpened = \"issues.opened\";\n+const manifestPath = \"manifest.json\";\n+const repo = {\n+  owner: { login: \"ubiquity\" },","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.9}},{"id":2396797227,"content":"I've been re-adding collaborators on an as-needed basis. Let me know which repo(s) you need elevated permissions for!","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123#issuecomment-2396797227","commentType":"PULL_COLLABORATOR","score":{"reward":1.6,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":68.77000000000002,"syllables":33,"sentences":2,"score":0.9122999999999998},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"reviews":[{"reviewId":2351806267,"effect":{"addition":113,"deletion":21},"reward":5.36,"priority":4}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 21.75 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>5.36</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.59</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>3.384</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>8.416</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123\" target=\"_blank\" rel=\"noopener\">#123</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+113 -21</td><td>4</td><td>5.36</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/122\" target=\"_blank\" rel=\"noopener\">_Originally posted by @0x4007 in https://github.com/ubiquity/wor&hellip;</a></h6></td><td><details><summary>3.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 79&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>4.59</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/122#issuecomment-2395340584\" target=\"_blank\" rel=\"noopener\">@whilefoo perhaps you can take this one on?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.9</td><td>4</td><td>3.384</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123#discussion_r1790131228\" target=\"_blank\" rel=\"noopener\">Do you think we should define the strings and import them for im&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.8</td><td>4</td><td>6.816</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123#discussion_r1791178070\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionowner: { login: \"ubiquity-os-marketp&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123#issuecomment-2396797227\" target=\"_blank\" rel=\"noopener\">I've been re-adding collaborators on an as-needed basis. Let me &hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.2</td><td>4</td><td>1.6</td></tr></tbody></table></details>"},"gentlementlegen":{"total":3.712,"userId":9807008,"comments":[{"id":2403839427,"content":"Shouldn't it default to `\"production\"`? Also, the `.dev.vars.example` has not been updated.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123#issuecomment-2403839427","commentType":"PULL_COLLABORATOR","score":{"reward":3.712,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":93.57977272727274,"syllables":14,"sentences":2,"score":0.6642022727272726},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 3.712 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>3.712</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/123#issuecomment-2403839427\" target=\"_blank\" rel=\"noopener\">Shouldn't it default to &#96;\"production\"&#96;? Also, the &#96;.&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>4</td><td>3.712</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_32.json","json":{"shiv810":{"userId":53160903,"total":600,"task":{"reward":600,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 600 XP ]</a>&nbsp;</h3><h6>@shiv810</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>600</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"0x4007":{"total":165.253,"userId":4975670,"comments":[{"id":2310870920,"content":"@sshivaditya2019 supabase has first class support for vector embeddings which might be easier for you to get started with. \nCloudflare might also have a solution which might be preferable because we generally run these plugins as cloudflare workers","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310870920","commentType":"ISSUE_AUTHOR","score":{"reward":7.29,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":49.518421052631595,"syllables":62,"sentences":2,"score":0.8951842105263159},"multiplier":1,"relevance":0.9}},{"id":2310877276,"content":"I would make the row ID the comment id. You can also store the issue specification by storing the issue id (not issue number of the repo, but id which is a large number)","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310877276","commentType":"ISSUE_AUTHOR","score":{"reward":6.858,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":72.63294117647061,"syllables":47,"sentences":2,"score":0.8736705882352939},"multiplier":1,"relevance":0.9}},{"id":2310880951,"content":"@Keyrxng  do you have any resources for how @sshivaditya2019 can get started on building a plugin?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310880951","commentType":"ISSUE_AUTHOR","score":{"reward":2.88,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":74.27000000000001,"syllables":22,"sentences":1,"score":0.8573},"multiplier":1,"relevance":0.6}},{"id":2310936137,"content":"Just issue body and comments. Same table. IDs shouldn't collide.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310936137","commentType":"ISSUE_AUTHOR","score":{"reward":2.88,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":80.0587878787879,"syllables":16,"sentences":3,"score":0.799412121212121},"multiplier":1,"relevance":0.8}},{"id":2310939586,"content":"I'm not on my computer so they can fork from you for now","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310939586","commentType":"ISSUE_AUTHOR","score":{"reward":1.656,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":95.93928571428573,"syllables":16,"sentences":1,"score":0.6406071428571427},"multiplier":1,"relevance":0.4}},{"id":2322911856,"content":"@Keyrxng i think this was eligible for the additional Dora hacks incentive. Would you be able to handle this?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2322911856","commentType":"ISSUE_AUTHOR","score":{"reward":1.656,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":63.613552631578955,"syllables":30,"sentences":2,"score":0.9638644736842105},"multiplier":1,"relevance":0.3}},{"id":2322915545,"content":"I just realized the [original plan](https://github.com/ubiquibot/comment-incentives/issues/9) was to use cloudflare free embeddings. We can make this cost optimization later but @sshivaditya2019 is there any specific reason why you must use open ai embeddings?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2322915545","commentType":"ISSUE_AUTHOR","score":{"reward":7.98,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":51.65113636363637,"syllables":54,"sentences":2,"score":0.9165113636363637},"multiplier":1,"relevance":0.7}},{"id":2322945065,"content":"Why","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2322945065","commentType":"ISSUE_AUTHOR","score":{"reward":0.108,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":121.22000000000003,"syllables":1,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}},{"id":2324329905,"content":"`bge-large-en-v1.5` is rank `30`. \r\n`text-embedding-3-large` is rank `309`\r\nWe should be using the highest quality and cheapest models.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2324329905","commentType":"ISSUE_AUTHOR","score":{"reward":3.024,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":78.87285714285717,"syllables":20,"sentences":2,"score":0.8112714285714283},"multiplier":1,"relevance":0.7}},{"id":2336798773,"content":"I filed [a new issue](https://github.com/ubiquibot/issue-comment-embeddings/issues/8) because I realize that you didn't save the issue bodies as we agreed. \nPlease prioritize handling it @sshivaditya2019","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2336798773","commentType":"ISSUE_AUTHOR","score":{"reward":9.18,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":67.75500000000001,"syllables":36,"sentences":2,"score":0.9224499999999999},"multiplier":1,"relevance":0.9}},{"id":2337214904,"content":"@Keyrxng set up their own database and ran this but couldn't find any issues saved","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2337214904","commentType":"ISSUE_AUTHOR","score":{"reward":2.772,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":90.13250000000001,"syllables":19,"sentences":1,"score":0.6986749999999999},"multiplier":1,"relevance":0.6}},{"id":2337513516,"content":"Sorry I meant that they need the ID of the issue and the issue body alone. You focused the schema around the comments and their IDs.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2337513516","commentType":"ISSUE_AUTHOR","score":{"reward":5.832,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":79.75538461538463,"syllables":35,"sentences":2,"score":0.8024461538461537},"multiplier":1,"relevance":0.9}},{"id":2436911093,"content":"- This allows the bot to learn and understand from all of the comments posted on GitHub. \r\n- This serves as the foundation of its intelligence related to an organization or repository's initiatives. \r\n- We should also update based on `issues_comment.edited`\r\n- We should also save the issue specification. \r\n- Related https://github.com/ubiquibot/comment-incentives/issues/9\r\nThis task serves as the initial setup but once the repository is made we can migrate those old issues. The old issues will also probably need to be updated with more modern technologies. Generally the same strategy on the approach will be used still.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.29,"formatting":{"content":{"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5},"p":{"score":0,"elementCount":6},"a":{"score":1,"elementCount":1}},"result":1.5},"priority":1,"words":{"wordCount":90,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":53.639285714285734,"syllables":161,"sentences":7,"score":0.9363928571428574},"multiplier":1,"relevance":1}},{"id":2271056146,"content":"This pull looks great. I just have some cosmetic changes","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#pullrequestreview-2271056146","commentType":"PULL_COLLABORATOR","score":{"reward":1.053,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":100.24000000000002,"syllables":12,"sentences":2,"score":1},"multiplier":1,"relevance":0.3}},{"id":1732110943,"content":"Delete","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732110943","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.051,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":36.62000000000003,"syllables":2,"sentences":1,"score":0.7662000000000003},"multiplier":1,"relevance":0.1}},{"id":1732111035,"content":"Why?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732111035","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,7 +17,7 @@\n     \"knip-ci\": \"knip --no-exit-code --reporter json --config .github/knip.ts\",\n     \"prepare\": \"husky install\",\n     \"test\": \"jest --setupFiles dotenv/config --coverage\",\n-    \"worker\": \"wrangler dev --env dev --port 4000\"\n+    \"worker\": \"wrangler dev --env dev --port 5000\"","score":{"reward":0.27,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":121.22000000000003,"syllables":1,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1732111216,"content":"Why?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732111216","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../../../types\";\n+import { SuperOpenAi } from \"./openai\";\n+const VECTOR_SIZE = 512;","score":{"reward":0.27,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":121.22000000000003,"syllables":1,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1732111359,"content":"Is this the best model?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732111359","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../../../types\";\n+import { SuperOpenAi } from \"./openai\";\n+const VECTOR_SIZE = 512;\n+\n+export class Embedding extends SuperOpenAi {\n+  protected context: Context;\n+\n+  constructor(client: OpenAI, context: Context) {\n+    super(client, context);\n+    this.context = context;\n+  }\n+\n+  async createEmbedding(text: string): Promise<number[]> {\n+    const params: OpenAI.EmbeddingCreateParams = {\n+      model: \"text-embedding-3-small\",","score":{"reward":1.449,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":100.24000000000002,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1732111972,"content":"Maybe remove before we merge \n```suggestion\n```","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732111972","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -10,14 +10,13 @@ import { plugin } from \"./plugin\";\n  */\n export async function run() {\n   const payload = github.context.payload.inputs;\n-\n   const env = Value.Decode(envSchema, payload.env);\n   const settings = Value.Decode(pluginSettingsSchema, Value.Default(pluginSettingsSchema, JSON.parse(payload.settings)));\n \n   if (!pluginSettingsValidator.test(settings)) {\n     throw new Error(\"Invalid settings provided\");\n   }\n-\n+  console.log(\"ENV\", payload);","score":{"reward":1.56,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.8}},{"id":1732112309,"content":"Prefer to check and throw error if key is empty first.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732112309","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -2,47 +2,52 @@ import { Octokit } from \"@octokit/rest\";\n import { Env, PluginInputs } from \"./types\";\n import { Context } from \"./types\";\n import { isIssueCommentEvent } from \"./types/typeguards\";\n-import { helloWorld } from \"./handlers/hello-world\";\n import { LogLevel, Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { createAdapters } from \"./adapters\";\n+import { createClient } from \"@supabase/supabase-js\";\n+import { addComments } from \"./handlers/add-comments\";\n+import { updateComment } from \"./handlers/update-comments\";\n+import { deleteComment } from \"./handlers/delete-comments\";\n+import OpenAI from \"openai\";\n \n /**\n  * The main plugin function. Split for easier testing.\n  */\n export async function runPlugin(context: Context) {\n   const { logger, eventName } = context;\n-\n   if (isIssueCommentEvent(context)) {\n-    return await helloWorld(context);\n+    switch (eventName) {\n+      case \"issue_comment.created\":\n+        return await addComments(context);\n+      case \"issue_comment.deleted\":\n+        return await deleteComment(context);\n+      case \"issue_comment.edited\":\n+        return await updateComment(context);\n+      default:\n+        logger.error(`Unsupported event: ${eventName}`);\n+    }\n   }\n-\n-  logger.error(`Unsupported event: ${eventName}`);\n+  logger.ok(`Exiting plugin`);\n }\n \n /**\n  * How a worker executes the plugin.\n  */\n export async function plugin(inputs: PluginInputs, env: Env) {\n   const octokit = new Octokit({ auth: inputs.authToken });\n-\n+  const supabase = createClient(env.SUPABASE_URL, env.SUPABASE_KEY);\n+  const openaiClient = new OpenAI({\n+    apiKey: env.OPENAI_API_KEY,","score":{"reward":2.832,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":87.99727272727276,"syllables":14,"sentences":1,"score":0.7200272727272724},"multiplier":1,"relevance":0.8}},{"id":1732112466,"content":"Oh perhaps this throws the error if it's empty","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732112466","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -10,7 +10,11 @@ import { StandardValidator } from \"typebox-validators\";\n  * taken from either `dev.vars` or repository secrets.\n  * They are used with `process.env` but are type-safe.\n  */\n-export const envSchema = T.Object({});\n+export const envSchema = T.Object({\n+  SUPABASE_URL: T.String(),\n+  SUPABASE_KEY: T.String(),\n+  OPENAI_API_KEY: T.String(),","score":{"reward":2.31,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.7}},{"id":1732112710,"content":"@gentlementlegen rfc","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732112710","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -141,6 +145,7 @@ function createContextInner(\n ): Context {\n   return {\n     eventName: \"issue_comment.created\",\n+    //@ts-expect-error modified for testing purposes","score":{"reward":0.3,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-48.994999999999976,"syllables":6,"sentences":1,"score":0},"multiplier":1,"relevance":0.4}},{"id":1732544102,"content":"Why not the large model, cost aside?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732544102","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../../../types\";\n+import { SuperOpenAi } from \"./openai\";\n+const VECTOR_SIZE = 512;\n+\n+export class Embedding extends SuperOpenAi {\n+  protected context: Context;\n+\n+  constructor(client: OpenAI, context: Context) {\n+    super(client, context);\n+    this.context = context;\n+  }\n+\n+  async createEmbedding(text: string): Promise<number[]> {\n+    const params: OpenAI.EmbeddingCreateParams = {\n+      model: \"text-embedding-3-small\",","score":{"reward":1.494,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.6}},{"id":1732544997,"content":"@gentlementlegen rfc","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732544997","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,7 +17,7 @@\n     \"knip-ci\": \"knip --no-exit-code --reporter json --config .github/knip.ts\",\n     \"prepare\": \"husky install\",\n     \"test\": \"jest --setupFiles dotenv/config --coverage\",\n-    \"worker\": \"wrangler dev --env dev --port 4000\"\n+    \"worker\": \"wrangler dev --env dev --port 5000\"","score":{"reward":0.3,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-48.994999999999976,"syllables":6,"sentences":1,"score":0},"multiplier":1,"relevance":0.4}},{"id":1733932979,"content":"I think we should optimize as needed instead of proactively. This is because we are just assuming that performance may some day be a problem. However, accuracy should be noticeable immediately. \nRight now I consider this more of an early stage research project, meaning that we should be evaluating the results of the implementation to see if we should continue down this path or iterate in another direction.  Also honestly I have basically no experience building these sort of systems, so I am less comfortable with assumptions around optimizations in such an early stage.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1733932979","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../../../types\";\n+import { SuperOpenAi } from \"./openai\";\n+const VECTOR_SIZE = 512;\n+\n+export class Embedding extends SuperOpenAi {\n+  protected context: Context;\n+\n+  constructor(client: OpenAI, context: Context) {\n+    super(client, context);\n+    this.context = context;\n+  }\n+\n+  async createEmbedding(text: string): Promise<number[]> {\n+    const params: OpenAI.EmbeddingCreateParams = {\n+      model: \"text-embedding-3-small\",","score":{"reward":8.829,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":94,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":42.85300000000001,"syllables":161,"sentences":5,"score":0.8285300000000001},"multiplier":1,"relevance":0.9}},{"id":1734791044,"content":"I think we should prefix all with `uos-` because ubiquibot is deprecated.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734791044","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,4 +1,4 @@\n-name = \"your-plugin-name\"\n+name = \"issue-comment-embeddings\"","score":{"reward":2.625,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":57.23363636363638,"syllables":18,"sentences":1,"score":0.9723363636363638},"multiplier":1,"relevance":0.7}},{"id":1734810541,"content":"I wonder if it makes sense to also rename the repositories to match.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734810541","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,4 +1,4 @@\n-name = \"your-plugin-name\"\n+name = \"issue-comment-embeddings\"","score":{"reward":2.13,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":63.486153846153854,"syllables":20,"sentences":1,"score":0.9651384615384615},"multiplier":1,"relevance":0.5}},{"id":1737841840,"content":"Generates vector embeddings of GitHub comments and stores them in Supabase.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1737841840","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,7 @@\n {\n-  \"name\": \"plugin-template\",\n+  \"name\": \"@ubiquibot/issue-comment-embeddings\",\n   \"version\": \"1.0.0\",\n-  \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n+  \"description\": \"Issue comment plugin for Ubiquibot.\",","score":{"reward":2.178,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":41.8518181818182,"syllables":20,"sentences":1,"score":0.818518181818182},"multiplier":1,"relevance":0.6}},{"id":1737844267,"content":"```suggestion\nname: \"@ubiquity-os/comment-vector-embeddings\"\n```\n- Shouldn't this eventually cover all comments?\n- Ubiquibot is deprecated\n- ideally this plugin should be generalized to allow us to pass in anything to generate embeddings. Maybe we can generate a unique ID based on where it's coming in from (GitHub, Telegram) and the project it's posted to (repository/issue, or group chat id) etc\nThe purpose of this is to serve as the foundation of the system's awareness across all organization operations.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1737844267","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,4 +1,4 @@\n-name: \"the name of the plugin\"\n+name: \"@ubiquibot/issue-comment-embeddings\"","score":{"reward":9.747,"formatting":{"content":{"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":3,"words":{"wordCount":76,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":38.637456140350906,"syllables":128,"sentences":3,"score":0.786374561403509},"multiplier":1,"relevance":0.9}},{"id":1739593063,"content":"Can't we do `\"issue_comment\"` to be concise? @gentlementlegen","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593063","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,6 @@\n+plugins:\n+  - name: test-app\n+    id: test-app\n+    uses:\n+      - plugin: https://ubiquibot-issue-comment-embeddings.sshivaditya.workers.dev\n+        runsOn: [ \"issue_comment.created\", \"issue_comment.edited\", \"issue_comment.deleted\" ]","score":{"reward":2.058,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":65.30000000000001,"syllables":13,"sentences":2,"score":0.9469999999999998},"multiplier":1,"relevance":0.7}},{"id":1739593282,"content":"ubiquity-os","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593282","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,11 +1,5 @@\n {\n-  \"name\": \"ts-template\",\n-  \"description\": \"ts-template for Ubiquibot plugins.\",\n-  \"ubiquity:listeners\": [\"issue_comment.created\"],\n-  \"commands\": {\n-    \"command1\": {\n-      \"ubiquity:example\": \"/command1 argument\",\n-      \"description\": \"Command 1 with an argument.\"\n-    }\n-  }\n+  \"name\": \"@ubiquibot/issue-comment-embeddings\",","score":{"reward":0.45,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-6.694999999999993,"syllables":5,"sentences":1,"score":0},"multiplier":1,"relevance":0.6}},{"id":1739593348,"content":"Possibly `issue_comment` only","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593348","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,11 +1,5 @@\n {\n-  \"name\": \"ts-template\",\n-  \"description\": \"ts-template for Ubiquibot plugins.\",\n-  \"ubiquity:listeners\": [\"issue_comment.created\"],\n-  \"commands\": {\n-    \"command1\": {\n-      \"ubiquity:example\": \"/command1 argument\",\n-      \"description\": \"Command 1 with an argument.\"\n-    }\n-  }\n+  \"name\": \"@ubiquibot/issue-comment-embeddings\",\n+  \"description\": \"Issue comment plugin for Ubiquibot. It enables the storage, updating, and deletion of issue comment embeddings.\",\n+  \"ubiquity:listeners\": [\"issue_comment.created\", \"issue_comment.edited\", \"issue_comment.deleted\"]","score":{"reward":0.6,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-6.694999999999993,"syllables":5,"sentences":1,"score":0},"multiplier":1,"relevance":0.8}},{"id":1739593612,"content":"I think running as worker is fine.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593612","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -10,7 +10,6 @@ import { plugin } from \"./plugin\";\n  */\n export async function run() {\n   const payload = github.context.payload.inputs;\n-\n   const env = Value.Decode(envSchema, payload.env);","score":{"reward":1.245,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.5}},{"id":1739593831,"content":"UbiquiBot term is deprecated in favor of UbiquityOS (or when lowercase, ubiquity-os)","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593831","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,4 +1,4 @@\n-name = \"your-plugin-name\"\n+name = \"ubiquibot-issue-comment-embeddings\"","score":{"reward":2.709,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":17.932307692307717,"syllables":27,"sentences":1,"score":0.5793230769230772},"multiplier":1,"relevance":0.7}},{"id":1749211227,"content":"@Keyrxng can't this type be dynamically generated by importing the manifest.json file?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1749211227","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,13 +3,14 @@ import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as Webhook\n import { Env } from \"./env\";\n import { PluginSettings } from \"./plugin-inputs\";\n import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { createAdapters } from \"../adapters\";\n \n /**\n  * Update `manifest.json` with any events you want to support like so:\n  *\n  * ubiquity:listeners: [\"issue_comment.created\", ...]\n  */\n-export type SupportedEventsU = \"issue_comment.created\";\n+export type SupportedEventsU = \"issue_comment.created\" | \"issue_comment.deleted\" | \"issue_comment.edited\";","score":{"reward":3.087,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":48.65857142857146,"syllables":25,"sentences":2,"score":0.8865857142857146},"multiplier":1,"relevance":0.7}},{"id":2311553543,"content":"Fix `Resolves #32` by placing the full URL of the issue in place of the number.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2311553543","commentType":"PULL_COLLABORATOR","score":{"reward":2.52,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":89.89642857142859,"syllables":17,"sentences":1,"score":0.7010357142857141},"multiplier":1,"relevance":0.6}},{"id":2315518559,"content":"Sure new database is fine to keep things simple.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2315518559","commentType":"PULL_COLLABORATOR","score":{"reward":1.236,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":84.90000000000003,"syllables":12,"sentences":1,"score":0.7509999999999997},"multiplier":1,"relevance":0.4}},{"id":2322748155,"content":"Very lovely QA testing video thank you.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322748155","commentType":"PULL_COLLABORATOR","score":{"reward":0.534,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":54.70142857142861,"syllables":12,"sentences":1,"score":0.947014285714286},"multiplier":1,"relevance":0.2}},{"id":2322868653,"content":"GitHub actions are totally free for us. Workers can be costly. \nIt is only a problem to do workers if we have to spend money","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322868653","commentType":"PULL_COLLABORATOR","score":{"reward":5.064,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":79.93666666666668,"syllables":35,"sentences":3,"score":0.8006333333333332},"multiplier":1,"relevance":0.8}},{"id":2322911365,"content":"I think create and we can transfer later? I don't have a lot of time on my computer these days due to the upcoming conference.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322911365","commentType":"PULL_COLLABORATOR","score":{"reward":1.926,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":83.0092307692308,"syllables":34,"sentences":2,"score":0.7699076923076921},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2262082613,"effect":{"addition":271,"deletion":37},"reward":9.24,"priority":3},{"reviewId":2265060175,"effect":{"addition":71,"deletion":54},"reward":3.75,"priority":3},{"reviewId":2266454699,"effect":{"addition":289,"deletion":32},"reward":9.63,"priority":3},{"reviewId":2266485038,"effect":{"addition":1,"deletion":1},"reward":0.06,"priority":3},{"reviewId":2271053490,"effect":{"addition":765,"deletion":105},"reward":26.1,"priority":3},{"reviewId":2288522800,"effect":{"addition":4,"deletion":4},"reward":0.24,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 165.253 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>6</td><td>49.02</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.29</td></tr><tr><td>Issue</td><td>Comment</td><td>12</td><td>52.116</td></tr><tr><td>Review</td><td>Comment</td><td>27</td><td>58.827</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+271 -37</td><td>3</td><td>9.24</td></tr><tr><td>+71 -54</td><td>3</td><td>3.75</td></tr><tr><td>+289 -32</td><td>3</td><td>9.63</td></tr><tr><td>+1 -1</td><td>3</td><td>0.06</td></tr><tr><td>+765 -105</td><td>3</td><td>26.1</td></tr><tr><td>+4 -4</td><td>3</td><td>0.24</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32\" target=\"_blank\" rel=\"noopener\">- This allows the bot to learn and understand from all of the co&hellip;</a></h6></td><td><details><summary>4.13</summary><pre>content:&#13;  content:&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.5&#13;regex:&#13;  wordCount: 90&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>5.29</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310870920\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 supabase has first class support for vector emb&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.9</td><td>3</td><td>7.29</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310877276\" target=\"_blank\" rel=\"noopener\">I would make the row ID the comment id. You can also store the i&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.858</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310880951\" target=\"_blank\" rel=\"noopener\">@Keyrxng  do you have any resources for how @sshivaditya2019 can&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.88</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310936137\" target=\"_blank\" rel=\"noopener\">Just issue body and comments. Same table. IDs shouldn't collide.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.88</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310939586\" target=\"_blank\" rel=\"noopener\">I'm not on my computer so they can fork from you for now</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.656</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2322911856\" target=\"_blank\" rel=\"noopener\">@Keyrxng i think this was eligible for the additional Dora hacks&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.656</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2322915545\" target=\"_blank\" rel=\"noopener\">I just realized the [original plan](https://github.com/ubiquibot&hellip;</a></h6></td><td><details><summary>2.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.7</td><td>3</td><td>7.98</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2322945065\" target=\"_blank\" rel=\"noopener\">Why</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.108</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2324329905\" target=\"_blank\" rel=\"noopener\">&#96;bge-large-en-v1.5&#96; is rank &#96;30&#96;. &#96;text-em&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.024</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2336798773\" target=\"_blank\" rel=\"noopener\">I filed [a new issue](https://github.com/ubiquibot/issue-comment&hellip;</a></h6></td><td><details><summary>2.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.9</td><td>3</td><td>9.18</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2337214904\" target=\"_blank\" rel=\"noopener\">@Keyrxng set up their own database and ran this but couldn't fin&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.772</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2337513516\" target=\"_blank\" rel=\"noopener\">Sorry I meant that they need the ID of the issue and the issue b&hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.832</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#pullrequestreview-2271056146\" target=\"_blank\" rel=\"noopener\">This pull looks great. I just have some cosmetic changes</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.053</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732110943\" target=\"_blank\" rel=\"noopener\">Delete</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.051</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732111035\" target=\"_blank\" rel=\"noopener\">Why?</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.5</td><td>3</td><td>0.27</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732111216\" target=\"_blank\" rel=\"noopener\">Why?</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.5</td><td>3</td><td>0.27</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732111359\" target=\"_blank\" rel=\"noopener\">Is this the best model?</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.449</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732111972\" target=\"_blank\" rel=\"noopener\">Maybe remove before we merge &#96;&#96;&#96;suggestion&#96;&#9&hellip;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.56</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732112309\" target=\"_blank\" rel=\"noopener\">Prefer to check and throw error if key is empty first.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.832</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732112466\" target=\"_blank\" rel=\"noopener\">Oh perhaps this throws the error if it's empty</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.31</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732112710\" target=\"_blank\" rel=\"noopener\">@gentlementlegen rfc</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.3</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732544102\" target=\"_blank\" rel=\"noopener\">Why not the large model, cost aside?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.494</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732544997\" target=\"_blank\" rel=\"noopener\">@gentlementlegen rfc</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.3</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1733932979\" target=\"_blank\" rel=\"noopener\">I think we should optimize as needed instead of proactively. Thi&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 94&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.829</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734791044\" target=\"_blank\" rel=\"noopener\">I think we should prefix all with &#96;uos-&#96; because ubiquib&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.625</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734810541\" target=\"_blank\" rel=\"noopener\">I wonder if it makes sense to also rename the repositories to ma&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.13</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1737841840\" target=\"_blank\" rel=\"noopener\">Generates vector embeddings of GitHub comments and stores them i&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.178</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1737844267\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionname: \"@ubiquity-os/comment-vector-emb&hellip;</a></h6></td><td><details><summary>2.92</summary><pre>content:&#13;  content:&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 76&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>3</td><td>9.747</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593063\" target=\"_blank\" rel=\"noopener\">Can't we do &#96;\"issue_comment\"&#96; to be concise? @gentlement&hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.058</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593282\" target=\"_blank\" rel=\"noopener\">ubiquity-os</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.45</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593348\" target=\"_blank\" rel=\"noopener\">Possibly &#96;issue_comment&#96; only</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.8</td><td>3</td><td>0.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593612\" target=\"_blank\" rel=\"noopener\">I think running as worker is fine.</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.245</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739593831\" target=\"_blank\" rel=\"noopener\">UbiquiBot term is deprecated in favor of UbiquityOS (or when low&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.709</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1749211227\" target=\"_blank\" rel=\"noopener\">@Keyrxng can't this type be dynamically generated by importing t&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.087</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2311553543\" target=\"_blank\" rel=\"noopener\">Fix &#96;Resolves #32&#96; by placing the full URL of the issue &hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.52</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2315518559\" target=\"_blank\" rel=\"noopener\">Sure new database is fine to keep things simple.</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.236</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322748155\" target=\"_blank\" rel=\"noopener\">Very lovely QA testing video thank you.</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.534</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322868653\" target=\"_blank\" rel=\"noopener\">GitHub actions are totally free for us. Workers can be costly. &hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.064</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322911365\" target=\"_blank\" rel=\"noopener\">I think create and we can transfer later? I don't have a lot of &hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.926</td></tr></tbody></table></details>"},"Keyrxng":{"total":57.375,"userId":106303466,"comments":[{"id":2310904346,"content":"1. https://github.com/ubiquibot/plugin-template - It contains a small hello-world example and the readme has various links and tips.\r\n2. Use the most recent plugins for reference such as: [`command-start-stop`](https://github.com/ubiquibot/command-start-stop), [`automated-merging`](https://github.com/ubiquibot/automated-merging), [`command-wallet`](https://github.com/ubiquibot/command-wallet)\r\n3. If you are not already familiar with the kernel and the prerequisites of plugin building head [here](https://github.com/ubiquity/ubiquibot-kernel)\r\n---\r\n@0x4007 Maybe it's time for an early version of official docs? Covering things like secret passing and description of the main components, best practices etc? There is the videos that gitcoindev made I will find those and link them\r\nAlso could you create a repo for this plugin so that @sshivaditya2019 can fork the repo for an easy PR?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310904346","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":6.912,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3},"p":{"score":0,"elementCount":5},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":5}},"result":5.3},"priority":3,"words":{"wordCount":101,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":60.981289719626176,"syllables":157,"sentences":5,"score":0.9901871028037382},"multiplier":0.25,"relevance":0.9}},{"id":2310942585,"content":"@sshivaditya2019 you can fork this repo\r\n- https://github.com/ubiquibot/issue-comment-embeddings\r\n@0x4007 I have a poor track record with naming plugins I think lmao it probs could have a better name","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310942585","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":2.184,"formatting":{"content":{"p":{"score":0,"elementCount":2},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1.1},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":64.4693181818182,"syllables":49,"sentences":2,"score":0.9553068181818181},"multiplier":0.25,"relevance":0.8}},{"id":2322912666,"content":"@sshivaditya2019 If you can enter a submission to dorahacks with a link to this issue and your github username please I can process it","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2322912666","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.795,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":52.05000000000001,"syllables":37,"sentences":1,"score":0.9205000000000001},"multiplier":0.25,"relevance":0.5}},{"id":2323032275,"content":"@sshivaditya2019 \r\nhttps://polygonscan.com/tx/0x93d290e768a53f4a14bac7ccf171dba61b7a2081d69a702213b665613abc9bfb","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2323032275","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.174,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":-64.10999999999996,"syllables":19,"sentences":2,"score":0},"multiplier":0.25,"relevance":0.2}},{"id":2325370058,"content":"@gentlementlegen I've hijacked the deployment temporarily","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2325370058","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.153,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":-17.812857142857126,"syllables":18,"sentences":1,"score":0},"multiplier":0.25,"relevance":0.3}},{"id":1749212440,"content":"Unfortunately not without trickery because string arrays type as `string` and inference goes out of the window. \r\nThe easiest way to do it would be to convert them into keys inside the manifest as opposed to a string array this way we could easily extract string literal types from the object.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1749212440","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -3,13 +3,14 @@ import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as Webhook\n import { Env } from \"./env\";\n import { PluginSettings } from \"./plugin-inputs\";\n import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { createAdapters } from \"../adapters\";\n \n /**\n  * Update `manifest.json` with any events you want to support like so:\n  *\n  * ubiquity:listeners: [\"issue_comment.created\", ...]\n  */\n-export type SupportedEventsU = \"issue_comment.created\";\n+export type SupportedEventsU = \"issue_comment.created\" | \"issue_comment.deleted\" | \"issue_comment.edited\";","score":{"reward":1.824,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":51.176000000000016,"syllables":77,"sentences":2,"score":0.9117600000000001},"multiplier":0.25,"relevance":0.8}},{"id":2322917527,"content":"This is great stuff gg @sshivaditya2019\r\n@gentlementlegen @0x4007 I think it might be a good idea as another issue to improve the db structure so that conversations are grouped together easily. This way when working with the embeddings it's easier to get all of the context specific to a certain task or PR review discussion etc. For instance telegram chat embeddings would be grouped with the issue it relates to in order to give a fuller picture when the embeddings are used.\r\nI guess using the task body is possible but we tend to avoid using arbitrary strings for situations like this","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322917527","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.743,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":103,"wordValue":0.1,"result":2.59},"readability":{"fleschKincaid":51.7453519417476,"syllables":157,"sentences":4,"score":0.917453519417476},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2288523407,"effect":{"addition":1270,"deletion":183},"reward":43.59,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 57.375 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>43.59</td></tr><tr><td>Issue</td><td>Comment</td><td>5</td><td>10.218</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>3.567</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1270 -183</td><td>3</td><td>43.59</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310904346\" target=\"_blank\" rel=\"noopener\">1. https://github.com/ubiquibot/plugin-template - It contains a &hellip;</a></h6></td><td><details><summary>7.9</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 5&#13;  result: 5.3&#13;regex:&#13;  wordCount: 101&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.912</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2310942585\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 you can fork this repo- https://github.com/ub&hellip;</a></h6></td><td><details><summary>2.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.1&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.184</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2322912666\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 If you can enter a submission to dorahacks with&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.5</td><td>3</td><td>0.795</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2323032275\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 https://polygonscan.com/tx/0x93d290e768a53f4a&hellip;</a></h6></td><td><details><summary>1.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.174</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2325370058\" target=\"_blank\" rel=\"noopener\">@gentlementlegen I've hijacked the deployment temporarily</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.153</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1749212440\" target=\"_blank\" rel=\"noopener\">Unfortunately not without trickery because string arrays type as&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.824</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322917527\" target=\"_blank\" rel=\"noopener\">This is great stuff gg @sshivaditya2019@gentlementlegen @0x400&hellip;</a></h6></td><td><details><summary>2.59</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 103&#13;  wordValue: 0.1&#13;  result: 2.59&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.743</td></tr></tbody></table></details>"},"gentlementlegen":{"total":184.218,"userId":9807008,"comments":[{"id":2323151385,"content":"I created the DB and updated secrets accordingly. The RLS on the DB has not been set up inside the migrations however, opened a ticket for that.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2323151385","commentType":"ISSUE_COLLABORATOR","score":{"reward":6.102,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":70.93250000000003,"syllables":39,"sentences":2,"score":0.8906749999999997},"multiplier":1,"relevance":0.9}},{"id":2268070634,"content":"I had a horrendous time trying this locally and had to rely on a GitHub deployment to test it. A few major changes to consider:\r\n- remove the `commands` section from the manifest otherwise the plugin will never run\r\n- inside `compute.yml` rename the content properly (`plugin-name`)\r\n- in `compute.yml` add the GitHub secrets properly or the run will crash (I assume this will run as an Action because it's a long running task)\r\n- update `README.md` properly to help future collaborators\r\nRelated run: https://github.com/Meniole/issue-comment-embeddings/actions/runs/10612546023/job/29414425736#step:5:8","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#pullrequestreview-2268070634","commentType":"PULL_COLLABORATOR","score":{"reward":13.662,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1.4},"priority":3,"words":{"wordCount":76,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":45.89282051282052,"syllables":140,"sentences":3,"score":0.8589282051282052},"multiplier":1,"relevance":0.9}},{"id":2271437184,"content":"Some more changes might be needed to be able to run this one, but getting closer (c.f. my last comment).\r\n---\r\nTesting actions is tedious. I would advise you to create your own organization (also works on your personal account but usage restrictions are way lower) and set up the bot so you can try some runs and make sure it works as intended.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#pullrequestreview-2271437184","commentType":"PULL_COLLABORATOR","score":{"reward":6.636,"formatting":{"content":{"p":{"score":0,"elementCount":2},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":64,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":80.16175000000003,"syllables":86,"sentences":5,"score":0.7983824999999998},"multiplier":1,"relevance":0.7}},{"id":2273846332,"content":"Good with me. @0x4007 if you can create the Supabase instance and set the secrets, I do not have permission to create new instances on the company's account, thanks.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#pullrequestreview-2273846332","commentType":"PULL_COLLABORATOR","score":{"reward":3.51,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":78.81000000000003,"syllables":40,"sentences":2,"score":0.8118999999999997},"multiplier":1,"relevance":0.5}},{"id":1732120186,"content":"You can also cast the object to the proper type, I believe it gives better auto-complete.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732120186","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -141,6 +145,7 @@ function createContextInner(\n ): Context {\n   return {\n     eventName: \"issue_comment.created\",\n+    //@ts-expect-error modified for testing purposes","score":{"reward":3.024,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":70.14470588235295,"syllables":24,"sentences":1,"score":0.8985529411764704},"multiplier":1,"relevance":0.6}},{"id":1733116560,"content":"```suggestion\r\n  \"name\": \"@ubiquibot/issue-comment-embeddings\",\r\n```","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1733116560","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,7 @@\n {\n-  \"name\": \"plugin-template\",\n+  \"name\": \"plugin-issue-comment\",","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.8}},{"id":1733198462,"content":"Don't you have anything running already on port 4000? What error do you get?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1733198462","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,7 +17,7 @@\n     \"knip-ci\": \"knip --no-exit-code --reporter json --config .github/knip.ts\",\n     \"prepare\": \"husky install\",\n     \"test\": \"jest --setupFiles dotenv/config --coverage\",\n-    \"worker\": \"wrangler dev --env dev --port 4000\"\n+    \"worker\": \"wrangler dev --env dev --port 5000\"","score":{"reward":1.8,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":80.78250000000001,"syllables":21,"sentences":2,"score":0.7921749999999999},"multiplier":1,"relevance":0.4}},{"id":1734781817,"content":"```suggestion\r\nname = \"ubiquibot-issue-comment-embeddings\"\r\n```","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734781817","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,4 +1,4 @@\n-name = \"your-plugin-name\"\n+name = \"issue-comment-embeddings\"","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.8}},{"id":1734801708,"content":"I guess this can be part of a batch rename of all the projects.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734801708","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,4 +1,4 @@\n-name = \"your-plugin-name\"\n+name = \"issue-comment-embeddings\"","score":{"reward":1.242,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":95.93928571428573,"syllables":16,"sentences":1,"score":0.6406071428571427},"multiplier":1,"relevance":0.3}},{"id":1734875504,"content":"We could consider having this parameter in the configuration later for easy changes and testing (in another PR).","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734875504","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../../../types\";\n+import { SuperOpenAi } from \"./openai\";\n+const VECTOR_SIZE = 3072;","score":{"reward":3.024,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":33.465,"syllables":33,"sentences":1,"score":0.73465},"multiplier":1,"relevance":0.6}},{"id":1734880269,"content":"I guess this would be reset every run. If we run twice the logic on the same group of comments, would this be problematic?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734880269","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../../src/types\";\n+import { Comment } from \"../../src/adapters/supabase/helpers/comment\";\n+import { Embedding } from \"../../src/adapters/openai/helpers/embedding\";\n+import { STRINGS } from \"./strings\";\n+\n+export interface CommentMock {\n+  id: number;\n+  commentbody: string;\n+  issuebody: string;\n+  embedding: number[];\n+}\n+\n+export function createMockAdapters(context: Context) {\n+  const commentMap: Map<number, CommentMock> = new Map();","score":{"reward":4.305,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":81.85500000000002,"syllables":32,"sentences":2,"score":0.7814499999999999},"multiplier":1,"relevance":0.7}},{"id":1734944483,"content":"During the run it is fine, but all the results are pushed to supabase correct? I just wondered the impact of having duplicate content in the database.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734944483","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,62 @@\n+import { Context } from \"../../src/types\";\n+import { Comment } from \"../../src/adapters/supabase/helpers/comment\";\n+import { Embedding } from \"../../src/adapters/openai/helpers/embedding\";\n+import { STRINGS } from \"./strings\";\n+\n+export interface CommentMock {\n+  id: number;\n+  commentbody: string;\n+  issuebody: string;\n+  embedding: number[];\n+}\n+\n+export function createMockAdapters(context: Context) {\n+  const commentMap: Map<number, CommentMock> = new Map();","score":{"reward":4.767,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":67.79916666666671,"syllables":40,"sentences":2,"score":0.9220083333333329},"multiplier":1,"relevance":0.7}},{"id":1735045547,"content":"Since this is auto-generated I think you'd be better setting the ignore of this file through the configuration.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1735045547","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,3 +1,5 @@\n+// cSpell:disable","score":{"reward":2.85,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":55.40500000000003,"syllables":31,"sentences":1,"score":0.9540500000000003},"multiplier":1,"relevance":0.5}},{"id":1735811819,"content":"```suggestion\r\n    \"supabase\": \"1.191.3\",\r\n```","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1735811819","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -61,11 +66,12 @@\n     \"lint-staged\": \"15.2.7\",\n     \"npm-run-all\": \"4.1.5\",\n     \"prettier\": \"3.3.2\",\n+    \"supabase\": \"1.176.9\",","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1735835750,"content":"This should be removed, otherwise it will appear in the `/help` commands.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1735835750","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,7 @@\n {\n   \"name\": \"ts-template\",\n   \"description\": \"ts-template for Ubiquibot plugins.\",\n-  \"ubiquity:listeners\": [\"issue_comment.created\"],\n+  \"ubiquity:listeners\": [\"issue_comment.created\", \"issue_comment.edited\", \"issue_comment.deleted\"],\n   \"commands\": {","score":{"reward":3.294,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":72.61545454545457,"syllables":16,"sentences":1,"score":0.8738454545454544},"multiplier":1,"relevance":0.9}},{"id":1735900367,"content":"Please change `name` and `description` properly.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1735900367","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,7 @@\n {\n   \"name\": \"ts-template\",\n   \"description\": \"ts-template for Ubiquibot plugins.\",","score":{"reward":1.32,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.8}},{"id":1736110554,"content":"Should not be included.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736110554","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.936,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.6}},{"id":1736112119,"content":"Should not be deleted.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736112119","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -14,10 +14,12 @@\n     \"format:prettier\": \"prettier --write .\",\n     \"format:cspell\": \"cspell **/*\",\n     \"knip\": \"knip --config .github/knip.ts\",\n-    \"knip-ci\": \"knip --no-exit-code --reporter json --config .github/knip.ts\",\n+    \"knip-ci\": \"\",","score":{"reward":1.092,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.7}},{"id":1736113259,"content":"@0x4007 Probably a description like `Created vector embeddings based on GitHub comment issues.` or something along those lines?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736113259","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,7 @@\n {\n-  \"name\": \"plugin-template\",\n+  \"name\": \"@ubiquibot/issue-comment-embeddings\",\n   \"version\": \"1.0.0\",\n-  \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n+  \"description\": \"Issue comment plugin for Ubiquibot.\",","score":{"reward":2.415,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":52.86500000000001,"syllables":17,"sentences":1,"score":0.9286500000000001},"multiplier":1,"relevance":0.7}},{"id":1736113976,"content":"Why do you set this variable?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736113976","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,8 @@\n-name = \"your-plugin-name\"\n+name = \"ubiquibot-issue-comment-embeddings\"\n main = \"src/worker.ts\"\n compatibility_date = \"2024-05-23\"\n node_compat = true\n \n [env.dev]\n+PLUGIN_CHAIN_STATE = \"4f7aadc56bef41a7ae2cc8c0582320b3\"","score":{"reward":1.776,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.8}},{"id":1736114458,"content":"What is this for?","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736114458","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -37,7 +37,7 @@ export async function setupTests() {\n     labels: [],\n   });\n \n-  createComment(\"/Hello\", 1);\n+  createComment(\"Hello, World!\", 1);","score":{"reward":1.026,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1737902143,"content":"The kernel uses it to track the status of the plugins, but within the plugins this is not needed.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1737902143","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,8 @@\n-name = \"your-plugin-name\"\n+name = \"ubiquibot-issue-comment-embeddings\"\n main = \"src/worker.ts\"\n compatibility_date = \"2024-05-23\"\n node_compat = true\n \n [env.dev]\n+PLUGIN_CHAIN_STATE = \"4f7aadc56bef41a7ae2cc8c0582320b3\"","score":{"reward":4.248,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":80.68684210526318,"syllables":24,"sentences":1,"score":0.7931315789473682},"multiplier":1,"relevance":0.8}},{"id":1738110321,"content":"This will always crash on run:\r\nhttps://github.com/Meniole/issue-comment-embeddings/actions/runs/10628609152/job/29463778679#step:5:45\r\nThe environment is populated either from GitHub or the Worker. Since this runs as an action, it should be loaded directly within `process.env`, which you can add inside `payload.env` if you want. In the case of a worker, it is send within the payload by Cloudflare.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1738110321","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -10,7 +10,6 @@ import { plugin } from \"./plugin\";\n  */\n export async function run() {\n   const payload = github.context.payload.inputs;\n-\n   const env = Value.Decode(envSchema, payload.env);","score":{"reward":11.529,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":71.90125000000002,"syllables":91,"sentences":4,"score":0.8809874999999998},"multiplier":1,"relevance":0.9}},{"id":1739654278,"content":"Not with the current implementation because it wouldn't match the event and wouldn't be triggered.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739654278","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,6 @@\n+plugins:\n+  - name: test-app\n+    id: test-app\n+    uses:\n+      - plugin: https://ubiquibot-issue-comment-embeddings.sshivaditya.workers.dev\n+        runsOn: [ \"issue_comment.created\", \"issue_comment.edited\", \"issue_comment.deleted\" ]","score":{"reward":3.57,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":65.16823529411766,"syllables":25,"sentences":1,"score":0.9483176470588234},"multiplier":1,"relevance":0.7}},{"id":1739701364,"content":"This file should be removed, otherwise no plugin will run inside of this repo.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739701364","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,6 @@\n+plugins:\n+  - name: test-app\n+    id: test-app\n+    uses:\n+      - plugin: https://ubiquibot-issue-comment-embeddings.sshivaditya.workers.dev\n+        runsOn: [ \"issue_comment.created\", \"issue_comment.edited\", \"issue_comment.deleted\" ]","score":{"reward":4.023,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":65.72500000000001,"syllables":21,"sentences":1,"score":0.9427499999999999},"multiplier":1,"relevance":0.9}},{"id":2314415944,"content":"@sshivaditya2019 It seems that you are storing the vectors within Supabase but I see no Supabase folder for setup. Also, typings should be used so Supabase offers auto-complete. Please fix the unit tests as well.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2314415944","commentType":"PULL_COLLABORATOR","score":{"reward":6.408,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":63.05500000000001,"syllables":56,"sentences":3,"score":0.9694499999999999},"multiplier":1,"relevance":0.8}},{"id":2315515351,"content":"@sshivaditya2019 Thanks a lot for the changes, appreciated. Since you seem to use Supabase, I assume that we should spin up a new instance specially for this project because this data would not make much sense in our current database, @0x4007 please confirm.\r\nAs such could you please add a migration script that would:\r\n- run migrations\r\n- update database types\r\nwhen code is pushed to the main branch? Here is an example to get you started: https://github.com/ubiquibot/user-activity-watcher/blob/development/.github/workflows/database.yml#L35\r\nIt would be also nice to have code generation commands within the `package.json`, I don't think I saw them. Here is an example: https://github.com/ubiquibot/user-activity-watcher/blob/development/package.json#L21","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2315515351","commentType":"PULL_COLLABORATOR","score":{"reward":16.659,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2.2},"priority":3,"words":{"wordCount":98,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":65.98448387096778,"syllables":188,"sentences":10,"score":0.9401551612903222},"multiplier":1,"relevance":0.9}},{"id":2315770489,"content":"Please fix the Knip issues, I will try to set up this on my repo and give it a run.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2315770489","commentType":"PULL_COLLABORATOR","score":{"reward":3.738,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":93.47500000000002,"syllables":22,"sentences":1,"score":0.6652499999999998},"multiplier":1,"relevance":0.7}},{"id":2322860298,"content":"@0x4007 My concern about having this as a worker is the following:\r\n- we don't need to handle commands so I don't see the need for instant feedback\r\n- workers are limited to 50 network calls and this plugin will most likely hit the DB a lot (each supabase action is a network call)\r\n- it's a long running process\r\nBut I will test it as a worker and see if it works.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322860298","commentType":"PULL_COLLABORATOR","score":{"reward":8.28,"formatting":{"content":{"p":{"score":0,"elementCount":5},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":3,"words":{"wordCount":73,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":21.485205479452077,"syllables":96,"sentences":1,"score":0.6148520547945208},"multiplier":1,"relevance":0.8}},{"id":2322874338,"content":"Tested thsi on my Cloudflare, works fine, thanks for all the bug fixes. In the end switching this plugin from Worker to Action should be as simple as changing a URL to an Action path.\r\nPlease remove `.ubiquibot-config.yml` and good to go.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322874338","commentType":"PULL_COLLABORATOR","score":{"reward":7.182,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":89.79260162601628,"syllables":50,"sentences":3,"score":0.7020739837398372},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2262097997,"effect":{"addition":271,"deletion":37},"reward":9.24,"priority":3},{"reviewId":2263805146,"effect":{"addition":67,"deletion":50},"reward":3.51,"priority":3},{"reviewId":2263938238,"effect":{"addition":0,"deletion":0},"reward":0,"priority":3},{"reviewId":2266438763,"effect":{"addition":334,"deletion":60},"reward":11.82,"priority":3},{"reviewId":2266588797,"effect":{"addition":697,"deletion":8},"reward":21.15,"priority":3},{"reviewId":2266864111,"effect":{"addition":8,"deletion":2},"reward":0.3,"priority":3},{"reviewId":2268070634,"effect":{"addition":5,"deletion":5},"reward":0.3,"priority":3},{"reviewId":2268581326,"effect":{"addition":66,"deletion":94},"reward":4.8,"priority":3},{"reviewId":2271133765,"effect":{"addition":0,"deletion":0},"reward":0,"priority":3},{"reviewId":2271436058,"effect":{"addition":54,"deletion":86},"reward":4.2,"priority":3},{"reviewId":2273817922,"effect":{"addition":7,"deletion":1},"reward":0.24,"priority":3},{"reviewId":2273846332,"effect":{"addition":4,"deletion":4},"reward":0.24,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 184.218 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>12</td><td>55.8</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>6.102</td></tr><tr><td>Review</td><td>Comment</td><td>29</td><td>122.316</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+271 -37</td><td>3</td><td>9.24</td></tr><tr><td>+67 -50</td><td>3</td><td>3.51</td></tr><tr><td>+0 -0</td><td>3</td><td>0</td></tr><tr><td>+334 -60</td><td>3</td><td>11.82</td></tr><tr><td>+697 -8</td><td>3</td><td>21.15</td></tr><tr><td>+8 -2</td><td>3</td><td>0.3</td></tr><tr><td>+5 -5</td><td>3</td><td>0.3</td></tr><tr><td>+66 -94</td><td>3</td><td>4.8</td></tr><tr><td>+0 -0</td><td>3</td><td>0</td></tr><tr><td>+54 -86</td><td>3</td><td>4.2</td></tr><tr><td>+7 -1</td><td>3</td><td>0.24</td></tr><tr><td>+4 -4</td><td>3</td><td>0.24</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/32#issuecomment-2323151385\" target=\"_blank\" rel=\"noopener\">I created the DB and updated secrets accordingly. The RLS on the&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.102</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#pullrequestreview-2268070634\" target=\"_blank\" rel=\"noopener\">I had a horrendous time trying this locally and had to rely on a&hellip;</a></h6></td><td><details><summary>4.02</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.4&#13;regex:&#13;  wordCount: 76&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>3</td><td>13.662</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#pullrequestreview-2271437184\" target=\"_blank\" rel=\"noopener\">Some more changes might be needed to be able to run this one, bu&hellip;</a></h6></td><td><details><summary>2.55</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 64&#13;  wordValue: 0.1&#13;  result: 2.55&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.636</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#pullrequestreview-2273846332\" target=\"_blank\" rel=\"noopener\">Good with me. @0x4007 if you can create the Supabase instance an&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.5</td><td>3</td><td>3.51</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1732120186\" target=\"_blank\" rel=\"noopener\">You can also cast the object to the proper type, I believe it gi&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.024</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1733116560\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"name\": \"@ubiquibot/issue-comment-e&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1733198462\" target=\"_blank\" rel=\"noopener\">Don't you have anything running already on port 4000? What error&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.8</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734781817\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionname = \"ubiquibot-issue-comment-embed&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734801708\" target=\"_blank\" rel=\"noopener\">I guess this can be part of a batch rename of all the projects.</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.242</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734875504\" target=\"_blank\" rel=\"noopener\">We could consider having this parameter in the configuration lat&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.024</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734880269\" target=\"_blank\" rel=\"noopener\">I guess this would be reset every run. If we run twice the logic&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.305</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1734944483\" target=\"_blank\" rel=\"noopener\">During the run it is fine, but all the results are pushed to sup&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.767</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1735045547\" target=\"_blank\" rel=\"noopener\">Since this is auto-generated I think you'd be better setting the&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.85</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1735811819\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"supabase\": \"1.191.3\",&#96;&#96&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1735835750\" target=\"_blank\" rel=\"noopener\">This should be removed, otherwise it will appear in the &#96;/he&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.9</td><td>3</td><td>3.294</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1735900367\" target=\"_blank\" rel=\"noopener\">Please change &#96;name&#96; and &#96;description&#96; properly.</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.32</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736110554\" target=\"_blank\" rel=\"noopener\">Should not be included.</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.936</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736112119\" target=\"_blank\" rel=\"noopener\">Should not be deleted.</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.092</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736113259\" target=\"_blank\" rel=\"noopener\">@0x4007 Probably a description like &#96;Created vector embeddin&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.415</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736113976\" target=\"_blank\" rel=\"noopener\">Why do you set this variable?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.776</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1736114458\" target=\"_blank\" rel=\"noopener\">What is this for?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.026</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1737902143\" target=\"_blank\" rel=\"noopener\">The kernel uses it to track the status of the plugins, but withi&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.248</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1738110321\" target=\"_blank\" rel=\"noopener\">This will always crash on run:https://github.com/Meniole/issue&hellip;</a></h6></td><td><details><summary>3.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.529</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739654278\" target=\"_blank\" rel=\"noopener\">Not with the current implementation because it wouldn't match th&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.57</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#discussion_r1739701364\" target=\"_blank\" rel=\"noopener\">This file should be removed, otherwise no plugin will run inside&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.023</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2314415944\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 It seems that you are storing the vectors withi&hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.408</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2315515351\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 Thanks a lot for the changes, appreciated. Sinc&hellip;</a></h6></td><td><details><summary>4.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.2&#13;regex:&#13;  wordCount: 98&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>16.659</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2315770489\" target=\"_blank\" rel=\"noopener\">Please fix the Knip issues, I will try to set up this on my repo&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.738</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322860298\" target=\"_blank\" rel=\"noopener\">@0x4007 My concern about having this as a worker is the followin&hellip;</a></h6></td><td><details><summary>2.91</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 73&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.8</td><td>3</td><td>8.28</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/1#issuecomment-2322874338\" target=\"_blank\" rel=\"noopener\">Tested thsi on my Cloudflare, works fine, thanks for all the bug&hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.9</td><td>3</td><td>7.182</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-plugin-installer_26.json","json":{"Keyrxng":{"userId":106303466,"total":105.434,"task":{"reward":75,"multiplier":1},"comments":[{"id":2500374420,"content":"Yeah I think it deserves it's own task vs holding back https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25\r\nYes so it is that's my mistake, the redirect URL should be updated within the `UbiquityOS` GitHub app so that as soon as they install the app, they are redirected to the installer.\r\nA redirect from `interactive-setup` would still make sense for contributors imo but I get it.\r\nPlease see this [comment](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2500319084) but to sum up:\r\n- `orgs.listForUser` is not reliable if the user has their membership as `private`\r\n- extracting public orgs from above and trying to use `orgs.listMemberShipForAuthUser` throws the below error for `ubiquity` for my account, yet I am a `member` and I have `write` access because I can push straight to any repo.\r\n![image](https://github.com/user-attachments/assets/c2220177-9cdd-4dfd-984d-1e6a88650608)\r\nSo it appears to me like org settings are affecting our API responses when using these methods (I tried with a PAT token and got the same results) which makes sense because `ubiquity` did not show for @gentlementlegen amongst others.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2500374420","commentType":"ISSUE_AUTHOR","score":{"reward":12.015,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1.2},"priority":3,"words":{"wordCount":149,"wordValue":0.1,"result":2.24},"readability":{"fleschKincaid":58.03000000000003,"syllables":220,"sentences":5,"score":0.9803000000000003},"multiplier":1,"relevance":0.9}},{"id":2504577188,"content":"@rndquu #31 \r\nI tried near all available methods and all of them errored when I tried to find out more about their permissions (via the error screenshot above) through `rest.org` although `rest.repo` allows you to check permission for a particular repo which seems to bypass whatever is preventing the `rest.org`.\r\nSo if `-marketplace` shows up for you guys then the PR fixes things I think","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2504577188","commentType":"ISSUE_AUTHOR","score":{"reward":7.848,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":57.99225409836066,"syllables":85,"sentences":2,"score":0.9799225409836066},"multiplier":1,"relevance":0.8}},{"id":2683309620,"content":"Orgs to select for editing come from the below method currently\r\nhttps://docs.github.com/en/rest/orgs/orgs?apiVersion=2022-11-28#list-organizations-for-the-authenticated-user\r\n```ts\r\npublic async getGitHubUserOrgs(): Promise<string[]> {\r\n    const octokit = await this.getOctokit();\r\n    const response = await octokit.rest.orgs.listForAuthenticatedUser();\r\n    return response.data.map((org: { login: string }) => org.login);\r\n  }\r\n```\r\n1. Who is using this installer? I'd assume a redirect after https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171 is complete to the installer UI which would naturally be the owner of the org. Then potentially who after that? Admin & Owner? Partner defined?\r\n2. What orgs should be shown when a partner uses the installer?\r\n- Orgs that they are an admin of or just owner of, collaborator of?\r\n- Should the partner determine which roles can edit the config or do we enforce rules, if we enforce then what should they be?\r\nWe sort of scrapped global config variables from `ubiquity-os-config.yml` but we could leverage that to enforce partner defined roles which can edit (at least via the UI). \r\nE.g: The org owner must use it after `kernel-setup` and we allow them to input roles that can edit and we write this to the config separate from `plugins:` and we read this on fetch and check against our authenticated user.\r\n_Originally posted by @Keyrxng in https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/25#issuecomment-2493797026_","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.07,"formatting":{"content":{"p":{"score":0,"elementCount":9},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4},"ul":{"score":0,"elementCount":1},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":3}},"result":3.4},"priority":1,"words":{"wordCount":164,"wordValue":0.1,"result":2.09},"readability":{"fleschKincaid":64.18748923959828,"syllables":316,"sentences":17,"score":0.9581251076040173},"multiplier":1,"relevance":1}},{"id":2204087204,"content":"Resolves #26\r\nRequires #25 \r\nChanges:\r\n1. `rest.users.getAuthenticated()`\r\n2. `rest.orgs.listForAuthenticatedUser()`\r\n3. `rest.orgs.listForUser(username)`\r\n4. `rest.repos.getCollaboratorPermissionLevel(org, .ubiquity-os)`\r\nQA:\r\n![image](https://github.com/user-attachments/assets/57e1725f-9a05-423d-9e5d-fa9c4e971ae1)\r\nConsole:\r\n![image](https://github.com/user-attachments/assets/dba19381-54cc-4110-b87c-27ec0d056ab3)\r\nElse:\r\nI tried every `.rest.org` method that seemed relevant and none of them returned `-marketplace` for me so idk if that's a me problem or an org problem but it should be fetched at least and either errored in the console or displayed but it's neither. It also didn't display for you either @gentlementlegen and we are both public members of the org.\r\nCould you try to see if `-marketplace` shows up for you now with this change?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31","commentType":"PULL_SPECIFICATION","score":{"reward":3.501,"formatting":{"content":{"p":{"score":0,"elementCount":14},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":1,"words":{"wordCount":85,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":66.6037254901961,"syllables":112,"sentences":3,"score":0.933962745098039},"multiplier":1,"relevance":0.9}},{"id":2507814153,"content":"Okay that's fine then ty\r\nWill address that\r\nIf you clicked add but made a mistake/wanted to change a param, you'd want to be able to click add again yeah? But otherwise it should only allow you to click add once?\r\n1. user clicks `add`/`remove` > user clicks `push to github` > A) render `pluginSelector` B) disable `add`/`remove`\r\n2. user clicks `add`/`remove` > user closes the notification or it disappears > do nothing\r\n1. It should not disappear at all and requires the user to close or push?\r\n2. If hovered, do not disappear else disappear?\r\nWill address that","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507814153","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":3,"words":{"wordCount":87,"wordValue":0,"result":0},"readability":{"fleschKincaid":71.51193103448277,"syllables":121,"sentences":5,"score":0.8848806896551723},"multiplier":0,"relevance":0.4}},{"id":2507944746,"content":"@gentlementlegen \r\nIs the preferred behaviour to be this:\r\n![image](https://github.com/user-attachments/assets/73980435-97b5-4fc9-afc7-d33f48e0d152)\r\nor for the prop to not be included in the config?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507944746","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0,"result":0},"readability":{"fleschKincaid":58.42368421052632,"syllables":29,"sentences":1,"score":0.9842368421052632},"multiplier":0,"relevance":0.5}},{"id":2508022923,"content":"Implemented\r\nAddressed\r\nImplemented:\r\n- user clicks add/remove > user closes the notification or it disappears > do nothing\r\n- user clicks add/remove > user clicks push to github > render `pluginSelector`\r\nI'm unsure how you want me to handle multiple `add` clicks prior to `push`, please lmk if I should use another approach. Perhaps updating the values directly from input change and refactoring `add` into the push event and removing the notification as one alt? If you could create a new task for it that would be ideal as it'll involve a bit of work, ty.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508022923","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":3,"words":{"wordCount":90,"wordValue":0,"result":0},"readability":{"fleschKincaid":47.60500000000005,"syllables":137,"sentences":3,"score":0.8760500000000004},"multiplier":0,"relevance":0.7}},{"id":2508043254,"content":"@zugdev fancy doing a review bud?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508043254","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0,"result":0},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":0,"relevance":0.1}},{"id":2508099256,"content":"@rndquu your membership is private so it would only be returned by `listForAuthenticatedUser`, can you confirm that it returns it from that call pls? Just like how `-marketplace` doesn't appear anywhere for me but it's showing up for @gentlementlegen makes me believe that it can be settings related which is almost out of our control when considering arbitrary partner orgs.\r\nPerhaps it's the `permission === \"write\"` check or something I'm not sure, but it's difficult for me to debug your conditions","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508099256","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":81,"wordValue":0,"result":0},"readability":{"fleschKincaid":58.27444444444447,"syllables":116,"sentences":3,"score":0.9827444444444446},"multiplier":0,"relevance":0.8}},{"id":2508106799,"content":"Ty for the clarification I will look into it","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508106799","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0,"result":0},"readability":{"fleschKincaid":66.10000000000002,"syllables":14,"sentences":1,"score":0.9389999999999997},"multiplier":0,"relevance":0.2}},{"id":2508163646,"content":"I expect the issue stems from your org not having a config repo, which we rely on to identify permissions to work around OAuth errors with org settings. I duplicated the logic [here](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23).\r\nThis approach:\r\n- Returns all orgs from `listForAuthenticatedUser`.\r\n- Includes publicly fetched orgs that have a `.ubiquity-os` repo to check permissions.\r\nAn alternative would be to list all org repos and check any repo if `.ubiquity-os` does not exist. Let me know which approach you'd prefer.\r\nHopefully this has resolved it for you, again it's hard for me to debug your conditions locally so my apologies for the back and forth","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508163646","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1.2},"priority":3,"words":{"wordCount":101,"wordValue":0,"result":0},"readability":{"fleschKincaid":68.22168316831684,"syllables":148,"sentences":7,"score":0.9177831683168316},"multiplier":0,"relevance":0.95}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 105.434 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>75</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.07</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>19.863</td></tr><tr><td>Review</td><td>Comment</td><td>8</td><td>3.501</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26\" target=\"_blank\" rel=\"noopener\">Orgs to select for editing come from the below method currently&hellip;</a></h6></td><td><details><summary>5.49</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 9&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.4&#13;regex:&#13;  wordCount: 164&#13;  wordValue: 0.1&#13;  result: 2.09&#13;</pre></details></td><td>1</td><td>1</td><td>7.07</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2500374420\" target=\"_blank\" rel=\"noopener\">Yeah I think it deserves it's own task vs holding back https://g&hellip;</a></h6></td><td><details><summary>3.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.2&#13;regex:&#13;  wordCount: 149&#13;  wordValue: 0.1&#13;  result: 2.24&#13;</pre></details></td><td>0.9</td><td>3</td><td>12.015</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2504577188\" target=\"_blank\" rel=\"noopener\">@rndquu #31 I tried near all available methods and all of them&hellip;</a></h6></td><td><details><summary>2.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.848</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31\" target=\"_blank\" rel=\"noopener\">Resolves #26Requires #25 Changes:1. &#96;rest.users.getAut&hellip;</a></h6></td><td><details><summary>3.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 14&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;  result: 0.4&#13;regex:&#13;  wordCount: 85&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>0.9</td><td>1</td><td>3.501</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507814153\" target=\"_blank\" rel=\"noopener\">Okay that's fine then tyWill address thatIf you clicked add &hellip;</a></h6></td><td><details><summary>0.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;  result: 0.4&#13;regex:&#13;  wordCount: 87&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.4</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507944746\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Is the preferred behaviour to be this:![ima&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.5</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508022923\" target=\"_blank\" rel=\"noopener\">ImplementedAddressedImplemented:- user clicks add/remove &&hellip;</a></h6></td><td><details><summary>0.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 90&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508043254\" target=\"_blank\" rel=\"noopener\">@zugdev fancy doing a review bud?</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508099256\" target=\"_blank\" rel=\"noopener\">@rndquu your membership is private so it would only be returned &hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 81&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508106799\" target=\"_blank\" rel=\"noopener\">Ty for the clarification I will look into it</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.2</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508163646\" target=\"_blank\" rel=\"noopener\">I expect the issue stems from your org not having a config repo,&hellip;</a></h6></td><td><details><summary>1.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.2&#13;regex:&#13;  wordCount: 101&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.95</td><td>3</td><td>0</td></tr></tbody></table></details>"},"rndquu":{"total":72.429,"userId":119500907,"comments":[{"id":2500140847,"content":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer is used by partners who wants to start using the https://github.com/apps/ubiquity-os bot.\r\nNo, https://github.com/ubiquity-os/ubiquity-os-kernel/issues/171 is for collaborators. Partners should only interact with the https://github.com/ubiquity-os/ubiquity-os-plugin-installer, they don't need to deploy the bot from scratch, we've already installed it for them.\r\nAdmin or owner, I suppose owner in most cases.\r\nAll orgs where authenticated user has a `write` access in the organization. If it's hard to get the access level via github API then all organizations where currently authenticated user is admin or owner (i.e. has a role with `write` access because that permission is required for editing the bot's config).\r\nKeep it simple for now, if authenticated user has `write` permissions then he's allowed to edit an organization config.\r\nTo sum up, as far as I understand, as a part of this issue we should fix [this](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2497319574) bug.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2500140847","commentType":"ISSUE_COLLABORATOR","score":{"reward":28.65,"formatting":{"content":{"p":{"score":0,"elementCount":6},"a":{"score":1,"elementCount":5}},"result":5},"priority":3,"words":{"wordCount":137,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":59.86907894736845,"syllables":272,"sentences":14,"score":0.9986907894736845},"multiplier":1,"relevance":1}},{"id":2504171908,"content":"So, as far as I understand from [this](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2500302845) comment, if user's membership is private then organization won't be displayed on plugin setup. Is there a way (i.e. API method) to get all user organizations (i.e. with both public and private organization membership)?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2504171908","commentType":"ISSUE_COLLABORATOR","score":{"reward":12.81,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":62.957681159420304,"syllables":74,"sentences":6,"score":0.970423188405797},"multiplier":1,"relevance":1}},{"id":2519436350,"content":"@gentlementlegen In this github issue task reward is 75 USD while task solver received 150 WXDAI. Is it a bug or somewhat expected?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519436350","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":62.74510869565219,"syllables":36,"sentences":2,"score":0.9725489130434781},"multiplier":1,"relevance":0}},{"id":2470243637,"content":"Getting 3 out of 4 expected organizations:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-29 at 19 09 30\" src=\"https://github.com/user-attachments/assets/a5b83eb0-917a-4bb4-9675-93a824a2b942\">\r\nThe only missing org is https://github.com/rndquu-org where my account is an owner. It used to be displayed in the previous PRs but this PR somehow doesn't display it.\r\nPls fix.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#pullrequestreview-2470243637","commentType":"PULL_COLLABORATOR","score":{"reward":13.128,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":76.79154545454547,"syllables":91,"sentences":5,"score":0.8320845454545452},"multiplier":1,"relevance":0.8}},{"id":2472746694,"content":"Works fine, 4 out of 4 organizations are displayed for me, as expected","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#pullrequestreview-2472746694","commentType":"PULL_COLLABORATOR","score":{"reward":2.1,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":69.99384615384618,"syllables":19,"sentences":1,"score":0.9000615384615382},"multiplier":1,"relevance":0.5}},{"id":2508105451,"content":"The missing https://github.com/rndquu-org is displayed in [this](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/23) PR, so it's smth code related.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508105451","commentType":"PULL_COLLABORATOR","score":{"reward":7.791,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":94.30000000000001,"syllables":22,"sentences":2,"score":0.6569999999999999},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2470243637,"effect":{"addition":143,"deletion":84},"reward":6.81,"priority":3},{"reviewId":2472746694,"effect":{"addition":25,"deletion":13},"reward":1.14,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 72.429 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>7.95</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>41.46</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>23.019</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31\" target=\"_blank\" rel=\"noopener\">#31</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+143 -84</td><td>3</td><td>6.81</td></tr><tr><td>+25 -13</td><td>3</td><td>1.14</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2500140847\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os/ubiquity-os-plugin-installer is u&hellip;</a></h6></td><td><details><summary>7.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    a:&#13;      score: 1&#13;      elementCount: 5&#13;  result: 5&#13;regex:&#13;  wordCount: 137&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>1</td><td>3</td><td>28.65</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2504171908\" target=\"_blank\" rel=\"noopener\">So, as far as I understand from [this](https://github.com/ubiqui&hellip;</a></h6></td><td><details><summary>3.31</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 46&#13;  wordValue: 0.1&#13;  result: 2.31&#13;</pre></details></td><td>1</td><td>3</td><td>12.81</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519436350\" target=\"_blank\" rel=\"noopener\">@gentlementlegen In this github issue task reward is 75 USD whil&hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#pullrequestreview-2470243637\" target=\"_blank\" rel=\"noopener\">Getting 3 out of 4 expected organizations:&lt;img width=\"1511\"&hellip;</a></h6></td><td><details><summary>4.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.8</td><td>3</td><td>13.128</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#pullrequestreview-2472746694\" target=\"_blank\" rel=\"noopener\">Works fine, 4 out of 4 organizations are displayed for me, as ex&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.1</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508105451\" target=\"_blank\" rel=\"noopener\">The missing https://github.com/rndquu-org is displayed in [this]&hellip;</a></h6></td><td><details><summary>3.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.7</td><td>3</td><td>7.791</td></tr></tbody></table></details>"},"0x4007":{"total":1.641,"userId":4975670,"comments":[{"id":2519464925,"content":"Limits are enforced for all rewards to the assignee task reward amount. The warning exists in the breakdown. \nCurrently the only way to go beyond the limit is if the assignee wrote the spec as well. \nPerhaps we need to think through this more but to me it makes sense that if the assignee also wrote the spec that they should receive more rewards. \nLastly I still believe that we need to dial down spec rewards, perhaps remove the priority multiplier on it.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519464925","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.996,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":83,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":72.76913253012052,"syllables":115,"sentences":5,"score":0.8723086746987948},"multiplier":1,"relevance":0.1}},{"id":2519603492,"content":"As I understand you're doing a multiplier and then multiplying the priority level so 3 x 4 =12x multiplier which is too high.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519603492","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.645,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":59.10000000000004,"syllables":35,"sentences":1,"score":0.9910000000000003},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.641 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>1.641</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519464925\" target=\"_blank\" rel=\"noopener\">Limits are enforced for all rewards to the assignee task reward &hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 83&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.996</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519603492\" target=\"_blank\" rel=\"noopener\">As I understand you're doing a multiplier and then multiplying t&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.645</td></tr></tbody></table></details>"},"gentlementlegen":{"total":30.84,"userId":9807008,"comments":[{"id":2519475334,"content":"Right now you can get maximum twice the total of the reward, so in this case 75 for the reward, plus 75 for incentives (comments, spec etc) totaling 150. I didn't intend that total at first but it was deemed as a feature so for now it works that way, we can always change it if needed.\r\n@0x4007 all it takes is setting this to one in the cfg: https://github.com/ubiquity-os/.ubiquity-os/blob/main/.github/.ubiquity-os.config.dev.yml#L67","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519475334","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":70,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":86.94553488372094,"syllables":113,"sentences":10,"score":0.7305446511627907},"multiplier":1,"relevance":0}},{"id":2519736728,"content":"That is correct, first multiplier is applied to the comment evaluation and the priority then applies to the final result so x12. Putting the multiplier back to 1 should solve that.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519736728","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":62.837983870967776,"syllables":47,"sentences":2,"score":0.9716201612903222},"multiplier":1,"relevance":0}},{"id":2507165429,"content":"@Keyrxng Could we have preview deployments like we have for other frontend projects?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507165429","commentType":"PULL_COLLABORATOR","score":{"reward":1.68,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":69.99384615384618,"syllables":19,"sentences":1,"score":0.9000615384615382},"multiplier":1,"relevance":0.4}},{"id":2507219815,"content":"The orgs show up properly on my side\r\n<img width=\"495\" alt=\"image\" src=\"https://github.com/user-attachments/assets/2545706a-3439-4db2-8cff-d75327adf0b3\">\r\n## Bug list\r\n- When you maintain a click on the set defaults, here it what happens\r\n<img width=\"495\" alt=\"image\" src=\"https://github.com/user-attachments/assets/1fbfa96b-4f19-4c2e-bf8e-551ca4c31cad\">\r\n- You can click and infinite amount of times on the \"add\" button\r\n<img width=\"1149\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3ad6fc0d-d491-4c83-b737-eb203eeb5368\">\r\n- the toast asking you if you want to save disappear even when hovered\r\n- it set the value to \"undefined\" for OpenAiBaseUrl which I don't think is the desired behavior","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507219815","commentType":"PULL_COLLABORATOR","score":{"reward":24.624,"formatting":{"content":{"p":{"score":0,"elementCount":6},"h2":{"score":1,"elementCount":1},"ul":{"score":0,"elementCount":3},"li":{"score":0.1,"elementCount":4},"a":{"score":1,"elementCount":3}},"result":4.4},"priority":3,"words":{"wordCount":83,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":60.71034482758621,"syllables":160,"sentences":4,"score":0.9928965517241379},"multiplier":1,"relevance":0.9}},{"id":2507950496,"content":"@Keyrxng Not to be included so the default value is used on `Decode` call. If set to an empty string the value then would be `\"\"` not the default.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507950496","commentType":"PULL_COLLABORATOR","score":{"reward":4.536,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":89.73250000000002,"syllables":33,"sentences":2,"score":0.7026749999999998},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 30.84 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>0</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>30.84</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519475334\" target=\"_blank\" rel=\"noopener\">Right now you can get maximum twice the total of the reward, so &hellip;</a></h6></td><td><details><summary>3.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 70&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/26#issuecomment-2519736728\" target=\"_blank\" rel=\"noopener\">That is correct, first multiplier is applied to the comment eval&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507165429\" target=\"_blank\" rel=\"noopener\">@Keyrxng Could we have preview deployments like we have for othe&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.68</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507219815\" target=\"_blank\" rel=\"noopener\">The orgs show up properly on my side&lt;img width=\"495\" alt=\"i&hellip;</a></h6></td><td><details><summary>7.03</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 3&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 4.4&#13;regex:&#13;  wordCount: 83&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>3</td><td>24.624</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2507950496\" target=\"_blank\" rel=\"noopener\">@Keyrxng Not to be included so the default value is used on &#96&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.536</td></tr></tbody></table></details>"},"zugdev":{"total":0.297,"userId":155616000,"comments":[{"id":2508708814,"content":"I think the previous push toaster should disappear if I press on add again","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508708814","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.222,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":71.76785714285715,"syllables":20,"sentences":1,"score":0.8823214285714285},"multiplier":0.25,"relevance":0.2}},{"id":2508725680,"content":"This doesnt change anything for me, so not sure","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508725680","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.075,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":94.30000000000001,"syllables":11,"sentences":1,"score":0.6569999999999999},"multiplier":0.25,"relevance":0.1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.297 XP ]</a>&nbsp;</h3><h6>@zugdev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>2</td><td>0.297</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508708814\" target=\"_blank\" rel=\"noopener\">I think the previous push toaster should disappear if I press on&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.222</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/31#issuecomment-2508725680\" target=\"_blank\" rel=\"noopener\">This doesnt change anything for me, so not sure</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.075</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_60.json","json":{"obeys":{"userId":131892818,"total":27.472,"task":{"reward":25,"multiplier":1},"comments":[{"id":2072947131,"content":"Resolves #60\r\nI had to refactor a couple functions in `generate-erc20-permit.ts` due to issues with cognitive complexity, specifically I created three new functions `getPrivateKey` `getAdminWallet` and `getTokenDecimals`\r\nI also had to include a yarn packageManager version in `package.json` because it wasn't letting me commit otherwise. let me know if you want the yarn version changed, I used whatever version corepack set.","url":"https://github.com/ubiquity-os/permit-generation/pull/70","commentType":"PULL_SPECIFICATION","score":{"reward":2.472,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":1,"words":{"wordCount":57,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":41.360131578947374,"syllables":92,"sentences":2,"score":0.8136013157894737},"multiplier":1,"relevance":0.8}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 27.472 XP ]</a>&nbsp;</h3><h6>@obeys</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>2.472</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/70\" target=\"_blank\" rel=\"noopener\">Resolves #60I had to refactor a couple functions in &#96;gener&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 57&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.472</td></tr></tbody></table></details>"},"hydroxylase":{"total":0,"userId":131718427,"reviewRewards":[{"url":"https://github.com/ubiquity-os/permit-generation/pull/70"}]},"0x4007":{"total":6.229,"userId":4975670,"comments":[{"id":2351894520,"content":"@gentlementlegen  another start failure","url":"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351894520","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.088,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":-29.87499999999997,"syllables":11,"sentences":1,"score":0},"multiplier":1,"relevance":0.2}},{"id":2351901347,"content":"Same problem I had all day the other day when working on the plugin, so maybe I broke something environment related on the production deployment somehow by making a new cloudflare account. \nThis error message needs to be more specific.","url":"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351901347","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.558,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":53.29000000000005,"syllables":63,"sentences":2,"score":0.9329000000000005},"multiplier":1,"relevance":0.2}},{"id":2351917014,"content":"You should start by reverting his pull, reopening the issue, and then take your time with the fix","url":"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351917014","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.342,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":80.46500000000002,"syllables":23,"sentences":1,"score":0.7953499999999998},"multiplier":1,"relevance":0.2}},{"id":2305669451,"content":"Most of the changes generally look fine","url":"https://github.com/ubiquity-os/permit-generation/pull/70#pullrequestreview-2305669451","commentType":"PULL_COLLABORATOR","score":{"reward":0.258,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0.3}},{"id":2334965821,"content":"Let's test in production!","url":"https://github.com/ubiquity-os/permit-generation/pull/70#pullrequestreview-2334965821","commentType":"PULL_COLLABORATOR","score":{"reward":0.065,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.1}},{"id":1760441776,"content":"What if you used yarn 1.21? I believe I have this version and 1. I never use core pack 2. I never have to add this to package.json","url":"https://github.com/ubiquity-os/permit-generation/pull/70#discussion_r1760441776","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -121,5 +121,6 @@\n       \"import\": \"./dist/utils/index.js\",\n       \"types\": \"./dist/utils/index.d.ts\"\n     }\n-  }\n+  },\n+  \"packageManager\": \"yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e\"","score":{"reward":1.708,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":103.06000000000002,"syllables":35,"sentences":6,"score":1},"multiplier":1,"relevance":0.7}},{"id":1760455573,"content":"I never had this problem so I can't help you. \nTry reinitializing your yarn and remove core pack. Seems to introduce more problems than it fixes.","url":"https://github.com/ubiquity-os/permit-generation/pull/70#discussion_r1760455573","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -121,5 +121,6 @@\n       \"import\": \"./dist/utils/index.js\",\n       \"types\": \"./dist/utils/index.d.ts\"\n     }\n-  }\n+  },\n+  \"packageManager\": \"yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e\"","score":{"reward":1.1,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":81.76666666666668,"syllables":37,"sentences":3,"score":0.7823333333333332},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2305669451,"effect":{"addition":105,"deletion":101},"reward":2.06,"priority":1},{"reviewId":2305679909,"effect":{"addition":1,"deletion":1},"reward":0.02,"priority":1},{"reviewId":2334965821,"effect":{"addition":1,"deletion":2},"reward":0.03,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/70"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 6.229 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>2.11</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>0.988</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>3.131</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/70\" target=\"_blank\" rel=\"noopener\">#70</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+105 -101</td><td>1</td><td>2.06</td></tr><tr><td>+1 -1</td><td>1</td><td>0.02</td></tr><tr><td>+1 -2</td><td>1</td><td>0.03</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351894520\" target=\"_blank\" rel=\"noopener\">@gentlementlegen  another start failure</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.088</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351901347\" target=\"_blank\" rel=\"noopener\">Same problem I had all day the other day when working on the plu&hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.558</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351917014\" target=\"_blank\" rel=\"noopener\">You should start by reverting his pull, reopening the issue, and&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.342</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/70#pullrequestreview-2305669451\" target=\"_blank\" rel=\"noopener\">Most of the changes generally look fine</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.258</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/70#pullrequestreview-2334965821\" target=\"_blank\" rel=\"noopener\">Let's test in production!</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.065</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/70#discussion_r1760441776\" target=\"_blank\" rel=\"noopener\">What if you used yarn 1.21? I believe I have this version and 1.&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.708</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/70#discussion_r1760455573\" target=\"_blank\" rel=\"noopener\">I never had this problem so I can't help you. Try reinitializin&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.5</td><td>1</td><td>1.1</td></tr></tbody></table></details>"},"gentlementlegen":{"total":0.751,"userId":9807008,"comments":[{"id":2351895161,"content":"@Keyrxng rfc\r\nWe don't have backlogs for this so it's quite hard to debug. Maybe it is due to the self un-assignment. Also assigning manually should have triggered a display of the deadline.\r\n---\r\nThe error is the following\r\n```json\r\n{\r\n\"logs\": [\r\n    {\r\n      \"message\": [\r\n        \"Error: Unable to decode value as it does not match the expected schema\"\r\n      ],\r\n      \"level\": \"error\",\r\n      \"timestamp\": 1726450747927\r\n    }\r\n  ],\r\n}\r\n```\r\nwill investigate.","url":"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351895161","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.282,"formatting":{"content":{"p":{"score":0,"elementCount":4},"hr":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":75.90979651162792,"syllables":61,"sentences":4,"score":0.8409020348837208},"multiplier":1,"relevance":0.1}},{"id":2351912070,"content":"It appears to me that the logic to decode the schema is wrong, and this would be introduced by Jordan's PR addition regarding the configuration accepting the amount of parallel tasks allowed for each user. If not provided, the default configuration fails which is why it is failing in your last try, on ubiquity / ubiquibot orgs, but not on mine where I provide the full config. Working on a fix right now. See https://github.com/ubiquibot/command-start-stop/issues/51","url":"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351912070","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.469,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":74,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":60.53780722891568,"syllables":127,"sentences":5,"score":0.9946219277108432},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/permit-generation/pull/70"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.751 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>0.751</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351895161\" target=\"_blank\" rel=\"noopener\">@Keyrxng rfcWe don't have backlogs for this so it's quite hard&hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.282</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/60#issuecomment-2351912070\" target=\"_blank\" rel=\"noopener\">It appears to me that the logic to decode the schema is wrong, a&hellip;</a></h6></td><td><details><summary>3.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 74&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.469</td></tr></tbody></table></details>"},"Keyrxng":{"total":4.932,"userId":106303466,"comments":[{"id":2511364338,"content":"This repo I think is the only one which is using `Ethers@v6` and it would be best if the package was downgraded and any affected logic be refactored to work with `V5`","url":"https://github.com/ubiquity-os/permit-generation/issues/60","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.41,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":66.40500000000003,"syllables":39,"sentences":1,"score":0.9359499999999997},"multiplier":1,"relevance":1}},{"id":2319731756,"content":"I agree if anything was wrong with the downgrade the tests would have broken, can't really QA it much beyond that unless going the extra mile and testing it against the various overloads or using it to generate a permit (I don't think I've ever actually generated a QA permit before in any repo other than `pay.ubq.fi` and it uses it's own script, not this pkg. My attempts to QA conversation rewards all fail at the point of permit generation too so)","url":"https://github.com/ubiquity-os/permit-generation/pull/70#pullrequestreview-2319731756","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.492,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":85,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":41.2763235294118,"syllables":123,"sentences":2,"score":0.812763235294118},"multiplier":0.25,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2319731756,"effect":{"addition":103,"deletion":100},"reward":2.03,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/70"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 4.932 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>2.03</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.41</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.492</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/70\" target=\"_blank\" rel=\"noopener\">#70</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+103 -100</td><td>1</td><td>2.03</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/60\" target=\"_blank\" rel=\"noopener\">This repo I think is the only one which is using &#96;Ethers@v6&&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>1</td><td>1</td><td>2.41</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/70#pullrequestreview-2319731756\" target=\"_blank\" rel=\"noopener\">I agree if anything was wrong with the downgrade the tests would&hellip;</a></h6></td><td><details><summary>2.64</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 85&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.492</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-sdk_64.json","json":{"whilefoo":{"userId":139262667,"total":50.684,"task":{"reward":50,"multiplier":1},"comments":[{"id":2639798888,"content":"Errors should be split by two empty lines `\\n\\n` and should not be prefixed with `Error: `\nExample:","url":"https://github.com/ubiquity-os/plugin-sdk/issues/64#issuecomment-2639798888","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.684,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":78.81000000000003,"syllables":20,"sentences":1,"score":0.8118999999999997},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 50.684 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.684</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/64#issuecomment-2639798888\" target=\"_blank\" rel=\"noopener\">Errors should be split by two empty lines &#96;\\n\\n&#96; and sho&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.9</td><td>2</td><td>0.684</td></tr></tbody></table></details>"},"0x4007":{"total":2.508,"userId":4975670,"comments":[{"id":2649810522,"content":"@Whilefoo I thought you fixed this was there another similar problem and pull? I remember reviewing it.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/64#issuecomment-2649810522","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.052,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":58.8663235294118,"syllables":28,"sentences":2,"score":0.988663235294118},"multiplier":1,"relevance":0.6}},{"id":2650938647,"content":"Looks like its merged.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/64#issuecomment-2650938647","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.456,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-sdk/pull/69"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.508 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.508</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/64#issuecomment-2649810522\" target=\"_blank\" rel=\"noopener\">@Whilefoo I thought you fixed this was there another similar pro&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.6</td><td>2</td><td>2.052</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/64#issuecomment-2650938647\" target=\"_blank\" rel=\"noopener\">Looks like its merged.</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.4</td><td>2</td><td>0.456</td></tr></tbody></table></details>"},"gentlementlegen":{"total":27.098,"userId":9807008,"comments":[{"id":2822702110,"content":"maybe we should also handle `AggregateError` inside the SDK to have this functionality everywhere\n_Originally posted by @whilefoo in https://github.com/ubiquity-os-marketplace/command-start-stop/pull/133#discussion_r1936395440_\nMultiple aggregated errors do not get displayed properly by the SDK using `postComment`, because it is an array of errors instead of a single error with a single message. Error messages should get concatenated altogether.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/64","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.17,"formatting":{"content":{"p":{"score":0,"elementCount":1},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":52,"wordValue":0.1,"result":2.41},"readability":{"fleschKincaid":34.48791666666668,"syllables":114,"sentences":3,"score":0.7448791666666668},"multiplier":1,"relevance":1}},{"id":1955318930,"content":"Wouldn't it be worth to wrap this in a function? It seems that it is the same logic for actions and workers, would avoid duplicate code and mistakes","url":"https://github.com/ubiquity-os/plugin-sdk/pull/69#discussion_r1955318930","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -96,16 +96,19 @@ export async function createActionsPlugin<TConfig = unknown, TEnv = unknown, TCo\n   } catch (error) {\n     console.error(error);\n \n-    let loggerError: LogReturn | null;\n-    if (error instanceof Error) {\n-      core.setFailed(error);\n-      loggerError = context.logger.error(`Error: ${error}`, { error: error });\n-    } else if (error instanceof LogReturn) {\n-      core.setFailed(error.logMessage.raw);\n+    let loggerError: LogReturn | Error;","score":{"reward":4.086,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":84.17956896551725,"syllables":37,"sentences":2,"score":0.7582043103448275},"multiplier":1,"relevance":0.9}},{"id":2657902847,"content":"The problem with aggregate error is that it accepts pretty much anything, so if you push an array of logger errors then it looks like this:\r\nhttps://github.com/Meniole/plugin-template/issues/1#issuecomment-2657899904\r\nCorresponding code:\r\n```ts\r\n  throw new AggregateError([new Error(\"error 1\"), new Error(\"error 2\"), logger.error(\"logger error\"), new RangeError(\"range error\")]);\r\n```\r\nBut I think it would be the `logger` responsibility to properly handle `toString()` method so it doesn't display this way.","url":"https://github.com/ubiquity-os/plugin-sdk/pull/69#issuecomment-2657902847","commentType":"PULL_COLLABORATOR","score":{"reward":6.672,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":44.32855263157896,"syllables":90,"sentences":2,"score":0.8432855263157896},"multiplier":1,"relevance":0.8}},{"id":2667332338,"content":"@whilefoo using the same code snippet in mentioned before, I pulled the latest version and now it seems to look like:\r\nhttps://github.com/Meniole/plugin-template/issues/1#issuecomment-2667330475\r\nAm I missing something? I cleaned lock files and `node_modules` to be sure, same result.","url":"https://github.com/ubiquity-os/plugin-sdk/pull/69#issuecomment-2667332338","commentType":"PULL_COLLABORATOR","score":{"reward":4.68,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":65.65000000000002,"syllables":67,"sentences":3,"score":0.9434999999999998},"multiplier":1,"relevance":0.6}},{"id":2673947623,"content":"@whilefoo Oops sorry forgot to test again, will give it another go and merge if it goes well.","url":"https://github.com/ubiquity-os/plugin-sdk/pull/69#issuecomment-2673947623","commentType":"PULL_COLLABORATOR","score":{"reward":1.05,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":71.06500000000001,"syllables":25,"sentences":1,"score":0.8893499999999999},"multiplier":1,"relevance":0.3}},{"id":2674065905,"content":"New QA from my side: https://github.com/Meniole/plugin-template/pull/3#issuecomment-2674064377\r\nSeems to work fine, thank you for the fix and sorry for the delay, might have been some residue in my `node_modules` files.","url":"https://github.com/ubiquity-os/plugin-sdk/pull/69#issuecomment-2674065905","commentType":"PULL_COLLABORATOR","score":{"reward":4.9,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":73.7331756756757,"syllables":50,"sentences":2,"score":0.8626682432432431},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2616389748,"effect":{"addition":16,"deletion":11},"reward":0.54,"priority":2},{"reviewId":2632530401,"effect":{"addition":33,"deletion":17},"reward":1,"priority":2}],"url":"https://github.com/ubiquity-os/plugin-sdk/pull/69"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 27.098 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>1.54</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.17</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>21.388</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/69\" target=\"_blank\" rel=\"noopener\">#69</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+16 -11</td><td>2</td><td>0.54</td></tr><tr><td>+33 -17</td><td>2</td><td>1</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/64\" target=\"_blank\" rel=\"noopener\">maybe we should also handle &#96;AggregateError&#96; inside the &hellip;</a></h6></td><td><details><summary>3.41</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 52&#13;  wordValue: 0.1&#13;  result: 2.41&#13;</pre></details></td><td>1</td><td>1</td><td>4.17</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/69#discussion_r1955318930\" target=\"_blank\" rel=\"noopener\">Wouldn't it be worth to wrap this in a function? It seems that i&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.9</td><td>2</td><td>4.086</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/69#issuecomment-2657902847\" target=\"_blank\" rel=\"noopener\">The problem with aggregate error is that it accepts pretty much &hellip;</a></h6></td><td><details><summary>3.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.8</td><td>2</td><td>6.672</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/69#issuecomment-2667332338\" target=\"_blank\" rel=\"noopener\">@whilefoo using the same code snippet in mentioned before, I pul&hellip;</a></h6></td><td><details><summary>3.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.6</td><td>2</td><td>4.68</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/69#issuecomment-2673947623\" target=\"_blank\" rel=\"noopener\">@whilefoo Oops sorry forgot to test again, will give it another &hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.3</td><td>2</td><td>1.05</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/69#issuecomment-2674065905\" target=\"_blank\" rel=\"noopener\">New QA from my side: https://github.com/Meniole/plugin-template/&hellip;</a></h6></td><td><details><summary>2.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.7</td><td>2</td><td>4.9</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_73.json","json":{"gentlementlegen":{"userId":9807008,"total":103.08,"task":{"reward":100,"multiplier":1},"comments":[{"id":2404375169,"content":"We will have a `runs_on` item that will describe which events the plugin will be subscribed to, according to the following discussion.\r\nExpected format:\r\n- on the manifest side:\r\n```diff\r\n{\r\n  \"name\": \"query-user\",\r\n+ \"ubiquity:runsOn\": [ \"issues.opened\", \"issues.closed\" ]\r\n}\r\n```\r\n- on the configuration side: \r\n```diff\r\nplugins:\r\n- 'issues.opened':\r\n  - uses:\r\n     - plugin: org/query-user\r\n+      runsOn: [ 'issues.opened' ]\r\n```\r\nThe configuration takes over the manifest is present, otherwise the manifest is the default.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/73","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.08,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":1,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":39.23750000000001,"syllables":77,"sentences":2,"score":0.7923750000000002},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 103.08 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>100</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.08</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/73\" target=\"_blank\" rel=\"noopener\">We will have a &#96;runs_on&#96; item that will describe which e&hellip;</a></h6></td><td><details><summary>2.49</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>1</td><td>1</td><td>3.08</td></tr></tbody></table></details>"},"0x4007":{"total":12.313,"userId":4975670,"comments":[{"id":2224260739,"content":"`runsOn` Camel case seems unexpected. What about snake case as I've seen in the manifest standard. \nOr better, consider a one word solution like subscribe, invoke, listener (reference to event listener)\nSome other interesting syntax:\n`\"plugin:addEventListener\": [ ... ]`\nAlso isn't `uses:` superfluous?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/73#issuecomment-2224260739","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.421,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":43.963076923076954,"syllables":69,"sentences":3,"score":0.8396307692307695},"multiplier":1,"relevance":0.9}},{"id":2247131332,"content":"@gentlementlegen Review comments aren't taken into account","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/73#issuecomment-2247131332","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.348,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":8.365000000000009,"syllables":18,"sentences":1,"score":0.4836500000000001},"multiplier":1,"relevance":0.4}},{"id":1681987090,"content":"I think the agreement was to clobber the webhook event's array using the repository config if it exists in the org config. It allows for repo config to overwrite org config event, on the webhook event level.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681987090","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -39,11 +40,8 @@ async function getConfigurationFromRepo(context: GitHubContext, repository: stri\n  */\n function mergeConfigurations(configuration1: PluginConfiguration, configuration2: PluginConfiguration): PluginConfiguration {\n   const mergedConfiguration = { ...configuration1 };\n-  for (const key of Object.keys(configuration2.plugins)) {\n-    const pluginKey = key as keyof PluginConfiguration[\"plugins\"];\n-    if (configuration2.plugins[pluginKey]?.length) {\n-      mergedConfiguration.plugins[pluginKey] = configuration2.plugins[pluginKey];\n-    }\n+  if (configuration2.plugins?.length) {\n+    mergedConfiguration.plugins = configuration2.plugins;","score":{"reward":2.43,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":49.518421052631595,"syllables":62,"sentences":2,"score":0.8951842105263159},"multiplier":1,"relevance":0.9}},{"id":1681989664,"content":"More motivation to close this series A...","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681989664","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,56 @@\n+import { GithubPlugin, isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { EmitterWebhookEventName } from \"@octokit/webhooks\";\n+import { GitHubContext } from \"../github-context\";\n+import { Manifest } from \"../../types/manifest\";\n+import { Buffer } from \"node:buffer\";\n+\n+const _manifestCache: Record<string, Manifest> = {};","score":{"reward":0.088,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":66.7871428571429,"syllables":11,"sentences":1,"score":0.9321285714285711},"multiplier":1,"relevance":0.1}},{"id":1685093475,"content":"I think they are read from the manifest of each plugin now","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1685093475","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -146,17 +146,13 @@ How to run a \"hello-world\" plugin the Cloudflare way:\n 2. Run `bun plugin:hello-world` to spin up a local server for the \"hello-world\" plugin\n 3. Update the bot's config file in the repository where you use the bot (`OWNER/REPOSITORY/.github/.ubiquibot-config.yml`):\n \n-```\n+```yml\n plugins:\n-  'issue_comment.created':\n-    - name: \"hello-world-plugin name\"\n-      description: \"hello-world-plugin description\"\n-      command: \"/hello\"\n-      example: \"/hello example\"\n-      skipBotEvents: true","score":{"reward":0.756,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":88.905,"syllables":15,"sentences":1,"score":0.71095},"multiplier":1,"relevance":0.6}},{"id":2232217774,"content":"@gentlementlegen yes merge them.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#issuecomment-2232217774","commentType":"PULL_COLLABORATOR","score":{"reward":0.27,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":33.57500000000002,"syllables":8,"sentences":1,"score":0.7357500000000001},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2184430486,"effect":{"addition":323,"deletion":204},"reward":5.27,"priority":1},{"reviewId":2189489132,"effect":{"addition":19,"deletion":54},"reward":0.73,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 12.313 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>6</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.769</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>3.544</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74\" target=\"_blank\" rel=\"noopener\">#74</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+323 -204</td><td>1</td><td>5.27</td></tr><tr><td>+19 -54</td><td>1</td><td>0.73</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/73#issuecomment-2224260739\" target=\"_blank\" rel=\"noopener\">&#96;runsOn&#96; Camel case seems unexpected. What about snake c&hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.421</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/73#issuecomment-2247131332\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Review comments aren't taken into account</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.348</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681987090\" target=\"_blank\" rel=\"noopener\">I think the agreement was to clobber the webhook event's array u&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.43</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681989664\" target=\"_blank\" rel=\"noopener\">More motivation to close this series A...</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.088</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1685093475\" target=\"_blank\" rel=\"noopener\">I think they are read from the manifest of each plugin now</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.756</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#issuecomment-2232217774\" target=\"_blank\" rel=\"noopener\">@gentlementlegen yes merge them.</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.27</td></tr></tbody></table></details>"},"rndquu":{"total":16.806,"userId":119500907,"comments":[{"id":2195858476,"content":"Works fine","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#pullrequestreview-2195858476","commentType":"PULL_COLLABORATOR","score":{"reward":0.066,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":120.20500000000001,"syllables":2,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}},{"id":1684499812,"content":"@gentlementlegen Aren't `name, description, command, example` required properties?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1684499812","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -146,17 +146,13 @@ How to run a \"hello-world\" plugin the Cloudflare way:\n 2. Run `bun plugin:hello-world` to spin up a local server for the \"hello-world\" plugin\n 3. Update the bot's config file in the repository where you use the bot (`OWNER/REPOSITORY/.github/.ubiquibot-config.yml`):\n \n-```\n+```yml\n plugins:\n-  'issue_comment.created':\n-    - name: \"hello-world-plugin name\"\n-      description: \"hello-world-plugin description\"\n-      command: \"/hello\"\n-      example: \"/hello example\"\n-      skipBotEvents: true","score":{"reward":0.371,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":-18.19999999999996,"syllables":13,"sentences":1,"score":0},"multiplier":1,"relevance":0.7}},{"id":2233039597,"content":"@gentlementlegen Check [this](https://github.com/rndquu-org/test-repo/blob/6658e8d35bd72a554d3363500dc012f9e99a2ed4/.github/.ubiquibot-config.yml) config.\r\nTrying to run the [hello world plugin](https://github.com/ubiquity/ubiquibot-kernel?tab=readme-ov-file#plugin-quick-start) and the kernel responds with `No handler found for event issue_comment` although the config does [have](https://github.com/rndquu-org/test-repo/blob/6658e8d35bd72a554d3363500dc012f9e99a2ed4/.github/.ubiquibot-config.yml#L3) the `runsOn` section. \r\nWhat am I doing wrong?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#issuecomment-2233039597","commentType":"PULL_COLLABORATOR","score":{"reward":3.808,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":76.50452380952383,"syllables":40,"sentences":3,"score":0.8349547619047617},"multiplier":1,"relevance":0.8}},{"id":2239398391,"content":"@gentlementlegen Check [this](https://github.com/rndquu-org/test-repo/issues/67) issue, [this](https://github.com/rndquu-org/test-repo/blob/0c6038c92a93d682ea0d50c4ba67686c9bffacdc/.github/.ubiquibot-config.yml) config (from readme) and [this](https://github.com/rndquu-org/test-repo/issues/67#issuecomment-2239391525) comment. It seems that the \"hello-world\" plugin responds to [any comment](https://github.com/rndquu-org/test-repo/issues/67#issuecomment-2239391461) while the expected behavior is to respond only to the `/hello` command.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#issuecomment-2239398391","commentType":"PULL_COLLABORATOR","score":{"reward":4.653,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":59.342045454545485,"syllables":51,"sentences":2,"score":0.9934204545454548},"multiplier":1,"relevance":0.9}},{"id":2247059148,"content":"If plugin doesn't serve manifest at all then what's going to happen? Perhaps we should create a new github issue for showing empty manifest related error and stopping plugin execution?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#issuecomment-2247059148","commentType":"PULL_COLLABORATOR","score":{"reward":1.518,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":58.4075,"syllables":50,"sentences":2,"score":0.984075},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2188431406,"effect":{"addition":336,"deletion":228},"reward":5.64,"priority":1},{"reviewId":2195858476,"effect":{"addition":39,"deletion":36},"reward":0.75,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 16.806 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>6.39</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>10.416</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74\" target=\"_blank\" rel=\"noopener\">#74</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+336 -228</td><td>1</td><td>5.64</td></tr><tr><td>+39 -36</td><td>1</td><td>0.75</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#pullrequestreview-2195858476\" target=\"_blank\" rel=\"noopener\">Works fine</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.066</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1684499812\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Aren't &#96;name, description, command, example&hellip;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.371</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#issuecomment-2233039597\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Check [this](https://github.com/rndquu-org/test&hellip;</a></h6></td><td><details><summary>3.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.8</td><td>1</td><td>3.808</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#issuecomment-2239398391\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Check [this](https://github.com/rndquu-org/test&hellip;</a></h6></td><td><details><summary>3.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.9</td><td>1</td><td>4.653</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#issuecomment-2247059148\" target=\"_blank\" rel=\"noopener\">If plugin doesn't serve manifest at all then what's going to hap&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.518</td></tr></tbody></table></details>"},"whilefoo":{"total":18.86,"userId":139262667,"comments":[{"id":1681515498,"content":"actually now you can just iterate through plugins instead of event names","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681515498","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -75,20 +73,28 @@ export async function getConfig(context: GitHubContext): Promise<PluginConfigura\n \n   checkPluginChains(mergedConfiguration);\n \n+  for (const plugin of mergedConfiguration.plugins) {\n+    if (plugin.uses.length && !plugin.uses[0].runsOn?.length) {\n+      const manifest = await getManifest(context, plugin.uses[0].plugin);\n+      if (manifest) {\n+        plugin.uses[0].runsOn = manifest[\"ubiquity:listeners\"] || [];\n+      }\n+    }\n+  }\n   return mergedConfiguration;\n }\n \n function checkPluginChains(config: PluginConfiguration) {\n   for (const eventName of eventNames) {\n-    const plugins = config.plugins[eventName];\n+    const plugins = getPluginsForEvent(config.plugins, eventName);","score":{"reward":1.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":60.70500000000001,"syllables":19,"sentences":1,"score":0.9929499999999999},"multiplier":1,"relevance":0.8}},{"id":1681542912,"content":"so now the merge strategy is just to overwrite everything?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681542912","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -39,11 +40,8 @@ async function getConfigurationFromRepo(context: GitHubContext, repository: stri\n  */\n function mergeConfigurations(configuration1: PluginConfiguration, configuration2: PluginConfiguration): PluginConfiguration {\n   const mergedConfiguration = { ...configuration1 };\n-  for (const key of Object.keys(configuration2.plugins)) {\n-    const pluginKey = key as keyof PluginConfiguration[\"plugins\"];\n-    if (configuration2.plugins[pluginKey]?.length) {\n-      mergedConfiguration.plugins[pluginKey] = configuration2.plugins[pluginKey];\n-    }\n+  if (configuration2.plugins?.length) {\n+    mergedConfiguration.plugins = configuration2.plugins;","score":{"reward":0.805,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":52.86500000000001,"syllables":17,"sentences":1,"score":0.9286500000000001},"multiplier":1,"relevance":0.7}},{"id":1681544838,"content":"```suggestion\r\n    runsOn: T.Array(emitterType, { default: [] }),\r\n```\r\n`T.Optional` is not needed if you set a default","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681544838","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -46,11 +45,21 @@ function githubPluginType() {\n     });\n }\n \n+type IntoStringLiteralUnion<T> = { [K in keyof T]: T[K] extends string ? TLiteral<T[K]> : never };\n+\n+export function stringLiteralUnion<T extends string[]>(values: readonly [...T]): Union<IntoStringLiteralUnion<T>> {\n+  const literals = values.map((value) => T.Literal(value));\n+  return T.Union(literals as never);\n+}\n+\n+const emitterType = stringLiteralUnion(emitterEventNames);\n+\n const pluginChainSchema = T.Array(\n   T.Object({\n     id: T.Optional(T.String()),\n     plugin: githubPluginType(),\n     with: T.Record(T.String(), T.Unknown(), { default: {} }),\n+    runsOn: T.Optional(T.Array(emitterType, { default: [] })),","score":{"reward":0.891,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":103.54,"syllables":9,"sentences":1,"score":1},"multiplier":1,"relevance":0.9}},{"id":1681553309,"content":"I think this won't be effective as we are running kernel as worker. \r\nActually [limit for KV](https://developers.cloudflare.com/kv/platform/limits/) if you have paid plan is unlimited and [paid plan](https://www.cloudflare.com/en-gb/plans/developer-platform/) is 5$ @0x4007","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681553309","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,56 @@\n+import { GithubPlugin, isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { EmitterWebhookEventName } from \"@octokit/webhooks\";\n+import { GitHubContext } from \"../github-context\";\n+import { Manifest } from \"../../types/manifest\";\n+import { Buffer } from \"node:buffer\";\n+\n+const _manifestCache: Record<string, Manifest> = {};","score":{"reward":2.922,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":79.21217741935487,"syllables":41,"sentences":2,"score":0.8078782258064513},"multiplier":1,"relevance":0.6}},{"id":1681556710,"content":"why is event name type here much more complicated than in the manifest schema? it's the same thing, isn't it?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681556710","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -46,11 +45,21 @@ function githubPluginType() {\n     });\n }\n \n+type IntoStringLiteralUnion<T> = { [K in keyof T]: T[K] extends string ? TLiteral<T[K]> : never };\n+\n+export function stringLiteralUnion<T extends string[]>(values: readonly [...T]): Union<IntoStringLiteralUnion<T>> {\n+  const literals = values.map((value) => T.Literal(value));\n+  return T.Union(literals as never);\n+}\n+\n+const emitterType = stringLiteralUnion(emitterEventNames);","score":{"reward":1.528,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":87.99727272727276,"syllables":28,"sentences":2,"score":0.7200272727272724},"multiplier":1,"relevance":0.8}},{"id":1681604441,"content":"why are there two `getContent` functions, one in `octokit.repos` and another in `octokit.rest.repos`?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681604441","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -38,41 +48,46 @@ describe(\"Configuration tests\", () => {\n         },\n       } as unknown as GitHubContext<\"issues.closed\">[\"payload\"],\n       octokit: {","score":{"reward":0.77,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.7}},{"id":1684078950,"content":"that's my bad then. in #64 I changed [octokit plugin](https://github.com/ubiquity/ubiquibot-kernel/blob/development/src/github/github-client.ts) from `legacyRestEndpointMethods` to `restEndpointMethods` which uses only `rest`","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1684078950","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -38,41 +48,46 @@ describe(\"Configuration tests\", () => {\n         },\n       } as unknown as GitHubContext<\"issues.closed\">[\"payload\"],\n       octokit: {","score":{"reward":2.457,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":92.965,"syllables":20,"sentences":2,"score":0.67035},"multiplier":1,"relevance":0.9}},{"id":1684092676,"content":"in `manifest.ts` it's just `T.Union(emitterEventNames.map((o) => T.Literal(o)))`, can't it be used like this here too?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1684092676","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -46,11 +45,21 @@ function githubPluginType() {\n     });\n }\n \n+type IntoStringLiteralUnion<T> = { [K in keyof T]: T[K] extends string ? TLiteral<T[K]> : never };\n+\n+export function stringLiteralUnion<T extends string[]>(values: readonly [...T]): Union<IntoStringLiteralUnion<T>> {\n+  const literals = values.map((value) => T.Literal(value));\n+  return T.Union(literals as never);\n+}\n+\n+const emitterType = stringLiteralUnion(emitterEventNames);","score":{"reward":1.144,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":109.04000000000002,"syllables":13,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1684464333,"content":"yes, legacy way was using without `.rest`","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1684464333","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -38,41 +48,46 @@ describe(\"Configuration tests\", () => {\n         },\n       } as unknown as GitHubContext<\"issues.closed\">[\"payload\"],\n       octokit: {","score":{"reward":0.553,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":59.745000000000005,"syllables":10,"sentences":1,"score":0.9974500000000001},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2183692142,"effect":{"addition":323,"deletion":204},"reward":5.27,"priority":1},{"reviewId":2191203407,"effect":{"addition":56,"deletion":88},"reward":1.44,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 18.86 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>6.71</td></tr><tr><td>Review</td><td>Comment</td><td>9</td><td>12.15</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74\" target=\"_blank\" rel=\"noopener\">#74</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+323 -204</td><td>1</td><td>5.27</td></tr><tr><td>+56 -88</td><td>1</td><td>1.44</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681515498\" target=\"_blank\" rel=\"noopener\">actually now you can just iterate through plugins instead of eve&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.08</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681542912\" target=\"_blank\" rel=\"noopener\">so now the merge strategy is just to overwrite everything?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.805</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681544838\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionrunsOn: T.Array(emitterType, { de&hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.9</td><td>1</td><td>0.891</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681553309\" target=\"_blank\" rel=\"noopener\">I think this won't be effective as we are running kernel as work&hellip;</a></h6></td><td><details><summary>3.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.6</td><td>1</td><td>2.922</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681556710\" target=\"_blank\" rel=\"noopener\">why is event name type here much more complicated than in the ma&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.528</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1681604441\" target=\"_blank\" rel=\"noopener\">why are there two &#96;getContent&#96; functions, one in &#96;oc&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.77</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1684078950\" target=\"_blank\" rel=\"noopener\">that's my bad then. in #64 I changed [octokit plugin](https://gi&hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.457</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1684092676\" target=\"_blank\" rel=\"noopener\">in &#96;manifest.ts&#96; it's just &#96;T.Union(emitterEventName&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.144</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/74#discussion_r1684464333\" target=\"_blank\" rel=\"noopener\">yes, legacy way was using without &#96;.rest&#96;</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.553</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_260.json","json":{"whilefoo":{"userId":139262667,"total":157.428,"task":{"reward":150,"multiplier":1},"comments":[{"id":2704825102,"content":"Sure, we can do that but that won't help with key rotations because once you encrypt with the private key and the key changes, you need to encrypt it again.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260#issuecomment-2704825102","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.647,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":71.66677419354839,"syllables":38,"sentences":1,"score":0.8833322580645161},"multiplier":0.25,"relevance":0.9}},{"id":2705993808,"content":"That is correct. I meant values encrypted with the public key (evmEncryptedKey in text-conversation-rewards, GITHUB_PAT_ENCRYPTED in personal-agent) will have to be re-encrypted with the new public key.\nUnless we built a system that would have access to previous public key and the new one and update all encrypted values in the config.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260#issuecomment-2705993808","commentType":"ISSUE_ASSIGNEE","score":{"reward":2.16,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":56.4561904761905,"syllables":87,"sentences":3,"score":0.964561904761905},"multiplier":0.25,"relevance":0.9}},{"id":2404659265,"content":"Resolves #260 \r\nThere were some issues with implementing this - I remember we had some problem with `libsodium` running on Workers so I first started with Web Crypto API but that didn't work. After many attempts I tried `libsodium` and found out it works if you dynamically import it. Reference: https://github.com/jedisct1/libsodium/pull/1401","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273","commentType":"PULL_SPECIFICATION","score":{"reward":3.621,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":69.82420454545455,"syllables":80,"sentences":4,"score":0.9017579545454545},"multiplier":1,"relevance":0.85}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 157.428 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>3.807</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>3.621</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260#issuecomment-2704825102\" target=\"_blank\" rel=\"noopener\">Sure, we can do that but that won't help with key rotations beca&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.9</td><td>3</td><td>1.647</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260#issuecomment-2705993808\" target=\"_blank\" rel=\"noopener\">That is correct. I meant values encrypted with the public key (e&hellip;</a></h6></td><td><details><summary>2.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.16</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273\" target=\"_blank\" rel=\"noopener\">Resolves #260 There were some issues with implementing this - &hellip;</a></h6></td><td><details><summary>3.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 48&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>0.85</td><td>1</td><td>3.621</td></tr></tbody></table></details>"},"0x4007":{"total":21.017,"userId":4975670,"comments":[{"id":2705190082,"content":"No I don't think I follow your logic. \n- Let's say I rotate the private key. \n- I place it into the secrets so the kernel can use it. \n- The new public key can be derived from the private key. \n- The public key is hosted on a public api endpoint. \n- All systems relying on the key should fetch the public key. \nOptionally they can re encrypt at run time?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260#issuecomment-2705190082","commentType":"ISSUE_AUTHOR","score":{"reward":11.28,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5}},"result":0.5},"priority":3,"words":{"wordCount":69,"wordValue":0.1,"result":2.59},"readability":{"fleschKincaid":87.70826086956524,"syllables":89,"sentences":7,"score":0.7229173913043476},"multiplier":1,"relevance":1}},{"id":2706057652,"content":"That's pretty interesting. Maybe one day then! It could almost be bundled in as a subscription renewal.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260#issuecomment-2706057652","commentType":"ISSUE_AUTHOR","score":{"reward":3.654,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":73.84500000000001,"syllables":27,"sentences":3,"score":0.8615499999999998},"multiplier":1,"relevance":0.7}},{"id":2900703378,"content":"Why don't we make an endpoint on the kernel that we can query what the public key is over an API? \nWe already have three disconnected systems that rely on the same public key. Key rotation will be a mess.\n_Originally posted by @0x4007 in https://github.com/ubiquity-os-marketplace/personal-agent/issues/1#issuecomment-2704147912_","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.25,"formatting":{"content":{"p":{"score":0,"elementCount":1},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":65.24375862068968,"syllables":89,"sentences":5,"score":0.9475624137931032},"multiplier":1,"relevance":1}},{"id":2700521901,"content":"@gentlementlegen does this work on azure","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273#pullrequestreview-2700521901","commentType":"PULL_COLLABORATOR","score":{"reward":0.231,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":45.64500000000001,"syllables":11,"sentences":1,"score":0.8564500000000002},"multiplier":1,"relevance":0.1}},{"id":2739881486,"content":"v8 is in node but I get what you mean.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273#issuecomment-2739881486","commentType":"PULL_COLLABORATOR","score":{"reward":0.702,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":112.08500000000001,"syllables":10,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"reviews":[{"reviewId":2700521901,"effect":{"addition":23,"deletion":7},"reward":0.9,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 21.017 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.9</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.25</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>14.934</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>0.933</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273\" target=\"_blank\" rel=\"noopener\">#273</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+23 -7</td><td>3</td><td>0.9</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260\" target=\"_blank\" rel=\"noopener\">Why don't we make an endpoint on the kernel that we can query wh&hellip;</a></h6></td><td><details><summary>3.31</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 46&#13;  wordValue: 0.1&#13;  result: 2.31&#13;</pre></details></td><td>1</td><td>1</td><td>4.25</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260#issuecomment-2705190082\" target=\"_blank\" rel=\"noopener\">No I don't think I follow your logic. - Let's say I rotate the &hellip;</a></h6></td><td><details><summary>3.09</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;  result: 0.5&#13;regex:&#13;  wordCount: 69&#13;  wordValue: 0.1&#13;  result: 2.59&#13;</pre></details></td><td>1</td><td>3</td><td>11.28</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/260#issuecomment-2706057652\" target=\"_blank\" rel=\"noopener\">That's pretty interesting. Maybe one day then! It could almost b&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.654</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273#pullrequestreview-2700521901\" target=\"_blank\" rel=\"noopener\">@gentlementlegen does this work on azure</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.231</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273#issuecomment-2739881486\" target=\"_blank\" rel=\"noopener\">v8 is in node but I get what you mean.</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.702</td></tr></tbody></table></details>"},"gentlementlegen":{"total":9.375,"userId":9807008,"comments":[{"id":2738804536,"content":"@0x4007 Most likely because Azure uses `nodejs` unlike `CloudFlare` using `v8`, so `libsodium` would be fully implemented in Azure's environment.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273#issuecomment-2738804536","commentType":"PULL_COLLABORATOR","score":{"reward":2.952,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":40.2858823529412,"syllables":30,"sentences":1,"score":0.802858823529412},"multiplier":1,"relevance":0.6}},{"id":2740246016,"content":"V8 does not come with all the nodejs capabilities, typically V8 is what runs Chrome. Which is why in cloudflare we need to enable the nodejs compat flag so more features of node are available.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273#issuecomment-2740246016","commentType":"PULL_COLLABORATOR","score":{"reward":5.523,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":63.381071428571445,"syllables":52,"sentences":2,"score":0.9661892857142855},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2700844468,"effect":{"addition":23,"deletion":7},"reward":0.9,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 9.375 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.9</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>8.475</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273\" target=\"_blank\" rel=\"noopener\">#273</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+23 -7</td><td>3</td><td>0.9</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273#issuecomment-2738804536\" target=\"_blank\" rel=\"noopener\">@0x4007 Most likely because Azure uses &#96;nodejs&#96; unlike &&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.952</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/273#issuecomment-2740246016\" target=\"_blank\" rel=\"noopener\">V8 does not come with all the nodejs capabilities, typically V8 &hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.523</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-template_34.json","json":{"gentlementlegen":{"userId":9807008,"total":202.664,"task":{"reward":200,"multiplier":1},"comments":[{"id":2279539085,"content":"Resolves #34, resolves #37\r\n- updated the template to use the SDK\r\n- updated target branches for worker deploy and delete\r\n- bumped packages\r\n- updated example accordingly\r\n- fixed Jest tests for ESM","url":"https://github.com/ubiquity-os/plugin-template/pull/38","commentType":"PULL_SPECIFICATION","score":{"reward":2.664,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5}},"result":0.5},"priority":1,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":46.12413793103451,"syllables":45,"sentences":1,"score":0.8612413793103451},"multiplier":1,"relevance":0.9}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 202.664 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>200</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>2.664</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/38\" target=\"_blank\" rel=\"noopener\">Resolves #34, resolves #37- updated the template to use the SD&hellip;</a></h6></td><td><details><summary>2.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;  result: 0.5&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.664</td></tr></tbody></table></details>"},"0x4007":{"total":1.078,"userId":4975670,"comments":[{"id":2533232695,"content":"@whilefoo please confirm the time estimate.","url":"https://github.com/ubiquity-os/plugin-template/issues/34#issuecomment-2533232695","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.078,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":45.64500000000001,"syllables":11,"sentences":1,"score":0.8564500000000002},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/38"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.078 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.078</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/34#issuecomment-2533232695\" target=\"_blank\" rel=\"noopener\">@whilefoo please confirm the time estimate.</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.078</td></tr></tbody></table></details>"},"whilefoo":{"total":21.544,"userId":139262667,"comments":[{"id":2536390950,"content":"I would say 4 hours is fine","url":"https://github.com/ubiquity-os/plugin-template/issues/34#issuecomment-2536390950","commentType":"ISSUE_AUTHOR","score":{"reward":1.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":115.13000000000002,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":2728441765,"content":"This plugin template has become out of date:\r\n- All plugins now use SDK so this template should also use it\r\n- Most if not all plugins use `bun` so this template should also switch to it\r\n- Out of date dependencies\r\n- It's still using old workflows, for example `update-configuration.yml` doesn't use our [reusable workflow](https://github.com/ubiquity-os/action-deploy-plugin) \r\n- It doesn't use `ncc` to build Action plugins \r\n- Still using CommonJS modules instead of ESM (also for tests)\r\n- It should use Typescript for eslint, jest and other configs\r\nI'm sure I'm missing some other things but you get the gist, the main task is to update the template so it's more aligned with our current plugin structure","url":"https://github.com/ubiquity-os/plugin-template/issues/34","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.24,"formatting":{"content":{"p":{"score":0,"elementCount":9},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":7},"a":{"score":1,"elementCount":1}},"result":1.7},"priority":1,"words":{"wordCount":112,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":-21.6592857142857,"syllables":152,"sentences":1,"score":0},"multiplier":1,"relevance":1}},{"id":2560454532,"content":"This also solves #34","url":"https://github.com/ubiquity-os/plugin-template/pull/38#pullrequestreview-2560454532","commentType":"PULL_COLLABORATOR","score":{"reward":0.312,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.3}},{"id":1921088516,"content":"```suggestion\r\n        run: bun ./dist/index.js\r\n```\r\nIt should run the transpiled JS file, no?","url":"https://github.com/ubiquity-os/plugin-template/pull/38#discussion_r1921088516","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,29 +17,28 @@ on:\n         description: \"Ref\"\n       signature:\n         description: \"The kernel signature\"\n+      command:\n+        description: \"Command from the Kernel\"\n \n jobs:\n   compute:\n     name: \"plugin name\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n+    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}\n     env:\n       SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n       SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n \n     steps:\n       - uses: actions/checkout@v4\n \n-      - name: setup node\n-        uses: actions/setup-node@v4\n+      - uses: oven-sh/setup-bun@v2\n         with:\n-          node-version: \"20.10.0\"\n-\n-      - name: install dependencies\n-        run: yarn\n+          bun-version: latest\n \n       - name: execute directive\n-        run: npx tsx ./src/main.ts\n+        run: bun ./src/action.ts","score":{"reward":1.638,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.9}},{"id":1921088669,"content":"I think this is not needed because `action-deploy-plugin` builds it with `ncc`","url":"https://github.com/ubiquity-os/plugin-template/pull/38#discussion_r1921088669","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.638,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":103.625,"syllables":11,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1921121232,"content":"default value should be at `configurableResponse`","url":"https://github.com/ubiquity-os/plugin-template/pull/38#discussion_r1921121232","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -26,6 +15,4 @@ export const pluginSettingsSchema = T.Object(\n   { default: { configurableResponse: \"Hello, world!\" } }","score":{"reward":1.04,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.8}},{"id":1921122558,"content":"you forgot `github.event.workflow_run.head_branch` at `branch_name`","url":"https://github.com/ubiquity-os/plugin-template/pull/38#discussion_r1921122558","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.756,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2560454532,"effect":{"addition":257,"deletion":263},"reward":10.4,"priority":2},{"reviewId":2562790801,"effect":{"addition":11,"deletion":11},"reward":0.44,"priority":2}],"url":"https://github.com/ubiquity-os/plugin-template/pull/38"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 21.544 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>10.84</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.24</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.08</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>5.384</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/38\" target=\"_blank\" rel=\"noopener\">#38</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+257 -263</td><td>2</td><td>10.4</td></tr><tr><td>+11 -11</td><td>2</td><td>0.44</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/34\" target=\"_blank\" rel=\"noopener\">This plugin template has become out of date:- All plugins now &hellip;</a></h6></td><td><details><summary>4.24</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 9&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 7&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.7&#13;regex:&#13;  wordCount: 112&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>1</td><td>1</td><td>4.24</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/34#issuecomment-2536390950\" target=\"_blank\" rel=\"noopener\">I would say 4 hours is fine</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.08</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/38#pullrequestreview-2560454532\" target=\"_blank\" rel=\"noopener\">This also solves #34</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.312</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/38#discussion_r1921088516\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionrun: bun ./dist/index.js&#9&hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.638</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/38#discussion_r1921088669\" target=\"_blank\" rel=\"noopener\">I think this is not needed because &#96;action-deploy-plugin&#96&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.638</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/38#discussion_r1921121232\" target=\"_blank\" rel=\"noopener\">default value should be at &#96;configurableResponse&#96;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.8</td><td>2</td><td>1.04</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/38#discussion_r1921122558\" target=\"_blank\" rel=\"noopener\">you forgot &#96;github.event.workflow_run.head_branch&#96; at &#&hellip;</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.9</td><td>2</td><td>0.756</td></tr></tbody></table></details>"},"3scava1i3r":{"total":0.662,"userId":52003051,"comments":[{"id":2552885441,"content":"@whilefoo what more other than the points noted?","url":"https://github.com/ubiquity-os/plugin-template/issues/34#issuecomment-2552885441","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":0.25,"relevance":0.8}},{"id":2582118758,"content":"In the meantime also working on this","url":"https://github.com/ubiquity-os/plugin-template/issues/34#issuecomment-2582118758","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.294,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/38"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.662 XP ]</a>&nbsp;</h3><h6>@3scava1i3r</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>0.662</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/34#issuecomment-2552885441\" target=\"_blank\" rel=\"noopener\">@whilefoo what more other than the points noted?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>2</td><td>0.368</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/34#issuecomment-2582118758\" target=\"_blank\" rel=\"noopener\">In the meantime also working on this</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.7</td><td>2</td><td>0.294</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_44.json","json":{"Keyrxng":{"userId":106303466,"total":103.917,"task":{"reward":100,"multiplier":1},"comments":[{"id":2670824779,"content":"I've built the plugin, could a repo be created for me to PR against? @gentlementlegen @0x4007 cheers\n```yml\nplugins:\n  - uses:\n      - plugin: http://localhost:4000\n        with:\n          automatedResponses:\n            \"auto-responder\": \"This is a no-reply repo, please visit the link in the issue description. Thank you!\"\n```\nhttps://github.com/ubq-testing/auto-responder\n![Image](https://github.com/user-attachments/assets/aa1ed957-c6dd-4b39-b6e3-ec9cab0865d4)","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2670824779","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.35,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":73.16866666666668,"syllables":37,"sentences":3,"score":0.8683133333333332},"multiplier":0.25,"relevance":0.9}},{"id":2351897239,"content":"Resolves https://github.com/ubiquity-os/plugins-wishlist/issues/44\r\nconfig:\r\n```yml\r\nplugins: \r\n  - uses:\r\n    - plugin: http://localhost:4000\r\n      with:\r\n        automatedResponses: \r\n          \".ubiquity-os\": \"No one replies in this repo\"\r\n          \"daemon-responder\": \"This is a no-reply repo\"\r\n```\r\nQA:\r\nhttps://github.com/ubq-testing/daemon-responder/issues/1\r\n![image](https://github.com/user-attachments/assets/1f0ed3f8-deff-4dc0-b2b0-ac5d1af16732)","url":"https://github.com/ubiquity-os/daemon-responder/pull/1","commentType":"PULL_SPECIFICATION","score":{"reward":2.567,"formatting":{"content":{"p":{"score":0,"elementCount":5},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":54.70142857142861,"syllables":36,"sentences":3,"score":0.947014285714286},"multiplier":1,"relevance":0.85}},{"id":2676635989,"content":"@0x4007 ready for review mate","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2676635989","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":5,"wordValue":0,"result":0},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":0,"relevance":0.2}},{"id":2692787338,"content":"@0x4007 is this good to merge?","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2692787338","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0,"result":0},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":0,"relevance":0.15}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 103.917 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>100</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.35</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>2.567</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2670824779\" target=\"_blank\" rel=\"noopener\">I've built the plugin, could a repo be created for me to PR agai&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.35</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquity-os/plugins-wishlist/issues/&hellip;</a></h6></td><td><details><summary>2.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.85</td><td>1</td><td>2.567</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2676635989\" target=\"_blank\" rel=\"noopener\">@0x4007 ready for review mate</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.2</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2692787338\" target=\"_blank\" rel=\"noopener\">@0x4007 is this good to merge?</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.15</td><td>2</td><td>0</td></tr></tbody></table></details>"},"0x4007":{"total":37.074,"userId":4975670,"comments":[{"id":2676491688,"content":"Use warning instead of note \nhttps://github.com/ubiquity-os/daemon-responder\nPlaced under ubiquity-os because this is unlikely to be very useful for partners. More of an internal capability.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2676491688","commentType":"ISSUE_AUTHOR","score":{"reward":4.592,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":38.06279569892476,"syllables":58,"sentences":3,"score":0.7806279569892476},"multiplier":1,"relevance":0.7}},{"id":2704175374,"content":"No more line review incentives is weird.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704175374","commentType":"ISSUE_AUTHOR","score":{"reward":0.344,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0.2}},{"id":2704282757,"content":"Maybe we should have a special kernel capability to import from another config to keep everything in sync. \nInspired by css @import style.css syntax \nIs there anything in the yml spec for this? Imagine a config file that is just an import.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704282757","commentType":"ISSUE_AUTHOR","score":{"reward":1.74,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":64.10514534883723,"syllables":67,"sentences":4,"score":0.9589485465116278},"multiplier":1,"relevance":0.3}},{"id":2704285568,"content":"Sorry my client was out of date.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704285568","commentType":"ISSUE_AUTHOR","score":{"reward":0.18,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":2705197483,"content":"@whilefoo any ideas regarding importing another yaml given your knowledge of the kernel?\nI think we could really benefit from it cause I think we have six configs floating around now.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2705197483","commentType":"ISSUE_AUTHOR","score":{"reward":1.488,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":57.379919354838734,"syllables":49,"sentences":2,"score":0.9737991935483873},"multiplier":1,"relevance":0.3}},{"id":2708773448,"content":"Docker include syntax is nice and then we can add another `text-conversation-rewards` config at the end as an override to fix the encrypted key problem. \nBut docker include syntax is for multiple yaml files and I anticipate we will only need to import one for this problem we are trying to solve. \nThey aren't mutually exclusive, especially if we do the override strategy then the tool can still help with editing the overrides.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2708773448","commentType":"ISSUE_AUTHOR","score":{"reward":2.004,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":73,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":53.49831050228312,"syllables":111,"sentences":3,"score":0.9349831050228312},"multiplier":1,"relevance":0.3}},{"id":2535493089,"content":"When any comments are posted, automatically reply with a configurable message. I think the default can be something instructional like \"You must set the default auto response in the configuration.\"\r\nThe intended use case is to guide users who mistakenly try and self assign directly on the directory:\r\nOriginally posted by @Keyrxng https://github.com/ubiquity/devpool-directory-bounties/issues/36","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.2,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":52,"wordValue":0.1,"result":2.41},"readability":{"fleschKincaid":37.41198770491806,"syllables":111,"sentences":4,"score":0.7741198770491806},"multiplier":1,"relevance":1}},{"id":1977991100,"content":"You should have some default as per the spec","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1977991100","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -9,8 +9,12 @@ import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n  */\n export const pluginSettingsSchema = T.Object(\n   {\n-    configurableResponse: T.String({ default: \"Hello, world!\" }),\n-    customStringsUrl: T.Optional(T.String()),\n+    /**\n+     * `owner/repo`: `response`\n+     * `repo`: `response`\n+     * `owner`: `response`\n+     */\n+    automatedResponses: T.Record(T.String(), T.String()),","score":{"reward":1.744,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":103.70000000000002,"syllables":10,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1978404668,"content":"You need to adhere to the spec to get the reward for completing the task\nDon't understand what this means. I thought default should be on this line of code","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1978404668","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -9,8 +9,12 @@ import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n  */\n export const pluginSettingsSchema = T.Object(\n   {\n-    configurableResponse: T.String({ default: \"Hello, world!\" }),\n-    customStringsUrl: T.Optional(T.String()),\n+    /**\n+     * `owner/repo`: `response`\n+     * `repo`: `response`\n+     * `owner`: `response`\n+     */\n+    automatedResponses: T.Record(T.String(), T.String()),","score":{"reward":4.212,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":87.39927419354841,"syllables":38,"sentences":2,"score":0.7260072580645159},"multiplier":1,"relevance":0.9}},{"id":2695231625,"content":"Can you link the QA so I can try it","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2695231625","commentType":"PULL_COLLABORATOR","score":{"reward":1.17,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":112.08500000000001,"syllables":10,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":2695841814,"content":"Isn't it set up to auto deploy to a worker/action? I thought that's the main benefit of our template.","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2695841814","commentType":"PULL_COLLABORATOR","score":{"reward":1.158,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":84.15181818181821,"syllables":29,"sentences":2,"score":0.7584818181818178},"multiplier":1,"relevance":0.3}},{"id":2698613620,"content":"This is a special purpose capability for the directory repository. I couldn't imagine that partners would use this plugin, and I don't think it makes sense to use space in the \"marketplace\" especially in a future UI.","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2698613620","commentType":"PULL_COLLABORATOR","score":{"reward":3.85,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":52.550192307692356,"syllables":62,"sentences":2,"score":0.9255019230769236},"multiplier":1,"relevance":0.7}},{"id":2701631889,"content":"You host them in your own org.","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2701631889","commentType":"PULL_COLLABORATOR","score":{"reward":0.54,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":115.13000000000002,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":2702208945,"content":"Done!","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2702208945","commentType":"PULL_COLLABORATOR","score":{"reward":0.036,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":121.22000000000003,"syllables":1,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":2704086111,"content":"Yeah I guess it should always respond. Its specifically intended to be used in the directory backend for now. \r\n@Keyrxng I see the org config in your pull body but we only need it in the single repo. What's the repo config look like?","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2704086111","commentType":"PULL_COLLABORATOR","score":{"reward":4.576,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":2,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":76.97625000000004,"syllables":63,"sentences":4,"score":0.8302374999999996},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2654933794,"effect":{"addition":88,"deletion":127},"reward":4.3,"priority":2},{"reviewId":2655608314,"effect":{"addition":18,"deletion":1},"reward":0.38,"priority":2},{"reviewId":2664789976,"effect":{"addition":10,"deletion":18},"reward":0.56,"priority":2}],"url":"https://github.com/ubiquity-os/daemon-responder/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 37.074 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>5.24</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.2</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>10.348</td></tr><tr><td>Review</td><td>Comment</td><td>8</td><td>17.286</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+88 -127</td><td>2</td><td>4.3</td></tr><tr><td>+18 -1</td><td>2</td><td>0.38</td></tr><tr><td>+10 -18</td><td>2</td><td>0.56</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44\" target=\"_blank\" rel=\"noopener\">When any comments are posted, automatically reply with a configu&hellip;</a></h6></td><td><details><summary>3.41</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 52&#13;  wordValue: 0.1&#13;  result: 2.41&#13;</pre></details></td><td>1</td><td>1</td><td>4.2</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2676491688\" target=\"_blank\" rel=\"noopener\">Use warning instead of note https://github.com/ubiquity-os/daem&hellip;</a></h6></td><td><details><summary>2.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.7</td><td>2</td><td>4.592</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704175374\" target=\"_blank\" rel=\"noopener\">No more line review incentives is weird.</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.344</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704282757\" target=\"_blank\" rel=\"noopener\">Maybe we should have a special kernel capability to import from &hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.3</td><td>2</td><td>1.74</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704285568\" target=\"_blank\" rel=\"noopener\">Sorry my client was out of date.</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.18</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2705197483\" target=\"_blank\" rel=\"noopener\">@whilefoo any ideas regarding importing another yaml given your &hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.3</td><td>2</td><td>1.488</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2708773448\" target=\"_blank\" rel=\"noopener\">Docker include syntax is nice and then we can add another &#96;t&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 73&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.3</td><td>2</td><td>2.004</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1977991100\" target=\"_blank\" rel=\"noopener\">You should have some default as per the spec</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.8</td><td>2</td><td>1.744</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1978404668\" target=\"_blank\" rel=\"noopener\">You need to adhere to the spec to get the reward for completing &hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.9</td><td>2</td><td>4.212</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2695231625\" target=\"_blank\" rel=\"noopener\">Can you link the QA so I can try it</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.5</td><td>2</td><td>1.17</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2695841814\" target=\"_blank\" rel=\"noopener\">Isn't it set up to auto deploy to a worker/action? I thought tha&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.3</td><td>2</td><td>1.158</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2698613620\" target=\"_blank\" rel=\"noopener\">This is a special purpose capability for the directory repositor&hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.7</td><td>2</td><td>3.85</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2701631889\" target=\"_blank\" rel=\"noopener\">You host them in your own org.</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.54</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2702208945\" target=\"_blank\" rel=\"noopener\">Done!</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.036</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2704086111\" target=\"_blank\" rel=\"noopener\">Yeah I guess it should always respond. Its specifically intended&hellip;</a></h6></td><td><details><summary>2.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.8</td><td>2</td><td>4.576</td></tr></tbody></table></details>"},"gentlementlegen":{"total":46.434,"userId":9807008,"comments":[{"id":2704259724,"content":"@0x4007 Is the review module enabled in this organization config?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704259724","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.332,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":35.94500000000002,"syllables":19,"sentences":1,"score":0.7594500000000002},"multiplier":1,"relevance":0.6}},{"id":2704274428,"content":"Wait, the review incentivizer module was not present in the repo, I just enabled it, will regen: https://github.com/ubiquity-os/.ubiquity-os/commit/f069fd9727a71155a08cd2a82cb781d0378b2f73","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704274428","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.074,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":45.10756410256414,"syllables":47,"sentences":3,"score":0.8510756410256414},"multiplier":1,"relevance":0.7}},{"id":2704286838,"content":"Including YAML within another YAML is not possible per se. You need to create your own convention to do so.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704286838","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.976,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":74.01500000000001,"syllables":29,"sentences":2,"score":0.8598499999999999},"multiplier":1,"relevance":0.8}},{"id":2708763740,"content":"Maybe we could use the same syntax as Docker https://docs.docker.com/reference/compose-file/include\nWill it be really needed however since you are working on that CLI tool to update all the configuration @0x4007 ?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2708763740","commentType":"ISSUE_COLLABORATOR","score":{"reward":6.498,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":70.8463963963964,"syllables":54,"sentences":3,"score":0.891536036036036},"multiplier":1,"relevance":0.9}},{"id":2663603035,"content":"I am fine with the code changes, just need to confirm we want the message posted on any commands as well.","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#pullrequestreview-2663603035","commentType":"PULL_COLLABORATOR","score":{"reward":2.944,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":88.83428571428574,"syllables":24,"sentences":1,"score":0.7116571428571425},"multiplier":1,"relevance":0.8}},{"id":1978691344,"content":"This would mean the binding would only exist in dev setups or does it also get set for prod?","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1978691344","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,12 +1,14 @@\n-name = \"your-plugin-name\"\n+name = \"daemon-responder\"\n main = \"src/worker.ts\"\n compatibility_date = \"2024-09-23\"\n compatibility_flags = [ \"nodejs_compat\" ]\n+\n [env.dev]\n+[version_metadata]\n+binding = \"CLOUDFLARE_VERSION_METADATA\"","score":{"reward":2.478,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":80.68684210526318,"syllables":24,"sentences":1,"score":0.7931315789473682},"multiplier":1,"relevance":0.7}},{"id":1979226081,"content":"What this is telling you is that it is defined at top level, but not inherited by environments. My guess is that you should specify this inside of dev, prod, and top level. But it should not matter because I think env is only used for local development.","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1979226081","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,12 +1,14 @@\n-name = \"your-plugin-name\"\n+name = \"daemon-responder\"\n main = \"src/worker.ts\"\n compatibility_date = \"2024-09-23\"\n compatibility_flags = [ \"nodejs_compat\" ]\n+\n [env.dev]\n+[version_metadata]\n+binding = \"CLOUDFLARE_VERSION_METADATA\"","score":{"reward":5.346,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":72.50750000000001,"syllables":67,"sentences":3,"score":0.874925},"multiplier":1,"relevance":0.9}},{"id":1979947028,"content":"Logic felt weird to me, does it feel simpler with\n```typescript\n  const autoResponse = \n    automatedResponses[`${owner}/${repo}`] ||\n    automatedResponses[repo] ||\n    automatedResponses[owner];\n```","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1979947028","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,26 @@\n+import { Context } from \"../types\";\n+\n+export async function handleAutoResponse(context: Context) {\n+  const {\n+    logger,\n+    payload,\n+    config: { automatedResponses },\n+    commentHandler,\n+  } = context;\n+\n+  const repo = payload.repository.name;\n+  const owner = payload.repository.owner.login;\n+\n+  let autoResponse = automatedResponses[`${owner}/${repo}`];\n+  if (!autoResponse) {\n+    autoResponse = automatedResponses[repo];\n+  }\n+\n+  if (!autoResponse) {\n+    autoResponse = automatedResponses[owner];\n+  }\n+","score":{"reward":1.944,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":95.165,"syllables":12,"sentences":1,"score":0.64835},"multiplier":1,"relevance":0.9}},{"id":1979949703,"content":"I don't see the point of this, the function already returns `void` and will resolve either way","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1979949703","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,16 +1,15 @@\n-import { helloWorld } from \"./handlers/hello-world\";\n+import { handleAutoResponse } from \"./handlers/auto-response\";\n import { Context } from \"./types\";\n import { isCommentEvent } from \"./types/typeguards\";\n \n-/**\n- * The main plugin function. Split for easier testing.\n- */\n export async function runPlugin(context: Context) {\n   const { logger, eventName } = context;\n \n   if (isCommentEvent(context)) {\n-    return await helloWorld(context);\n+    return await handleAutoResponse(context);\n   }\n \n-  logger.error(`Unsupported event: ${eventName}`);\n+  logger.info(`Ignoring event ${eventName}`);\n+\n+  return Promise.resolve();","score":{"reward":1.992,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":75.12117647058825,"syllables":23,"sentences":1,"score":0.8487882352941175},"multiplier":1,"relevance":0.6}},{"id":1979951435,"content":"Please change lockb to lock","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1979951435","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.414,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":2698463255,"content":"Maybe I notice this very late, and it is totally unrelated to the pull-request, but any reason to host this plugin in `ubiquity-os` @0x4007 ?","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2698463255","commentType":"PULL_COLLABORATOR","score":{"reward":0.852,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":66.15000000000003,"syllables":33,"sentences":1,"score":0.9384999999999997},"multiplier":1,"relevance":0.2}},{"id":2698536637,"content":"I tried to deploy on my repo and got an error:\r\nhttps://github.com/Meniole/daemon-responder/actions/runs/13660269757/job/38189586586\r\nIt seems that a test doesn't compile properly.","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2698536637","commentType":"PULL_COLLABORATOR","score":{"reward":5.056,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":68.2960483870968,"syllables":45,"sentences":2,"score":0.917039516129032},"multiplier":1,"relevance":0.8}},{"id":2703036591,"content":"Gave it a run, seems to work fine, however do we want to also run this when the user is running actual commands?\r\nhttps://github.com/Meniole/daemon-responder/issues/1#issuecomment-2703034804","url":"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2703036591","commentType":"PULL_COLLABORATOR","score":{"reward":5.328,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":67.48818181818186,"syllables":50,"sentences":3,"score":0.9251181818181814},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2656089003,"effect":{"addition":105,"deletion":127},"reward":4.64,"priority":2},{"reviewId":2663603035,"effect":{"addition":10,"deletion":18},"reward":0.56,"priority":2}],"url":"https://github.com/ubiquity-os/daemon-responder/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 46.434 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>5.2</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>14.88</td></tr><tr><td>Review</td><td>Comment</td><td>9</td><td>26.354</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+105 -127</td><td>2</td><td>4.64</td></tr><tr><td>+10 -18</td><td>2</td><td>0.56</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704259724\" target=\"_blank\" rel=\"noopener\">@0x4007 Is the review module enabled in this organization config?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.332</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704274428\" target=\"_blank\" rel=\"noopener\">Wait, the review incentivizer module was not present in the repo&hellip;</a></h6></td><td><details><summary>2.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>2</td><td>4.074</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2704286838\" target=\"_blank\" rel=\"noopener\">Including YAML within another YAML is not possible per se. You n&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.976</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2708763740\" target=\"_blank\" rel=\"noopener\">Maybe we could use the same syntax as Docker https://docs.docker&hellip;</a></h6></td><td><details><summary>2.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.9</td><td>2</td><td>6.498</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#pullrequestreview-2663603035\" target=\"_blank\" rel=\"noopener\">I am fine with the code changes, just need to confirm we want th&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.944</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1978691344\" target=\"_blank\" rel=\"noopener\">This would mean the binding would only exist in dev setups or do&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.478</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1979226081\" target=\"_blank\" rel=\"noopener\">What this is telling you is that it is defined at top level, but&hellip;</a></h6></td><td><details><summary>2.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 48&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>0.9</td><td>2</td><td>5.346</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1979947028\" target=\"_blank\" rel=\"noopener\">Logic felt weird to me, does it feel simpler with&#96;&#96;&#96&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.944</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1979949703\" target=\"_blank\" rel=\"noopener\">I don't see the point of this, the function already returns &#96&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.992</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#discussion_r1979951435\" target=\"_blank\" rel=\"noopener\">Please change lockb to lock</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.414</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2698463255\" target=\"_blank\" rel=\"noopener\">Maybe I notice this very late, and it is totally unrelated to th&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.852</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2698536637\" target=\"_blank\" rel=\"noopener\">I tried to deploy on my repo and got an error:https://github.c&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.8</td><td>2</td><td>5.056</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/daemon-responder/pull/1#issuecomment-2703036591\" target=\"_blank\" rel=\"noopener\">Gave it a run, seems to work fine, however do we want to also ru&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.8</td><td>2</td><td>5.328</td></tr></tbody></table></details>"},"whilefoo":{"total":5.056,"userId":139262667,"comments":[{"id":2708388825,"content":"Like @gentlementlegen said we'd need to create a pre-processor that would handle this.\nA simple version of it would be just the full config copy and pasted:\n```yml\n@import github.com/ubiquity-os/.ubiquity-os/.github/.ubiquity-os.config.dev.yml\n```\nA more advanced version would be able to copy just parts of the config.\nBut a problem would be that `evmEncryptedKey` is scoped to one org so just copying it won't work","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2708388825","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.056,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":2,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":76.63273224043718,"syllables":79,"sentences":3,"score":0.8336726775956282},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/daemon-responder/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 5.056 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>5.056</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/44#issuecomment-2708388825\" target=\"_blank\" rel=\"noopener\">Like @gentlementlegen said we'd need to create a pre-processor t&hellip;</a></h6></td><td><details><summary>2.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>0.8</td><td>2</td><td>5.056</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_46.json","json":{"rndquu":{"userId":119500907,"total":57.67,"task":{"reward":50,"multiplier":1},"comments":[{"id":2494243631,"content":"Nonces for some github issues are duplicated hence reward claiming is broken for those issues.\r\nCheck the following reward URLs:\r\n- https://github.com/ubiquibot/user-activity-watcher/issues/14#issuecomment-2317208648\r\n- https://github.com/ubiquibot/command-start-stop/issues/14#issuecomment-2308374805\r\nIn the decoded base64 input all nonces (per user) are equal while the expected behavior is that they should be different.\r\nIt happens because [here](https://github.com/ubiquibot/permit-generation/blob/b08723fb0ca280162053013b66873da82320f286/src/handlers/generate-erc20-permit.ts#L111) the nonce is derived from user's github id and github issue number while earlier (not sure when the code was updated) it'd been derived from `issue.node_id`.\r\nWhat should be done:\r\n- make sure nonces are not duplicated both for ERC20 permits and NFT rewards","url":"https://github.com/ubiquity-os/permit-generation/issues/46","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.67,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":3},"a":{"score":1,"elementCount":3}},"result":3.3},"priority":1,"words":{"wordCount":89,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":57.72777027027027,"syllables":171,"sentences":6,"score":0.9772777027027026},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 57.67 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.67</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/46\" target=\"_blank\" rel=\"noopener\">Nonces for some github issues are duplicated hence reward claimi&hellip;</a></h6></td><td><details><summary>5.93</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.3&#13;regex:&#13;  wordCount: 89&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>7.67</td></tr></tbody></table></details>"},"0x4007":{"total":27.028,"userId":4975670,"comments":[{"id":2317484010,"content":"The property name suggests issue ID not issue number. That would work.","url":"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2317484010","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.716,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":73.84500000000001,"syllables":18,"sentences":2,"score":0.8615499999999998},"multiplier":1,"relevance":0.9}},{"id":2320048141,"content":"- I was able to claim https://github.com/ubiquity/ubiquibot-kernel/issues/95#issuecomment-2319639659 just now\r\n-","url":"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2320048141","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.648,"formatting":{"content":{"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1.2},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":48.9133823529412,"syllables":30,"sentences":2,"score":0.889133823529412},"multiplier":1,"relevance":0.8}},{"id":2290137649,"content":"Let's always use latest. Otherwise looks good to me.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#pullrequestreview-2290137649","commentType":"PULL_COLLABORATOR","score":{"reward":2.664,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":83.32000000000004,"syllables":14,"sentences":2,"score":0.7667999999999996},"multiplier":1,"relevance":0.6}},{"id":1741247536,"content":"This still doesn't make sense to me why suddenly there are issue id collisions. They are supposed to be unique ids.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#discussion_r1741247536","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -46,7 +46,7 @@ export class PermitGenerationModule implements Module {\n     };\n     const issueId = Number(payload.issueUrl.match(/[0-9]+$/)?.[0]);\n     payload.issue = {\n-      id: issueId,","score":{"reward":6.24,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":80.30636363636367,"syllables":30,"sentences":2,"score":0.7969363636363633},"multiplier":1,"relevance":0.8}},{"id":1750398915,"content":"```suggestion\n    \"@ubiquibot/permit-generation\": \"*\",\n```","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#discussion_r1750398915","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -34,7 +34,7 @@\n     \"@octokit/webhooks\": \"13.2.7\",\n     \"@sinclair/typebox\": \"0.32.23\",\n     \"@supabase/supabase-js\": \"2.42.0\",\n-    \"@ubiquibot/permit-generation\": \"1.3.1\",\n+    \"@ubiquibot/permit-generation\": \"1.6.0\",","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.9}},{"id":1750470663,"content":"For now, I know that we can trace back the GitHub actions run so just log the revision there, if the GitHub actions UI doesn't already show this information. \nUpon yarn install it might show it though?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#discussion_r1750470663","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -34,7 +34,7 @@\n     \"@octokit/webhooks\": \"13.2.7\",\n     \"@sinclair/typebox\": \"0.32.23\",\n     \"@supabase/supabase-js\": \"2.42.0\",\n-    \"@ubiquibot/permit-generation\": \"1.3.1\",\n+    \"@ubiquibot/permit-generation\": \"1.6.0\",","score":{"reward":5.36,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":74.00789473684213,"syllables":51,"sentences":2,"score":0.8599210526315787},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2276151549,"effect":{"addition":3,"deletion":3},"reward":0.24,"priority":4},{"reviewId":2290137649,"effect":{"addition":1,"deletion":1},"reward":0.08,"priority":4},{"reviewId":2290251779,"effect":{"addition":1,"deletion":1},"reward":0.08,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 27.028 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>0.4</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>12.364</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>14.264</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108\" target=\"_blank\" rel=\"noopener\">#108</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+3 -3</td><td>4</td><td>0.24</td></tr><tr><td>+1 -1</td><td>4</td><td>0.08</td></tr><tr><td>+1 -1</td><td>4</td><td>0.08</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2317484010\" target=\"_blank\" rel=\"noopener\">The property name suggests issue ID not issue number. That would&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.9</td><td>4</td><td>4.716</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2320048141\" target=\"_blank\" rel=\"noopener\">- I was able to claim https://github.com/ubiquity/ubiquibot-kern&hellip;</a></h6></td><td><details><summary>1.89</summary><pre>content:&#13;  content:&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.2&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>4</td><td>7.648</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#pullrequestreview-2290137649\" target=\"_blank\" rel=\"noopener\">Let's always use latest. Otherwise looks good to me.</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.6</td><td>4</td><td>2.664</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#discussion_r1741247536\" target=\"_blank\" rel=\"noopener\">This still doesn't make sense to me why suddenly there are issue&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.8</td><td>4</td><td>6.24</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#discussion_r1750398915\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"@ubiquibot/permit-generation\": \"*&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#discussion_r1750470663\" target=\"_blank\" rel=\"noopener\">For now, I know that we can trace back the GitHub actions run so&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.5</td><td>4</td><td>5.36</td></tr></tbody></table></details>"},"gentlementlegen":{"total":50,"userId":9807008,"comments":[{"id":2319646269,"content":"Impacted rewards that I've seen so far:\r\n- [x] https://github.com/ubiquity/ubiquibot-kernel/issues/95#issuecomment-2319639659\r\n- [x] https://github.com/ubiquibot/user-activity-watcher/issues/14#issuecomment-2317208648\r\n- [x] https://github.com/ubiquibot/command-start-stop/issues/6#issuecomment-2299954707\r\n- [x] https://github.com/ubiquibot/command-start-stop/issues/2#\r\n- [x] https://github.com/ubiquibot/command-start-stop/issues/32#issuecomment-2324847467","url":"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2319646269","commentType":"ISSUE_COLLABORATOR","score":{"reward":33.12,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5},"a":{"score":1,"elementCount":5}},"result":5.5},"priority":4,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":44.860705128205126,"syllables":116,"sentences":6,"score":0.8486070512820513},"multiplier":1,"relevance":1}},{"id":2320289924,"content":"@0x4007 Still not possible to claim for me.","url":"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2320289924","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.912,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.8}},{"id":2339851251,"content":"I will be regenerating the permits listed above and see if they are claimable now.\r\n---\r\nI can confirm that after re-generating all claims worked. However I am afraid that these can be claimed twice from the people where it already worked before, so I deleted the results.","url":"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2339851251","commentType":"ISSUE_COLLABORATOR","score":{"reward":12,"formatting":{"content":{"p":{"score":0,"elementCount":2},"hr":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":67.22000000000001,"syllables":70,"sentences":3,"score":0.9277999999999998},"multiplier":1,"relevance":1}},{"id":1751242017,"content":"I am against the use of the wildcard because it will break on major versions. If we want to get updates, I would suggest `1.x` or `^1.3.1`.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#discussion_r1751242017","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -34,7 +34,7 @@\n     \"@octokit/webhooks\": \"13.2.7\",\n     \"@sinclair/typebox\": \"0.32.23\",\n     \"@supabase/supabase-js\": \"2.42.0\",\n-    \"@ubiquibot/permit-generation\": \"1.3.1\",\n+    \"@ubiquibot/permit-generation\": \"*\",","score":{"reward":7.488,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":85.85950000000001,"syllables":32,"sentences":2,"score":0.7414049999999999},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2291347116,"effect":{"addition":4,"deletion":4},"reward":0.32,"priority":4},{"reviewId":2291473759,"effect":{"addition":1,"deletion":1},"reward":0.08,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 50 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>⚠️ Your rewards have been limited to the task price of 50 XP.</h6><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>0.4</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>48.032</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>7.488</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108\" target=\"_blank\" rel=\"noopener\">#108</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+4 -4</td><td>4</td><td>0.32</td></tr><tr><td>+1 -1</td><td>4</td><td>0.08</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2319646269\" target=\"_blank\" rel=\"noopener\">Impacted rewards that I've seen so far:- [x] https://github.co&hellip;</a></h6></td><td><details><summary>6.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;    a:&#13;      score: 1&#13;      elementCount: 5&#13;  result: 5.5&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>1</td><td>4</td><td>33.12</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2320289924\" target=\"_blank\" rel=\"noopener\">@0x4007 Still not possible to claim for me.</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>4</td><td>2.912</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2339851251\" target=\"_blank\" rel=\"noopener\">I will be regenerating the permits listed above and see if they &hellip;</a></h6></td><td><details><summary>2.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 48&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>1</td><td>4</td><td>12</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108#discussion_r1751242017\" target=\"_blank\" rel=\"noopener\">I am against the use of the wildcard because it will break on ma&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.9</td><td>4</td><td>7.488</td></tr></tbody></table></details>"},"Keyrxng":{"total":0.588,"userId":106303466,"comments":[{"id":2321810982,"content":"I added another task to this list","url":"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2321810982","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.588,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/108"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.588 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.588</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/46#issuecomment-2321810982\" target=\"_blank\" rel=\"noopener\">I added another task to this list</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.7</td><td>4</td><td>0.588</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-plugin-installer_33.json","json":{"0x4007":{"userId":4975670,"total":52.46,"task":{"reward":50,"multiplier":1},"comments":[{"id":2730139462,"content":"It never made sense to me why the manifest names have to match the repository name to verify that they are installed. Just take the URL from the repository name instead.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/33","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.46,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":65.56701612903228,"syllables":46,"sentences":2,"score":0.9443298387096771},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 52.46 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.46</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/33\" target=\"_blank\" rel=\"noopener\">It never made sense to me why the manifest names have to match t&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>1</td><td>1</td><td>2.46</td></tr></tbody></table></details>"},"Keyrxng":{"total":2.314,"userId":106303466,"comments":[{"id":1893749069,"content":"The comment is pretty clear I thought, idk how else to explain it but this was Zug's review comment on it:","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/35#discussion_r1893749069","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -84,8 +85,36 @@ export function renderConfigEditor(renderer: ManifestRenderer, pluginManifest: M\n   }\n \n   const parsedConfig = renderer.configParser.parseConfig(renderer.configParser.repoConfig || localStorage.getItem(\"config\"));\n-  // for when `resetToDefault` is called and no plugin gets passed in, we still want to show the remove button\n-  const isInstalled = parsedConfig.plugins?.find((p) => p.uses[0].plugin.includes(normalizePluginName(pluginManifest?.name || \"\")));","score":{"reward":0.294,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":80.67772727272727,"syllables":27,"sentences":1,"score":0.7932227272727274},"multiplier":0.25,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2517227735,"effect":{"addition":78,"deletion":23},"reward":2.02,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/35"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.314 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>2.02</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.294</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/35\" target=\"_blank\" rel=\"noopener\">#35</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+78 -23</td><td>2</td><td>2.02</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/35#discussion_r1893749069\" target=\"_blank\" rel=\"noopener\">The comment is pretty clear I thought, idk how else to explain i&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.294</td></tr></tbody></table></details>"},"rndquu":{"total":4.332,"userId":119500907,"comments":[{"id":2534277619,"content":"I suppose when https://github.com/ubiquity-os/plugin-template/issues/33 is ready it would be way easier to check what plugins are installed","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/35#issuecomment-2534277619","commentType":"PULL_COLLABORATOR","score":{"reward":2.312,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":68.93950000000002,"syllables":37,"sentences":2,"score":0.9106049999999998},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2494583509,"effect":{"addition":78,"deletion":23},"reward":2.02,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/35"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 4.332 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>2.02</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>2.312</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/35\" target=\"_blank\" rel=\"noopener\">#35</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+78 -23</td><td>2</td><td>2.02</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/35#issuecomment-2534277619\" target=\"_blank\" rel=\"noopener\">I suppose when https://github.com/ubiquity-os/plugin-template/is&hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.4</td><td>2</td><td>2.312</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_105.json","json":{"gentlementlegen":{"userId":9807008,"total":54.39,"task":{"reward":50,"multiplier":1},"comments":[{"id":2512180399,"content":"@0x4007 It seems that when a carriage return is in the body, it gets stripped on display by GitHub but is not recognized as a command by the kernel. I my two commands above I used:\r\n```\r\n/start\r\n```\r\nand\r\n```\r\n/start\r\n```\r\nThe latter one should be valid as well.\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquity/devpool-directory-bounties/issues/27#issuecomment-2336533065_","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/105","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.39,"formatting":{"content":{"p":{"score":0,"elementCount":4},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":59.6021516393443,"syllables":95,"sentences":4,"score":0.9960215163934429},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 54.39 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.39</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/105\" target=\"_blank\" rel=\"noopener\">@0x4007 It seems that when a carriage return is in the body, it &hellip;</a></h6></td><td><details><summary>3.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>1</td><td>1</td><td>4.39</td></tr></tbody></table></details>"},"0x4007":{"total":15.596,"userId":4975670,"comments":[{"id":2337825174,"content":"Two error messages doesn't look right. Can you address that?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/105#issuecomment-2337825174","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.176,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":93.57977272727274,"syllables":14,"sentences":2,"score":0.6642022727272726},"multiplier":1,"relevance":0.9}},{"id":1750300268,"content":"This uses a database? It should be querying the GitHub api only.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/44#discussion_r1750300268","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -44,7 +46,20 @@ describe(\"User start/stop\", () => {\n \n     const { content } = await userStartStop(context);\n \n-    expect(content).toEqual(\"Task assigned successfully\");\n+    expect(content).toEqual(SUCCESS_MESSAGE);\n+  });\n+\n+  test(\"User can start an issue with trimmed command\", async () => {\n+    const issue = db.issue.findFirst({ where: { id: { equals: 1 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as PayloadSender;","score":{"reward":4.128,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":80.89500000000001,"syllables":17,"sentences":2,"score":0.7910499999999999},"multiplier":1,"relevance":0.8}},{"id":1750347181,"content":"That doesn't seem to make sense to me. We should be using a mock http server not a database.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/44#discussion_r1750347181","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -44,7 +46,20 @@ describe(\"User start/stop\", () => {\n \n     const { content } = await userStartStop(context);\n \n-    expect(content).toEqual(\"Task assigned successfully\");\n+    expect(content).toEqual(SUCCESS_MESSAGE);\n+  });\n+\n+  test(\"User can start an issue with trimmed command\", async () => {\n+    const issue = db.issue.findFirst({ where: { id: { equals: 1 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as PayloadSender;","score":{"reward":6.372,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":95.165,"syllables":24,"sentences":2,"score":0.64835},"multiplier":1,"relevance":0.9}},{"id":1750396312,"content":"No idea about all this","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/44#discussion_r1750396312","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -44,7 +46,20 @@ describe(\"User start/stop\", () => {\n \n     const { content } = await userStartStop(context);\n \n-    expect(content).toEqual(\"Task assigned successfully\");\n+    expect(content).toEqual(SUCCESS_MESSAGE);\n+  });\n+\n+  test(\"User can start an issue with trimmed command\", async () => {\n+    const issue = db.issue.findFirst({ where: { id: { equals: 1 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as PayloadSender;","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0}}],"reviewRewards":[{"reviews":[{"reviewId":2289976463,"effect":{"addition":18,"deletion":3},"reward":0.84,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/44"},{"reviews":[{"reviewId":2289873925,"effect":{"addition":1,"deletion":1},"reward":0.08,"priority":4}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/109"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 15.596 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>0.92</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>4.176</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>10.5</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/44\" target=\"_blank\" rel=\"noopener\">#44</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+18 -3</td><td>4</td><td>0.84</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/109\" target=\"_blank\" rel=\"noopener\">#109</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1 -1</td><td>4</td><td>0.08</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/105#issuecomment-2337825174\" target=\"_blank\" rel=\"noopener\">Two error messages doesn't look right. Can you address that?</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.9</td><td>4</td><td>4.176</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/44#discussion_r1750300268\" target=\"_blank\" rel=\"noopener\">This uses a database? It should be querying the GitHub api only.</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>4</td><td>4.128</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/44#discussion_r1750347181\" target=\"_blank\" rel=\"noopener\">That doesn't seem to make sense to me. We should be using a mock&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.9</td><td>4</td><td>6.372</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/44#discussion_r1750396312\" target=\"_blank\" rel=\"noopener\">No idea about all this</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0</td><td>4</td><td>0</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_166.json","json":{"whilefoo":{"userId":139262667,"total":1201.65,"task":{"reward":1200,"multiplier":1},"comments":[{"id":2439557817,"content":"This will clash with the ask plugin because both would be responding to the @tag, this command router would respond as if the question is about a command and ask plugin would respond as if it's a general question.\r\nOne option would be to first trigger command router and if it doesn't know the answer, then trigger the ask plugin. However this is gonna be a bit complicated to set up because the ask plugin is a normal plugin that is defined in the config so we would have to modify the kernel to have so called \"global\" plugins that would be triggered by the kernel on its own without the need to define it in the config.\r\nAnother option is to move the ask plugin to the kernel however this defeats the purpose of plugins and you can't disable or enable it.\r\nThe third option is to implement command router in the ask plugin but the problem is that the plugins can't call another plugin unless we implement a way for a plugin to tell the kernel which command/plugin to call however this is not secure as any third-party could call another plugin","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2439557817","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.65,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":3,"words":{"wordCount":200,"wordValue":0.1,"result":1.73},"readability":{"fleschKincaid":46.94900000000003,"syllables":282,"sentences":5,"score":0.8694900000000003},"multiplier":0.25,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1201.65 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>1200</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.65</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2439557817\" target=\"_blank\" rel=\"noopener\">This will clash with the ask plugin because both would be respon&hellip;</a></h6></td><td><details><summary>1.73</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 200&#13;  wordValue: 0.1&#13;  result: 1.73&#13;</pre></details></td><td>1</td><td>3</td><td>1.65</td></tr></tbody></table></details>"},"shiv810":{"total":5.01,"userId":53160903,"comments":[{"id":2432062753,"content":"This is an excellent use case for OpenAI function calling. We can map the functions and enable the model to select actions accordingly. By classifying user intent with the LLM, we can then allow the functions to execute the necessary tasks. However, a challenge is that all existing functions may need to be modified to accommodate invocation from the LLM, or alternatively, we would need to create a new adapter for the functions.\nNon-LLM approach is possible as well, we could create a dictionary of keywords for the all of the /slash functions and then use winkjs small English model for classification.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2432062753","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":2.46,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":103,"wordValue":0.1,"result":2.59},"readability":{"fleschKincaid":50.40172815533984,"syllables":165,"sentences":5,"score":0.9040172815533984},"multiplier":0.25,"relevance":1}},{"id":2439629996,"content":"This task should be split into two parts: first, developing a kernel interface to invoke any slash command, and second, processing user queries.\r\nThis method won’t interfere with the `command-ask` plugin. Users will enter queries, and assuming we have a kernel-level interface for calling (\\slash plugins), where the input acts like a switch case, no response will be generated at this stage. Instead, control will be handed off to the appropriate plugin. @whilefoo and @0x4007, rfc?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2439629996","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":2.55,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":77,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":62.65594805194806,"syllables":117,"sentences":5,"score":0.9734405194805195},"multiplier":0.25,"relevance":1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 5.01 XP ]</a>&nbsp;</h3><h6>@shiv810</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>5.01</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2432062753\" target=\"_blank\" rel=\"noopener\">This is an excellent use case for OpenAI function calling. We ca&hellip;</a></h6></td><td><details><summary>2.59</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 103&#13;  wordValue: 0.1&#13;  result: 2.59&#13;</pre></details></td><td>1</td><td>3</td><td>2.46</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2439629996\" target=\"_blank\" rel=\"noopener\">This task should be split into two parts: first, developing a ke&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 77&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>1</td><td>3</td><td>2.55</td></tr></tbody></table></details>"},"0x4007":{"total":78.286,"userId":4975670,"comments":[{"id":2436504365,"content":"@gentlementlegen @whilefoo please design this interface","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2436504365","commentType":"ISSUE_AUTHOR","score":{"reward":1.281,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":-10.754999999999995,"syllables":15,"sentences":1,"score":0},"multiplier":1,"relevance":0.7}},{"id":2439569489,"content":"We obviously change ask to /ask and then it acts like any normal plugin","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2439569489","commentType":"ISSUE_AUTHOR","score":{"reward":3.045,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":77.81071428571428,"syllables":19,"sentences":1,"score":0.8218928571428572},"multiplier":1,"relevance":0.7}},{"id":2499892382,"content":"Interesting that rewards don't generate and there is no error message. This should be fixed.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2499892382","commentType":"ISSUE_AUTHOR","score":{"reward":0.966,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":71.81500000000001,"syllables":24,"sentences":2,"score":0.8818499999999999},"multiplier":1,"relevance":0.2}},{"id":2506692111,"content":"There was no error message posted","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2506692111","commentType":"ISSUE_AUTHOR","score":{"reward":0.222,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.1}},{"id":2607517148,"content":"I would like to abstract all of the configured capabilities behind tagging @UbiquityOS. For example, we converted `/ask` to @UbiquityOS so you can more naturally ask a context aware question to your \"AI team member.\" \r\nI think its useful to retain the `/` syntax, defined within the plugins, for shorthand. However we should have a small and cheap model (like 4o-mini?) that can read the repo's configured help menu, read their descriptions, and then invoke them on behalf of the user query. I think we can optimize costs further without the use of an LLM on a later date, as I don't see costs being a problem for awhile. \r\n| Command | Description | Example |\r\n|---|---|---|\r\n| `/help` | List all available commands. | `/help` |\r\n| `/allow` | Allows the user to modify the given label. | `/allow @user1 label` |\r\n| `/query` | Returns the user's wallet, access, and multiplier information. | `/query @ubiquibot` |\r\n| `/start` | Assign yourself to the issue. | `/start` |\r\n| `/stop` | Unassign yourself from the issue. | `/stop` |\r\n| `/wallet` | Register your wallet address for payments. | `/wallet ubq.eth` |\r\nExamples:\r\n@ubiquityos can i be assigned to the issue?\r\n@ubiquityos please set my wallet address to 0x0000...\r\n@ubiquityos let @0x4007 set priority labels. \r\nThis could be really nice as we grow the commands set further over time.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.41,"formatting":{"content":{"p":{"score":0,"elementCount":15}},"result":0},"priority":1,"words":{"wordCount":187,"wordValue":0.1,"result":1.86},"readability":{"fleschKincaid":59.25026236631018,"syllables":300,"sentences":16,"score":0.9925026236631018},"multiplier":1,"relevance":1}},{"id":1837356678,"content":"Format","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1837356678","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.051,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":36.62000000000003,"syllables":2,"sentences":1,"score":0.7662000000000003},"multiplier":1,"relevance":0.1}},{"id":1837358518,"content":"I wonder if we should offer a short hand syntax. \nAs I understand @UbiquityOS wouldn't automatically populate on the GitHub UI. \nMixed thoughts on this idea, but it might be more ergonomic to use with something like @u or @os \nAlso this next idea could be out of scope but wondering if we should intercept all comments and run commands on behalf. Would be perfect if we could handle those assigns for the newcomers asking to work on tasks for example.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1837358518","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,9 +1,212 @@\n+import { Manifest } from \"@ubiquity-os/plugin-sdk/manifest\";\n import { GitHubContext } from \"../github-context\";\n+import { PluginInput } from \"../types/plugin\";\n+import { isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { getConfig } from \"../utils/config\";\n+import { getManifest } from \"../utils/plugins\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n import { postHelpCommand } from \"./help-command\";\n \n export default async function issueCommentCreated(context: GitHubContext<\"issue_comment.created\">) {\n-  const body = context.payload.comment.body.trim();\n-  if (/^\\/help$/.test(body)) {\n+  const body = context.payload.comment.body.trim().toLowerCase();\n+  if (body.startsWith(`@ubiquityos`)) {","score":{"reward":9.207,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":82,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":61.19091463414635,"syllables":121,"sentences":4,"score":0.9880908536585364},"multiplier":1,"relevance":0.9}},{"id":1837359759,"content":"This is a high quality prompt good job","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1837359759","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,9 +1,212 @@\n+import { Manifest } from \"@ubiquity-os/plugin-sdk/manifest\";\n import { GitHubContext } from \"../github-context\";\n+import { PluginInput } from \"../types/plugin\";\n+import { isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { getConfig } from \"../utils/config\";\n+import { getManifest } from \"../utils/plugins\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n import { postHelpCommand } from \"./help-command\";\n \n export default async function issueCommentCreated(context: GitHubContext<\"issue_comment.created\">) {\n-  const body = context.payload.comment.body.trim();\n-  if (/^\\/help$/.test(body)) {\n+  const body = context.payload.comment.body.trim().toLowerCase();\n+  if (body.startsWith(`@ubiquityos`)) {\n+    await commandRouter(context);\n+  }\n+  if (body.startsWith(`/help`)) {\n     await postHelpCommand(context);\n   }\n }\n+\n+interface OpenAiFunction {\n+  type: \"function\";\n+  function: {\n+    name: string;\n+    description?: string;\n+    parameters?: Record<string, unknown>;\n+    strict?: boolean | null;\n+  };\n+}\n+\n+const embeddedCommands: Array<OpenAiFunction> = [\n+  {\n+    type: \"function\",\n+    function: {\n+      name: \"help\",\n+      description: \"Shows all available commands and their examples\",\n+      strict: false,\n+      parameters: {\n+        type: \"object\",\n+        properties: {},\n+        additionalProperties: false,\n+      },\n+    },\n+  },\n+];\n+\n+async function commandRouter(context: GitHubContext<\"issue_comment.created\">) {\n+  if (!(\"installation\" in context.payload) || context.payload.installation?.id === undefined) {\n+    console.log(`No installation found, cannot invoke command`);\n+    return;\n+  }\n+\n+  const commands = [...embeddedCommands];\n+  const config = await getConfig(context);\n+  const pluginsWithManifest: { plugin: PluginConfiguration[\"plugins\"][0][\"uses\"][0]; manifest: Manifest }[] = [];\n+  for (let i = 0; i < config.plugins.length; ++i) {\n+    const plugin = config.plugins[i].uses[0];\n+\n+    const manifest = await getManifest(context, plugin.plugin);\n+    if (!manifest?.commands) {\n+      continue;\n+    }\n+    pluginsWithManifest.push({\n+      plugin: plugin,\n+      manifest,\n+    });\n+    for (const command of manifest.commands) {\n+      commands.push({\n+        type: \"function\",\n+        function: {\n+          ...command,\n+          parameters: command.parameters\n+            ? {\n+                ...command.parameters,\n+                required: Object.keys(command.parameters.properties),\n+                additionalProperties: false,\n+              }\n+            : undefined,\n+          strict: true,\n+        },\n+      });\n+    }\n+  }\n+\n+  const response = await context.openAi.chat.completions.create({\n+    model: \"gpt-4o-mini\",\n+    messages: [\n+      {\n+        role: \"system\",\n+        content: [\n+          {\n+            text: `\n+You are a GitHub bot named **UbiquityOS**. Your role is to interpret and execute commands based on user comments provided in structured JSON format.\n+\n+### JSON Structure:\n+The input will include the following fields:\n+- repositoryOwner: The username of the repository owner.\n+- repositoryName: The name of the repository where the comment was made.\n+- issueNumber: The issue or pull request number where the comment appears.\n+- author: The username of the user who posted the comment.\n+- comment: The comment text directed at UbiquityOS.\n+\n+### Example JSON:\n+{\n+  \"repositoryOwner\": \"repoOwnerUsername\",\n+  \"repositoryName\": \"example-repo\",\n+  \"issueNumber\": 42,\n+  \"author\": \"user1\",\n+  \"comment\": \"@UbiquityOS please allow @user2 to change priority and time labels.\"\n+}\n+\n+### Instructions:\n+- **Interpretation Mode**:\n+  - **Tagged Natural Language**: Interpret the \"comment\" field provided in JSON. Users will mention you with \"@UbiquityOS\", followed by their request. Infer the intended command and parameters based on the \"comment\" content.\n+\n+- **Action**: Map the user's intent to one of your available functions. When responding, use the \"author\", \"repositoryOwner\", \"repositoryName\", and \"issueNumber\" fields as context if relevant.\n+`,","score":{"reward":0.819,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.3}},{"id":1839372433,"content":"It might be interesting to have some type of local logic (perhaps non LLM) to determine if the comment is likely asking for some type of action. Accuracy can be pretty low and in theory it could still cut quite a bit of costs. \nAlso with mini models costs might already be cheap enough for it to be feasible. We would need to run projections I suppose.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1839372433","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,9 +1,212 @@\n+import { Manifest } from \"@ubiquity-os/plugin-sdk/manifest\";\n import { GitHubContext } from \"../github-context\";\n+import { PluginInput } from \"../types/plugin\";\n+import { isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { getConfig } from \"../utils/config\";\n+import { getManifest } from \"../utils/plugins\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n import { postHelpCommand } from \"./help-command\";\n \n export default async function issueCommentCreated(context: GitHubContext<\"issue_comment.created\">) {\n-  const body = context.payload.comment.body.trim();\n-  if (/^\\/help$/.test(body)) {\n+  const body = context.payload.comment.body.trim().toLowerCase();\n+  if (body.startsWith(`@ubiquityos`)) {","score":{"reward":7.896,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":67,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":68.61583955223882,"syllables":96,"sentences":4,"score":0.9138416044776118},"multiplier":1,"relevance":0.8}},{"id":1865912058,"content":"A solution would be to hook into the issue author's name. At least under the issue this would be intuitive. Under the pull I'm not sure if it makes sense to hook into the pull author, as they are generally not the person you would ask these sort of questions to.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1865912058","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,9 +1,212 @@\n+import { Manifest } from \"@ubiquity-os/plugin-sdk/manifest\";\n import { GitHubContext } from \"../github-context\";\n+import { PluginInput } from \"../types/plugin\";\n+import { isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { getConfig } from \"../utils/config\";\n+import { getManifest } from \"../utils/plugins\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n import { postHelpCommand } from \"./help-command\";\n \n export default async function issueCommentCreated(context: GitHubContext<\"issue_comment.created\">) {\n-  const body = context.payload.comment.body.trim();\n-  if (/^\\/help$/.test(body)) {\n+  const body = context.payload.comment.body.trim().toLowerCase();\n+  if (body.startsWith(`@ubiquityos`)) {","score":{"reward":6.363,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":77.16748427672958,"syllables":70,"sentences":3,"score":0.8283251572327042},"multiplier":1,"relevance":0.7}},{"id":2454414557,"content":"@sshivaditya2019 perhaps you can offer some pointers related to function calling","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2454414557","commentType":"PULL_COLLABORATOR","score":{"reward":1.452,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":41.8518181818182,"syllables":20,"sentences":1,"score":0.818518181818182},"multiplier":1,"relevance":0.4}},{"id":2469386346,"content":"This is amazing for demos to see let's merge it if you think it's in a good spot to. \nReally looking forward to this natural language interface either on the copilot chat window on GitHub web desktop / iOS and/or our telegram bot.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2469386346","commentType":"PULL_COLLABORATOR","score":{"reward":5.31,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":63.67750000000001,"syllables":64,"sentences":2,"score":0.9632249999999999},"multiplier":1,"relevance":0.6}},{"id":2478147185,"content":"Can't this be done async? Lets just merge these and then fix the plugins later? Or will kernel be broken?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2478147185","commentType":"PULL_COLLABORATOR","score":{"reward":2.73,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":94.98714285714289,"syllables":26,"sentences":3,"score":0.6501285714285712},"multiplier":1,"relevance":0.5}},{"id":2496923215,"content":"What's the status on updating all the plugins? Should we merge?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2496923215","commentType":"PULL_COLLABORATOR","score":{"reward":1.512,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":87.94500000000002,"syllables":16,"sentences":2,"score":0.7205499999999998},"multiplier":1,"relevance":0.4}},{"id":2511628157,"content":"@whilefoo @gentlementlegen \r\n1. We need to fix the stability of the kernel since this merged in it seems unreliable. \r\n2. I think this would be useful if it also intercepted tags to the issue author under the issue because it is common for new contributors to ask questions like \"can I start this\" or general questions \"what is this repo for\" which might be useful for the bot to intervene. I suppose we should experiment.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2511628157","commentType":"PULL_COLLABORATOR","score":{"reward":8.592,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":3,"words":{"wordCount":73,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":51.18050228310506,"syllables":113,"sentences":3,"score":0.9118050228310506},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2428397103,"effect":{"addition":737,"deletion":144},"reward":26.43,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 78.286 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>26.43</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.41</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>5.514</td></tr><tr><td>Review</td><td>Comment</td><td>10</td><td>43.932</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186\" target=\"_blank\" rel=\"noopener\">#186</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+737 -144</td><td>3</td><td>26.43</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166\" target=\"_blank\" rel=\"noopener\">I would like to abstract all of the configured capabilities behi&hellip;</a></h6></td><td><details><summary>1.86</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 15&#13;  result: 0&#13;regex:&#13;  wordCount: 187&#13;  wordValue: 0.1&#13;  result: 1.86&#13;</pre></details></td><td>1</td><td>1</td><td>2.41</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2436504365\" target=\"_blank\" rel=\"noopener\">@gentlementlegen @whilefoo please design this interface</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.281</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2439569489\" target=\"_blank\" rel=\"noopener\">We obviously change ask to /ask and then it acts like any normal&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.045</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2499892382\" target=\"_blank\" rel=\"noopener\">Interesting that rewards don't generate and there is no error me&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.966</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2506692111\" target=\"_blank\" rel=\"noopener\">There was no error message posted</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.222</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1837356678\" target=\"_blank\" rel=\"noopener\">Format</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.051</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1837358518\" target=\"_blank\" rel=\"noopener\">I wonder if we should offer a short hand syntax. As I understan&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 82&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>3</td><td>9.207</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1837359759\" target=\"_blank\" rel=\"noopener\">This is a high quality prompt good job</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.819</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1839372433\" target=\"_blank\" rel=\"noopener\">It might be interesting to have some type of local logic (perhap&hellip;</a></h6></td><td><details><summary>2.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 67&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.896</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1865912058\" target=\"_blank\" rel=\"noopener\">A solution would be to hook into the issue author's name. At lea&hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.363</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2454414557\" target=\"_blank\" rel=\"noopener\">@sshivaditya2019 perhaps you can offer some pointers related to &hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.452</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2469386346\" target=\"_blank\" rel=\"noopener\">This is amazing for demos to see let's merge it if you think it'&hellip;</a></h6></td><td><details><summary>2.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.6</td><td>3</td><td>5.31</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2478147185\" target=\"_blank\" rel=\"noopener\">Can't this be done async? Lets just merge these and then fix the&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.73</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2496923215\" target=\"_blank\" rel=\"noopener\">What's the status on updating all the plugins? Should we merge?</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.512</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2511628157\" target=\"_blank\" rel=\"noopener\">@whilefoo @gentlementlegen 1. We need to fix the stability of &hellip;</a></h6></td><td><details><summary>2.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 73&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.8</td><td>3</td><td>8.592</td></tr></tbody></table></details>"},"gentlementlegen":{"total":101.253,"userId":9807008,"comments":[{"id":2499907291,"content":"@0x4007 Did you see the error message? We just upgraded everything the have the LLM capability.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2499907291","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.465,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":61.24000000000001,"syllables":26,"sentences":2,"score":0.9875999999999999},"multiplier":1,"relevance":0.7}},{"id":1833715981,"content":"We have moved to `ESM` so I'd suggest trying `unstable_mock` instead. As such, imports should happen after the mock, since it is hoisted.\r\nhttps://jestjs.io/docs/ecmascript-modules\r\n(And I second you, it's a pain in the ass to deal with all this `CJS` `ESM compatibility, I am having nightmares within `text-conversation-rewards`)","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1833715981","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,320 @@\n+import { afterAll, afterEach, beforeAll, beforeEach, describe, expect, it, jest } from \"@jest/globals\";\n+import { RestEndpointMethodTypes } from \"@octokit/plugin-rest-endpoint-methods\";\n+import { config } from \"dotenv\";\n+import { http, HttpResponse } from \"msw\";\n+import { GitHubContext } from \"../src/github/github-context\";\n+import { GitHubEventHandler } from \"../src/github/github-event-handler\";\n+import { CONFIG_FULL_PATH } from \"../src/github/utils/config\";\n+import { server } from \"./__mocks__/node\";\n+import \"./__mocks__/webhooks\";\n+\n+jest.mock(\"@octokit/plugin-paginate-rest\", () => ({}));\n+jest.mock(\"@octokit/plugin-rest-endpoint-methods\", () => ({}));\n+jest.mock(\"@octokit/plugin-retry\", () => ({}));\n+jest.mock(\"@octokit/plugin-throttling\", () => ({}));\n+jest.mock(\"@octokit/auth-app\", () => ({}));\n+\n+config({ path: \".dev.vars\" });\n+\n+const name = \"ubiquity-os-kernel\";\n+\n+const dispatchWorkflow = jest.fn();\n+jest.mock(\"../src/github/utils/workflow-dispatch\", () => ({\n+  //...(jest.requireActual(\"../src/github/utils/workflow-dispatch\") as object),\n+  getDefaultBranch: async () => \"main\",\n+  dispatchWorkflow: dispatchWorkflow,\n+}));","score":{"reward":10.584,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":85.10875,"syllables":61,"sentences":4,"score":0.7489125},"multiplier":1,"relevance":0.9}},{"id":1834085295,"content":"Update: it broke in the SDK when I moved it too. It is usually easier to fake network calls than the actual package.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1834085295","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,320 @@\n+import { afterAll, afterEach, beforeAll, beforeEach, describe, expect, it, jest } from \"@jest/globals\";\n+import { RestEndpointMethodTypes } from \"@octokit/plugin-rest-endpoint-methods\";\n+import { config } from \"dotenv\";\n+import { http, HttpResponse } from \"msw\";\n+import { GitHubContext } from \"../src/github/github-context\";\n+import { GitHubEventHandler } from \"../src/github/github-event-handler\";\n+import { CONFIG_FULL_PATH } from \"../src/github/utils/config\";\n+import { server } from \"./__mocks__/node\";\n+import \"./__mocks__/webhooks\";\n+\n+jest.mock(\"@octokit/plugin-paginate-rest\", () => ({}));\n+jest.mock(\"@octokit/plugin-rest-endpoint-methods\", () => ({}));\n+jest.mock(\"@octokit/plugin-retry\", () => ({}));\n+jest.mock(\"@octokit/plugin-throttling\", () => ({}));\n+jest.mock(\"@octokit/auth-app\", () => ({}));\n+\n+config({ path: \".dev.vars\" });\n+\n+const name = \"ubiquity-os-kernel\";\n+\n+const dispatchWorkflow = jest.fn();\n+jest.mock(\"../src/github/utils/workflow-dispatch\", () => ({\n+  //...(jest.requireActual(\"../src/github/utils/workflow-dispatch\") as object),\n+  getDefaultBranch: async () => \"main\",\n+  dispatchWorkflow: dispatchWorkflow,\n+}));","score":{"reward":4.137,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":84.8146739130435,"syllables":30,"sentences":2,"score":0.7518532608695649},"multiplier":1,"relevance":0.7}},{"id":1835265927,"content":"This can happen if the module you are trying to lock is previously imported by another module first, in such case the mock won't work. I've seen such scenario within the SDK.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1835265927","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,320 @@\n+import { afterAll, afterEach, beforeAll, beforeEach, describe, expect, it, jest } from \"@jest/globals\";\n+import { RestEndpointMethodTypes } from \"@octokit/plugin-rest-endpoint-methods\";\n+import { config } from \"dotenv\";\n+import { http, HttpResponse } from \"msw\";\n+import { GitHubContext } from \"../src/github/github-context\";\n+import { GitHubEventHandler } from \"../src/github/github-event-handler\";\n+import { CONFIG_FULL_PATH } from \"../src/github/utils/config\";\n+import { server } from \"./__mocks__/node\";\n+import \"./__mocks__/webhooks\";\n+\n+jest.mock(\"@octokit/plugin-paginate-rest\", () => ({}));\n+jest.mock(\"@octokit/plugin-rest-endpoint-methods\", () => ({}));\n+jest.mock(\"@octokit/plugin-retry\", () => ({}));\n+jest.mock(\"@octokit/plugin-throttling\", () => ({}));\n+jest.mock(\"@octokit/auth-app\", () => ({}));\n+\n+config({ path: \".dev.vars\" });\n+\n+const name = \"ubiquity-os-kernel\";\n+\n+const dispatchWorkflow = jest.fn();\n+jest.mock(\"../src/github/utils/workflow-dispatch\", () => ({\n+  //...(jest.requireActual(\"../src/github/utils/workflow-dispatch\") as object),\n+  getDefaultBranch: async () => \"main\",\n+  dispatchWorkflow: dispatchWorkflow,\n+}));","score":{"reward":6.12,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":70.14470588235295,"syllables":48,"sentences":2,"score":0.8985529411764704},"multiplier":1,"relevance":0.8}},{"id":1835557858,"content":"Glad you figured it out. Jest has been giving me headaches a lot lately particularly when ESM came into play.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1835557858","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,320 @@\n+import { afterAll, afterEach, beforeAll, beforeEach, describe, expect, it, jest } from \"@jest/globals\";\n+import { RestEndpointMethodTypes } from \"@octokit/plugin-rest-endpoint-methods\";\n+import { config } from \"dotenv\";\n+import { http, HttpResponse } from \"msw\";\n+import { GitHubContext } from \"../src/github/github-context\";\n+import { GitHubEventHandler } from \"../src/github/github-event-handler\";\n+import { CONFIG_FULL_PATH } from \"../src/github/utils/config\";\n+import { server } from \"./__mocks__/node\";\n+import \"./__mocks__/webhooks\";\n+\n+jest.mock(\"@octokit/plugin-paginate-rest\", () => ({}));\n+jest.mock(\"@octokit/plugin-rest-endpoint-methods\", () => ({}));\n+jest.mock(\"@octokit/plugin-retry\", () => ({}));\n+jest.mock(\"@octokit/plugin-throttling\", () => ({}));\n+jest.mock(\"@octokit/auth-app\", () => ({}));\n+\n+config({ path: \".dev.vars\" });\n+\n+const name = \"ubiquity-os-kernel\";\n+\n+const dispatchWorkflow = jest.fn();\n+jest.mock(\"../src/github/utils/workflow-dispatch\", () => ({\n+  //...(jest.requireActual(\"../src/github/utils/workflow-dispatch\") as object),\n+  getDefaultBranch: async () => \"main\",\n+  dispatchWorkflow: dispatchWorkflow,\n+}));","score":{"reward":2.256,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":69.78500000000001,"syllables":30,"sentences":2,"score":0.9021499999999999},"multiplier":1,"relevance":0.4}},{"id":1835800627,"content":"```suggestion\r\n  if (!toolCalls?.length) {\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1835800627","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,9 +1,212 @@\n+import { Manifest } from \"@ubiquity-os/plugin-sdk/manifest\";\n import { GitHubContext } from \"../github-context\";\n+import { PluginInput } from \"../types/plugin\";\n+import { isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { getConfig } from \"../utils/config\";\n+import { getManifest } from \"../utils/plugins\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n import { postHelpCommand } from \"./help-command\";\n \n export default async function issueCommentCreated(context: GitHubContext<\"issue_comment.created\">) {\n-  const body = context.payload.comment.body.trim();\n-  if (/^\\/help$/.test(body)) {\n+  const body = context.payload.comment.body.trim().toLowerCase();\n+  if (body.startsWith(`@ubiquityos`)) {\n+    await commandRouter(context);\n+  }\n+  if (body.startsWith(`/help`)) {\n     await postHelpCommand(context);\n   }\n }\n+\n+interface OpenAiFunction {\n+  type: \"function\";\n+  function: {\n+    name: string;\n+    description?: string;\n+    parameters?: Record<string, unknown>;\n+    strict?: boolean | null;\n+  };\n+}\n+\n+const embeddedCommands: Array<OpenAiFunction> = [\n+  {\n+    type: \"function\",\n+    function: {\n+      name: \"help\",\n+      description: \"Shows all available commands and their examples\",\n+      strict: false,\n+      parameters: {\n+        type: \"object\",\n+        properties: {},\n+        additionalProperties: false,\n+      },\n+    },\n+  },\n+];\n+\n+async function commandRouter(context: GitHubContext<\"issue_comment.created\">) {\n+  if (!(\"installation\" in context.payload) || context.payload.installation?.id === undefined) {\n+    console.log(`No installation found, cannot invoke command`);\n+    return;\n+  }\n+\n+  const commands = [...embeddedCommands];\n+  const config = await getConfig(context);\n+  const pluginsWithManifest: { plugin: PluginConfiguration[\"plugins\"][0][\"uses\"][0]; manifest: Manifest }[] = [];\n+  for (let i = 0; i < config.plugins.length; ++i) {\n+    const plugin = config.plugins[i].uses[0];\n+\n+    const manifest = await getManifest(context, plugin.plugin);\n+    if (!manifest?.commands) {\n+      continue;\n+    }\n+    pluginsWithManifest.push({\n+      plugin: plugin,\n+      manifest,\n+    });\n+    for (const command of manifest.commands) {\n+      commands.push({\n+        type: \"function\",\n+        function: {\n+          ...command,\n+          parameters: command.parameters\n+            ? {\n+                ...command.parameters,\n+                required: Object.keys(command.parameters.properties),\n+                additionalProperties: false,\n+              }\n+            : undefined,\n+          strict: true,\n+        },\n+      });\n+    }\n+  }\n+\n+  const response = await context.openAi.chat.completions.create({\n+    model: \"gpt-4o-mini\",\n+    messages: [\n+      {\n+        role: \"system\",\n+        content: [\n+          {\n+            text: `\n+You are a GitHub bot named **UbiquityOS**. Your role is to interpret and execute commands based on user comments provided in structured JSON format.\n+\n+### JSON Structure:\n+The input will include the following fields:\n+- repositoryOwner: The username of the repository owner.\n+- repositoryName: The name of the repository where the comment was made.\n+- issueNumber: The issue or pull request number where the comment appears.\n+- author: The username of the user who posted the comment.\n+- comment: The comment text directed at UbiquityOS.\n+\n+### Example JSON:\n+{\n+  \"repositoryOwner\": \"repoOwnerUsername\",\n+  \"repositoryName\": \"example-repo\",\n+  \"issueNumber\": 42,\n+  \"author\": \"user1\",\n+  \"comment\": \"@UbiquityOS please allow @user2 to change priority and time labels.\"\n+}\n+\n+### Instructions:\n+- **Interpretation Mode**:\n+  - **Tagged Natural Language**: Interpret the \"comment\" field provided in JSON. Users will mention you with \"@UbiquityOS\", followed by their request. Infer the intended command and parameters based on the \"comment\" content.\n+\n+- **Action**: Map the user's intent to one of your available functions. When responding, use the \"author\", \"repositoryOwner\", \"repositoryName\", and \"issueNumber\" fields as context if relevant.\n+`,\n+            type: \"text\",\n+          },\n+        ],\n+      },\n+      {\n+        role: \"user\",\n+        content: [\n+          {\n+            text: JSON.stringify({\n+              repositoryOwner: context.payload.repository.owner.login,\n+              repositoryName: context.payload.repository.name,\n+              issueNumber: context.payload.issue.number,\n+              author: context.payload.comment.user?.login,\n+              comment: context.payload.comment.body,\n+            }),\n+            type: \"text\",\n+          },\n+        ],\n+      },\n+    ],\n+    temperature: 1,\n+    max_tokens: 2048,\n+    top_p: 1,\n+    frequency_penalty: 0,\n+    presence_penalty: 0,\n+    tools: commands,\n+    parallel_tool_calls: false,\n+    response_format: {\n+      type: \"text\",\n+    },\n+  });\n+\n+  if (response.choices.length === 0) {\n+    return;\n+  }\n+\n+  const toolCalls = response.choices[0].message.tool_calls;\n+  if (!toolCalls || toolCalls.length === 0) {","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.9}},{"id":1839425946,"content":"I agree with @whilefoo that tagging another person is not good. Maybe we should create a @UbiquityOS account to get the auto-completion when typing the name.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1839425946","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,9 +1,212 @@\n+import { Manifest } from \"@ubiquity-os/plugin-sdk/manifest\";\n import { GitHubContext } from \"../github-context\";\n+import { PluginInput } from \"../types/plugin\";\n+import { isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { getConfig } from \"../utils/config\";\n+import { getManifest } from \"../utils/plugins\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n import { postHelpCommand } from \"./help-command\";\n \n export default async function issueCommentCreated(context: GitHubContext<\"issue_comment.created\">) {\n-  const body = context.payload.comment.body.trim();\n-  if (/^\\/help$/.test(body)) {\n+  const body = context.payload.comment.body.trim().toLowerCase();\n+  if (body.startsWith(`@ubiquityos`)) {","score":{"reward":4.851,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":61.53250000000003,"syllables":42,"sentences":2,"score":0.9846749999999997},"multiplier":1,"relevance":0.7}},{"id":2453726773,"content":"Second option seems proper to me because it is what we use for all the plugins so the parser is ready without any change, making maintenance easier.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2453726773","commentType":"PULL_COLLABORATOR","score":{"reward":5.52,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":57.23000000000002,"syllables":39,"sentences":1,"score":0.9723000000000002},"multiplier":1,"relevance":0.8}},{"id":2466694278,"content":"@whilefoo The types not matching was there before somehow, not sure about the cause.\r\nWhat I usually do is to build with a `--watch` so I don't have to think of it. If that is too burdensome, we can consider merging it back, but it has to be perfectly separated otherwise we will have the circular reference again which will break `ncc` compilation.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2466694278","commentType":"PULL_COLLABORATOR","score":{"reward":5.904,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":62,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":63.05188172043013,"syllables":90,"sentences":3,"score":0.9694811827956987},"multiplier":1,"relevance":0.6}},{"id":2466970943,"content":"@whilefoo Looks cool. I wanted to try some commands, I guess the bot was not able to execute them which is ok but I got no feedback on them: https://github.com/ubiquibot-whilefoo-testing/testing/issues/7#issuecomment-2466970407 should there be some error message displayed in such case?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2466970943","commentType":"PULL_COLLABORATOR","score":{"reward":9.648,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":68.09433333333337,"syllables":72,"sentences":3,"score":0.9190566666666663},"multiplier":1,"relevance":0.8}},{"id":2485158094,"content":"@whilefoo could you update the `.dev.vars.example` with the `OPEN_API_KEY`?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2485158094","commentType":"PULL_COLLABORATOR","score":{"reward":1.806,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0.7}},{"id":2498507368,"content":"Every plugin has been merged, two remain with deployment issues that are being fixed. Afterwards this will be merged.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2498507368","commentType":"PULL_COLLABORATOR","score":{"reward":2.715,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":72.51881578947369,"syllables":28,"sentences":2,"score":0.8748118421052631},"multiplier":1,"relevance":0.5}},{"id":2499800998,"content":"Current only https://github.com/ubiquity-os-marketplace/text-vector-embeddings/ is not deployed but was not working before anyway, so I am merging this, expect a fix for the plugin today.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2499800998","commentType":"PULL_COLLABORATOR","score":{"reward":6.012,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":53.120000000000005,"syllables":52,"sentences":2,"score":0.9312},"multiplier":1,"relevance":0.6}},{"id":2513586315,"content":"I am not sure if this is related to the stability issues because we had these problems before, not as much as now, that's the only difference.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2513586315","commentType":"PULL_COLLABORATOR","score":{"reward":2.115,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":60.579285714285746,"syllables":39,"sentences":1,"score":0.9942071428571425},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2422712238,"effect":{"addition":742,"deletion":96},"reward":25.14,"priority":3},{"reviewId":2425614009,"effect":{"addition":188,"deletion":85},"reward":8.19,"priority":3},{"reviewId":2425873108,"effect":{"addition":27,"deletion":66},"reward":2.79,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 101.253 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>36.12</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>3.465</td></tr><tr><td>Review</td><td>Comment</td><td>13</td><td>61.668</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186\" target=\"_blank\" rel=\"noopener\">#186</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+742 -96</td><td>3</td><td>25.14</td></tr><tr><td>+188 -85</td><td>3</td><td>8.19</td></tr><tr><td>+27 -66</td><td>3</td><td>2.79</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166#issuecomment-2499907291\" target=\"_blank\" rel=\"noopener\">@0x4007 Did you see the error message? We just upgraded everythi&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.465</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1833715981\" target=\"_blank\" rel=\"noopener\">We have moved to &#96;ESM&#96; so I'd suggest trying &#96;unstab&hellip;</a></h6></td><td><details><summary>3.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.9</td><td>3</td><td>10.584</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1834085295\" target=\"_blank\" rel=\"noopener\">Update: it broke in the SDK when I moved it too. It is usually e&hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.137</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1835265927\" target=\"_blank\" rel=\"noopener\">This can happen if the module you are trying to lock is previous&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.12</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1835557858\" target=\"_blank\" rel=\"noopener\">Glad you figured it out. Jest has been giving me headaches a lot&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.4</td><td>3</td><td>2.256</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1835800627\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionif (!toolCalls?.length) {&#96;&#9&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#discussion_r1839425946\" target=\"_blank\" rel=\"noopener\">I agree with @whilefoo that tagging another person is not good. &hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.851</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2453726773\" target=\"_blank\" rel=\"noopener\">Second option seems proper to me because it is what we use for a&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.52</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2466694278\" target=\"_blank\" rel=\"noopener\">@whilefoo The types not matching was there before somehow, not s&hellip;</a></h6></td><td><details><summary>2.54</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 62&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>0.6</td><td>3</td><td>5.904</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2466970943\" target=\"_blank\" rel=\"noopener\">@whilefoo Looks cool. I wanted to try some commands, I guess the&hellip;</a></h6></td><td><details><summary>3.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.8</td><td>3</td><td>9.648</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2485158094\" target=\"_blank\" rel=\"noopener\">@whilefoo could you update the &#96;.dev.vars.example&#96; with &hellip;</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.806</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2498507368\" target=\"_blank\" rel=\"noopener\">Every plugin has been merged, two remain with deployment issues &hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.715</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2499800998\" target=\"_blank\" rel=\"noopener\">Current only https://github.com/ubiquity-os-marketplace/text-vec&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.6</td><td>3</td><td>6.012</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/186#issuecomment-2513586315\" target=\"_blank\" rel=\"noopener\">I am not sure if this is related to the stability issues because&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.115</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-sdk_36.json","json":{"gentlementlegen":{"userId":9807008,"total":22.07,"task":{"reward":18,"multiplier":1},"comments":[{"id":2714041706,"content":"When no `KERNEL_PUBLIC_KEY` is supplied, the runs fail saying the given key is too short. My suspicion is that the default key is not used but `\"\"` is used instead. See this run for reference: https://github.com/ubiquity-os-marketplace/daemon-pricing/actions/runs/12128570532/job/33815214041\r\nSDKs will need to get updated across plugins as well.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/36","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.07,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":76.30000000000001,"syllables":77,"sentences":4,"score":0.8369999999999999},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 22.07 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>18</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.07</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/36\" target=\"_blank\" rel=\"noopener\">When no &#96;KERNEL_PUBLIC_KEY&#96; is supplied, the runs fail s&hellip;</a></h6></td><td><details><summary>3.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>1</td><td>1</td><td>4.07</td></tr></tbody></table></details>"},"rndquu":{"total":18,"userId":119500907,"comments":[{"id":2513824998,"content":"What is the difference between [context.env](https://github.com/ubiquity-os-marketplace/daemon-pricing/blob/74bd780f45d74ab567df8d35b5abb3ac708fa5bf/src/worker.ts#L19) and [env](https://github.com/ubiquity-os-marketplace/daemon-pricing/blob/74bd780f45d74ab567df8d35b5abb3ac708fa5bf/src/worker.ts#L28)? As far as I understand [env](https://github.com/ubiquity-os-marketplace/daemon-pricing/blob/74bd780f45d74ab567df8d35b5abb3ac708fa5bf/src/worker.ts#L28) contains variables from cloudflare worker and I'm not sure if it contains variables from github secrets.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/36#issuecomment-2513824998","commentType":"ISSUE_COLLABORATOR","score":{"reward":10.125,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":69.10833333333336,"syllables":48,"sentences":3,"score":0.9089166666666664},"multiplier":1,"relevance":0.9}},{"id":1867240335,"content":"When env variable is not defined it defaults to empty string so this particular test makes sense.\r\n@gentlementlegen Why do we allow plugins to set [KERNEL_PUBLIC_KEY](https://github.com/ubiquity-os-marketplace/daemon-pricing/blob/74bd780f45d74ab567df8d35b5abb3ac708fa5bf/src/worker.ts#L28)? Shouldn't we simply always use the default value from the sdk?","url":"https://github.com/ubiquity-os/plugin-sdk/pull/37#discussion_r1867240335","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -404,4 +406,13 @@ describe(\"SDK actions tests\", () => {\n       },\n     });\n   });\n+\n+  it(\"Should return the proper Kernel Key\", () => {\n+    let options = getPluginOptions({ kernelPublicKey: \"\" });","score":{"reward":10.379,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":60.39938596491231,"syllables":60,"sentences":3,"score":0.9960061403508769},"multiplier":1,"relevance":0.85}}],"reviewRewards":[{"reviews":[{"reviewId":2474877423,"effect":{"addition":49,"deletion":53},"reward":3.06,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-sdk/pull/37"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 18 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>⚠️ Your rewards have been limited to the task price of 18 XP.</h6><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>3.06</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>10.125</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>10.379</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/37\" target=\"_blank\" rel=\"noopener\">#37</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+49 -53</td><td>3</td><td>3.06</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/36#issuecomment-2513824998\" target=\"_blank\" rel=\"noopener\">What is the difference between [context.env](https://github.com/&hellip;</a></h6></td><td><details><summary>2.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.9</td><td>3</td><td>10.125</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/37#discussion_r1867240335\" target=\"_blank\" rel=\"noopener\">When env variable is not defined it defaults to empty string so &hellip;</a></h6></td><td><details><summary>3.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.85</td><td>3</td><td>10.379</td></tr></tbody></table></details>"},"0x4007":{"total":18,"userId":4975670,"comments":[{"id":1867197432,"content":"Why don't you change this to either `null` or a dedicated testing placeholder value?","url":"https://github.com/ubiquity-os/plugin-sdk/pull/37#discussion_r1867197432","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -404,4 +406,13 @@ describe(\"SDK actions tests\", () => {\n       },\n     });\n   });\n+\n+  it(\"Should return the proper Kernel Key\", () => {\n+    let options = getPluginOptions({ kernelPublicKey: \"\" });","score":{"reward":3.398,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":59.68214285714288,"syllables":22,"sentences":1,"score":0.9968214285714287},"multiplier":1,"relevance":0.75}},{"id":1867206564,"content":"We shouldn't ever pass an empty string in the first place, thats why I made empty string warnings. We should remove that from happening in the first place!\r\nhttps://www.github.com/ubiquity/ts-template/issues/31\r\nEmpty strings are abused in our code, I guess its an artifact of LLMs. \r\nI suppose if it defaults to a valid value then its fine in the context of a test. Can you ensure the default is not an empty string though?","url":"https://github.com/ubiquity-os/plugin-sdk/pull/37#discussion_r1867206564","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -404,4 +406,13 @@ describe(\"SDK actions tests\", () => {\n       },\n     });\n   });\n+\n+  it(\"Should return the proper Kernel Key\", () => {\n+    let options = getPluginOptions({ kernelPublicKey: \"\" });","score":{"reward":11.961,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":72,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":84.3788888888889,"syllables":106,"sentences":7,"score":0.7562111111111111},"multiplier":1,"relevance":0.9}},{"id":1867209634,"content":"Then we should check inside of the method and throw for an empty string, or undefined.","url":"https://github.com/ubiquity-os/plugin-sdk/pull/37#discussion_r1867209634","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -404,4 +406,13 @@ describe(\"SDK actions tests\", () => {\n       },\n     });\n   });\n+\n+  it(\"Should return the proper Kernel Key\", () => {\n+    let options = getPluginOptions({ kernelPublicKey: \"\" });","score":{"reward":4.029,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":79.5575,"syllables":21,"sentences":1,"score":0.804425},"multiplier":1,"relevance":0.85}}],"reviewRewards":[{"reviews":[{"reviewId":2474816591,"effect":{"addition":49,"deletion":53},"reward":3.06,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-sdk/pull/37"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 18 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>⚠️ Your rewards have been limited to the task price of 18 XP.</h6><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>3.06</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>19.388</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/37\" target=\"_blank\" rel=\"noopener\">#37</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+49 -53</td><td>3</td><td>3.06</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/37#discussion_r1867197432\" target=\"_blank\" rel=\"noopener\">Why don't you change this to either &#96;null&#96; or a dedicate&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.75</td><td>3</td><td>3.398</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/37#discussion_r1867206564\" target=\"_blank\" rel=\"noopener\">We shouldn't ever pass an empty string in the first place, thats&hellip;</a></h6></td><td><details><summary>3.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 72&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.961</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/37#discussion_r1867209634\" target=\"_blank\" rel=\"noopener\">Then we should check inside of the method and throw for an empty&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.85</td><td>3</td><td>4.029</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_147.json","json":{"gentlementlegen":{"userId":9807008,"total":29.18,"task":{"reward":25,"multiplier":1},"comments":[{"id":2590734292,"content":"@0x4007 Not sure to understand your question. But now that I think of it, maybe the plugin should be in charge to watch its own configuration (dev should check for .dev.yml only and not both), what do you think?\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquity-os/ubiquity-os-kernel/issues/143#issuecomment-2408443603_","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/147","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.18,"formatting":{"content":{"p":{"score":0,"elementCount":2},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":69.55039473684211,"syllables":86,"sentences":6,"score":0.904496052631579},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 29.18 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.18</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/147\" target=\"_blank\" rel=\"noopener\">@0x4007 Not sure to understand your question. But now that I thi&hellip;</a></h6></td><td><details><summary>3.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>1</td><td>1</td><td>4.18</td></tr></tbody></table></details>"},"0x4007":{"total":1.39,"userId":4975670,"comments":[{"id":2423687382,"content":"No reward?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/147#issuecomment-2423687382","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.062,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":1,"relevance":0.2}},{"id":2425511958,"content":"Its simplest if you fix all of the active plugins because you have context on the problem","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/147#issuecomment-2425511958","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.328,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":75.12117647058825,"syllables":23,"sentences":1,"score":0.8487882352941175},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/155"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.39 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>1.39</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/147#issuecomment-2423687382\" target=\"_blank\" rel=\"noopener\">No reward?</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.062</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/147#issuecomment-2425511958\" target=\"_blank\" rel=\"noopener\">Its simplest if you fix all of the active plugins because you ha&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.328</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_.github_1.json","json":{"zugdev":{"userId":155616000,"total":1200,"task":{"reward":1200,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1200 XP ]</a>&nbsp;</h3><h6>@zugdev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>1200</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"0x4007":{"total":672.28,"userId":4975670,"comments":[{"id":2516684764,"content":"I decided to change this to 2 weeks because: \r\nForking from work.ubq.fi and cleaning things up will take a day, then the actual start of the work will begin later in the week. I realize that the scoring systems: 1. timestamp 2. linkback and 3. priority level alone might take a week to get right. \r\nTimestamp is the least complex, priority linkback is probably next and then priority level is the most because it requires checking the associated issue and then reading its labels.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2516684764","commentType":"ISSUE_AUTHOR","score":{"reward":6.951,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":86,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":75.90979651162792,"syllables":122,"sentences":8,"score":0.8409020348837208},"multiplier":1,"relevance":0.7}},{"id":2519020873,"content":"Seems like you're on the right track!","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2519020873","commentType":"ISSUE_AUTHOR","score":{"reward":0.891,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":114.11500000000001,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":2519031073,"content":"Normally you should be working in your own org, and in a pull, and link it here. Eventually you need to link a pull anyways for code related tasks","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2519031073","commentType":"ISSUE_AUTHOR","score":{"reward":2.748,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":81.26232758620691,"syllables":38,"sentences":2,"score":0.7873767241379309},"multiplier":1,"relevance":0.4}},{"id":2524034674,"content":"Actually I think we should cache all the backend details (if any are missing) in the https://GitHub.com/ubiquity/devpool-directory cron job\nRight now in the [__STORAGE__ branch](https://github.com/ubiquity/devpool-directory/tree/__STORAGE__) I save all of the issue data which can be conveniently fetched in one shot. Don't handle these operations from the UI because it's a lot more efficient to cache and store in the repo. \nSo consider this as an option for aggregating all the data in one place in order to minimize network requests in the notifications UI.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2524034674","commentType":"ISSUE_AUTHOR","score":{"reward":16.281,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":84,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":59.91750000000002,"syllables":132,"sentences":4,"score":0.9991750000000001},"multiplier":1,"relevance":0.9}},{"id":2525251821,"content":"@zugdev you need to link to prove progress to the OS\n### Team Member Nudging \nA note I wanted to drop here: it would be really nice to have a feature where we can essentially \"dm\" an issue of interest and have it displayed in a highlighted or highly visible section with the name of the sender next to it. \nA generic default UI we can model is an inbox with the persons GitHub profile and a timestamp. \nThe thing is in practice I've noticed that the team tends to send issues to each other in telegram DMs which seems to work as a concise nudge. \nWe can further clean our telegram dms by having this UI for this purpose.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2525251821","commentType":"ISSUE_AUTHOR","score":{"reward":8.118,"formatting":{"content":{"p":{"score":0,"elementCount":2},"h3":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":120,"wordValue":0.1,"result":2.49},"readability":{"fleschKincaid":62.175000000000026,"syllables":162,"sentences":4,"score":0.9782499999999997},"multiplier":1,"relevance":0.6}},{"id":2525373885,"content":"@zugdev Issue tag here","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2525373885","commentType":"ISSUE_AUTHOR","score":{"reward":0.495,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.3}},{"id":2525388937,"content":"### Accelerating Proposal Funding\nAnother later idea but we can make it a more formalized process for the necessary tags to be added. \n- Priority tags by project managers. \n- Time tags by technical team members. \nIt would be interesting one day to have a queue for proposals (GitHub issues) that are missing the other necessary tag to fund them. \nFor example, some have Time labels and then it's waiting on project managers to come in and set a Priority level so that it's funded. \nThis in addition to a financial incentive (somewhere between $5 and $25 to set a label) can potentially get proposals funded faster. \n### Contested Time Estimates\nA tangent related to improving time estimate disputes: take the average between two time labels in case it's contested by collaborators. Perhaps one collaborator sets `Time: <1 Hour` and one sets `Time: <4 Hours` then we can set the time to 2.5 hours (the average of the two values) but in this case I suppose that the Time setters would need to split the monetary reward for setting the label.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2525388937","commentType":"ISSUE_AUTHOR","score":{"reward":3.222,"formatting":{"content":{"h3":{"score":1,"elementCount":2},"p":{"score":0,"elementCount":2},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":2.2},"priority":3,"words":{"wordCount":175,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":54.63946031746033,"syllables":274,"sentences":9,"score":0.9463946031746033},"multiplier":1,"relevance":0.2}},{"id":2546830089,"content":"@gentlementlegen looks like the config is broken here","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2546830089","commentType":"ISSUE_AUTHOR","score":{"reward":0.291,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":50.66500000000002,"syllables":14,"sentences":1,"score":0.9066500000000002},"multiplier":1,"relevance":0.1}},{"id":2547734570,"content":"Right I see. The config merging is not implemented yet. Would you be able to render and push the full config for this repo?","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2547734570","commentType":"ISSUE_AUTHOR","score":{"reward":0.609,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":85.91500000000002,"syllables":32,"sentences":3,"score":0.7408499999999998},"multiplier":1,"relevance":0.1}},{"id":2547761108,"content":"I don't think it's mapped to a URL yet, just some cloudflare link","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2547761108","commentType":"ISSUE_AUTHOR","score":{"reward":0.471,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":101.37000000000002,"syllables":16,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":2658436376,"content":"@zugdev The login redirects to Devpool directory please fix","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2658436376","commentType":"ISSUE_AUTHOR","score":{"reward":1.248,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":37.900000000000034,"syllables":17,"sentences":1,"score":0.7790000000000004},"multiplier":1,"relevance":0.4}},{"id":2660181841,"content":"Can you replicate the rounded squares we have at directory for the avatars \n![image](https://github.com/user-attachments/assets/1ddad36b-70d7-476a-b6e6-ba1df6d6c8b3)","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660181841","commentType":"ISSUE_AUTHOR","score":{"reward":2.13,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":63.486153846153854,"syllables":20,"sentences":1,"score":0.9651384615384615},"multiplier":1,"relevance":0.5}},{"id":2660580426,"content":"We might have to roll back to an earlier commit before we were rushing to fix for the demo.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660580426","commentType":"ISSUE_AUTHOR","score":{"reward":1.593,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":80.68684210526318,"syllables":24,"sentences":1,"score":0.7931315789473682},"multiplier":1,"relevance":0.3}},{"id":2660792632,"content":"I didn't change the key in our secrets or anywhere.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660792632","commentType":"ISSUE_AUTHOR","score":{"reward":0.708,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":87.99727272727276,"syllables":14,"sentences":1,"score":0.7200272727272724},"multiplier":1,"relevance":0.2}},{"id":2660797307,"content":"Not for the demo. That was several months back the last time I updated it.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660797307","commentType":"ISSUE_AUTHOR","score":{"reward":0.876,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":92.06250000000001,"syllables":19,"sentences":2,"score":0.6793749999999998},"multiplier":1,"relevance":0.2}},{"id":2691963120,"content":"The permits shouldn't render at all if they are invalid. It should throw an error like a warning and explain the problem with the key.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2691963120","commentType":"ISSUE_AUTHOR","score":{"reward":1.284,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":83.0092307692308,"syllables":34,"sentences":2,"score":0.7699076923076921},"multiplier":1,"relevance":0.2}},{"id":2719451765,"content":"@gentlementlegen permits are broken. Looks like this is a persistent problem on this thread so it should be diagnosed.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2719451765","commentType":"ISSUE_AUTHOR","score":{"reward":1.092,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":68.0661842105263,"syllables":29,"sentences":2,"score":0.9193381578947369},"multiplier":1,"relevance":0.2}},{"id":2723983360,"content":"2 weeks isn't standard I realized it shouldn't have existed.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2723983360","commentType":"ISSUE_AUTHOR","score":{"reward":0.756,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":88.905,"syllables":15,"sentences":1,"score":0.71095},"multiplier":1,"relevance":0.2}},{"id":2723985818,"content":"I will need to temporarily add 2 weeks back into the config for this.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2723985818","commentType":"ISSUE_AUTHOR","score":{"reward":0.882,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":71.76785714285715,"syllables":20,"sentences":1,"score":0.8823214285714285},"multiplier":1,"relevance":0.2}},{"id":2717085483,"content":"- I did some research in the past with custom notifications viewer. https://github.com/ubiquity/work.ubq.fi/pull/126\r\n- Original specification here https://github.com/ubiquity/work.ubq.fi/issues/117\r\nFork work.ubq.fi because it has a lot of good qualities for list viewing, progressive web app features, styling etc. Tear out all the proposal/task related viewing logic, and focus only on notification viewing so that the code is simpler. \r\n## Custom Notifications Viewer\r\nAs activity continues to pick up and my notifications become slower to get through, it would be useful to make a simple ui that allows for more intelligent notification filtering. \r\n### Prioritization Sorting Algorithm\r\n- We need to detect the priority level of the task the notification is associated with.\r\n   - If the notification is not associated with a task, consider not showing it on this view at all. \r\n   - If the notification is a pull request, it must be linked to a task with a priority label.\r\n- Reverse chronological order, meaning that neglected/old notifications should appear higher than new ones. \r\n   - The reason for this is that active conversations will continue to produce more notifications, which can easily cause the reviewer to check it multiple times in a sitting (as I try to get to inbox 0 this happens to me, so I intentionally start from older notifications for this reason.)\r\n- Top of displayed list is highest priority, then work your way down to low priority. \r\n### Blocking Tasks\r\nIf it thinks without my input the task is blocked, it's a higher priority notification.\r\n- Linkbacks: if the notification is associated with a task with many linkbacks then it should be considered higher priority, it usually means its blocking other pulls/tasks\r\nPerhaps we could have an AI layer on top one day to summarize and/or reorder notifications from most important to least.\r\n### Remarks\r\n- Always exclude draft pulls.\r\n## Notification Scoring\r\nWe should associate each notification with \"scores\" so that we can quantify where it would render on the page. \r\n- Time score: the older it is, the higher its score. We can take the current posix timestamp and subtract the timestamp of the notification to achieve this. \r\n- Linkback score: we can count how many times it was cross-referenced. The more times it was cross-referenced, the higher it should render on the page. We should prioritize those with higher linkbacks. If two notifications have the same amount of linkbacks i.e. 0, then we sort based on the time score only. \r\nWe need to ensure that priority level always has precedence. For example, `priority 2` associated notifications should always appear higher than `priority 1`.","url":"https://github.com/ubiquity-os/.github/issues/1","commentType":"ISSUE_SPECIFICATION","score":{"reward":11.05,"formatting":{"content":{"ul":{"score":0,"elementCount":7},"li":{"score":0.1,"elementCount":12},"p":{"score":0,"elementCount":15},"h2":{"score":1,"elementCount":2},"h3":{"score":1,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":8.2},"priority":1,"words":{"wordCount":416,"wordValue":0.1,"result":0.37},"readability":{"fleschKincaid":56.61744959677421,"syllables":700,"sentences":32,"score":0.9661744959677421},"multiplier":1,"relevance":1}},{"id":1885838869,"content":"This is wrong to hard code org names like this","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1885838869","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,187 @@\n+import { Octokit } from \"@octokit/rest\";\n+import { GitHubAggregated, GitHubIssue, GitHubNotification, GitHubNotifications, GitHubPullRequest } from \"../github-types\";\n+import { getGitHubAccessToken } from \"../getters/get-github-access-token\";\n+import { handleRateLimit } from \"./handle-rate-limit\";\n+import { RequestError } from \"@octokit/request-error\";\n+\n+export const organizationImageCache = new Map<string, Blob | null>(); // this should be declared in image related script\n+\n+// Generalized function to fetch notifications from GitHub\n+async function fetchNotifications(): Promise<GitHubNotifications | null> {\n+  const providerToken = await getGitHubAccessToken();\n+  const octokit = new Octokit({ auth: providerToken });\n+\n+  try {\n+    const notifications = (await octokit.request(\"GET /notifications\")).data as GitHubNotifications;\n+    console.log(\"unfiltered\", notifications);\n+    return notifications;\n+  } catch (error) {\n+    if (error instanceof RequestError && error.status === 403) {\n+      await handleRateLimit(octokit, error);\n+    }\n+    console.warn(\"Error fetching notifications:\", error);\n+  }\n+  return null;\n+}\n+\n+// Pre-filter notifications by general rules (repo filtering and ignoring CI activity)\n+function preFilterNotifications(notifications: GitHubNotification[]): GitHubNotifications {\n+  return notifications.filter((notification) => {\n+    // Ignore based on reason\n+    if (\n+      [\"comment\", \"ci_activity\", \"invitation\", \"member_feature_requested\", \"security_advisory_credit\", \"state_change\", \"team_mention\"].includes(\n+        notification.reason\n+      )\n+    ) {\n+      return false;\n+    }\n+\n+    // Ignore notifications from orgs that are not relevant\n+    const repoName = notification.repository.full_name.split(\"/\")[0];\n+    return [\"ubiquity\", \"ubiquity-os\", \"ubiquity-os-marketplace\"].includes(repoName);","score":{"reward":2.808,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":112.08500000000001,"syllables":10,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1885839832,"content":"If this is looping, then you should be cloning instead of creating new elements every time it's a lot more efficient that way","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1885839832","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,301 @@\n+import { organizationImageCache } from \"../fetch-github/fetch-data\";\n+import { GitHubAggregated } from \"../github-types\";\n+import { renderErrorInModal } from \"./display-popup-modal\";\n+import { getTimeAgo } from \"./utils\";\n+import { notificationsContainer } from \"../home\";\n+\n+export async function renderNotifications(notifications: GitHubAggregated[], skipAnimation: boolean) {\n+  if (notificationsContainer.classList.contains(\"ready\")) {\n+    notificationsContainer.classList.remove(\"ready\");\n+    notificationsContainer.innerHTML = \"\";\n+  }\n+  const existingNotificationIds = new Set(\n+    Array.from(notificationsContainer.querySelectorAll(\".issue-element-inner\")).map((element) => element.getAttribute(\"data-issue-id\"))\n+  );\n+\n+  let delay = 0;\n+  const baseDelay = 1000 / 15; // Base delay in milliseconds\n+\n+  for (const notification of notifications) {\n+    if (!existingNotificationIds.has(notification.notification.id.toString())) {\n+      const issueWrapper = await everyNewNotification({ notification: notification, notificationsContainer });\n+      if (issueWrapper) {\n+        if (skipAnimation) {\n+          issueWrapper.classList.add(\"active\");\n+        } else {\n+          setTimeout(() => issueWrapper.classList.add(\"active\"), delay);\n+          delay += baseDelay;\n+        }\n+      }\n+    }\n+  }\n+  notificationsContainer.classList.add(\"ready\");\n+  // Call this function after the issues have been rendered\n+  //setupKeyboardNavigation(notificationsContainer);\n+\n+  // Scroll to the top of the page\n+  window.scrollTo({ top: 0 });\n+}\n+export function renderEmpty() {\n+  if (notificationsContainer.classList.contains(\"ready\")) {\n+    notificationsContainer.classList.remove(\"ready\");\n+    notificationsContainer.innerHTML = \"\";\n+  }\n+  const issueWrapper = document.createElement(\"div\");\n+  issueWrapper.style.marginTop = \"20px\";\n+  const issueElement = document.createElement(\"div\");\n+  issueElement.innerHTML = `\n+    <div class=\"info\"><div class=\"title\"><h3>No notifications found</h3></div></div>\n+  `;\n+  issueElement.classList.add(\"issue-element-inner\");\n+  issueWrapper.appendChild(issueElement);\n+  notificationsContainer.appendChild(issueWrapper);\n+\n+  issueWrapper.classList.add(\"active\");\n+  notificationsContainer.classList.add(\"ready\");\n+}\n+\n+async function everyNewNotification({ notification, notificationsContainer }: { notification: GitHubAggregated; notificationsContainer: HTMLDivElement }) {\n+  const issueWrapper = document.createElement(\"div\");\n+  const issueElement = document.createElement(\"div\");","score":{"reward":5.457,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":62.62500000000003,"syllables":34,"sentences":1,"score":0.9737499999999997},"multiplier":1,"relevance":0.85}},{"id":1885840156,"content":"Why did you change activity to oldest? It should be the same logic essentially","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1885840156","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,6 +1,6 @@\n import { SortingManager } from \"./sorting-manager\";\n \n-export const SORTING_OPTIONS = [\"price\", \"time\", \"priority\", \"activity\"] as const;\n+export const SORTING_OPTIONS = [\"priority\", \"oldest\"] as const;","score":{"reward":3.33,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":66.7871428571429,"syllables":22,"sentences":2,"score":0.9321285714285711},"multiplier":1,"relevance":0.75}},{"id":1885840434,"content":"Text filter could be definitely useful not sure why you deleted it","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1885840434","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -30,101 +26,9 @@ export class SortingManager {\n   }\n \n   public render() {\n-    this._toolBarFilters.appendChild(this._filterTextBox);\n     this._toolBarFilters.appendChild(this._sortingButtons);\n   }\n \n-  private _generateFilterTextBox() {","score":{"reward":2.793,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":53.655,"syllables":20,"sentences":1,"score":0.93655},"multiplier":1,"relevance":0.7}},{"id":1887968205,"content":"It should be every org on the directory","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1887968205","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,187 @@\n+import { Octokit } from \"@octokit/rest\";\n+import { GitHubAggregated, GitHubIssue, GitHubNotification, GitHubNotifications, GitHubPullRequest } from \"../github-types\";\n+import { getGitHubAccessToken } from \"../getters/get-github-access-token\";\n+import { handleRateLimit } from \"./handle-rate-limit\";\n+import { RequestError } from \"@octokit/request-error\";\n+\n+export const organizationImageCache = new Map<string, Blob | null>(); // this should be declared in image related script\n+\n+// Generalized function to fetch notifications from GitHub\n+async function fetchNotifications(): Promise<GitHubNotifications | null> {\n+  const providerToken = await getGitHubAccessToken();\n+  const octokit = new Octokit({ auth: providerToken });\n+\n+  try {\n+    const notifications = (await octokit.request(\"GET /notifications\")).data as GitHubNotifications;\n+    console.log(\"unfiltered\", notifications);\n+    return notifications;\n+  } catch (error) {\n+    if (error instanceof RequestError && error.status === 403) {\n+      await handleRateLimit(octokit, error);\n+    }\n+    console.warn(\"Error fetching notifications:\", error);\n+  }\n+  return null;\n+}\n+\n+// Pre-filter notifications by general rules (repo filtering and ignoring CI activity)\n+function preFilterNotifications(notifications: GitHubNotification[]): GitHubNotifications {\n+  return notifications.filter((notification) => {\n+    // Ignore based on reason\n+    if (\n+      [\"comment\", \"ci_activity\", \"invitation\", \"member_feature_requested\", \"security_advisory_credit\", \"state_change\", \"team_mention\"].includes(\n+        notification.reason\n+      )\n+    ) {\n+      return false;\n+    }\n+\n+    // Ignore notifications from orgs that are not relevant\n+    const repoName = notification.repository.full_name.split(\"/\")[0];\n+    return [\"ubiquity\", \"ubiquity-os\", \"ubiquity-os-marketplace\"].includes(repoName);","score":{"reward":2.376,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":61.24000000000001,"syllables":13,"sentences":1,"score":0.9875999999999999},"multiplier":1,"relevance":0.8}},{"id":2525373920,"content":"@zugdev pull tag here","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2525373920","commentType":"PULL_COLLABORATOR","score":{"reward":0.156,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.1}},{"id":2527769251,"content":"Unfortunately, this is really hard to test from mobile because I need to catch the authentication in the URL before the page navigates again. I haven't done this successfully\nIn my implementation I just made the notifications links. When they are clicked it brings the user to GitHub. It is considered read when you do this. \nI don't think we need to prioritize rebuilding the same functionality of bulk actions if the user can just do it on GitHub.com/notifications","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2527769251","commentType":"PULL_COLLABORATOR","score":{"reward":7.673,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":83,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":59.26886546184741,"syllables":131,"sentences":6,"score":0.9926886546184741},"multiplier":1,"relevance":0.75}},{"id":2531282709,"content":"It looks like there are a lot of adjustments still needed. \r\n- It should not be doing all the requests from the UI as I stated [here](https://github.com/ubiquity-os/.github/issues/1#issuecomment-2524034674). I suppose this means that we will need to collect all pulls in another JSON object in that repo and then with both the issues and pulls JSONs cross referencing should be simple client side. As part of this project you should also link a pull on that repository to here to allow it to also save the list of pulls. \r\n- I see some notifications with no priority level.\r\n- The rendering after sorting is not as expected. You need to call the render function on only the displayed elements, but it seems to have the timer misaligned due to some not visible notifications.\r\n- Let's make the GitHub icons greyscale (you can manually remove the color inside of the SVG code.)\r\nPlease review the spec carefully for the other requested changes. \r\nI just realized this is a draft. Will be nice to have these filtered out!","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2531282709","commentType":"PULL_COLLABORATOR","score":{"reward":11.583,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1.4},"priority":3,"words":{"wordCount":172,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":73.9013002114165,"syllables":238,"sentences":11,"score":0.860986997885835},"multiplier":1,"relevance":0.9}},{"id":2531285411,"content":"Redirect added.\r\n<img width=\"927\" alt=\"image\" src=\"https://github.com/user-attachments/assets/39674d73-c908-48fe-a685-c3fe141aad73\">\r\nJWT expiry set to one day. \r\n<img width=\"900\" alt=\"image\" src=\"https://github.com/user-attachments/assets/83176090-4179-4bfa-bf64-74156bc453de\">","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2531285411","commentType":"PULL_COLLABORATOR","score":{"reward":8.424,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":79.46614285714287,"syllables":59,"sentences":5,"score":0.8053385714285713},"multiplier":1,"relevance":0.65}},{"id":2532910845,"content":"I am not sure I am understanding the full context of these reasons but this viewer should be just for priced issues with a priority level, and pulls associated with a priced issue with a priority level. Most if the below seems N/A. Any order should do. The only sorting is by priority, linkbacks, and timestamp. \r\nThen the UI performance is extremely slow. Its much better to do two network requests instead of hundreds pretty much any way you frame it. CRON runs every 15 minutes. The edge case of a new pull notification not displaying potentially for 15 minutes is fine. \r\n---\r\nThe sorting isn't quite right, the older ones should appear higher with the same priority level. Please review the issue conversation. Also consider the linkback count. If it isn't too complex it would be nice to denote this per notification somewhere. If it is complicated to implement then we can make that UI element in a separate task, but the sorting should still consider the linkback count as per the spec. \r\nCurious to know if it would also be too complex to add a visual separator between the priority level batches. Not essential because its not in the spec but that would make it more clear to the user. \r\nWe should definitely filter out bot invoked notifications. \r\nAlso I just tested by reading the notifications and they are still displaying when I reload the page so something isn't implemented correctly here. Read notifications should not appear here.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2532910845","commentType":"PULL_COLLABORATOR","score":{"reward":4.32,"formatting":{"content":{"p":{"score":0,"elementCount":6},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":253,"wordValue":0.1,"result":1.24},"readability":{"fleschKincaid":64.1638680281072,"syllables":384,"sentences":18,"score":0.958361319718928},"multiplier":1,"relevance":0.9}},{"id":2537938400,"content":"I'll do later today!","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2537938400","commentType":"PULL_COLLABORATOR","score":{"reward":0.195,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.1}},{"id":2539533076,"content":"From console logs:\r\n[all-notifications.json](https://github.com/user-attachments/files/18115113/all-notifications.json)\r\n[pull-request-notifications.json](https://github.com/user-attachments/files/18115135/pull-request-notifications.json)\r\n[issue-notifications.json](https://github.com/user-attachments/files/18115137/issue-notifications.json)\r\n[unfiltered.json](https://github.com/user-attachments/files/18115138/unfiltered.json)\r\nI'm not sure what use a screenshot is but load that har file into your chrome dev tools network tab to see everything. \r\n[67e163eb.notifications-ubq-fi.pages.dev.har.zip](https://github.com/user-attachments/files/18115149/67e163eb.notifications-ubq-fi.pages.dev.har.zip)\r\n<img width=\"1380\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4db33560-c532-4f86-914a-e72c35ed01d0\" />","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2539533076","commentType":"PULL_COLLABORATOR","score":{"reward":24.21,"formatting":{"content":{"p":{"score":0,"elementCount":8},"a":{"score":1,"elementCount":6}},"result":6},"priority":3,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":67.9122916666667,"syllables":101,"sentences":12,"score":0.920877083333333},"multiplier":1,"relevance":0.75}},{"id":2540862559,"content":"Surely there's a graphql query for it? @gentlementlegen any ideas off hand? \nBut even so, when they are all cached in the directory it should be pretty straightforward to implement a loop to check manually.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2540862559","commentType":"PULL_COLLABORATOR","score":{"reward":4.788,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":65.40500000000003,"syllables":55,"sentences":3,"score":0.9459499999999997},"multiplier":1,"relevance":0.6}},{"id":2547715077,"content":"![image](https://github.com/user-attachments/assets/76b211f2-3be3-45b6-8f05-e29b59ce1f31)\nI wonder if the middle column is necessary. It seems not useful in my opinion. Can we put any other potentially more useful information there or simply remove it? \nWhat are your thoughts? I would have better inspiration if I was on my computer looking at the raw json\n---\nUnfortunately most of them should have been filtered out because they are bot command/response:\n- https://github.com/ubiquity-os-marketplace/daemon-pricing/issues/62#issuecomment-2547649930 \n- https://github.com/ubiquity/uusd.ubq.fi/issues/1#issuecomment-2547711264\n- https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2546567300\n- https://github.com/ubiquity-os-marketplace/text-vector-embeddings/issues/58#issuecomment-2546532375\n- https://github.com/ubiquity/ubiquity-dollar/issues/979#issuecomment-2547705960\nMy concern is that GitHub notifications API may only serve up the latest notification per issue/pull. This implies that if a full conversation is had, then a bot response happens right before I check my notifications I would miss everything? Let's solve for this because bot interaction is largely responsible for the noise in the notifications. \nThe first workaround that I can think of (which I don't like as a solution) is to indicate that it's a bot response with an icon. Then at least the user can choose to filter them out or not. \n---\nA new task but will quickly make a note here: right swiping a notification to mark it as unread (this implies that we have a read indicator when they are clicked/navigated to) \nThis is very useful to quickly peep a notification and then if it's something that requires more time/attention then it can be reviewed again later by marking as unread.  \n---\nThere seems to be an extra space between the organization/_repository name","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2547715077","commentType":"PULL_COLLABORATOR","score":{"reward":28.841,"formatting":{"content":{"h2":{"score":1,"elementCount":2},"p":{"score":0,"elementCount":2},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":5}},"result":7.5},"priority":3,"words":{"wordCount":239,"wordValue":0.1,"result":1.36},"readability":{"fleschKincaid":52.34319164802389,"syllables":485,"sentences":18,"score":0.9234319164802389},"multiplier":1,"relevance":0.85}},{"id":2547762398,"content":"I just manually checked my notifications and looks like there is a lot missing from this viewer\n![image](https://github.com/user-attachments/assets/e3867456-4d0f-4ef0-9ebc-ccabd066cf69)\n![image](https://github.com/user-attachments/assets/0ea0ece4-f6ad-428e-9c42-81543484e10b)","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2547762398","commentType":"PULL_COLLABORATOR","score":{"reward":4.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":65.16823529411766,"syllables":25,"sentences":1,"score":0.9483176470588234},"multiplier":1,"relevance":0.8}},{"id":2567117042,"content":"Peaking the comment is a great addition but I think it doesn't fully solve the problem I mentioned. I don't want to see bot notifications cluttering my UI\n![image](https://github.com/user-attachments/assets/7cd727c8-1e38-4928-97ab-b48effa04e87)\nThis is all noise I don't want to see. \nAlso after refreshing the page the ones I already read still are showing this isn't the correct behavior. \n---\nAre you sure you fixed [this](https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2547762398)? It seems like there's way too little in my viewer.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2567117042","commentType":"PULL_COLLABORATOR","score":{"reward":11.475,"formatting":{"content":{"h2":{"score":1,"elementCount":1},"p":{"score":0,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":76,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":78.97805263157896,"syllables":101,"sentences":5,"score":0.8102194736842104},"multiplier":1,"relevance":0.85}},{"id":2568065309,"content":"For 1. It could be interesting to add a filter for this but by default don't show if it was a bot notification latest","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2568065309","commentType":"PULL_COLLABORATOR","score":{"reward":4.473,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":75.70750000000002,"syllables":35,"sentences":2,"score":0.8429249999999997},"multiplier":1,"relevance":0.7}},{"id":2573936652,"content":"![image](https://github.com/user-attachments/assets/eee8d4cf-1e14-4620-9287-dcd09feb2b2a)\nTitle alignment is messed up on https://1599f0f2.notifications-ubq-fi.pages.dev/#\nNo comment should probably just render nothing instead \nShow and hide bot didn't display any differences, but according to my notifications view there were no bot activities surprisingly so I'll have to test later.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2573936652","commentType":"PULL_COLLABORATOR","score":{"reward":10.08,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":42,"wordValue":0.1,"result":2.23},"readability":{"fleschKincaid":59.73186224489797,"syllables":78,"sentences":4,"score":0.9973186224489797},"multiplier":1,"relevance":0.8}},{"id":2576571684,"content":"![image](https://github.com/user-attachments/assets/dc99e310-f25f-47d5-9853-7ffd7057d8ce)\nTitle alignment and to be more explicit the visibility should be none on no comment so that the height of each row is consistent. \nAlso search bar alignment is messed up maybe sync from upstream \nLastly, if there is no priority level as I recall from the spec it shouldn't render here.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576571684","commentType":"PULL_COLLABORATOR","score":{"reward":7.584,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":60.22051886792454,"syllables":75,"sentences":2,"score":0.9977948113207546},"multiplier":1,"relevance":0.8}},{"id":2576642492,"content":"The only notifications that matter for this view are the ones associated with tasks that have priority levels. Otherwise I think the classic notifications UI should be used for everything else. \nFor alignment just diff the original CSS code with your latest changes to identify the problem.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576642492","commentType":"PULL_COLLABORATOR","score":{"reward":7.548,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":50.53333333333336,"syllables":78,"sentences":3,"score":0.9053333333333335},"multiplier":1,"relevance":0.85}},{"id":2576717568,"content":"I just want the notifications view that GitHub provides but to exclude the following:\n- notifications not associated with a priority label \n- draft pulls\n- UbiquityOS interactions (bot commands and replies) \nThat would cut out almost all of the noise.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576717568","commentType":"PULL_COLLABORATOR","score":{"reward":8.237,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":23.554473684210564,"syllables":65,"sentences":1,"score":0.6355447368421057},"multiplier":1,"relevance":0.95}},{"id":2576777339,"content":"Confused why there's so many now. \n![image](https://github.com/user-attachments/assets/51c2532c-494e-4be6-b3f8-b7cdc43e8395)\n![image](https://github.com/user-attachments/assets/e2acc08b-aaf7-4dab-9bf5-22366ff88e73)\nYou can see the scroll bar on the right to approximate how many. \nAlso when the comment loads in sync it jitters the row and looks bad. set the row height to be static so this doesn't happen.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576777339","commentType":"PULL_COLLABORATOR","score":{"reward":6.696,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":90.33206521739133,"syllables":57,"sentences":4,"score":0.6966793478260866},"multiplier":1,"relevance":0.8}},{"id":2576910223,"content":"Posting a shortcut to the deploys because GitHub iOS client makes it extremely tedious to get to\nhttps://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2525257220","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576910223","commentType":"PULL_COLLABORATOR","score":{"reward":4.44,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":51.680000000000035,"syllables":49,"sentences":4,"score":0.9168000000000004},"multiplier":1,"relevance":0.5}},{"id":2576913086,"content":"That should be fine \nThis is obviously a problem that needs to be fixed for this tool to be useful. Also these just started all loading in since the last few changes you made so I'm inclined to believe that the problem was introduced based on recent changes. \nThe html order matters for the checkbox which is clearly rendering. Look for any css code selectors using `~` for a clue. \n![image](https://github.com/user-attachments/assets/9bb3930c-0cc3-4df1-a815-ad270f019979)","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576913086","commentType":"PULL_COLLABORATOR","score":{"reward":7.313,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":70,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":76.67535714285718,"syllables":93,"sentences":4,"score":0.8332464285714282},"multiplier":1,"relevance":0.75}},{"id":2576985581,"content":"9520dfc is the last good one","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576985581","commentType":"PULL_COLLABORATOR","score":{"reward":1.422,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":2576987749,"content":"5c95353 loads too many notifications","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576987749","commentType":"PULL_COLLABORATOR","score":{"reward":1.268,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":32.56000000000003,"syllables":10,"sentences":1,"score":0.7256000000000004},"multiplier":1,"relevance":0.65}},{"id":2576989223,"content":"You need to review your work before requesting reviews again","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576989223","commentType":"PULL_COLLABORATOR","score":{"reward":1.755,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":61.32500000000002,"syllables":16,"sentences":1,"score":0.9867499999999998},"multiplier":1,"relevance":0.5}},{"id":2579112821,"content":"![image](https://github.com/user-attachments/assets/008b3010-1953-4574-bfd9-360cffeacda4)\nLooks good I just wish I had more notifications, but I just finished reviewing everything! @gentlementlegen @whilefoo @rndquu @EresDev can you guys take a look at the latest deploy and offer feedback based on your notifications?\nhttps://4626f4b9.notifications-ubq-fi.pages.dev/","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2579112821","commentType":"PULL_COLLABORATOR","score":{"reward":7.703,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":55.93757751937986,"syllables":73,"sentences":6,"score":0.9593757751937986},"multiplier":1,"relevance":0.65}},{"id":2579114034,"content":"In other news, I wanted to share that the noise from the bot will be mostly mitigated once this is implemented\nhttps://github.com/ubiquity-os/plugins-wishlist/issues/54","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2579114034","commentType":"PULL_COLLABORATOR","score":{"reward":5.28,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":70.35000000000002,"syllables":43,"sentences":2,"score":0.8964999999999997},"multiplier":1,"relevance":0.55}},{"id":2579235088,"content":"<img width=\"498\" alt=\"image\" src=\"https://github.com/user-attachments/assets/dc1e4970-20af-41dd-ad56-07fe655d2710\" />\r\nIs the caching implemented correctly?\r\n<img width=\"321\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6b7fa208-36a2-4fa8-a02c-85cf5ea11160\" />","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2579235088","commentType":"PULL_COLLABORATOR","score":{"reward":8.736,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":75.46182692307693,"syllables":56,"sentences":4,"score":0.8453817307692307},"multiplier":1,"relevance":0.7}},{"id":2604324642,"content":"@zugdev @gentlementlegen @rndquu @whilefoo can you guys prioritize finishing this","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2604324642","commentType":"PULL_COLLABORATOR","score":{"reward":1.272,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":19.025000000000006,"syllables":21,"sentences":1,"score":0.59025},"multiplier":1,"relevance":0.4}},{"id":2610731915,"content":"GitHub has an API endpoint to load your notifications.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2610731915","commentType":"PULL_COLLABORATOR","score":{"reward":2.268,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":56.70000000000002,"syllables":15,"sentences":1,"score":0.9670000000000002},"multiplier":1,"relevance":0.7}},{"id":2610806163,"content":"These rely on our special labels, specifically the priority labels.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2610806163","commentType":"PULL_COLLABORATOR","score":{"reward":2.43,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":27.485000000000014,"syllables":20,"sentences":1,"score":0.6748500000000002},"multiplier":1,"relevance":0.75}}],"reviewRewards":[{"reviews":[{"reviewId":2504683488,"effect":{"addition":705,"deletion":249},"reward":28.62,"priority":3},{"reviewId":2507959498,"effect":{"addition":11452,"deletion":70},"reward":345.66,"priority":3},{"reviewId":2541547274,"effect":{"addition":478,"deletion":365},"reward":25.29,"priority":3}],"url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 672.28 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>399.57</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>11.05</td></tr><tr><td>Issue</td><td>Comment</td><td>19</td><td>50.646</td></tr><tr><td>Review</td><td>Comment</td><td>33</td><td>211.014</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+705 -249</td><td>3</td><td>28.62</td></tr><tr><td>+11452 -70</td><td>3</td><td>345.66</td></tr><tr><td>+478 -365</td><td>3</td><td>25.29</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1\" target=\"_blank\" rel=\"noopener\">- I did some research in the past with custom notifications view&hellip;</a></h6></td><td><details><summary>8.57</summary><pre>content:&#13;  content:&#13;    ul:&#13;      score: 0&#13;      elementCount: 7&#13;    li:&#13;      score: 0.1&#13;      elementCount: 12&#13;    p:&#13;      score: 0&#13;      elementCount: 15&#13;    h2:&#13;      score: 1&#13;      elementCount: 2&#13;    h3:&#13;      score: 1&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 8.2&#13;regex:&#13;  wordCount: 416&#13;  wordValue: 0.1&#13;  result: 0.37&#13;</pre></details></td><td>1</td><td>1</td><td>11.05</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2516684764\" target=\"_blank\" rel=\"noopener\">I decided to change this to 2 weeks because: Forking from work&hellip;</a></h6></td><td><details><summary>2.64</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 86&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.951</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2519020873\" target=\"_blank\" rel=\"noopener\">Seems like you're on the right track!</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.891</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2519031073\" target=\"_blank\" rel=\"noopener\">Normally you should be working in your own org, and in a pull, a&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.4</td><td>3</td><td>2.748</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2524034674\" target=\"_blank\" rel=\"noopener\">Actually I think we should cache all the backend details (if any&hellip;</a></h6></td><td><details><summary>4.64</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 84&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>0.9</td><td>3</td><td>16.281</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2525251821\" target=\"_blank\" rel=\"noopener\">@zugdev you need to link to prove progress to the OS### Team Me&hellip;</a></h6></td><td><details><summary>3.49</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    h3:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 120&#13;  wordValue: 0.1&#13;  result: 2.49&#13;</pre></details></td><td>0.6</td><td>3</td><td>8.118</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2525373885\" target=\"_blank\" rel=\"noopener\">@zugdev Issue tag here</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.495</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2525388937\" target=\"_blank\" rel=\"noopener\">### Accelerating Proposal FundingAnother later idea but we can &hellip;</a></h6></td><td><details><summary>4.18</summary><pre>content:&#13;  content:&#13;    h3:&#13;      score: 1&#13;      elementCount: 2&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 2.2&#13;regex:&#13;  wordCount: 175&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.2</td><td>3</td><td>3.222</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2546830089\" target=\"_blank\" rel=\"noopener\">@gentlementlegen looks like the config is broken here</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.291</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2547734570\" target=\"_blank\" rel=\"noopener\">Right I see. The config merging is not implemented yet. Would yo&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.609</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2547761108\" target=\"_blank\" rel=\"noopener\">I don't think it's mapped to a URL yet, just some cloudflare link</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.471</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2658436376\" target=\"_blank\" rel=\"noopener\">@zugdev The login redirects to Devpool directory please fix</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.248</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660181841\" target=\"_blank\" rel=\"noopener\">Can you replicate the rounded squares we have at directory for t&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.13</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660580426\" target=\"_blank\" rel=\"noopener\">We might have to roll back to an earlier commit before we were r&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.593</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660792632\" target=\"_blank\" rel=\"noopener\">I didn't change the key in our secrets or anywhere.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.708</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660797307\" target=\"_blank\" rel=\"noopener\">Not for the demo. That was several months back the last time I u&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.876</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2691963120\" target=\"_blank\" rel=\"noopener\">The permits shouldn't render at all if they are invalid. It shou&hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.284</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2719451765\" target=\"_blank\" rel=\"noopener\">@gentlementlegen permits are broken. Looks like this is a persis&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.092</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2723983360\" target=\"_blank\" rel=\"noopener\">2 weeks isn't standard I realized it shouldn't have existed.</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.756</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2723985818\" target=\"_blank\" rel=\"noopener\">I will need to temporarily add 2 weeks back into the config for &hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.882</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1885838869\" target=\"_blank\" rel=\"noopener\">This is wrong to hard code org names like this</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.808</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1885839832\" target=\"_blank\" rel=\"noopener\">If this is looping, then you should be cloning instead of creati&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.85</td><td>3</td><td>5.457</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1885840156\" target=\"_blank\" rel=\"noopener\">Why did you change activity to oldest? It should be the same log&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.75</td><td>3</td><td>3.33</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1885840434\" target=\"_blank\" rel=\"noopener\">Text filter could be definitely useful not sure why you deleted &hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.793</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1887968205\" target=\"_blank\" rel=\"noopener\">It should be every org on the directory</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.376</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2525373920\" target=\"_blank\" rel=\"noopener\">@zugdev pull tag here</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.156</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2527769251\" target=\"_blank\" rel=\"noopener\">Unfortunately, this is really hard to test from mobile because I&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 83&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.75</td><td>3</td><td>7.673</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2531282709\" target=\"_blank\" rel=\"noopener\">It looks like there are a lot of adjustments still needed. - I&hellip;</a></h6></td><td><details><summary>3.41</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.4&#13;regex:&#13;  wordCount: 172&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.583</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2531285411\" target=\"_blank\" rel=\"noopener\">Redirect added.&lt;img width=\"927\" alt=\"image\" src=\"https://gi&hellip;</a></h6></td><td><details><summary>3.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.65</td><td>3</td><td>8.424</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2532910845\" target=\"_blank\" rel=\"noopener\">I am not sure I am understanding the full context of these reaso&hellip;</a></h6></td><td><details><summary>1.24</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 253&#13;  wordValue: 0.1&#13;  result: 1.24&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.32</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2537938400\" target=\"_blank\" rel=\"noopener\">I'll do later today!</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.195</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2539533076\" target=\"_blank\" rel=\"noopener\">From console logs:[all-notifications.json](https://github.com/&hellip;</a></h6></td><td><details><summary>8.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    a:&#13;      score: 1&#13;      elementCount: 6&#13;  result: 6&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>0.75</td><td>3</td><td>24.21</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2540862559\" target=\"_blank\" rel=\"noopener\">Surely there's a graphql query for it? @gentlementlegen any idea&hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.788</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2547715077\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/user-attachments/assets/76b211f2-3be&hellip;</a></h6></td><td><details><summary>8.86</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 2&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 5&#13;  result: 7.5&#13;regex:&#13;  wordCount: 239&#13;  wordValue: 0.1&#13;  result: 1.36&#13;</pre></details></td><td>0.85</td><td>3</td><td>28.841</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2547762398\" target=\"_blank\" rel=\"noopener\">I just manually checked my notifications and looks like there is&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.08</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2567117042\" target=\"_blank\" rel=\"noopener\">Peaking the comment is a great addition but I think it doesn't f&hellip;</a></h6></td><td><details><summary>3.62</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 76&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.85</td><td>3</td><td>11.475</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2568065309\" target=\"_blank\" rel=\"noopener\">For 1. It could be interesting to add a filter for this but by d&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.473</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2573936652\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/user-attachments/assets/eee8d4cf-1e1&hellip;</a></h6></td><td><details><summary>3.23</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 42&#13;  wordValue: 0.1&#13;  result: 2.23&#13;</pre></details></td><td>0.8</td><td>3</td><td>10.08</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576571684\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/user-attachments/assets/dc99e310-f25&hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.584</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576642492\" target=\"_blank\" rel=\"noopener\">The only notifications that matter for this view are the ones as&hellip;</a></h6></td><td><details><summary>2.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.85</td><td>3</td><td>7.548</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576717568\" target=\"_blank\" rel=\"noopener\">I just want the notifications view that GitHub provides but to e&hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.95</td><td>3</td><td>8.237</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576777339\" target=\"_blank\" rel=\"noopener\">Confused why there's so many now. ![image](https://github.com/u&hellip;</a></h6></td><td><details><summary>2.31</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 46&#13;  wordValue: 0.1&#13;  result: 2.31&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.696</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576910223\" target=\"_blank\" rel=\"noopener\">Posting a shortcut to the deploys because GitHub iOS client make&hellip;</a></h6></td><td><details><summary>2.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.5</td><td>3</td><td>4.44</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576913086\" target=\"_blank\" rel=\"noopener\">That should be fine This is obviously a problem that needs to b&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 70&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.75</td><td>3</td><td>7.313</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576985581\" target=\"_blank\" rel=\"noopener\">9520dfc is the last good one</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.422</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576987749\" target=\"_blank\" rel=\"noopener\">5c95353 loads too many notifications</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.65</td><td>3</td><td>1.268</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2576989223\" target=\"_blank\" rel=\"noopener\">You need to review your work before requesting reviews again</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.755</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2579112821\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/user-attachments/assets/008b3010-195&hellip;</a></h6></td><td><details><summary>3.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.65</td><td>3</td><td>7.703</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2579114034\" target=\"_blank\" rel=\"noopener\">In other news, I wanted to share that the noise from the bot wil&hellip;</a></h6></td><td><details><summary>2.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.55</td><td>3</td><td>5.28</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2579235088\" target=\"_blank\" rel=\"noopener\">&lt;img width=\"498\" alt=\"image\" src=\"https://github.com/user-att&hellip;</a></h6></td><td><details><summary>3.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>3</td><td>8.736</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2604324642\" target=\"_blank\" rel=\"noopener\">@zugdev @gentlementlegen @rndquu @whilefoo can you guys prioriti&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.272</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2610731915\" target=\"_blank\" rel=\"noopener\">GitHub has an API endpoint to load your notifications.</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.268</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2610806163\" target=\"_blank\" rel=\"noopener\">These rely on our special labels, specifically the priority labe&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.75</td><td>3</td><td>2.43</td></tr></tbody></table></details>"},"gentlementlegen":{"total":428.277,"userId":9807008,"comments":[{"id":2547537788,"content":"@0x4007 this is the only plugin listed in the configuration file: https://github.com/ubiquity-os/.github/blob/main/.github/.ubiquity-os.config.dev.yml","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2547537788","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.295,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":61.53512500000002,"syllables":42,"sentences":8,"score":0.9846487499999997},"multiplier":1,"relevance":0.3}},{"id":2547740684,"content":"Will have a look at the merging as soon as I am done with the current assigned issues I have. I will updated this to have the full config. We didn't deploy the configuration UI frotnend yet?","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2547740684","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.572,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":82.66254385964915,"syllables":50,"sentences":3,"score":0.7733745614035086},"multiplier":1,"relevance":0.2}},{"id":2660768775,"content":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/actions/runs/13336736054/job/37253537335#step:3:4457\nThe key was not allowed to generate permits here, I do not know what was encoded in that key.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660768775","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.933,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":66.36500000000001,"syllables":52,"sentences":2,"score":0.9363499999999999},"multiplier":1,"relevance":0.1}},{"id":2660793967,"content":"Didnt you change the evm encrypted key at some point?","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660793967","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.351,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":103.625,"syllables":11,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":2691939017,"content":"@zugdev I will try to regen but if the key does not allow for generating here we will need to update the key itself 😄","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2691939017","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.633,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":69.67500000000004,"syllables":32,"sentences":1,"score":0.9032499999999996},"multiplier":1,"relevance":0.1}},{"id":2691943341,"content":"The problem is still that the private key does not allow for permit generations in this repository it seems: https://github.com/ubiquity-os-marketplace/text-conversation-rewards/actions/runs/13601140899/job/38027114423#step:3:4604","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2691943341","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.93,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":52.265000000000015,"syllables":58,"sentences":2,"score":0.9226500000000002},"multiplier":1,"relevance":0.1}},{"id":2691966729,"content":"Just the URL shouldn't show, the permits are only one module that can be disabled so no error should be thrown. Maybe we could add a footnote with the error however.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2691966729","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.726,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":79.5575,"syllables":42,"sentences":2,"score":0.804425},"multiplier":1,"relevance":0.1}},{"id":2725269836,"content":"Why not keeping the 2 weeks? Also, should you re-generate this then? Pricing seems to work.","url":"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2725269836","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.477,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":91.60098039215687,"syllables":22,"sentences":3,"score":0.6839901960784313},"multiplier":1,"relevance":0.1}},{"id":1925463025,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925463025","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,286 @@\n+import { Octokit } from \"@octokit/rest\";\n+import { GitHubAggregated, GitHubIssue, GitHubNotification, GitHubNotifications, GitHubPullRequest } from \"../github-types\";\n+import { getGitHubAccessToken } from \"../getters/get-github-access-token\";\n+import { handleRateLimit } from \"./handle-rate-limit\";\n+import { RequestError } from \"@octokit/request-error\";\n+// import { testAllNotifications } from \"./test-all-notifications\";","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1925465424,"content":"Please remove the commented code","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925465424","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.365,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.7}},{"id":1925468544,"content":"Maybe it would be more proper to add the data into separate JSON files and mark is as generated through linguist, because the code can barely be viewed (is it actually code or just data)?","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925468544","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":3.108,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":50.452857142857155,"syllables":50,"sentences":1,"score":0.9045285714285716},"multiplier":1,"relevance":0.4}},{"id":1925470620,"content":"Did you move the PWA capabilities or forgot to un-comment it?","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925470620","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -20,37 +18,52 @@ window.addEventListener(\"unhandledrejection\", (event: PromiseRejectionEvent) =>\n   event.preventDefault();\n });\n \n-initiateReferralCodeTracking();\n renderGitRevision();\n generateSortingToolbar();\n renderServiceMessage();\n \n grid(document.getElementById(\"grid\") as HTMLElement, () => document.body.classList.add(\"grid-loaded\")); // @DEV: display grid background\n-const container = document.getElementById(\"issues-container\") as HTMLDivElement;\n+export const notificationsContainer = document.getElementById(\"issues-container\") as HTMLDivElement;\n \n-if (!container) {\n+if (!notificationsContainer) {\n   throw new Error(\"Could not find issues container\");\n }\n \n-export const taskManager = new TaskManager(container);\n+// Should show bot\n+export let showBotNotifications = false;\n+export const flipShowBotNotifications = () => {\n+  showBotNotifications = !showBotNotifications;\n+}\n+\n+// Store notifications\n+let notifications: Awaited<ReturnType<typeof fetchAllNotifications>> | undefined;\n+\n+// This is made to make notifications global\n+export async function getNotifications() {\n+  if (!notifications) {\n+    notifications = await fetchAllNotifications();\n+  }\n+  return notifications;\n+}\n \n void (async function home() {\n   void authentication();\n   void readyToolbar();\n-  await taskManager.syncTasks(); // Sync tasks from cache on load\n-  loadIssueFromUrl(); // Load issue preview from URL if present\n-  void displayGitHubIssues(); // Display issues from cache\n-  await postLoadUpdateIssues(); // Update cache and issues if cache is outdated\n+  const notifications = await getNotifications();\n+  if(notifications){\n+    await fetchAvatars(notifications);\n+  }\n+  void displayNotifications();\n \n   // Register service worker for PWA\n-  if (\"serviceWorker\" in navigator) {\n-    navigator.serviceWorker\n-      .register(\"/progressive-web-app.js\")\n-      .then(() => {\n-        console.log(\"Service worker registered\");\n-      })\n-      .catch((err) => {\n-        console.log(err);\n-      });\n-  }\n+  // if (\"serviceWorker\" in navigator) {","score":{"reward":3.591,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":67.75500000000001,"syllables":18,"sentences":1,"score":0.9224499999999999},"multiplier":1,"relevance":0.9}},{"id":1925472833,"content":"Is the comment misleading, or should it be `15 / 1000`?","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925472833","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,288 @@\n+import { organizationImageCache } from \"../fetch-github/fetch-data\";\n+import { GitHubAggregated } from \"../github-types\";\n+import { getTimeAgo } from \"./utils\";\n+import { notificationsContainer, showBotNotifications } from \"../home\";\n+import { getGitHubAccessToken } from \"../getters/get-github-access-token\";\n+import { Octokit } from \"@octokit/rest\";\n+\n+export async function renderNotifications(notifications: GitHubAggregated[], skipAnimation: boolean) {\n+  const providerToken = await getGitHubAccessToken();\n+\n+  if (notificationsContainer.classList.contains(\"ready\")) {\n+    notificationsContainer.classList.remove(\"ready\");\n+    notificationsContainer.innerHTML = \"\";\n+  }\n+  const existingNotificationIds = new Set(\n+    Array.from(notificationsContainer.querySelectorAll(\".issue-element-inner\")).map((element) => element.getAttribute(\"data-issue-id\"))\n+  );\n+\n+  let delay = 0;\n+  const baseDelay = 1000 / 15; // Base delay in milliseconds","score":{"reward":1.974,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.7}},{"id":2542845302,"content":"What is the count that is needed here exactly?","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2542845302","commentType":"PULL_COLLABORATOR","score":{"reward":1.515,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":94.30000000000001,"syllables":11,"sentences":1,"score":0.6569999999999999},"multiplier":1,"relevance":0.5}},{"id":2543929815,"content":"When it gets referenced in any way or specifically for closing pull-requests? I think there is a gql query that can retrieve this info.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2543929815","commentType":"PULL_COLLABORATOR","score":{"reward":3.87,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":72.32350000000002,"syllables":36,"sentences":2,"score":0.8767649999999998},"multiplier":1,"relevance":0.6}},{"id":2607489077,"content":"It seems that the `yarn.lock` is not updated with the corresponding `package.json`.\r\nAlso, between `861px` and `1005px`, no search bar is displayed.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2607489077","commentType":"PULL_COLLABORATOR","score":{"reward":4.104,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":80.20000000000003,"syllables":25,"sentences":2,"score":0.7979999999999997},"multiplier":1,"relevance":0.8}},{"id":2608825228,"content":"@zugdev lock file look fine now, cypress test ran (but some tests failed). Lemme me check again the code and the responsive and I'll approve this.\r\n---\r\nResponsive and code are resolved. How do I get notifications to appear? It was always empty when I tested it.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2608825228","commentType":"PULL_COLLABORATOR","score":{"reward":6.027,"formatting":{"content":{"p":{"score":0,"elementCount":2},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":82.09400000000002,"syllables":64,"sentences":5,"score":0.7790599999999998},"multiplier":1,"relevance":0.7}},{"id":2608906036,"content":"No luck with show / hide bot button either, but since it seems to work for you and @0x4007 I trust you.","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2608906036","commentType":"PULL_COLLABORATOR","score":{"reward":2.745,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":92.86285714285715,"syllables":23,"sentences":1,"score":0.6713714285714285},"multiplier":1,"relevance":0.5}},{"id":2610041832,"content":"Yes thank you, it seems that the only notifications I have come from my dummy organization, and I have none in ubq repos. What are the notifications from exactly?","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2610041832","commentType":"PULL_COLLABORATOR","score":{"reward":2.151,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":57.92439655172416,"syllables":46,"sentences":2,"score":0.9792439655172416},"multiplier":1,"relevance":0.3}},{"id":2611261600,"content":"Not sure how GitHub notifications work but here is what I have as well\r\n<img width=\"1709\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4a334c34-e9fe-41be-8852-139ca030e8d1\" />\r\nBut then I saw the logs\r\n<img width=\"543\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b0d787fd-6b3c-41ab-9447-fb239126e496\" />\r\nSo it seems to make sense. Notifications are only the unread ones (the ones highlighted in your GitHub notifications).","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2611261600","commentType":"PULL_COLLABORATOR","score":{"reward":10.08,"formatting":{"content":{"p":{"score":0,"elementCount":5},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":68.94412671232877,"syllables":103,"sentences":4,"score":0.9105587328767123},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2567447530,"effect":{"addition":12350,"deletion":286},"reward":379.08,"priority":3},{"reviewId":2568909103,"effect":{"addition":12,"deletion":13},"reward":0.75,"priority":3}],"url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 428.277 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>379.83</td></tr><tr><td>Issue</td><td>Comment</td><td>8</td><td>7.917</td></tr><tr><td>Review</td><td>Comment</td><td>12</td><td>40.53</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+12350 -286</td><td>3</td><td>379.08</td></tr><tr><td>+12 -13</td><td>3</td><td>0.75</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2547537788\" target=\"_blank\" rel=\"noopener\">@0x4007 this is the only plugin listed in the configuration file&hellip;</a></h6></td><td><details><summary>1.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.295</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2547740684\" target=\"_blank\" rel=\"noopener\">Will have a look at the merging as soon as I am done with the cu&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.572</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660768775\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os-marketplace/text-conversation-rew&hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.933</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2660793967\" target=\"_blank\" rel=\"noopener\">Didnt you change the evm encrypted key at some point?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.351</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2691939017\" target=\"_blank\" rel=\"noopener\">@zugdev I will try to regen but if the key does not allow for ge&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.633</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2691943341\" target=\"_blank\" rel=\"noopener\">The problem is still that the private key does not allow for per&hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.93</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2691966729\" target=\"_blank\" rel=\"noopener\">Just the URL shouldn't show, the permits are only one module tha&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.726</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/.github/issues/1#issuecomment-2725269836\" target=\"_blank\" rel=\"noopener\">Why not keeping the 2 weeks? Also, should you re-generate this t&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.477</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925463025\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925465424\" target=\"_blank\" rel=\"noopener\">Please remove the commented code</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.365</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925468544\" target=\"_blank\" rel=\"noopener\">Maybe it would be more proper to add the data into separate JSON&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.4</td><td>3</td><td>3.108</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925470620\" target=\"_blank\" rel=\"noopener\">Did you move the PWA capabilities or forgot to un-comment it?</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.9</td><td>3</td><td>3.591</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#discussion_r1925472833\" target=\"_blank\" rel=\"noopener\">Is the comment misleading, or should it be &#96;15 / 1000&#96;?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.974</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2542845302\" target=\"_blank\" rel=\"noopener\">What is the count that is needed here exactly?</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.515</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2543929815\" target=\"_blank\" rel=\"noopener\">When it gets referenced in any way or specifically for closing p&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.87</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2607489077\" target=\"_blank\" rel=\"noopener\">It seems that the &#96;yarn.lock&#96; is not updated with the co&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.104</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2608825228\" target=\"_blank\" rel=\"noopener\">@zugdev lock file look fine now, cypress test ran (but some test&hellip;</a></h6></td><td><details><summary>2.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.027</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2608906036\" target=\"_blank\" rel=\"noopener\">No luck with show / hide bot button either, but since it seems t&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.745</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2610041832\" target=\"_blank\" rel=\"noopener\">Yes thank you, it seems that the only notifications I have come &hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.151</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2611261600\" target=\"_blank\" rel=\"noopener\">Not sure how GitHub notifications work but here is what I have a&hellip;</a></h6></td><td><details><summary>4.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0.1&#13;  result: 2.4&#13;</pre></details></td><td>0.6</td><td>3</td><td>10.08</td></tr></tbody></table></details>"},"rndquu":{"total":418.875,"userId":119500907,"comments":[{"id":2602123247,"content":"@zugdev \r\n1. Somehow I don't see any notifications although there are unread notifications in github UI:\r\n<img width=\"1512\" alt=\"Screenshot 2025-02-07 at 18 51 32\" src=\"https://github.com/user-attachments/assets/4e3411e9-d4d4-4d03-b6fa-c3b60a69de6d\" />\r\nWhat am I doing wrong?\r\n2. Pls fix failing cypress CI [run](https://github.com/ubiquity/notifications.ubq.fi/actions/runs/12911684248/job/36004668427?pr=1)","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#pullrequestreview-2602123247","commentType":"PULL_COLLABORATOR","score":{"reward":15.201,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ol":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2.2},"priority":3,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":65.16823529411766,"syllables":75,"sentences":3,"score":0.9483176470588234},"multiplier":1,"relevance":0.9}},{"id":2527338176,"content":"You mean JWT expiry time?\r\n<img width=\"1511\" alt=\"Screenshot 2024-12-09 at 12 08 32\" src=\"https://github.com/user-attachments/assets/c59c97e7-ebdd-48e9-bf3f-711f141219d8\">","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2527338176","commentType":"PULL_COLLABORATOR","score":{"reward":4.335,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":89.08540229885058,"syllables":37,"sentences":3,"score":0.7091459770114942},"multiplier":1,"relevance":0.5}},{"id":2528107801,"content":"There's the `https://**.ubq.fi` rule which should allow any subdomain","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2528107801","commentType":"PULL_COLLABORATOR","score":{"reward":4.851,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.50000000000003,"syllables":13,"sentences":1,"score":0.8449999999999998},"multiplier":1,"relevance":0.7}},{"id":2528110218,"content":"Only account owner @0x4007 can increase this setting","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2528110218","commentType":"PULL_COLLABORATOR","score":{"reward":1.782,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":61.24000000000001,"syllables":13,"sentences":1,"score":0.9875999999999999},"multiplier":1,"relevance":0.6}},{"id":2528128717,"content":"Right now the rules are:\r\n<img width=\"992\" alt=\"Screenshot 2024-12-09 at 17 33 24\" src=\"https://github.com/user-attachments/assets/14866135-0a1d-4f56-8168-0eea25642a80\">\r\nWhat exactly to add?","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2528128717","commentType":"PULL_COLLABORATOR","score":{"reward":7.704,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":77.28750000000002,"syllables":44,"sentences":2,"score":0.8271249999999998},"multiplier":1,"relevance":0.8}},{"id":2528153514,"content":"This redirect URL can also be added only by @0x4007 in the project [settings](https://supabase.com/dashboard/project/_/auth/url-configuration)","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2528153514","commentType":"PULL_COLLABORATOR","score":{"reward":6.552,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":71.76785714285715,"syllables":20,"sentences":1,"score":0.8823214285714285},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2602123247,"effect":{"addition":12339,"deletion":276},"reward":378.45,"priority":3}],"url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 418.875 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>378.45</td></tr><tr><td>Review</td><td>Comment</td><td>6</td><td>40.425</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+12339 -276</td><td>3</td><td>378.45</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#pullrequestreview-2602123247\" target=\"_blank\" rel=\"noopener\">@zugdev 1. Somehow I don't see any notifications although ther&hellip;</a></h6></td><td><details><summary>4.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ol:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.2&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.9</td><td>3</td><td>15.201</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2527338176\" target=\"_blank\" rel=\"noopener\">You mean JWT expiry time?&lt;img width=\"1511\" alt=\"Screenshot &hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.5</td><td>3</td><td>4.335</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2528107801\" target=\"_blank\" rel=\"noopener\">There's the &#96;https://**.ubq.fi&#96; rule which should allow &hellip;</a></h6></td><td><details><summary>1.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.851</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2528110218\" target=\"_blank\" rel=\"noopener\">Only account owner @0x4007 can increase this setting</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.782</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2528128717\" target=\"_blank\" rel=\"noopener\">Right now the rules are:&lt;img width=\"992\" alt=\"Screenshot 20&hellip;</a></h6></td><td><details><summary>2.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.704</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2528153514\" target=\"_blank\" rel=\"noopener\">This redirect URL can also be added only by @0x4007 in the proje&hellip;</a></h6></td><td><details><summary>2.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.552</td></tr></tbody></table></details>"},"whilefoo":{"total":0.42,"userId":139262667,"comments":[{"id":2611168879,"content":"![image](https://github.com/user-attachments/assets/47eb6e68-67fc-4c82-93f2-ebf07aaade49)\r\n![image](https://github.com/user-attachments/assets/69c6d619-6d0f-4ee1-b2e3-26e7134fa946)\r\nI get different notifications than on Github, is that expected?","url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2611168879","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.42,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":44.405,"syllables":18,"sentences":1,"score":0.84405},"multiplier":0.25,"relevance":0.5}}],"reviewRewards":[{"url":"https://github.com/ubiquity/notifications.ubq.fi/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.42 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>0.42</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity/notifications.ubq.fi/pull/1#issuecomment-2611168879\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/user-attachments/assets/47eb6e68-67f&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.5</td><td>3</td><td>0.42</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-sdk_34.json","json":{"gentlementlegen":{"userId":9807008,"total":107.362,"task":{"reward":100,"multiplier":1},"comments":[{"id":2689763640,"content":"@whilefoo A thing we could do for Workers is to put the url to the logs, that would look like\r\n`https://dash.cloudflare.com/${env.CLOUDFLARE_ACCOUNT_ID}/workers/services/view/${env.CLOUDFLARE_WORKER_NAME}/production/observability/logs?granularity=0&time=${timeParam}`\r\nHowever this would require worker deployments to upload these values as they are not accessible through a worker by default. What do you think?\r\nIf yes, it should be its own task I believe.\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquity-os/ubiquity-os-kernel/pull/169#discussion_r1821942110_\r\n`postComment` can post the url for an Action worker, but doesn't not have context for a Worker run. What could be done is adding a url to the dashboard with the time of the run as a filter so that we instantly have the related logs displayed.\r\nCode snippet:\r\n```typescript\r\nconst toTime = Date.now() + 60000;\r\n    const fromTime = Date.now() - 60000;\r\n    const timeParam = encodeURIComponent(`{\"type\":\"absolute\",\"to\":${toTime},\"from\":${fromTime}}`);\r\n    console.log(\r\n      `https://dash.cloudflare.com/${env.CLOUDFLARE_ACCOUNT_ID}/workers/services/view/${env.CLOUDFLARE_WORKER_NAME}/production/observability/logs?granularity=0&time=${timeParam}`\r\n    );\r\n```\r\nThis would imply uploading `CLOUDFLARE_ACCOUNT_ID` and `CLOUDFLARE_WORKER_NAME` during worker deployment as these values are not available by default.\r\nTo achieve this, a new reusable GitHub action could be created to avoid having to modify each upload script from every worker plugin. This would greatly benefit all the projects and make deployment simpler.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/34","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.36,"formatting":{"content":{"p":{"score":0,"elementCount":9},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":158,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":63.128218277449065,"syllables":249,"sentences":9,"score":0.9687178172255093},"multiplier":1,"relevance":1}},{"id":2153311210,"content":"Resolves https://github.com/ubiquity-os/plugin-sdk/issues/34\r\nQA: https://github.com/Meniole/command-query/issues/5#issuecomment-2573320305","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/18","commentType":"PULL_SPECIFICATION","score":{"reward":2.002,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":50.67285714285717,"syllables":37,"sentences":3,"score":0.9067285714285717},"multiplier":1,"relevance":0.7}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 107.362 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>100</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.36</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>2.002</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/34\" target=\"_blank\" rel=\"noopener\">@whilefoo A thing we could do for Workers is to put the url to t&hellip;</a></h6></td><td><details><summary>4.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 9&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 158&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>1</td><td>1</td><td>5.36</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/18\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquity-os/plugin-sdk/issues/34QA&hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.7</td><td>1</td><td>2.002</td></tr></tbody></table></details>"},"Keyrxng":{"total":1.888,"userId":106303466,"comments":[{"id":2497271251,"content":"This should be transferred into https://github.com/ubiquity-os/plugin-sdk\r\nAlso when this is labelled I'm happy to re-sub the PR","url":"https://github.com/ubiquity-os/plugin-sdk/issues/34#issuecomment-2497271251","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.45,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":75.70750000000002,"syllables":35,"sentences":2,"score":0.8429249999999997},"multiplier":0.25,"relevance":0.6}},{"id":2670565816,"content":"Did I get short-changed on this one do you think @gentlementlegen?\nhttps://github.com/ubiquity-os/plugin-sdk/pull/42 introduced the real changes which I pretty much built and tried to PR into your fork as suggested at the time. You thanked me even for the \"code head start\", do you think we can re-approach this?","url":"https://github.com/ubiquity-os/plugin-sdk/issues/34#issuecomment-2670565816","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.52,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":84.3213771186441,"syllables":75,"sentences":4,"score":0.7567862288135591},"multiplier":0.25,"relevance":0.5}},{"id":1855191688,"content":"if this is for the worker log url: wasn't the plan was to implement it SDK-side only (which I did) so that plugins don't have to define this in their schema?","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/18#discussion_r1855191688","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -6,6 +6,8 @@ export const envSchema = T.Object({\n   SUPABASE_KEY: T.String(),\n   KERNEL_PUBLIC_KEY: T.Optional(T.String()),\n   LOG_LEVEL: T.Enum(LOG_LEVEL, { default: LOG_LEVEL.INFO }),\n+  CLOUDFLARE_ACCOUNT_ID: T.Optional(T.String()),","score":{"reward":0.512,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":70.3073529411765,"syllables":41,"sentences":1,"score":0.8969264705882349},"multiplier":0.25,"relevance":0.8}},{"id":1856166885,"content":"gotcha npnp","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/18#discussion_r1856166885","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -6,6 +6,8 @@ export const envSchema = T.Object({\n   SUPABASE_KEY: T.String(),\n   KERNEL_PUBLIC_KEY: T.Optional(T.String()),\n   LOG_LEVEL: T.Enum(LOG_LEVEL, { default: LOG_LEVEL.INFO }),\n+  CLOUDFLARE_ACCOUNT_ID: T.Optional(T.String()),","score":{"reward":0.016,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":0.25,"relevance":0.2}}],"reviewRewards":[{"reviews":[{"reviewId":2456405198,"effect":{"addition":24,"deletion":15},"reward":0.39,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/command-query/pull/18"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.888 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.39</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>0.97</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>0.528</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/18\" target=\"_blank\" rel=\"noopener\">#18</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+24 -15</td><td>1</td><td>0.39</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/34#issuecomment-2497271251\" target=\"_blank\" rel=\"noopener\">This should be transferred into https://github.com/ubiquity-os/p&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.45</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/34#issuecomment-2670565816\" target=\"_blank\" rel=\"noopener\">Did I get short-changed on this one do you think @gentlementlege&hellip;</a></h6></td><td><details><summary>3.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.52</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/18#discussion_r1855191688\" target=\"_blank\" rel=\"noopener\">if this is for the worker log url: wasn't the plan was to implem&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.512</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/18#discussion_r1856166885\" target=\"_blank\" rel=\"noopener\">gotcha npnp</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.016</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_configuration-loader_8.json","json":{"gentlementlegen":{"userId":9807008,"total":154.68,"task":{"reward":150,"multiplier":1},"comments":[{"id":2254757893,"content":"The new bot version requires new configuration elements, that can currently be found at\r\nhttps://github.com/ubiquibot/conversation-rewards/blob/development/rewards-configuration.default.yml\r\nThese elements should be served within the default configuration.\r\nTasks to be carried out:\r\n- add the required elements to the configuration\r\n- provide default values\r\n- make sure configuration merging works as expected\r\n- release a new version of this package","url":"https://github.com/ubiquity-os/configuration-loader/issues/8","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.68,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1.4},"priority":1,"words":{"wordCount":52,"wordValue":0.1,"result":2.41},"readability":{"fleschKincaid":36.53987500000002,"syllables":119,"sentences":5,"score":0.7653987500000002},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 154.68 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.68</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/8\" target=\"_blank\" rel=\"noopener\">The new bot version requires new configuration elements, that ca&hellip;</a></h6></td><td><details><summary>3.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.4&#13;regex:&#13;  wordCount: 52&#13;  wordValue: 0.1&#13;  result: 2.41&#13;</pre></details></td><td>1</td><td>1</td><td>4.68</td></tr></tbody></table></details>"},"gitcoindev":{"total":18.567,"userId":88761781,"comments":[{"id":2021670343,"content":"I left a few comments to add documentation but in general a good job!","url":"https://github.com/ubiquity-os/configuration-loader/pull/9#pullrequestreview-2021670343","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.555,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":65.72500000000001,"syllables":21,"sentences":1,"score":0.9427499999999999},"multiplier":0.25,"relevance":0.5}},{"id":1578964110,"content":"If I understand correctly, the syntax is: first value ISSUE / REVIEW , depends on location where the comment is located. Second value on the person: ISSUER /  ASSIGNEE / COLLABORATOR / CONTRIBUTOR . Third value depends on the action COMMENTED / SPECIFICATION / TASK (perhaps SPECIFIED / TASK_CREATED would be more clear but I think we can leave as is) . Therefore in general this is a triple [ location / person / action ] . Would be good to put this information into a readme or instruction somewhere.","url":"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578964110","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -7,3 +7,70 @@ command-settings:\n #  header:  \"Thank you for contributing to UbiquiBot! Please be sure to set your wallet address before completing your first bounty so that the automatic payout upon task completion will work for you.\"\r\n #  helpMenu: true\r\n #  footer:  \"###### Also please star this repository and [@ubiquity/devpool-directory](https://github.com/ubiquity/devpool-directory/) to show your support. It helps a lot!\"\r\n+\r\n+incentives:\r\n+  enabled: true\r\n+  contentEvaluator:\r\n+    enabled: true\r\n+  userExtractor:\r\n+    enabled: true\r\n+    redeemTask: true\r\n+  dataPurge:\r\n+    enabled: true\r\n+  formattingEvaluator:\r\n+    enabled: true\r\n+    scores:\r\n+      br: 0\r\n+      code: 1\r\n+      p: 1\r\n+      em: 0\r\n+      img: 0\r\n+      strong: 0\r\n+      blockquote: 0\r\n+      h1: 1\r\n+      h2: 1\r\n+      h3: 1\r\n+      h4: 1\r\n+      h5: 1\r\n+      h6: 1\r\n+      a: 1\r\n+      li: 1\r\n+      td: 1\r\n+      hr: 0\r\n+    multipliers:\r\n+      - type: [ ISSUE, ISSUER, SPECIFICATION ]\r","score":{"reward":2.214,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":75,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":44.97000000000003,"syllables":130,"sentences":5,"score":0.8497000000000002},"multiplier":0.25,"relevance":0.9}},{"id":1578968738,"content":"Why not 2.0.0 ?","url":"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578968738","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -1,6 +1,6 @@\n {\n   \"name\": \"@ubiquibot/configuration\",\n-  \"version\": \"1.1.0\",\n+  \"version\": \"2.0.1\",","score":{"reward":0.306,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":120.54333333333335,"syllables":5,"sentences":3,"score":1},"multiplier":0.25,"relevance":0.6}},{"id":1578971464,"content":"It would be good also to document what each of those configuration types mean, can be above the code.","url":"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578971464","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,9 @@\n+import { Static, Type } from \"@sinclair/typebox\";\n+\n+export const githubCommentConfigurationType = Type.Object({\n+  enabled: Type.Boolean({ default: true }),\n+  post: Type.Boolean({ default: true }),\n+  debug: Type.Boolean({ default: false }),","score":{"reward":1.104,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":67.32894736842107,"syllables":27,"sentences":1,"score":0.9267105263157893},"multiplier":0.25,"relevance":0.8}},{"id":2076497568,"content":"@gentlementlegen I noticed Jests tests are failing, please look into this as well https://github.com/ubiquibot/configuration/actions/runs/8826720734/job/24232850716?pr=9","url":"https://github.com/ubiquity-os/configuration-loader/pull/9#issuecomment-2076497568","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.938,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":59.632666666666694,"syllables":41,"sentences":3,"score":0.9963266666666669},"multiplier":0.25,"relevance":0.95}}],"reviewRewards":[{"reviews":[{"reviewId":2021670343,"effect":{"addition":225,"deletion":42},"reward":8.01,"priority":3},{"reviewId":2035409941,"effect":{"addition":142,"deletion":6},"reward":4.44,"priority":3}],"url":"https://github.com/ubiquity-os/configuration-loader/pull/9"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 18.567 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>12.45</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>6.117</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/configuration-loader/pull/9\" target=\"_blank\" rel=\"noopener\">#9</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+225 -42</td><td>3</td><td>8.01</td></tr><tr><td>+142 -6</td><td>3</td><td>4.44</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/9#pullrequestreview-2021670343\" target=\"_blank\" rel=\"noopener\">I left a few comments to add documentation but in general a good&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.5</td><td>3</td><td>0.555</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578964110\" target=\"_blank\" rel=\"noopener\">If I understand correctly, the syntax is: first value ISSUE / RE&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 75&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.214</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578968738\" target=\"_blank\" rel=\"noopener\">Why not 2.0.0 ?</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.306</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578971464\" target=\"_blank\" rel=\"noopener\">It would be good also to document what each of those configurati&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.104</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/9#issuecomment-2076497568\" target=\"_blank\" rel=\"noopener\">@gentlementlegen I noticed Jests tests are failing, please look &hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.95</td><td>3</td><td>1.938</td></tr></tbody></table></details>"},"0x4007":{"total":12.822,"userId":4975670,"comments":[{"id":1578824474,"content":"I'm still confused about this syntax. Can you explain what these are meant to express?","url":"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578824474","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,3 +7,70 @@ command-settings:\n #  header:  \"Thank you for contributing to UbiquiBot! Please be sure to set your wallet address before completing your first bounty so that the automatic payout upon task completion will work for you.\"\r\n #  helpMenu: true\r\n #  footer:  \"###### Also please star this repository and [@ubiquity/devpool-directory](https://github.com/ubiquity/devpool-directory/) to show your support. It helps a lot!\"\r\n+\r\n+incentives:\r\n+  enabled: true\r\n+  contentEvaluator:\r\n+    enabled: true\r\n+  userExtractor:\r\n+    enabled: true\r\n+    redeemTask: true\r\n+  dataPurge:\r\n+    enabled: true\r\n+  formattingEvaluator:\r\n+    enabled: true\r\n+    scores:\r\n+      br: 0\r\n+      code: 1\r\n+      p: 1\r\n+      em: 0\r\n+      img: 0\r\n+      strong: 0\r\n+      blockquote: 0\r\n+      h1: 1\r\n+      h2: 1\r\n+      h3: 1\r\n+      h4: 1\r\n+      h5: 1\r\n+      h6: 1\r\n+      a: 1\r\n+      li: 1\r\n+      td: 1\r\n+      hr: 0\r\n+    multipliers:\r\n+      - type: [ ISSUE, ISSUER, SPECIFICATION ]\r","score":{"reward":3.72,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":87.67750000000001,"syllables":21,"sentences":2,"score":0.7232249999999999},"multiplier":1,"relevance":0.8}},{"id":1578825245,"content":"What is redeem task?","url":"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578825245","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,8 @@\n+import { Static, Type } from \"@sinclair/typebox\";\n+\n+export const userExtractorConfigurationType = Type.Object({\n+  enabled: Type.Boolean({ default: true }),\n+  redeemTask: Type.Boolean({ default: true }),","score":{"reward":1.092,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2021458874,"effect":{"addition":225,"deletion":42},"reward":8.01,"priority":3}],"url":"https://github.com/ubiquity-os/configuration-loader/pull/9"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 12.822 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>8.01</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>4.812</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/configuration-loader/pull/9\" target=\"_blank\" rel=\"noopener\">#9</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+225 -42</td><td>3</td><td>8.01</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578824474\" target=\"_blank\" rel=\"noopener\">I'm still confused about this syntax. Can you explain what these&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.72</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/9#discussion_r1578825245\" target=\"_blank\" rel=\"noopener\">What is redeem task?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.092</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-logger_5.json","json":{"Keyrxng":{"userId":106303466,"total":54.095,"task":{"reward":50,"multiplier":1},"comments":[{"id":2367936787,"content":"Add some unit tests to the project\r\n##### time: < 1 hour\r\n_original context https://github.com/ubiquity/ubiquibot-logger/pull/4#issuecomment-2180461549_","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/5","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.82,"formatting":{"content":{"p":{"score":0,"elementCount":2},"h5":{"score":1,"elementCount":1},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":2},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":45.69727272727275,"syllables":39,"sentences":2,"score":0.8569727272727274},"multiplier":1,"relevance":1}},{"id":1933662900,"content":"Resolves #5\r\nRequires #4","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6","commentType":"PULL_SPECIFICATION","score":{"reward":0.275,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.5}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 54.095 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.82</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.275</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/5\" target=\"_blank\" rel=\"noopener\">Add some unit tests to the project##### time: &lt; 1 hour_or&hellip;</a></h6></td><td><details><summary>3.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    h5:&#13;      score: 1&#13;      elementCount: 1&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 2&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>1</td><td>1</td><td>3.82</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6\" target=\"_blank\" rel=\"noopener\">Resolves #5Requires #4</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.275</td></tr></tbody></table></details>"},"0x4007":{"total":16.616,"userId":4975670,"comments":[{"id":2136334510,"content":"Looks fine. You can merge if @gentlementlegen doesn't get around to this soon.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#pullrequestreview-2136334510","commentType":"PULL_COLLABORATOR","score":{"reward":1.136,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":84.9157142857143,"syllables":19,"sentences":2,"score":0.750842857142857},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2136334510,"effect":{"addition":676,"deletion":98},"reward":15.48,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 16.616 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>15.48</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>1.136</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6\" target=\"_blank\" rel=\"noopener\">#6</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+676 -98</td><td>2</td><td>15.48</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#pullrequestreview-2136334510\" target=\"_blank\" rel=\"noopener\">Looks fine. You can merge if @gentlementlegen doesn't get around&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.4</td><td>2</td><td>1.136</td></tr></tbody></table></details>"},"gentlementlegen":{"total":41.83,"userId":9807008,"comments":[{"id":1652853875,"content":"Has to be updated to avoid comment spam. Refer to https://github.com/ubiquity/ts-template/blob/development/.github/workflows/jest-testing.yml","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652853875","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":4.428,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":62.39208695652175,"syllables":38,"sentences":5,"score":0.9760791304347824},"multiplier":1,"relevance":0.9}},{"id":1652855550,"content":"See https://github.com/ubiquity/ts-template/blob/development/jest.config.json (also need to add the related package)","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652855550","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":4.086,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":63.9821710526316,"syllables":31,"sentences":4,"score":0.960178289473684},"multiplier":1,"relevance":0.9}},{"id":1652857149,"content":"Do we need the sha here?","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652857149","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -90,5 +95,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@1.22.22+sha1.ac34549e6aa8e7ead463a7407e1c7390f61a6610\"","score":{"reward":1.106,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1652857846,"content":"Remove comment probably","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652857846","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,225 @@\n+import { LOG_LEVEL } from \"./constants\";\n+import { PrettyLogs } from \"./pretty-logs\";\n+import { LogParams, LogReturn, Metadata, LogLevel } from \"./types/log-types\";\n+\n+export class Logs {\n+  private _maxLevel = -1;\n+  static console: PrettyLogs;\n+\n+  private _log({ level, consoleLog, logMessage, metadata, type }: LogParams): LogReturn | null {\n+    if (this._getNumericLevel(level) > this._maxLevel) return null; // filter out more verbose logs according to maxLevel set in config\n+\n+    // needs to generate three versions of the information.\n+    // they must all first serialize the error object if it exists\n+    // - the comment to post on supabase (must be raw)\n+    // - the comment to post on github (must include diff syntax)\n+    // - the comment to post on the console (must be colorized)\n+\n+    consoleLog(logMessage, metadata || undefined);\n+    return new LogReturn(\n+      {\n+        raw: logMessage,\n+        diff: this._diffColorCommentMessage(type, logMessage),\n+        type,\n+        level,\n+      },\n+      metadata\n+    );\n+  }\n+\n+  private _addDiagnosticInformation(metadata: Record<string, unknown> | string | number | null | undefined) {\n+    // this is a utility function to get the name of the function that called the log\n+    // I have mixed feelings on this because it manipulates metadata later possibly without the developer understanding why and where,\n+    // but seems useful for the metadata parser to understand where the comment originated from\n+\n+    if (!metadata) {\n+      metadata = {};\n+    }\n+    if (typeof metadata == \"string\" || typeof metadata == \"number\") {\n+      // TODO: think i need to support every data type\n+      metadata = { message: metadata };\n+    }\n+\n+    const stackLines = new Error().stack?.split(\"\\n\") || [];\n+    if (stackLines.length > 3) {\n+      const callerLine = stackLines[3]; // .replace(process.cwd(), \"\");","score":{"reward":0.64,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":6.390000000000015,"syllables":7,"sentences":1,"score":0.46390000000000015},"multiplier":1,"relevance":0.8}},{"id":1652858090,"content":"Can this TODO be solved beforehand?","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652858090","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,225 @@\n+import { LOG_LEVEL } from \"./constants\";\n+import { PrettyLogs } from \"./pretty-logs\";\n+import { LogParams, LogReturn, Metadata, LogLevel } from \"./types/log-types\";\n+\n+export class Logs {\n+  private _maxLevel = -1;\n+  static console: PrettyLogs;\n+\n+  private _log({ level, consoleLog, logMessage, metadata, type }: LogParams): LogReturn | null {\n+    if (this._getNumericLevel(level) > this._maxLevel) return null; // filter out more verbose logs according to maxLevel set in config\n+\n+    // needs to generate three versions of the information.\n+    // they must all first serialize the error object if it exists\n+    // - the comment to post on supabase (must be raw)\n+    // - the comment to post on github (must include diff syntax)\n+    // - the comment to post on the console (must be colorized)\n+\n+    consoleLog(logMessage, metadata || undefined);\n+    return new LogReturn(\n+      {\n+        raw: logMessage,\n+        diff: this._diffColorCommentMessage(type, logMessage),\n+        type,\n+        level,\n+      },\n+      metadata\n+    );\n+  }\n+\n+  private _addDiagnosticInformation(metadata: Record<string, unknown> | string | number | null | undefined) {\n+    // this is a utility function to get the name of the function that called the log\n+    // I have mixed feelings on this because it manipulates metadata later possibly without the developer understanding why and where,\n+    // but seems useful for the metadata parser to understand where the comment originated from\n+\n+    if (!metadata) {\n+      metadata = {};\n+    }\n+    if (typeof metadata == \"string\" || typeof metadata == \"number\") {\n+      // TODO: think i need to support every data type","score":{"reward":1.106,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":59.745000000000005,"syllables":10,"sentences":1,"score":0.9974500000000001},"multiplier":1,"relevance":0.7}},{"id":1652858456,"content":"Why all the comments?","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652858456","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,225 @@\n+import { LOG_LEVEL } from \"./constants\";\n+import { PrettyLogs } from \"./pretty-logs\";\n+import { LogParams, LogReturn, Metadata, LogLevel } from \"./types/log-types\";\n+\n+export class Logs {\n+  private _maxLevel = -1;\n+  static console: PrettyLogs;\n+\n+  private _log({ level, consoleLog, logMessage, metadata, type }: LogParams): LogReturn | null {\n+    if (this._getNumericLevel(level) > this._maxLevel) return null; // filter out more verbose logs according to maxLevel set in config\n+\n+    // needs to generate three versions of the information.\n+    // they must all first serialize the error object if it exists\n+    // - the comment to post on supabase (must be raw)\n+    // - the comment to post on github (must include diff syntax)\n+    // - the comment to post on the console (must be colorized)\n+\n+    consoleLog(logMessage, metadata || undefined);\n+    return new LogReturn(\n+      {\n+        raw: logMessage,\n+        diff: this._diffColorCommentMessage(type, logMessage),\n+        type,\n+        level,\n+      },\n+      metadata\n+    );\n+  }\n+\n+  private _addDiagnosticInformation(metadata: Record<string, unknown> | string | number | null | undefined) {\n+    // this is a utility function to get the name of the function that called the log\n+    // I have mixed feelings on this because it manipulates metadata later possibly without the developer understanding why and where,\n+    // but seems useful for the metadata parser to understand where the comment originated from\n+\n+    if (!metadata) {\n+      metadata = {};\n+    }\n+    if (typeof metadata == \"string\" || typeof metadata == \"number\") {\n+      // TODO: think i need to support every data type\n+      metadata = { message: metadata };\n+    }\n+\n+    const stackLines = new Error().stack?.split(\"\\n\") || [];\n+    if (stackLines.length > 3) {\n+      const callerLine = stackLines[3]; // .replace(process.cwd(), \"\");\n+      const match = callerLine.match(/at (\\S+)/);\n+      if (match) {\n+        metadata.caller = match[1];\n+      }\n+    }\n+\n+    return metadata;\n+  }\n+\n+  public ok(log: string, metadata?: Metadata): LogReturn | null {\n+    metadata = this._addDiagnosticInformation(metadata);\n+    return this._log({\n+      level: LOG_LEVEL.INFO,\n+      consoleLog: Logs.console.ok,\n+      logMessage: log,\n+      metadata,\n+      type: \"ok\",\n+    });\n+  }\n+\n+  public info(log: string, metadata?: Metadata): LogReturn | null {\n+    metadata = this._addDiagnosticInformation(metadata);\n+    return this._log({\n+      level: LOG_LEVEL.INFO,\n+      consoleLog: Logs.console.info,\n+      logMessage: log,\n+      metadata,\n+      type: \"info\",\n+    });\n+  }\n+\n+  public error(log: string, metadata?: Metadata): LogReturn | null {\n+    metadata = this._addDiagnosticInformation(metadata);\n+    return this._log({\n+      level: LOG_LEVEL.ERROR,\n+      consoleLog: Logs.console.error,\n+      logMessage: log,\n+      metadata,\n+      type: \"error\",\n+    });\n+  }\n+\n+  public debug(log: string, metadata?: Metadata): LogReturn | null {\n+    metadata = this._addDiagnosticInformation(metadata);\n+    return this._log({\n+      level: LOG_LEVEL.DEBUG,\n+      consoleLog: Logs.console.debug,\n+      logMessage: log,\n+      metadata,\n+      type: \"debug\",\n+    });\n+  }\n+\n+  public fatal(log: string, metadata?: Metadata): LogReturn | null {\n+    if (!metadata) {\n+      metadata = Logs.convertErrorsIntoObjects(new Error(log)) as Metadata;\n+      const stack = metadata.stack as string[];\n+      stack.splice(1, 1);\n+      metadata.stack = stack;\n+    }\n+\n+    if (metadata instanceof Error) {\n+      metadata = Logs.convertErrorsIntoObjects(metadata) as Metadata;\n+      const stack = metadata.stack as string[];\n+      stack.splice(1, 1);\n+      metadata.stack = stack;\n+    }\n+\n+    metadata = this._addDiagnosticInformation(metadata);\n+    return this._log({\n+      level: LOG_LEVEL.FATAL,\n+      consoleLog: Logs.console.fatal,\n+      logMessage: log,\n+      metadata,\n+      type: \"fatal\",\n+    });\n+  }\n+\n+  public verbose(log: string, metadata?: Metadata): LogReturn | null {\n+    metadata = this._addDiagnosticInformation(metadata);\n+    return this._log({\n+      level: LOG_LEVEL.VERBOSE,\n+      consoleLog: Logs.console.verbose,\n+      logMessage: log,\n+      metadata,\n+      type: \"verbose\",\n+    });\n+  }\n+\n+  constructor(logLevel: LogLevel) {\n+    this._maxLevel = this._getNumericLevel(logLevel);\n+    Logs.console = new PrettyLogs();\n+  }\n+\n+  static _commentMetaData(metadata: Metadata, level: LogLevel) {\n+    Logs.console.debug(\"the main place that metadata is being serialized as an html comment\");\n+    const prettySerialized = JSON.stringify(metadata, null, 2);\n+    // first check if metadata is an error, then post it as a json comment\n+    // otherwise post it as an html comment\n+    if (level === LOG_LEVEL.FATAL) {\n+      return [\"```json\", prettySerialized, \"```\"].join(\"\\n\");\n+    } else {\n+      return [\"<!--\", prettySerialized, \"-->\"].join(\"\\n\");\n+    }\n+  }\n+\n+  private _diffColorCommentMessage(type: string, message: string) {\n+    const diffPrefix = {\n+      fatal: \"-\", // - text in red\n+      ok: \"+\", // + text in green\n+      error: \"!\", // ! text in orange\n+      // info: \"#\", // # text in gray","score":{"reward":0.624,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.6}},{"id":1652859765,"content":"Why is this required? Also this file doesn't seem to be properly formatted.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652859765","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,33 @@\n+// eslint-disable-next-line no-control-regex","score":{"reward":2.016,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":78.87285714285717,"syllables":20,"sentences":2,"score":0.8112714285714283},"multiplier":1,"relevance":0.7}},{"id":1654470570,"content":"I am not sure about the proper course to chose as we do not use yarn 4 extensively in our repositories. As long as it works and that it is supported I am fine with it, but I think it shall work with only `yarn@1.22.22`","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1654470570","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -90,5 +95,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@1.22.22+sha1.ac34549e6aa8e7ead463a7407e1c7390f61a6610\"","score":{"reward":4.544,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":76.83227272727274,"syllables":56,"sentences":2,"score":0.8316772727272727},"multiplier":1,"relevance":0.8}},{"id":1654977665,"content":"I was referring to the eslint rule disable? Does this regex cause any issue?","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1654977665","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,33 @@\n+// eslint-disable-next-line no-control-regex","score":{"reward":1.776,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":66.7871428571429,"syllables":22,"sentences":2,"score":0.9321285714285711},"multiplier":1,"relevance":0.6}},{"id":1654994890,"content":"This package has been deprecated, if you can please update it to `googleapis`","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1654994890","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,26 @@\n+name: release-please\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+    branches:\n+      - main\n+\n+permissions:\n+  contents: write\n+  pull-requests: write\n+\n+jobs:\n+  release-please:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: google-github-actions/release-please-action@v3","score":{"reward":2.304,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":81.85500000000002,"syllables":16,"sentences":1,"score":0.7814499999999999},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2138728657,"effect":{"addition":676,"deletion":98},"reward":15.48,"priority":2},{"reviewId":2142052462,"effect":{"addition":87,"deletion":96},"reward":3.66,"priority":2},{"reviewId":2142342232,"effect":{"addition":2,"deletion":1},"reward":0.06,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 41.83 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>19.2</td></tr><tr><td>Review</td><td>Comment</td><td>10</td><td>22.63</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6\" target=\"_blank\" rel=\"noopener\">#6</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+676 -98</td><td>2</td><td>15.48</td></tr><tr><td>+87 -96</td><td>2</td><td>3.66</td></tr><tr><td>+2 -1</td><td>2</td><td>0.06</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652853875\" target=\"_blank\" rel=\"noopener\">Has to be updated to avoid comment spam. Refer to https://github&hellip;</a></h6></td><td><details><summary>1.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.9</td><td>2</td><td>4.428</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652855550\" target=\"_blank\" rel=\"noopener\">See https://github.com/ubiquity/ts-template/blob/development/jes&hellip;</a></h6></td><td><details><summary>1.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.9</td><td>2</td><td>4.086</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652857149\" target=\"_blank\" rel=\"noopener\">Do we need the sha here?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.106</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652857846\" target=\"_blank\" rel=\"noopener\">Remove comment probably</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.8</td><td>2</td><td>0.64</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652858090\" target=\"_blank\" rel=\"noopener\">Can this TODO be solved beforehand?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.106</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652858456\" target=\"_blank\" rel=\"noopener\">Why all the comments?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.6</td><td>2</td><td>0.624</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1652859765\" target=\"_blank\" rel=\"noopener\">Why is this required? Also this file doesn't seem to be properly&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.016</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1654470570\" target=\"_blank\" rel=\"noopener\">I am not sure about the proper course to chose as we do not use &hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 44&#13;  wordValue: 0.1&#13;  result: 2.27&#13;</pre></details></td><td>0.8</td><td>2</td><td>4.544</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1654977665\" target=\"_blank\" rel=\"noopener\">I was referring to the eslint rule disable? Does this regex caus&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.776</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/6#discussion_r1654994890\" target=\"_blank\" rel=\"noopener\">This package has been deprecated, if you can please update it to&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.9</td><td>2</td><td>2.304</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_85.json","json":{"gentlementlegen":{"userId":9807008,"total":28.19,"task":{"reward":25,"multiplier":1},"comments":[{"id":2465020588,"content":"A few updates should be carried out post deployment of the new version of the bot:\r\n- [x] the worker should be deployed on `Ubiquity DAO workers` Cloudflare account\r\n- [x] the worker should be renamed `ubiquibot-kernel`\r\n- [x] the webhook url of the app should be updated accordingly","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/85","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.19,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":1,"words":{"wordCount":42,"wordValue":0.1,"result":2.23},"readability":{"fleschKincaid":47.37642857142859,"syllables":58,"sentences":1,"score":0.8737642857142859},"multiplier":1,"relevance":1}}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 28.19 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.19</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/85\" target=\"_blank\" rel=\"noopener\">A few updates should be carried out post deployment of the new v&hellip;</a></h6></td><td><details><summary>2.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 42&#13;  wordValue: 0.1&#13;  result: 2.23&#13;</pre></details></td><td>1</td><td>1</td><td>3.19</td></tr></tbody></table></details>"},"0x4007":{"total":4.942,"userId":4975670,"comments":[{"id":2288079233,"content":"Doesn't it already have it? If you updated the repository secret with your version, then we can simply delete. It should default to the Ubiquity DAO Workers credentials since all of our other projects are using it. \r\n<img width=\"876\" alt=\"Screenshot 2024-08-14 at 16 50 32\" src=\"https://github.com/user-attachments/assets/97dd4db1-172b-485f-8c7e-6ff8ea65a0db\">","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/85#issuecomment-2288079233","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.87,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":71.4425483870968,"syllables":90,"sentences":5,"score":0.8855745161290319},"multiplier":1,"relevance":0.9}},{"id":2288208554,"content":"I guess we should eventually update to ubiquityos-kernel.ubq.workers.dev","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/85#issuecomment-2288208554","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.072,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":55.74000000000004,"syllables":21,"sentences":4,"score":0.9574000000000004},"multiplier":1,"relevance":0.8}}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 4.942 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>4.942</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/85#issuecomment-2288079233\" target=\"_blank\" rel=\"noopener\">Doesn't it already have it? If you updated the repository secret&hellip;</a></h6></td><td><details><summary>3.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0.1&#13;  result: 2.4&#13;</pre></details></td><td>0.9</td><td>1</td><td>3.87</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/85#issuecomment-2288208554\" target=\"_blank\" rel=\"noopener\">I guess we should eventually update to ubiquityos-kernel.ubq.wor&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.072</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-template_18.json","json":{"gentlementlegen":{"userId":9807008,"total":29.06,"task":{"reward":25,"multiplier":1},"comments":[{"id":2492613991,"content":"Good point, I didn't think of this scenario. I guess we should always base it on the top level `name` to generate the `base_name`. To be sure it's the top level I guess I should read the `.toml` and store the values in an object, which complexifies this script quite a lot. Mind if I take care of it in another pull-request? I think this is quite helpful to get in first for the dev experience and we did not encounter this scenario yet.\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquibot/plugin-template/pull/16#discussion_r1734973213_\r\nThe `name` is an overridable key within the `wrangler.toml` configuration, meaning the key can be set in different places in the file, for different environments. We rely on that value to set the generated worker name. Currently it is extracted through a `sed` command which becomes unreliable if multiple `name` are present within the file. We should probably extract the whole `toml` content and parse the keys, to only extract the top level value.","url":"https://github.com/ubiquity-os/plugin-template/issues/18","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.06,"formatting":{"content":{"p":{"score":0,"elementCount":3},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":158,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":63.23779341317366,"syllables":250,"sentences":10,"score":0.9676220658682634},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 29.06 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.06</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/18\" target=\"_blank\" rel=\"noopener\">Good point, I didn't think of this scenario. I guess we should a&hellip;</a></h6></td><td><details><summary>3.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 158&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>1</td><td>1</td><td>4.06</td></tr></tbody></table></details>"},"0x4007":{"total":1.15,"userId":4975670,"comments":[{"id":2370873647,"content":"I actually don't understand the problem deeply but the changes seem fine from what I understand.","url":"https://github.com/ubiquity-os/plugin-template/pull/22#issuecomment-2370873647","commentType":"PULL_COLLABORATOR","score":{"reward":0.34,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":65.16823529411766,"syllables":25,"sentences":1,"score":0.9483176470588234},"multiplier":1,"relevance":0.2}},{"id":2372759476,"content":"Is this related https://github.com/ubiquity/pay.ubq.fi/issues/316\nOtherwise if you know the problem can you overtake that task?","url":"https://github.com/ubiquity-os/plugin-template/pull/22#issuecomment-2372759476","commentType":"PULL_COLLABORATOR","score":{"reward":0.81,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":75.93788043478263,"syllables":34,"sentences":4,"score":0.8406211956521737},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/22"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.15 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>2</td><td>1.15</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/22#issuecomment-2370873647\" target=\"_blank\" rel=\"noopener\">I actually don't understand the problem deeply but the changes s&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.34</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/22#issuecomment-2372759476\" target=\"_blank\" rel=\"noopener\">Is this related https://github.com/ubiquity/pay.ubq.fi/issues/31&hellip;</a></h6></td><td><details><summary>2.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.81</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-plugin-installer_4.json","json":{"Keyrxng":{"userId":106303466,"total":150.534,"task":{"reward":150,"multiplier":1},"comments":[{"id":2463326613,"content":"Calm down fella","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2463326613","commentType":"ISSUE_ASSIGNEE","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":0.25,"relevance":0}},{"id":2466768546,"content":"@kingsley-einstein the only unresolved priced task in this repo is https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/7 and it's likely not required due to my three open PRs solving the three other tasks. Sorry bud.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2466768546","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.279,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":58.84138211382114,"syllables":65,"sentences":3,"score":0.9884138211382114},"multiplier":0.25,"relevance":0.1}},{"id":2466769124,"content":"Where do you look to find your tasks to start?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2466769124","commentType":"ISSUE_ASSIGNEE","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":112.08500000000001,"syllables":10,"sentences":1,"score":1},"multiplier":0.25,"relevance":0}},{"id":2466772247,"content":"I see.\r\nThe disqualification timer has been decreased which means you get kicked sooner for there being no activity which means unless reviews happen quickly and often there may be tasks with PRs that resolve the issue but are currently unassigned.\r\ntake a look for any linked PR and check for activity on it before assigning and if in doubt just tag myself or someone else from the team and we'll clear it up.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2466772247","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.255,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":75,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":63.020000000000024,"syllables":105,"sentences":3,"score":0.9697999999999998},"multiplier":0.25,"relevance":0.1}}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 150.534 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>0.534</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2463326613\" target=\"_blank\" rel=\"noopener\">Calm down fella</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2466768546\" target=\"_blank\" rel=\"noopener\">@kingsley-einstein the only unresolved priced task in this repo &hellip;</a></h6></td><td><details><summary>2.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.279</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2466769124\" target=\"_blank\" rel=\"noopener\">Where do you look to find your tasks to start?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2466772247\" target=\"_blank\" rel=\"noopener\">I see.The disqualification timer has been decreased which mean&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 75&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.255</td></tr></tbody></table></details>"},"0x4007":{"total":4.423,"userId":4975670,"comments":[{"id":2409140290,"content":"@gentlementlegen rfc","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2409140290","commentType":"ISSUE_AUTHOR","score":{"reward":0.225,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-48.994999999999976,"syllables":6,"sentences":1,"score":0},"multiplier":1,"relevance":0.3}},{"id":2417907051,"content":"Sure you can start \r\n@gentlementlegen rfc","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2417907051","commentType":"ISSUE_AUTHOR","score":{"reward":0.948,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":59.745000000000005,"syllables":10,"sentences":1,"score":0.9974500000000001},"multiplier":1,"relevance":0.4}},{"id":2527172662,"content":"This needs some thought, but the idea is that when we navigate to any plugin's root URL, it should redirect us to this installer (maybe installer.os.ubq.fi?)\r\nOr an iFrame could make it look nicer potentially (no redirection.)\r\nWe can pass in the query parameter where we are coming from and then the UI can import the manifest.json (or we can pass it in directly, whatever makes more sense.)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.25,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":1,"words":{"wordCount":73,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":78.20600171232877,"syllables":103,"sentences":8,"score":0.8179399828767123},"multiplier":1,"relevance":1}}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 4.423 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.25</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>1.173</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4\" target=\"_blank\" rel=\"noopener\">This needs some thought, but the idea is that when we navigate t&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 73&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>1</td><td>1</td><td>3.25</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2409140290\" target=\"_blank\" rel=\"noopener\">@gentlementlegen rfc</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.225</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/4#issuecomment-2417907051\" target=\"_blank\" rel=\"noopener\">Sure you can start @gentlementlegen rfc</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.948</td></tr></tbody></table></details>"},"seriybeliy11":{"total":0,"userId":129196368},"kingsley-einstein":{"total":0,"userId":35224620}}},{"name":"results/ubiquity-os_plugins-wishlist_20.json","json":{"gentlementlegen":{"userId":9807008,"total":1203.84,"task":{"reward":1200,"multiplier":1},"comments":[{"id":2202629640,"content":"I would suggest a few changes:\r\nThe configuration can be made like\r\n1. Collaborator Minimum Approvals Required: 0\r\n2. Contributor Minimum Approvals Required: 1\r\n3. Collaborator Merge Timeout: \"3.5 days\"\r\n4. Contributor Merge Timeout: \"7 days\"\r\nAnd this plugin should not need to be able to generate permits since that would be occurring within `conversation-rewards` on PR merging.\r\nA condition that should be there before merge is that all Checks should be green as well, and of course no conflicts.\r\n---\r\nRelated repo: https://github.com/ubiquibot/automated-merging","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2202629640","commentType":"ISSUE_ASSIGNEE","score":{"reward":3.84,"formatting":{"content":{"p":{"score":0,"elementCount":9},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1.4},"priority":3,"words":{"wordCount":78,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":49.79014285714288,"syllables":139,"sentences":5,"score":0.8979014285714289},"multiplier":0.25,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1203.84 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>1200</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>3.84</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2202629640\" target=\"_blank\" rel=\"noopener\">I would suggest a few changes:The configuration can be made li&hellip;</a></h6></td><td><details><summary>4.03</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 9&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.4&#13;regex:&#13;  wordCount: 78&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>3</td><td>3.84</td></tr></tbody></table></details>"},"0x4007":{"total":70.444,"userId":4975670,"comments":[{"id":2172972239,"content":"I assume it'll take a week in total including to also write unit tests etc.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2172972239","commentType":"ISSUE_AUTHOR","score":{"reward":1.92,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":74.27000000000001,"syllables":22,"sentences":1,"score":0.8573},"multiplier":1,"relevance":0.4}},{"id":2255977977,"content":"@gentlementlegen my formatting score isn't fully using the decimal library. Look at the tiny fraction leftover.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2255977977","commentType":"ISSUE_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":33.98397058823531,"syllables":33,"sentences":2,"score":0.739839705882353},"multiplier":1,"relevance":0}},{"id":2255998264,"content":"I think it's useful to roll up the problems into tasks roughly weekly or whenever somebody starts on them. \nImportant to update specification and time estimate in every batch.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2255998264","commentType":"ISSUE_AUTHOR","score":{"reward":1.416,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":44.97000000000003,"syllables":52,"sentences":2,"score":0.8497000000000002},"multiplier":1,"relevance":0.2}},{"id":2256106872,"content":"The developer working on the sprint will be able to determine if they are related but I suppose we generally offer credit either way for multiple tasks (we assume/credit for they are always not redundant by default) if the specification author doesn't know from the start.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2256106872","commentType":"ISSUE_AUTHOR","score":{"reward":0.84,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":24.16500000000002,"syllables":76,"sentences":1,"score":0.6416500000000002},"multiplier":1,"relevance":0.1}},{"id":2334999207,"content":"### Overview\r\n- We need to maintain a bias of always moving forward in Ubiquity. \r\n- This plugin can be considered dangerous if not configured properly, but the general idea is that if reviewers forget about a pull, it should automatically be merged in after a timeout period.\r\n- The clock is based on the last timeline activity event on that particular pull request. \r\n- This must be eligible to generate payment permits. \r\n### Default configs:\r\n1. Collaborator Minimum Approvals Required: 0\r\n2. Contributor Minimum Approvals Required: 1\r\n3. Collaborator Merge Timeout (Days): \"3.5 days\"\r\n4. Contributor Merge Timeout (Days): \"7 days\"\r\n### Remarks\r\n- Worst case scenario, the pull can be reverted. If a pull is detected to be reverted, perhaps a stretch goal of this plugin would be to disable automatic merges again for pulls associated to the same task. \r\n- This would be a wildcard event plugin. \r\n- A condition that should be there before merge is that all Checks should be green as well, and of course no conflicts.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/20","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.9,"formatting":{"content":{"h3":{"score":1,"elementCount":3},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":11},"p":{"score":0,"elementCount":11},"ol":{"score":0,"elementCount":1}},"result":4.1},"priority":1,"words":{"wordCount":160,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":49.20055555555558,"syllables":264,"sentences":9,"score":0.8920055555555558},"multiplier":1,"relevance":1}},{"id":1677465851,"content":"```suggestion\r\n  with:\r\n    approvalsRequired:\r\n        collaborator: 1\r\n        contributor: 2\r\n    mergeTimeout:\r\n        collaborator: \"3.5 days\"\r\n        contributor: \"7 days\"\r\n```\r\nThis seems more clear to me. Thoughts?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1677465851","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,24 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquibot/automated-merging`\n \n-## Prerequisites\n+Automatically merge pull-requests based on the reviewer count, the time elapsed since the last activity, depending \n+on the association of the pull-request author.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n-\n-## Getting Started\n-\n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n-\n-## Creating a new plugin\n-\n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n-\n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n-\n-- Your plugin config should look similar to this:\n+## Configuration example\n \n ```yml\n-- plugin: <plugin-org/owner>/<plugin-repo-name>:compute.yml@development\n-  name: plugin-name\n-  id: plugin-name-command\n-  description: \"Plugin description\" # small description of what the plugin does\n-  command: \"<regex for command>\" # if you are creating a plugin with a slash command\n-  example: \"<example usage>\" # how to invoke the slash command\n-  with: # these are the example settings, the kernel passes these to the plugin.\n-    disabledCommands: []\n-    timers:\n-      reviewDelayTolerance: 86000\n-      taskStaleTimeoutDuration: 2580000\n-    miscellaneous:\n-      maxConcurrentTasks: 3\n-    labels:\n-      time: []\n-      priority: []\n+- plugin: ubiquibot/automated-merging\n+  name: automated-merging\n+  id: automated-merging\n+  description: \"Automatically merge pull-requests\"\n+  with:\n+    collaboratorMinimumApprovalsRequired: 1\n+    contributorMinimumApprovalsRequired: 2\n+    collaboratorMergeTimeout: \"3.5 days\"\n+    contributorMergeTimeout: \"7 days\"","score":{"reward":2.43,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":118.6825,"syllables":7,"sentences":2,"score":1},"multiplier":1,"relevance":0.9}},{"id":1678523910,"content":"Defaults should be clearly documented in the readme so that there are no nasty surprises for future partners! I think just add this and you have my approval.\r\nYou also seemingly have an unused export. Check the [knip comment](https://github.com/ubiquibot/automated-merging/pull/1#issuecomment-2203528079).","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1678523910","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -11,28 +11,43 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n   ref: string;\n }\n \n+export const approvalsRequiredSchema = T.Object(\n+  {\n+    /**\n+     * The amount of validations needed to consider a pull-request by a collaborator to be deemed eligible for merge\n+     */\n+    collaborator: T.Number({ default: 1, minimum: 1 }),","score":{"reward":9.432,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":77.63105769230769,"syllables":55,"sentences":4,"score":0.823689423076923},"multiplier":1,"relevance":0.8}},{"id":1680328165,"content":"Watching labeling pulls seems unusual since we never do. We do however, label issues regularly.","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1680328165","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,5 @@\n {\n   \"name\": \"Automated merging\",\n   \"description\": \"Automatically merge pull-requests.\",\n-  \"ubiquity:listeners\": [ \"push\" ]\n+  \"ubiquity:listeners\": [ \"push\", \"pull_request.labeled\", \"pull_request.unlabeled\" ]","score":{"reward":3.171,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":41.30250000000001,"syllables":28,"sentences":2,"score":0.8130250000000001},"multiplier":1,"relevance":0.7}},{"id":1694052005,"content":"How is this used in the kernel side? If it's looking for this string then seems redundant to add ubiquibot \nmaybe something like \"kernel_return\"","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1694052005","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,60 @@\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { Value } from \"@sinclair/typebox/value\";\n+import { plugin } from \"./plugin\";\n+import { envSchema, envValidator, PluginInputs, pluginSettingsSchema, pluginSettingsValidator } from \"./types\";\n+\n+/**\n+ * How a GitHub action executes the plugin.\n+ */\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  payload.env = { ...(payload.env || {}), workflowName: github.context.workflow };\n+  if (!envValidator.test(payload.env)) {\n+    const errors: string[] = [];\n+    for (const error of envValidator.errors(payload.env)) {\n+      console.error(error);\n+      errors.push(`${error.path}: ${error.message}`);\n+    }\n+    throw new Error(`Invalid environment provided:\\n${errors.join(\";\\n\")}`);\n+  }\n+  const env = Value.Decode(envSchema, payload.env || {});\n+\n+  payload.settings = Value.Default(pluginSettingsSchema, JSON.parse(payload.settings));\n+  if (!pluginSettingsValidator.test(payload.settings)) {\n+    const errors: string[] = [];\n+    for (const error of pluginSettingsValidator.errors(payload.settings)) {\n+      console.error(error);\n+      errors.push(`${error.path}: ${error.message}`);\n+    }\n+    throw new Error(`Invalid settings provided:\\n${errors.join(\";\\n\")}`);\n+  }\n+\n+  const settings = Value.Decode(pluginSettingsSchema, payload.settings);\n+  const inputs: PluginInputs = {\n+    stateId: payload.stateId,\n+    eventName: payload.eventName,\n+    eventPayload: JSON.parse(payload.eventPayload),\n+    settings,\n+    authToken: payload.authToken,\n+    ref: payload.ref,\n+  };\n+\n+  await plugin(inputs, env);\n+\n+  return returnDataToKernel(process.env.GITHUB_TOKEN, inputs.stateId, {});\n+}\n+\n+async function returnDataToKernel(repoToken: string, stateId: string, output: object) {\n+  const octokit = new Octokit({ auth: repoToken });\n+  return octokit.repos.createDispatchEvent({\n+    owner: github.context.repo.owner,\n+    repo: github.context.repo.repo,\n+    event_type: \"return_data_to_ubiquibot_kernel\",","score":{"reward":3.888,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":68.93950000000002,"syllables":37,"sentences":2,"score":0.9106049999999998},"multiplier":1,"relevance":0.6}},{"id":1694052081,"content":"What's the database used for","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1694052081","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,17 +1,11 @@\n-import { SupabaseClient } from \"@supabase/supabase-js\";\n-import { Context } from \"../types/context\";\n-import { Access } from \"./supabase/helpers/access\";\n-import { User } from \"./supabase/helpers/user\";\n-import { Label } from \"./supabase/helpers/label\";\n-import { Super } from \"./supabase/helpers/supabase\";\n+import { DataSource } from \"typeorm\";\n+import { Context } from \"../types\";\n+import { PullRequestAdapter } from \"./sqlite/helpers/pull-request-adapter\";\n \n-export function createAdapters(supabaseClient: SupabaseClient, context: Context) {\n+export function createAdapters(sqlClient: DataSource, context: Context) {\n   return {\n-    supabase: {\n-      access: new Access(supabaseClient, context),\n-      user: new User(supabaseClient, context),\n-      label: new Label(supabaseClient, context),\n-      super: new Super(supabaseClient, context),\n+    sqlite: {","score":{"reward":0.888,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.4}},{"id":1694052198,"content":"```suggestion\n  \"description\": \"Conditionally merge pull requests after a timeout.\",\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1694052198","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,10 +1,10 @@\n {\n-  \"name\": \"plugin-template\",\n+  \"name\": \"@ubiquibot/automated-merging\",\n   \"version\": \"1.0.0\",\n-  \"description\": \"Ubiquibot plugin template repository with TypeScript support.\",\n+  \"description\": \"Automatically merge pull-requests.\",","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":2254328725,"content":"As long as you tested it works I think just merge and we can test it out in production.","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2254328725","commentType":"PULL_COLLABORATOR","score":{"reward":1.539,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":94.04473684210527,"syllables":21,"sentences":1,"score":0.6595526315789474},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2177116578,"effect":{"addition":862,"deletion":221},"reward":32.49,"priority":3},{"reviewId":2178874592,"effect":{"addition":59,"deletion":32},"reward":2.73,"priority":3},{"reviewId":2181760328,"effect":{"addition":27,"deletion":18},"reward":1.35,"priority":3},{"reviewId":2203259137,"effect":{"addition":13,"deletion":2},"reward":0.45,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 70.444 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>37.02</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.9</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>4.176</td></tr><tr><td>Review</td><td>Comment</td><td>7</td><td>21.348</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+862 -221</td><td>3</td><td>32.49</td></tr><tr><td>+59 -32</td><td>3</td><td>2.73</td></tr><tr><td>+27 -18</td><td>3</td><td>1.35</td></tr><tr><td>+13 -2</td><td>3</td><td>0.45</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/20\" target=\"_blank\" rel=\"noopener\">### Overview- We need to maintain a bias of always moving forw&hellip;</a></h6></td><td><details><summary>6.23</summary><pre>content:&#13;  content:&#13;    h3:&#13;      score: 1&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 11&#13;    p:&#13;      score: 0&#13;      elementCount: 11&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 4.1&#13;regex:&#13;  wordCount: 160&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>1</td><td>1</td><td>7.9</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2172972239\" target=\"_blank\" rel=\"noopener\">I assume it'll take a week in total including to also write unit&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.92</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2255977977\" target=\"_blank\" rel=\"noopener\">@gentlementlegen my formatting score isn't fully using the decim&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2255998264\" target=\"_blank\" rel=\"noopener\">I think it's useful to roll up the problems into tasks roughly w&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.416</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2256106872\" target=\"_blank\" rel=\"noopener\">The developer working on the sprint will be able to determine if&hellip;</a></h6></td><td><details><summary>2.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 48&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1677465851\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionwith:approvalsRequired:&hellip;</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.43</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1678523910\" target=\"_blank\" rel=\"noopener\">Defaults should be clearly documented in the readme so that ther&hellip;</a></h6></td><td><details><summary>3.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.8</td><td>3</td><td>9.432</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1680328165\" target=\"_blank\" rel=\"noopener\">Watching labeling pulls seems unusual since we never do. We do h&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.171</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1694052005\" target=\"_blank\" rel=\"noopener\">How is this used in the kernel side? If it's looking for this st&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.888</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1694052081\" target=\"_blank\" rel=\"noopener\">What's the database used for</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.888</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1694052198\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"description\": \"Conditionally merge &hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2254328725\" target=\"_blank\" rel=\"noopener\">As long as you tested it works I think just merge and we can tes&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.539</td></tr></tbody></table></details>"},"rndquu":{"total":151.347,"userId":119500907,"comments":[{"id":2205832478,"content":"This plugin is dangerous no matter how we configure it\r\nWe need a dedicated QA engineer\r\nWe mustn't allow auto merges of unreviewed and unQAed PRs","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2205832478","commentType":"ISSUE_COLLABORATOR","score":{"reward":6.075,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":47.83000000000001,"syllables":42,"sentences":1,"score":0.8783000000000001},"multiplier":1,"relevance":0.9}},{"id":2206352808,"content":"This \"automerge plugin\" is implied to solve an issue of long reviews but it does so by removing reviews at all thus reducing security and code quality levels. \r\nLong reviews should be solved either by a dedicated QA engineer either by PR comment incentives for outside collaborators.\r\nAny unreviewed PR is basically a none 0 risk of exfiltrating any critical ubiquity organization secret (`X25519_PRIVATE_KEY`, `UBIQUIBOT_APP_PRIVATE_KEY`, `NPM_TOKEN`, etc...).","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2206352808","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.532,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":64,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":39.901250000000005,"syllables":114,"sentences":4,"score":0.7990125},"multiplier":1,"relevance":0.9}},{"id":2206605405,"content":"Sounds good","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2206605405","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.297,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":120.20500000000001,"syllables":2,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":1670174019,"content":"@gentlementlegen Does the kernel wait for all plugins to be executed in a chain or call them one by one (in the async way) receiving results in a webhook?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1670174019","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,101 @@\n+import { retryAsync } from \"ts-retry\";\n+import { Context } from \"../types\";\n+\n+export function parseGitHubUrl(url: string) {\n+  const path = new URL(url).pathname.split(\"/\");\n+  if (path.length !== 5) {\n+    throw new Error(`[parseGitHubUrl] Invalid url: [${url}]`);\n+  }\n+  return {\n+    owner: path[1],\n+    repo: path[2],\n+    issue_number: Number(path[4]),\n+  };\n+}\n+\n+export type IssueParams = ReturnType<typeof parseGitHubUrl>;\n+\n+/**\n+ * Gets the merge timeout depending on the status of the assignee. If there are multiple assignees with different\n+ * statuses, the longest timeout is chosen.\n+ */\n+export async function getMergeTimeoutAndApprovalRequiredCount(context: Context, authorAssociation: string) {\n+  const timeoutCollaborator = {\n+    mergeTimeout: context.config.collaboratorMergeTimeout,\n+    requiredApprovalCount: context.config.collaboratorMinimumApprovalsRequired,\n+  };\n+  const timeoutContributor = {\n+    mergeTimeout: context.config.contributorMergeTimeout,\n+    requiredApprovalCount: context.config.contributorMinimumApprovalsRequired,\n+  };\n+  return authorAssociation === \"COLLABORATOR\" || authorAssociation === \"MEMBER\" ? timeoutCollaborator : timeoutContributor;\n+}\n+\n+export async function getApprovalCount({ octokit, logger }: Context, { owner, repo, issue_number: pullNumber }: IssueParams) {\n+  try {\n+    const { data: reviews } = await octokit.pulls.listReviews({\n+      owner,\n+      repo,\n+      pull_number: pullNumber,\n+    });\n+    return reviews.filter((review) => review.state === \"APPROVED\").length;\n+  } catch (e) {\n+    logger.error(`Error fetching reviews' approvals: ${e}`);\n+    return 0;\n+  }\n+}\n+\n+export async function isCiGreen({ octokit, logger, env }: Context, sha: string, { owner, repo }: IssueParams) {\n+  try {\n+    const ref = sha;\n+\n+    const { data: checkSuites } = await octokit.checks.listSuitesForRef({\n+      owner,\n+      repo,\n+      ref,\n+    });\n+    return retryAsync(","score":{"reward":3.57,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":54.87586206896553,"syllables":42,"sentences":1,"score":0.9487586206896553},"multiplier":1,"relevance":0.5}},{"id":1670196518,"content":"@gentlementlegen \r\nFrom https://michaelheap.com/github-actions-check-permission/:\r\n\"if the actor is a member of the organization that owns the repository their `author_association` will be `MEMBER`\"\r\nShouldn't we also check for the `MEMBER` role here?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1670196518","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,101 @@\n+import { retryAsync } from \"ts-retry\";\n+import { Context } from \"../types\";\n+\n+export function parseGitHubUrl(url: string) {\n+  const path = new URL(url).pathname.split(\"/\");\n+  if (path.length !== 5) {\n+    throw new Error(`[parseGitHubUrl] Invalid url: [${url}]`);\n+  }\n+  return {\n+    owner: path[1],\n+    repo: path[2],\n+    issue_number: Number(path[4]),\n+  };\n+}\n+\n+export type IssueParams = ReturnType<typeof parseGitHubUrl>;\n+\n+/**\n+ * Gets the merge timeout depending on the status of the assignee. If there are multiple assignees with different\n+ * statuses, the longest timeout is chosen.\n+ */\n+export async function getMergeTimeoutAndApprovalRequiredCount(context: Context, authorAssociation: string) {\n+  const timeoutCollaborator = {\n+    mergeTimeout: context.config.collaboratorMergeTimeout,\n+    requiredApprovalCount: context.config.collaboratorMinimumApprovalsRequired,\n+  };\n+  const timeoutContributor = {\n+    mergeTimeout: context.config.contributorMergeTimeout,\n+    requiredApprovalCount: context.config.contributorMinimumApprovalsRequired,\n+  };\n+  return authorAssociation === \"COLLABORATOR\" || authorAssociation === \"MEMBER\" ? timeoutCollaborator : timeoutContributor;","score":{"reward":8.472,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":50.2388235294118,"syllables":56,"sentences":2,"score":0.902388235294118},"multiplier":1,"relevance":0.8}},{"id":1670297081,"content":"Oh, my bad, the `MEMBER` check actually exists, so everything is fine here","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1670297081","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,101 @@\n+import { retryAsync } from \"ts-retry\";\n+import { Context } from \"../types\";\n+\n+export function parseGitHubUrl(url: string) {\n+  const path = new URL(url).pathname.split(\"/\");\n+  if (path.length !== 5) {\n+    throw new Error(`[parseGitHubUrl] Invalid url: [${url}]`);\n+  }\n+  return {\n+    owner: path[1],\n+    repo: path[2],\n+    issue_number: Number(path[4]),\n+  };\n+}\n+\n+export type IssueParams = ReturnType<typeof parseGitHubUrl>;\n+\n+/**\n+ * Gets the merge timeout depending on the status of the assignee. If there are multiple assignees with different\n+ * statuses, the longest timeout is chosen.\n+ */\n+export async function getMergeTimeoutAndApprovalRequiredCount(context: Context, authorAssociation: string) {\n+  const timeoutCollaborator = {\n+    mergeTimeout: context.config.collaboratorMergeTimeout,\n+    requiredApprovalCount: context.config.collaboratorMinimumApprovalsRequired,\n+  };\n+  const timeoutContributor = {\n+    mergeTimeout: context.config.contributorMergeTimeout,\n+    requiredApprovalCount: context.config.contributorMinimumApprovalsRequired,\n+  };\n+  return authorAssociation === \"COLLABORATOR\" || authorAssociation === \"MEMBER\" ? timeoutCollaborator : timeoutContributor;","score":{"reward":1.197,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":67.75500000000001,"syllables":18,"sentences":1,"score":0.9224499999999999},"multiplier":1,"relevance":0.3}},{"id":2230216897,"content":"@gentlementlegen Check [this](https://github.com/rndquu-org/test-repo/blob/38a7298de0882880614a402fce6cd3d71a1da582/.github/.ubiquibot-config.yml) config.\r\nWhen running in a worker mode getting this error:\r\n```\r\nTransformDecodeCheckError: Unable to decode value as it does not match the expected schema\r\n...\r\n{\r\n    schema: {\r\n      type: 'object',\r\n      properties: {\r\n        approvalsRequired: [Object],\r\n        mergeTimeout: [Object],\r\n        databaseUrl: [Object]\r\n      },\r\n      required: [ 'approvalsRequired', 'mergeTimeout', 'databaseUrl'\r\n  ],\r\n      [Symbol(TypeBox.Kind)]: 'Object'\r\n    },\r\n    value: {\r\n      approvalsRequired: { collaborator: 0, contributor: 2 },\r\n      mergeTimeout: { collaborator: '5 minutes', contributor: '7 days' },\r\n      databaseUrl: 'database/sql.db'\r\n    },\r\n    error: {\r\n      type: 39,\r\n      schema: {\r\n        default: 1,\r\n        minimum: 1,\r\n        type: 'number',\r\n        [Symbol(TypeBox.Kind)]: 'Number'\r\n      },\r\n      path: '/approvalsRequired/collaborator',\r\n      value: 0,\r\n      message: 'Expected number to be greater or equal to 1'\r\n    }\r\n  }\r\n```\r\nIs it expected that `approvalsRequired.collaborator` can't be set to 0?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2230216897","commentType":"PULL_COLLABORATOR","score":{"reward":8.883,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":73.77989130434786,"syllables":33,"sentences":2,"score":0.8622010869565214},"multiplier":1,"relevance":0.9}},{"id":2230223052,"content":"@gentlementlegen One more thing, check [this](https://github.com/rndquu-org/test-repo/blob/5d530add044242943251507b388513dd6f1cbaac/.github/.ubiquibot-config.yml) config.\r\nThe plugin in the worker mode returns this error:\r\n```\r\n✘ [ERROR] {\r\n    type: 45,\r\n    schema: { type: 'string', [Symbol(TypeBox.Kind)]: 'String' },\r\n    path: '/workflowName',\r\n    value: undefined,\r\n    message: 'Required property'\r\n  }\r\n  {\r\n    type: 54,\r\n    schema: { type: 'string', [Symbol(TypeBox.Kind)]: 'String' },\r\n    path: '/workflowName',\r\n    value: undefined,\r\n    message: 'Expected string'\r\n  }\r\n```\r\nWhat am I doing wrong?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2230223052","commentType":"PULL_COLLABORATOR","score":{"reward":8.532,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":75.32035714285716,"syllables":30,"sentences":2,"score":0.8467964285714283},"multiplier":1,"relevance":0.9}},{"id":2230595595,"content":"I meant that we should not set 0 values for the ubiquity organization and simply set `approvalsRequired` to at least 1 (within our org) since this param is configurable but enforcing it to be none 0 also seems to be fine as a precautious measure\r\nThen we should stop adding worker related [files](https://github.com/Meniole/automated-merging/blob/8dc079b996078f274dae299cf6226b756c93db06/src/worker.ts) and [scripts](https://github.com/Meniole/automated-merging/blob/8dc079b996078f274dae299cf6226b756c93db06/package.json#L20) since it's kind of misleading","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2230595595","commentType":"PULL_COLLABORATOR","score":{"reward":11.256,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":60,"wordValue":0.1,"result":2.52},"readability":{"fleschKincaid":21.855000000000018,"syllables":88,"sentences":1,"score":0.6185500000000002},"multiplier":1,"relevance":0.7}},{"id":2231237542,"content":"@gentlementlegen Help\r\nTrying to run the plugin with [this](https://github.com/rndquu-org/test-repo/blob/de3c37edc71bb0989b5d9e27d72d41147ae15347/.github/.ubiquibot-config.yml) config and getting [this](https://github.com/rndquu/automated-merging/actions/runs/9959675703/job/27517043938) CI error.\r\nThe expected behavior is that on any comment [this](https://github.com/rndquu-org/test-repo/pull/64) PR will be merged. What am I doing wrong?\r\nP.S. The bot is installed in https://github.com/rndquu/automated-merging with issue and PR `read and write` permissions.","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2231237542","commentType":"PULL_COLLABORATOR","score":{"reward":18.648,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":4}},"result":4},"priority":3,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":81.66352941176471,"syllables":71,"sentences":7,"score":0.7833647058823529},"multiplier":1,"relevance":0.8}},{"id":2232913727,"content":"The error is gone but the PR is not merged.\r\nCheck [this](https://github.com/rndquu-org/test-repo/blob/601d73055d4bcb002718a3b3bace9bef6b8a7e03/.github/.ubiquibot-config.yml) config and [this](https://github.com/rndquu/automated-merging/actions/runs/9971942289/job/27554102923) CI run which prints this log output: \r\n```\r\nissue_comment.created is not supported, skipping\r\n```\r\nWhy `issue_comment.created` is not supported? Expected behavior: on [this](https://github.com/rndquu-org/test-repo/issues/63#issuecomment-2232889223) comment [this](https://github.com/rndquu-org/test-repo/pull/64) PR is merged.","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2232913727","commentType":"PULL_COLLABORATOR","score":{"reward":19.683,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":4}},"result":4},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":91.05619047619048,"syllables":43,"sentences":3,"score":0.6894380952380952},"multiplier":1,"relevance":0.9}},{"id":2249617186,"content":"@gentlementlegen Check [this](https://github.com/rndquu-org/test-repo/blob/923fb81dfc68cbb0280cd558595de35d8d8ea4e0/.github/.ubiquibot-config.yml) config, [this](https://github.com/rndquu-org/test-repo/pull/64) PR and [this](https://github.com/rndquu/automated-merging/actions/runs/10089716563/job/27897693989) CI run.\r\nOn [any comment](https://github.com/rndquu-org/test-repo/issues/63#issuecomment-2249611549) I'm expecting [this](https://github.com/rndquu-org/test-repo/pull/64) PR to be merged but [this](https://github.com/rndquu/automated-merging/actions/runs/10089716563/job/27897693989) CI run didn't merge it. What am I doing wrong?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2249617186","commentType":"PULL_COLLABORATOR","score":{"reward":17.424,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":4}},"result":4},"priority":3,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":90.8257843137255,"syllables":42,"sentences":3,"score":0.691742156862745},"multiplier":1,"relevance":0.8}},{"id":2249653641,"content":"Could you provide a valid config for QA?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2249653641","commentType":"PULL_COLLABORATOR","score":{"reward":1.692,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.6}},{"id":2249724876,"content":"How should the whole config look like with `pull_request.opened` for the plugin to work as expected?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2249724876","commentType":"PULL_COLLABORATOR","score":{"reward":3.108,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":84.45000000000003,"syllables":19,"sentences":1,"score":0.7554999999999997},"multiplier":1,"relevance":0.7}},{"id":2252151112,"content":"How `user-activity-watcher` is connected with the `automated-merging` plugin?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2252151112","commentType":"PULL_COLLABORATOR","score":{"reward":0.888,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2165744895,"effect":{"addition":882,"deletion":221},"reward":33.09,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 151.347 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>33.09</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>14.904</td></tr><tr><td>Review</td><td>Comment</td><td>12</td><td>103.353</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+882 -221</td><td>3</td><td>33.09</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2205832478\" target=\"_blank\" rel=\"noopener\">This plugin is dangerous no matter how we configure itWe need &hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.075</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2206352808\" target=\"_blank\" rel=\"noopener\">This \"automerge plugin\" is implied to solve an issue of long rev&hellip;</a></h6></td><td><details><summary>2.55</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 64&#13;  wordValue: 0.1&#13;  result: 2.55&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.532</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/20#issuecomment-2206605405\" target=\"_blank\" rel=\"noopener\">Sounds good</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.297</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1670174019\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Does the kernel wait for all plugins to be exec&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.5</td><td>3</td><td>3.57</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1670196518\" target=\"_blank\" rel=\"noopener\">@gentlementlegen From https://michaelheap.com/github-actions-c&hellip;</a></h6></td><td><details><summary>2.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.8</td><td>3</td><td>8.472</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1670297081\" target=\"_blank\" rel=\"noopener\">Oh, my bad, the &#96;MEMBER&#96; check actually exists, so every&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.197</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2230216897\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Check [this](https://github.com/rndquu-org/test&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.883</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2230223052\" target=\"_blank\" rel=\"noopener\">@gentlementlegen One more thing, check [this](https://github.com&hellip;</a></h6></td><td><details><summary>2.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.532</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2230595595\" target=\"_blank\" rel=\"noopener\">I meant that we should not set 0 values for the ubiquity organiz&hellip;</a></h6></td><td><details><summary>4.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 60&#13;  wordValue: 0.1&#13;  result: 2.52&#13;</pre></details></td><td>0.7</td><td>3</td><td>11.256</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2231237542\" target=\"_blank\" rel=\"noopener\">@gentlementlegen HelpTrying to run the plugin with [this](http&hellip;</a></h6></td><td><details><summary>6.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 4&#13;  result: 4&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.8</td><td>3</td><td>18.648</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2232913727\" target=\"_blank\" rel=\"noopener\">The error is gone but the PR is not merged.Check [this](https:&hellip;</a></h6></td><td><details><summary>6.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 4&#13;  result: 4&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.9</td><td>3</td><td>19.683</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2249617186\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Check [this](https://github.com/rndquu-org/test&hellip;</a></h6></td><td><details><summary>6.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 4&#13;  result: 4&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.8</td><td>3</td><td>17.424</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2249653641\" target=\"_blank\" rel=\"noopener\">Could you provide a valid config for QA?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.692</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2249724876\" target=\"_blank\" rel=\"noopener\">How should the whole config look like with &#96;pull_request.ope&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.108</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2252151112\" target=\"_blank\" rel=\"noopener\">How &#96;user-activity-watcher&#96; is connected with the &#96;a&hellip;</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.888</td></tr></tbody></table></details>"},"whilefoo":{"total":80.928,"userId":139262667,"comments":[{"id":1672777652,"content":"shouldn't approval count be higher than the setting?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1672777652","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,99 @@\n+import ms from \"ms\";\n+import { PullRequest } from \"../adapters/sqlite/entities/pull-request\";\n+import { getAllTimelineEvents } from \"../handlers/github-events\";\n+import { Context } from \"../types\";\n+import { getApprovalCount, getMergeTimeoutAndApprovalRequiredCount, isCiGreen, IssueParams, parseGitHubUrl } from \"./github\";\n+\n+type IssueEvent = {\n+  created_at?: string;\n+  updated_at?: string;\n+  timestamp?: string;\n+  commented_at?: string;\n+};\n+\n+async function getPullRequestDetails(context: Context, { repo, owner, issue_number: pullNumber }: IssueParams) {\n+  return (\n+    await context.octokit.pulls.get({\n+      repo,\n+      owner,\n+      pull_number: pullNumber,\n+    })\n+  ).data;\n+}\n+\n+export async function updatePullRequests(context: Context) {\n+  const pullRequests = await context.adapters.sqlite.pullRequest.getAll();\n+\n+  if (!pullRequests?.length) {\n+    return context.logger.info(\"Nothing to do.\");\n+  }\n+  for (const pullRequest of pullRequests) {\n+    try {\n+      const gitHubUrl = parseGitHubUrl(pullRequest.url);\n+      const pullRequestDetails = await getPullRequestDetails(context, gitHubUrl);\n+      context.logger.debug(`Processing pull-request ${pullRequest.url}...`);\n+      if (pullRequestDetails.merged || pullRequestDetails.closed_at) {\n+        context.logger.info(`The pull request ${pullRequest.url} is already merged or closed, nothing to do.`);\n+        try {\n+          await context.adapters.sqlite.pullRequest.delete(pullRequest.url);\n+        } catch (e) {\n+          context.logger.error(`Failed to delete pull-request ${pullRequest.url}: ${e}`);\n+        }\n+        continue;\n+      }\n+      const activity = await getAllTimelineEvents(context, parseGitHubUrl(pullRequest.url));\n+      const eventDates: Date[] = activity\n+        .map((event) => {\n+          const e = event as IssueEvent;\n+          return new Date(e.created_at || e.updated_at || e.timestamp || e.commented_at || \"\");\n+        })\n+        .filter((date) => !isNaN(date.getTime()));\n+\n+      const lastActivityDate = new Date(Math.max(...eventDates.map((date) => date.getTime())));\n+\n+      const requirements = await getMergeTimeoutAndApprovalRequiredCount(context, pullRequestDetails.author_association);\n+      context.logger.debug(\n+        `Requirements according to association ${pullRequestDetails.author_association}: ${JSON.stringify(requirements)} with last activity date: ${lastActivityDate}`\n+      );\n+      if (isNaN(lastActivityDate.getTime()) || isPastOffset(lastActivityDate, requirements.mergeTimeout)) {\n+        if ((await getApprovalCount(context, gitHubUrl)) > 0) {","score":{"reward":2.835,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.50000000000003,"syllables":13,"sentences":1,"score":0.8449999999999998},"multiplier":1,"relevance":0.9}},{"id":1672781093,"content":"shouldn't this be in the env?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1672781093","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -11,14 +11,28 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n   ref: string;\n }\n \n-/**\n- * This should contain the properties of the bot config\n- * that are required for the plugin to function.\n- *\n- * The kernel will extract those and pass them to the plugin,\n- * which are built into the context object from setup().\n- */\n-export const pluginSettingsSchema = T.Object({});\n+export const pluginSettingsSchema = T.Object({\n+  /**\n+   * The amount of validations needed to consider a pull-request by a collaborator to be deemed eligible for merge\n+   */\n+  collaboratorMinimumApprovalsRequired: T.Number({ default: 1, minimum: 1 }),\n+  /**\n+   * The amount of validations needed to consider a pull-request by a contributor to be deemed eligible for merge\n+   */\n+  contributorMinimumApprovalsRequired: T.Number({ default: 1, minimum: 1 }),\n+  /**\n+   * The timespan to wait before merging a collaborator's pull-request\n+   */\n+  collaboratorMergeTimeout: T.String({ default: \"3.5 days\" }),\n+  /**\n+   * The timespan to wait before merging a contributor's pull-request\n+   */\n+  contributorMergeTimeout: T.String({ default: \"7 days\" }),\n+  /**\n+   * The location of the database\n+   */\n+  databaseUrl: T.String({ default: \"database/sql.db\" }),","score":{"reward":1.35,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":115.13000000000002,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1672794431,"content":"is `lastActivity` even used anywhere? I can only see it's being set","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1672794431","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,65 @@\n+import { DataSource } from \"typeorm\";\n+import { Context } from \"../../../types\";\n+import { PullRequest } from \"../entities/pull-request\";\n+import { Super } from \"./sqlite\";\n+\n+export class PullRequestAdapter extends Super {\n+  constructor(sqlite: DataSource, context: Context) {\n+    super(sqlite, context);\n+  }\n+\n+  public async create(url: string) {\n+    const pullRequest = new PullRequest();\n+\n+    pullRequest.url = url;\n+    pullRequest.lastActivity = new Date();","score":{"reward":3.024,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":87.94500000000002,"syllables":16,"sentences":2,"score":0.7205499999999998},"multiplier":1,"relevance":0.8}},{"id":1672796346,"content":"and then how does this test pass if `lastActivity` is not read anywhere?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1672796346","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,22 +1,307 @@\n+import { drop } from \"@mswjs/data\";\n+import { Octokit } from \"@octokit/rest\";\n+import { http, HttpResponse } from \"msw\";\n+import * as fs from \"node:fs\";\n+import { initializeDataSource } from \"../src/adapters/sqlite/data-source\";\n+import { PullRequest } from \"../src/adapters/sqlite/entities/pull-request\";\n+import { getMergeTimeoutAndApprovalRequiredCount, isCiGreen } from \"../src/helpers/github\";\n import { db } from \"./__mocks__/db\";\n import { server } from \"./__mocks__/node\";\n-import usersGet from \"./__mocks__/users-get.json\";\n-import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it } from \"@jest/globals\";\n+import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it, jest } from \"@jest/globals\";\n+import { Context } from \"../src/types\";\n+import seed from \"./__mocks__/seed.json\";\n \n beforeAll(() => server.listen());\n afterEach(() => server.resetHandlers());\n afterAll(() => server.close());\n \n-describe(\"User tests\", () => {\n+const htmlUrl = \"https://github.com/ubiquibot/automated-merging/pull/1\";\n+const actionsGithubPackage = \"@actions/github\";\n+const issueParams = { owner: \"ubiquibot\", repo: \"automated-merging\", issue_number: 1 };\n+const workflow = \"workflow\";\n+\n+describe(\"Action tests\", () => {\n+  let dbName = `database/tests/test.db`;\n+\n   beforeEach(() => {\n-    for (const item of usersGet) {\n-      db.users.create(item);\n+    jest.resetAllMocks();\n+    jest.resetModules();\n+    dbName = `database/tests/${expect.getState().currentTestName}.db`;\n+    fs.rmSync(dbName, { force: true });\n+    drop(db);\n+    for (const table of Object.keys(seed)) {\n+      const tableName = table as keyof typeof seed;\n+      for (const row of seed[tableName]) {\n+        db[tableName].create(row);\n+      }\n     }\n   });\n \n-  it(\"Should fetch all the users\", async () => {\n-    const res = await fetch(\"https://api.ubiquity.com/users\");\n-    const data = await res.json();\n-    expect(data).toMatchObject(usersGet);\n+  it(\"Should add a pull request in the DB on PR opened\", async () => {\n+    jest.mock(actionsGithubPackage, () => ({\n+      context: {\n+        repo: {\n+          owner: {\n+            login: \"ubiquibot\",\n+          },\n+        },\n+        workflow,\n+        payload: {\n+          inputs: {\n+            eventName: \"pull_request.opened\",\n+            settings: JSON.stringify({\n+              databaseUrl: dbName,\n+            }),\n+            eventPayload: JSON.stringify({\n+              pull_request: {\n+                html_url: htmlUrl,\n+              },\n+            }),\n+            env: {\n+              workflowName: workflow,\n+            },\n+          },\n+        },\n+      },\n+    }));\n+    const run = (await import(\"../src/action\")).run;\n+    await expect(run()).resolves.toMatchObject({ status: 200 });\n+    const dataSource = await initializeDataSource(dbName);\n+    const pullRequests = await dataSource.getRepository(PullRequest).find();\n+    expect(pullRequests).toMatchObject([\n+      {\n+        id: 1,\n+        url: htmlUrl,\n+      },\n+    ]);\n+  });\n+\n+  it(\"Should remove a pull request in the DB on PR closed\", async () => {\n+    const dataSource = await initializeDataSource(dbName);\n+    const pr = new PullRequest();\n+    pr.url = htmlUrl;\n+    pr.lastActivity = new Date();\n+    await pr.save();\n+    server.use(\n+      http.get(\n+        \"https://api.github.com/repos/:org/:repo/pulls/:id/reviews\",\n+        () => {\n+          return HttpResponse.json([{ state: \"APPROVED\" }, { state: \"APPROVED\" }]);\n+        },\n+        { once: true }\n+      )\n+    );\n+    jest.mock(actionsGithubPackage, () => ({\n+      context: {\n+        repo: {\n+          owner: {\n+            login: \"ubiquibot\",\n+          },\n+        },\n+        workflow,\n+        payload: {\n+          inputs: {\n+            eventName: \"pull_request.closed\",\n+            settings: JSON.stringify({\n+              databaseUrl: dbName,\n+            }),\n+            eventPayload: JSON.stringify({\n+              pull_request: {\n+                html_url: htmlUrl,\n+              },\n+            }),\n+            env: {\n+              workflowName: workflow,\n+            },\n+          },\n+        },\n+      },\n+    }));\n+    const run = (await import(\"../src/action\")).run;\n+    await expect(run()).resolves.toMatchObject({ status: 200 });\n+    const pullRequests = await dataSource.getRepository(PullRequest).find();\n+    expect(pullRequests).toHaveLength(0);\n+  });\n+\n+  it(\"Should not close a PR that is not past the threshold\", async () => {\n+    const dataSource = await initializeDataSource(dbName);\n+    const pr = new PullRequest();\n+    pr.url = htmlUrl;\n+    pr.lastActivity = new Date();\n+    await pr.save();\n+    server.use(\n+      http.get(\n+        \"https://api.github.com/repos/:org/:repo/pulls/:id/merge\",\n+        () => {\n+          return HttpResponse.json({}, { status: 404 });\n+        },\n+        { once: true }\n+      ),\n+      http.get(\n+        \"https://api.github.com/repos/:org/:repo/issues/:id/timeline\",\n+        () => {\n+          return HttpResponse.json([{ id: 1, created_at: new Date() }]);\n+        },\n+        { once: true }\n+      )\n+    );\n+    jest.mock(actionsGithubPackage, () => ({\n+      context: {\n+        repo: {\n+          owner: {\n+            login: \"ubiquibot\",\n+          },\n+        },\n+        workflow,\n+        payload: {\n+          inputs: {\n+            eventName: \"push\",\n+            settings: JSON.stringify({\n+              databaseUrl: dbName,\n+            }),\n+            eventPayload: JSON.stringify({\n+              pull_request: {\n+                html_url: htmlUrl,\n+              },\n+            }),\n+            env: {\n+              workflowName: workflow,\n+            },\n+          },\n+        },\n+      },\n+    }));\n+    const run = (await import(\"../src/action\")).run;\n+    await expect(run()).resolves.toMatchObject({ status: 200 });\n+    const pullRequests = await dataSource.getRepository(PullRequest).find();\n+    expect(pullRequests).toHaveLength(1);\n+  });\n+\n+  it(\"Should close a PR that is past the threshold\", async () => {\n+    const dataSource = await initializeDataSource(dbName);\n+    const pr = new PullRequest();\n+    pr.url = htmlUrl;\n+    const lastActivityDate = new Date();\n+    lastActivityDate.setDate(new Date().getDate() - 8);\n+    pr.lastActivity = lastActivityDate;","score":{"reward":3.348,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":95.955,"syllables":14,"sentences":1,"score":0.64045},"multiplier":1,"relevance":0.9}},{"id":1677601550,"content":"actually I'm worried about concurrency, like when two events trigger the plugin, both will take current DB file and add/remove PR and then make a commit but only one of them will successfully do it. \r\nhow come you decided to use a local sqlite DB?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1677601550","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -11,14 +11,28 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n   ref: string;\n }\n \n-/**\n- * This should contain the properties of the bot config\n- * that are required for the plugin to function.\n- *\n- * The kernel will extract those and pass them to the plugin,\n- * which are built into the context object from setup().\n- */\n-export const pluginSettingsSchema = T.Object({});\n+export const pluginSettingsSchema = T.Object({\n+  /**\n+   * The amount of validations needed to consider a pull-request by a collaborator to be deemed eligible for merge\n+   */\n+  collaboratorMinimumApprovalsRequired: T.Number({ default: 1, minimum: 1 }),\n+  /**\n+   * The amount of validations needed to consider a pull-request by a contributor to be deemed eligible for merge\n+   */\n+  contributorMinimumApprovalsRequired: T.Number({ default: 1, minimum: 1 }),\n+  /**\n+   * The timespan to wait before merging a collaborator's pull-request\n+   */\n+  collaboratorMergeTimeout: T.String({ default: \"3.5 days\" }),\n+  /**\n+   * The timespan to wait before merging a contributor's pull-request\n+   */\n+  contributorMergeTimeout: T.String({ default: \"7 days\" }),\n+  /**\n+   * The location of the database\n+   */\n+  databaseUrl: T.String({ default: \"database/sql.db\" }),","score":{"reward":7.224,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":62.38250000000002,"syllables":67,"sentences":2,"score":0.9761749999999998},"multiplier":1,"relevance":0.8}},{"id":1680070238,"content":"```suggestion\r\n        if ((await getApprovalCount(context, gitHubUrl)) >= requirements.requiredApprovalCount) {\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1680070238","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -56,7 +56,7 @@ export async function updatePullRequests(context: Context) {\n         `Requirements according to association ${pullRequestDetails.author_association}: ${JSON.stringify(requirements)} with last activity date: ${lastActivityDate}`\n       );\n       if (isNaN(lastActivityDate.getTime()) || isPastOffset(lastActivityDate, requirements.mergeTimeout)) {\n-        if ((await getApprovalCount(context, gitHubUrl)) > 0) {\n+        if ((await getApprovalCount(context, gitHubUrl)) > requirements.requiredApprovalCount) {","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.9}},{"id":1680075854,"content":"Here you are passing auth token for the repo that triggered this event to the function that returns data to the kernel however this token should be for plugin's repo (`automated-merging`)\r\nI think this is the source of https://github.com/ubiquibot/automated-merging/pull/1#issuecomment-2231237542 problem","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1680075854","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,60 @@\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { Value } from \"@sinclair/typebox/value\";\n+import { plugin } from \"./plugin\";\n+import { envSchema, envValidator, PluginInputs, pluginSettingsSchema, pluginSettingsValidator } from \"./types\";\n+\n+/**\n+ * How a GitHub action executes the plugin.\n+ */\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  payload.env = { ...(payload.env || {}), workflowName: github.context.workflow };\n+  if (!envValidator.test(payload.env)) {\n+    const errors: string[] = [];\n+    for (const error of envValidator.errors(payload.env)) {\n+      console.error(error);\n+      errors.push(`${error.path}: ${error.message}`);\n+    }\n+    throw new Error(`Invalid environment provided:\\n${errors.join(\";\\n\")}`);\n+  }\n+  const env = Value.Decode(envSchema, payload.env || {});\n+\n+  payload.settings = Value.Default(pluginSettingsSchema, JSON.parse(payload.settings));\n+  if (!pluginSettingsValidator.test(payload.settings)) {\n+    const errors: string[] = [];\n+    for (const error of pluginSettingsValidator.errors(payload.settings)) {\n+      console.error(error);\n+      errors.push(`${error.path}: ${error.message}`);\n+    }\n+    throw new Error(`Invalid settings provided:\\n${errors.join(\";\\n\")}`);\n+  }\n+\n+  const settings = Value.Decode(pluginSettingsSchema, payload.settings);\n+  const inputs: PluginInputs = {\n+    stateId: payload.stateId,\n+    eventName: payload.eventName,\n+    eventPayload: JSON.parse(payload.eventPayload),\n+    settings,\n+    authToken: payload.authToken,\n+    ref: payload.ref,\n+  };\n+\n+  await plugin(inputs, env);\n+\n+  return returnDataToKernel(inputs.authToken, inputs.stateId, {});","score":{"reward":10.908,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":54.20423469387757,"syllables":74,"sentences":2,"score":0.9420423469387756},"multiplier":1,"relevance":0.9}},{"id":1681201402,"content":"yes it should be github token provided by the action because you are making repository dispatch event on `automated-merging` so the token provided by the kernel doesn't have permission for this repo (only for the repo that triggered the kernel)","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1681201402","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,60 @@\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { Value } from \"@sinclair/typebox/value\";\n+import { plugin } from \"./plugin\";\n+import { envSchema, envValidator, PluginInputs, pluginSettingsSchema, pluginSettingsValidator } from \"./types\";\n+\n+/**\n+ * How a GitHub action executes the plugin.\n+ */\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  payload.env = { ...(payload.env || {}), workflowName: github.context.workflow };\n+  if (!envValidator.test(payload.env)) {\n+    const errors: string[] = [];\n+    for (const error of envValidator.errors(payload.env)) {\n+      console.error(error);\n+      errors.push(`${error.path}: ${error.message}`);\n+    }\n+    throw new Error(`Invalid environment provided:\\n${errors.join(\";\\n\")}`);\n+  }\n+  const env = Value.Decode(envSchema, payload.env || {});\n+\n+  payload.settings = Value.Default(pluginSettingsSchema, JSON.parse(payload.settings));\n+  if (!pluginSettingsValidator.test(payload.settings)) {\n+    const errors: string[] = [];\n+    for (const error of pluginSettingsValidator.errors(payload.settings)) {\n+      console.error(error);\n+      errors.push(`${error.path}: ${error.message}`);\n+    }\n+    throw new Error(`Invalid settings provided:\\n${errors.join(\";\\n\")}`);\n+  }\n+\n+  const settings = Value.Decode(pluginSettingsSchema, payload.settings);\n+  const inputs: PluginInputs = {\n+    stateId: payload.stateId,\n+    eventName: payload.eventName,\n+    eventPayload: JSON.parse(payload.eventPayload),\n+    settings,\n+    authToken: payload.authToken,\n+    ref: payload.ref,\n+  };\n+\n+  await plugin(inputs, env);\n+\n+  return returnDataToKernel(inputs.authToken, inputs.stateId, {});","score":{"reward":6.408,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":35.10500000000002,"syllables":62,"sentences":1,"score":0.7510500000000002},"multiplier":1,"relevance":0.8}},{"id":2225642363,"content":"@gentlementlegen have you seen my comments?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2225642363","commentType":"PULL_COLLABORATOR","score":{"reward":0.231,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":45.64500000000001,"syllables":11,"sentences":1,"score":0.8564500000000002},"multiplier":1,"relevance":0.1}},{"id":2233624157,"content":"Even though that may seem like an error it isn't, the code should be modified to not look like it failed. \r\nI think the PR is not merged because there are no approvals","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2233624157","commentType":"PULL_COLLABORATOR","score":{"reward":4.41,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":87.5623529411765,"syllables":41,"sentences":2,"score":0.724376470588235},"multiplier":1,"relevance":0.6}},{"id":2238730367,"content":"It looks like the plugin didn't even run but in fact it did run `updatePullRequests`, just the proxy callback didn't match the event","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2238730367","commentType":"PULL_COLLABORATOR","score":{"reward":3.09,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":80.25000000000004,"syllables":29,"sentences":1,"score":0.7974999999999995},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2169950113,"effect":{"addition":882,"deletion":221},"reward":33.09,"priority":3},{"reviewId":2181316904,"effect":{"addition":80,"deletion":65},"reward":4.35,"priority":3},{"reviewId":2192481265,"effect":{"addition":17,"deletion":5},"reward":0.66,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 80.928 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>38.1</td></tr><tr><td>Review</td><td>Comment</td><td>11</td><td>42.828</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+882 -221</td><td>3</td><td>33.09</td></tr><tr><td>+80 -65</td><td>3</td><td>4.35</td></tr><tr><td>+17 -5</td><td>3</td><td>0.66</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1672777652\" target=\"_blank\" rel=\"noopener\">shouldn't approval count be higher than the setting?</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.835</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1672781093\" target=\"_blank\" rel=\"noopener\">shouldn't this be in the env?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.35</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1672794431\" target=\"_blank\" rel=\"noopener\">is &#96;lastActivity&#96; even used anywhere? I can only see it'&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.024</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1672796346\" target=\"_blank\" rel=\"noopener\">and then how does this test pass if &#96;lastActivity&#96; is no&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.9</td><td>3</td><td>3.348</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1677601550\" target=\"_blank\" rel=\"noopener\">actually I'm worried about concurrency, like when two events tri&hellip;</a></h6></td><td><details><summary>2.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.224</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1680070238\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionif ((await getApprovalCount(c&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1680075854\" target=\"_blank\" rel=\"noopener\">Here you are passing auth token for the repo that triggered this&hellip;</a></h6></td><td><details><summary>3.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.9</td><td>3</td><td>10.908</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#discussion_r1681201402\" target=\"_blank\" rel=\"noopener\">yes it should be github token provided by the action because you&hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.408</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2225642363\" target=\"_blank\" rel=\"noopener\">@gentlementlegen have you seen my comments?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.231</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2233624157\" target=\"_blank\" rel=\"noopener\">Even though that may seem like an error it isn't, the code shoul&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.41</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/1#issuecomment-2238730367\" target=\"_blank\" rel=\"noopener\">It looks like the plugin didn't even run but in fact it did run &hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.5</td><td>3</td><td>3.09</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_80.json","json":{"gentlementlegen":{"userId":9807008,"total":609.777,"task":{"reward":600,"multiplier":1},"comments":[{"id":2257303490,"content":"@0x4007 What you say is valid for the GitHub API. But Workers are limited to 50 requests per run / instance.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2257303490","commentType":"ISSUE_AUTHOR","score":{"reward":1.448,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":86.70500000000001,"syllables":26,"sentences":2,"score":0.7329499999999999},"multiplier":1,"relevance":0.8}},{"id":2257531131,"content":"I thought about it, but it means that the plugin should have access to the private repo containing the configuration and should be able to read / write which seems dangerous. Or maybe we can run that plugin within the configuration repo itself. But if we do so we cannot handle per repo based configurations I think","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2257531131","commentType":"ISSUE_AUTHOR","score":{"reward":2.889,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":59.47761904761907,"syllables":85,"sentences":3,"score":0.9947761904761907},"multiplier":1,"relevance":0.9}},{"id":2433149858,"content":"In the bot v1, when the configuration is changed, annotations are added to the configuration file if any error is encountered within the configuration. It would be really nice to have for v2 as it is a common scenario to have an invalid configuration and have no feedback about it because the error would only be visible within the worker logs.\r\nThe main challenge is that only plugins are aware of their configuration shape, so probably the kernel should call every plugin to check their validity, which would require an endpoint or some access to the configuration validators. At the same time, the `manifest.json` validity could be checked, relating to https://github.com/ubiquity/ubiquibot-kernel/issues/78.\r\nSince this might imply quite a few network requests, we can also consider having this functionality as a separate Worker using [service binding](https://developers.cloudflare.com/workers/runtime-apis/bindings/service-bindings/).","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.44,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":132,"wordValue":0.1,"result":2.39},"readability":{"fleschKincaid":39.935952380952386,"syllables":237,"sentences":6,"score":0.7993595238095239},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 609.777 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>600</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.44</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>4.337</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80\" target=\"_blank\" rel=\"noopener\">In the bot v1, when the configuration is changed, annotations ar&hellip;</a></h6></td><td><details><summary>4.39</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 132&#13;  wordValue: 0.1&#13;  result: 2.39&#13;</pre></details></td><td>1</td><td>1</td><td>5.44</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2257303490\" target=\"_blank\" rel=\"noopener\">@0x4007 What you say is valid for the GitHub API. But Workers ar&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.448</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2257531131\" target=\"_blank\" rel=\"noopener\">I thought about it, but it means that the plugin should have acc&hellip;</a></h6></td><td><details><summary>2.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.889</td></tr></tbody></table></details>"},"0x4007":{"total":100.64,"userId":4975670,"comments":[{"id":2255305866,"content":"I think its fine given that we can make 5000 requests per hour, per organization, before we get rate limited as an app. Lets keep it simple and not do the separate Worker. Config changes do not happen regularly.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2255305866","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.448,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":72.16307692307694,"syllables":56,"sentences":3,"score":0.8783692307692306},"multiplier":1,"relevance":0.9}},{"id":2257360108,"content":"We can do this in a plugin instead?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2257360108","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.728,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.8}},{"id":2257545837,"content":"Cool idea\r\nResearch will reveal the answer!","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2257545837","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.528,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":66.7871428571429,"syllables":11,"sentences":1,"score":0.9321285714285711},"multiplier":1,"relevance":0.6}},{"id":2316829758,"content":"Can you elaborate this isn't clear to others","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2316829758","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.525,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.50000000000003,"syllables":13,"sentences":1,"score":0.8449999999999998},"multiplier":1,"relevance":0.5}},{"id":2362655936,"content":"Not sure let's try. Make sure it comments on the commit AND tags the author to urgently notify them that there is something wrong.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2362655936","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.899,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":79.09150000000001,"syllables":34,"sentences":2,"score":0.8090849999999999},"multiplier":1,"relevance":0.9}},{"id":2362667593,"content":"Also use the \n[!CAUTION]\nsyntax\nThe red one whatever the syntax is","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2362667593","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.048,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":73.84500000000001,"syllables":18,"sentences":2,"score":0.8615499999999998},"multiplier":1,"relevance":0.8}},{"id":2365434313,"content":"Yes do both of your suggestions","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2365434313","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.518,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.7}},{"id":2368508182,"content":"Oh I thought the validator is one and done inside the kernel. This approach across every plugin seems wrong.  \nThis can be dynamic by reading the plugin ajv validator files","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2368508182","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.196,"formatting":{"content":{"p":{"score":0,"elementCount":1},"br":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":61.32500000000002,"syllables":48,"sentences":3,"score":0.9867499999999998},"multiplier":1,"relevance":0.9}},{"id":2368689050,"content":"My idea was to import and run the ajv validation code. Could be risky but maybe there's a way to quarantine it in a way that's not too complex.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2368689050","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.133,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":81.94120967741938,"syllables":40,"sentences":2,"score":0.7805879032258062},"multiplier":1,"relevance":0.9}},{"id":2368820674,"content":"I think we need to figure this out eventually because of the marketplace/plugin installer feature","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2368820674","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.28,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":47.83250000000001,"syllables":27,"sentences":1,"score":0.8783250000000001},"multiplier":1,"relevance":0.8}},{"id":2370199742,"content":"My vision is not too different from a Docker-like approach. We can spin up a virtual shell as a child process, which then runs its own node.js instance. \r\nI think we just need to send everything, although I'm not fully understanding the context of this statement. \r\nAs in, `npm`? `Knip` might be able to help compile these, or there may be some better tools. \r\nCode injection might be acceptable within a virtual shell. \r\nThe virtual shell should not have access to the environment secrets.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2370199742","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.648,"formatting":{"content":{"p":{"score":0,"elementCount":5}},"result":0},"priority":1,"words":{"wordCount":85,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":75.62003676470589,"syllables":121,"sentences":8,"score":0.8437996323529411},"multiplier":1,"relevance":0.8}},{"id":2370895994,"content":"One expensive idea is to consume the type with `o1-mini` and then have it post a comment if it thinks that it won't work. I suppose it would unfortunately have to consume the entire plugin codebase before determining this though.  \r\nIt would be a bit cheaper if we standardize the location of the payload type checker file. \r\nThis seems like a bad approach to scale. We could consider making this a standalone plugin which is expensive to run but we can allow partners to opt-out if its too expensive?\r\n---\r\nIn conclusion I don't see a great cheap solution. I think we should handle it inside of the plugins as you are doing, and then in the future we automate plugin configuration using a GUI which can prevent misconfiguration? Perhaps we enforce a standard for plugin developers to follow for it to populate on the GUI and to be configurable?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2370895994","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.592,"formatting":{"content":{"p":{"score":0,"elementCount":4},"hr":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":151,"wordValue":0.1,"result":2.22},"readability":{"fleschKincaid":59.376212748344386,"syllables":229,"sentences":8,"score":0.9937621274834438},"multiplier":1,"relevance":0.9}},{"id":2375322411,"content":"Admin can make a config change, the Action runs and posts a comment on the commit a few minutes later BUT it tags the author, so they are notified. \r\nI think this is acceptable as a first version if the better solutions can't be figured out.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2375322411","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.691,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":65.98250000000002,"syllables":65,"sentences":2,"score":0.9401749999999999},"multiplier":1,"relevance":0.9}},{"id":2375890252,"content":"@whilefoo  you can make the decision","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2375890252","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.474,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":59.745000000000005,"syllables":10,"sentences":1,"score":0.9974500000000001},"multiplier":1,"relevance":0.6}},{"id":2377511227,"content":"Standard location (root, sibling of manifest) seems simplest","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2377511227","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.752,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":40.09,"syllables":15,"sentences":1,"score":0.8009000000000001},"multiplier":1,"relevance":0.8}},{"id":2382249225,"content":"Speed isn't as important as accuracy I think. I would rather one-shot get a list of all the problems to address in the next push. \r\nBut it is also not clear to me exactly how inaccurate the speedy approach is.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2382249225","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.232,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":42,"wordValue":0.1,"result":2.23},"readability":{"fleschKincaid":75.79642857142858,"syllables":58,"sentences":3,"score":0.8420357142857142},"multiplier":1,"relevance":0.8}},{"id":2382311848,"content":"Okay then lets do JSON and then maybe a future task can be a slower one to run async in the background: \"advanced checker\"","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2382311848","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.881,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":73.20000000000002,"syllables":31,"sentences":1,"score":0.8679999999999999},"multiplier":1,"relevance":0.9}},{"id":2393167518,"content":"I can add to marketplace then","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2393167518","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.518,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.7}},{"id":2396821994,"content":"What about default? Its supposed to credit 0 for p tags, but credit ~0.1 per word by default.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2396821994","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.519,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":89.09087719298246,"syllables":25,"sentences":3,"score":0.7090912280701754},"multiplier":1,"relevance":0.3}},{"id":2319646651,"content":"Can you explain to me how this works:","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#pullrequestreview-2319646651","commentType":"PULL_COLLABORATOR","score":{"reward":0.198,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":103.54,"syllables":9,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}},{"id":1784301479,"content":"Let's deprecate `ubiquibot` in favor of `ubiquity-os`","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1784301479","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,16 +1,13 @@\n-import { GitHubContext } from \"../github-context\";\n-import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n import { Value } from \"@sinclair/typebox/value\";\n-import { PluginInput, PluginChainState, expressionRegex, pluginOutputSchema } from \"../types/plugin\";\n+import { GitHubContext } from \"../github-context\";\n+import { expressionRegex, PluginChainState, PluginInput, pluginOutputSchema } from \"../types/plugin\";\n import { isGithubPlugin } from \"../types/plugin-configuration\";\n-import { handleActionValidationWorkflowCompleted } from \"./push-event\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n \n export async function repositoryDispatch(context: GitHubContext<\"repository_dispatch\">) {\n   console.log(\"Repository dispatch event received\", context.payload.client_payload);\n \n-  if (context.payload.action === \"configuration_validation\") {\n-    return handleActionValidationWorkflowCompleted(context);\n-  } else if (context.payload.action !== \"return_data_to_ubiquibot_kernel\") {\n+  if (context.payload.action !== \"return_data_to_ubiquibot_kernel\") {","score":{"reward":0.231,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.3}},{"id":1786421156,"content":"No file extension? That seems wrong. Even if you changed it on the worker, it should have the full file name.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1786421156","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -45,7 +45,7 @@ async function fetchWorkerManifest(url: string): Promise<Manifest | null> {\n   if (_manifestCache[url]) {\n     return _manifestCache[url];\n   }\n-  const manifestUrl = `${url}/manifest.json`;\n+  const manifestUrl = `${url}/manifest`;","score":{"reward":1.464,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":90.95857142857145,"syllables":27,"sentences":3,"score":0.6904142857142855},"multiplier":1,"relevance":0.8}},{"id":1787167995,"content":"The file is a json file. It should be with the file extension for sure. Same as they do with chrome extensions.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1787167995","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -45,7 +45,7 @@ async function fetchWorkerManifest(url: string): Promise<Manifest | null> {\n   if (_manifestCache[url]) {\n     return _manifestCache[url];\n   }\n-  const manifestUrl = `${url}/manifest.json`;\n+  const manifestUrl = `${url}/manifest`;","score":{"reward":1.337,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":87.87348484848488,"syllables":29,"sentences":3,"score":0.7212651515151512},"multiplier":1,"relevance":0.7}},{"id":2388377789,"content":"404","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#issuecomment-2388377789","commentType":"PULL_COLLABORATOR","score":{"reward":0.072,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":121.22000000000003,"syllables":1,"sentences":1,"score":1},"multiplier":1,"relevance":0.4}},{"id":2391418882,"content":"That screenshot looks great. Good work. It would be really cool if we could have some type of syntax highlighting on those comments though. The following uses `yml` highlighting\r\n```yml\r\npath: plugins/1/uses/0/with/approvalsRequired \r\nvalue: {\"collaborator\": \"10\"}\r\nmessage: Instance does not have required property \"contributor\".\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#issuecomment-2391418882","commentType":"PULL_COLLABORATOR","score":{"reward":1.776,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":84.9157142857143,"syllables":38,"sentences":4,"score":0.750842857142857},"multiplier":1,"relevance":0.8}},{"id":2341992107,"content":"I think handling the undefined elements before placing into the array is better practice, although I don't know the full context of how that array is being used.","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#pullrequestreview-2341992107","commentType":"PULL_COLLABORATOR","score":{"reward":1.416,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":51.95862068965518,"syllables":43,"sentences":1,"score":0.9195862068965518},"multiplier":1,"relevance":0.6}},{"id":1783904580,"content":"I'm debating if we should have a different manifest file for this because the original manifest is super simple and clean. Any strong case for either?","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#discussion_r1783904580","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,87 @@\n {\n   \"name\": \"Automated merging\",\n   \"description\": \"Automatically merge pull-requests.\",\n-  \"ubiquity:listeners\": [\"push\", \"issue_comment.created\"]\n-}\n+  \"ubiquity:listeners\": [\n+    \"push\",\n+    \"issue_comment.created\"\n+  ],\n+  \"configuration\": {","score":{"reward":1.617,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":58.3991666666667,"syllables":43,"sentences":2,"score":0.983991666666667},"multiplier":1,"relevance":0.7}},{"id":1783909622,"content":"We should filter out empty elements before placing into the array probably.","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#discussion_r1783909622","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -9,7 +9,7 @@ export interface ResultInfo {\n \n function generateGitHubSummary(context: Context, urls: ResultInfo[]): string {\n   const target = `https://github.com/${context.payload.repository.owner?.login}`;\n-  const output: string[] = [\"## Merge report\\n\\n\"];\n+  const output: (string | undefined)[] = [\"## Merge report\\n\\n\"];","score":{"reward":1.032,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":39.55500000000001,"syllables":22,"sentences":1,"score":0.7955500000000001},"multiplier":1,"relevance":0.8}},{"id":1783909892,"content":"Or else you get situations like this","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#discussion_r1783909892","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -29,9 +29,9 @@ function generateGitHubSummary(context: Context, urls: ResultInfo[]): string {\n   output.push(\"\\n</samp>\\n\");\n   output.push(\"## Configuration\\n\\n\");\n   output.push(\"### Watching Repositories\\n\\n\");\n-  output.push(context.config.repos.monitor.map((o) => `- [${o}](${target}/${o})`).join(\"\\n\"));\n+  output.push(context.config.repos?.monitor.map((o) => `- [${o}](${target}/${o})`).join(\"\\n\"));","score":{"reward":0.581,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.7}},{"id":1783910830,"content":"What about our logger?\nIt seems to me that we spent all this time and money to implement it and then completely removed it. \nIt was stable saving everything in Supabase, we even had log purge cron jobs every day.","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#discussion_r1783910830","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,30 +1,39 @@\n-import { Value } from \"@sinclair/typebox/value\";\n-import { envSchema, envValidator, PluginSettings, pluginSettingsSchema, pluginSettingsValidator } from \"../types\";\n+import { TransformDecodeCheckError, TransformDecodeError, Value, ValueError } from \"@sinclair/typebox/value\";\n+import { Env, envSchema, envValidator, PluginSettings, pluginSettingsSchema, pluginSettingsValidator } from \"../types\";\n \n-export function validateAndDecodeSchemas(env: object, rawSettings: object) {\n+export function validateAndDecodeSchemas(rawEnv: object, rawSettings: object) {\n+  const errors: ValueError[] = [];\n+\n+  console.log(rawEnv, rawSettings);\n+  const env = Value.Default(envSchema, rawEnv) as Env;\n   if (!envValidator.test(env)) {\n-    const errors: object[] = [];\n     for (const error of envValidator.errors(env)) {\n-      const errorMessage = { path: error.path, message: error.message, value: error.value };\n-      console.error(errorMessage);\n-      errors.push(errorMessage);\n+      console.error(error);\n+      errors.push(error);\n     }\n-    throw new Error(`Invalid environment provided. ${errors}`);\n   }\n-  const envDecoded = Value.Decode(envSchema, env || {});\n \n   const settings = Value.Default(pluginSettingsSchema, rawSettings) as PluginSettings;\n   if (!pluginSettingsValidator.test(settings)) {\n-    const errors: object[] = [];\n     for (const error of pluginSettingsValidator.errors(settings)) {\n-      const errorMessage = { path: error.path, message: error.message, value: error.value };\n-      console.error(errorMessage);\n-      errors.push(errorMessage);\n+      console.error(error);","score":{"reward":1.946,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":68.51666666666668,"syllables":59,"sentences":3,"score":0.9148333333333332},"multiplier":1,"relevance":0.7}},{"id":2392513147,"content":"I see potential in this being a general purpose tool to update across all plugins etc\nhttps://github.com/0x4007/sync-configs\nIt's still early on but it's pretty reliable at updating configs from cli now. Still want to figure out git authentication from GitHub actions to be able to clone and edit private repositories.","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#issuecomment-2392513147","commentType":"PULL_COLLABORATOR","score":{"reward":2.195,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":56.939473684210554,"syllables":88,"sentences":3,"score":0.9693947368421055},"multiplier":1,"relevance":0.5}},{"id":2392790695,"content":"It's fine but to simplify I need to specify the target file for each repo to change","url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#issuecomment-2392790695","commentType":"PULL_COLLABORATOR","score":{"reward":0.525,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":71.06500000000001,"syllables":25,"sentences":1,"score":0.8893499999999999},"multiplier":1,"relevance":0.3}},{"id":1783925398,"content":"Probably best to compile the js with `ncc` \nThis will allow us to skip on installing node and all the dependencies and allow for a near instant cold start time \nIn exchange for possibly less maintainability because we won't have the original source code here \nHowever we can store the source code (typescript) in a separate file and have a simple comment inside explaining how to compile it to be placed within this file.","url":"https://github.com/ubiquity-os/plugin-template/pull/23#discussion_r1783925398","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,58 @@\n+name: \"Update Configuration\"\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+\n+jobs:\n+  update:\n+    name: \"Update Configuration in manifest.json\"\n+    runs-on: ubuntu-latest\n+    permissions: write-all\n+\n+    steps:\n+      - uses: actions/checkout@v4\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20.10.0\"\n+\n+      - name: Install deps and run configuration update\n+        run: |\n+          yarn install --immutable --immutable-cache --check-cache\n+          yarn tsc --noCheck --project tsconfig.json\n+\n+      - name: Update manifest configuration using GitHub Script\n+        uses: actions/github-script@v7\n+        with:\n+          script: |","score":{"reward":2.344,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":74,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":1.395270270270288,"syllables":114,"sentences":1,"score":0.4139527027027029},"multiplier":1,"relevance":0.8}},{"id":1786220299,"content":"```suggestion\r\n  \"description\": \"ts-template for UbiquityOS plugins.\",\r\n```","url":"https://github.com/ubiquity-os/plugin-template/pull/23#discussion_r1786220299","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,11 +1,27 @@\n {\n   \"name\": \"ts-template\",\n   \"description\": \"ts-template for Ubiquibot plugins.\",","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":1,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.5}},{"id":1786220864,"content":"Cool to see you updated this string `return-data-to-ubiquity-os-kernel`","url":"https://github.com/ubiquity-os/plugin-template/pull/23#discussion_r1786220864","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,53 @@\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { TransformDecodeCheckError, TransformDecodeError, Value, ValueError } from \"@sinclair/typebox/value\";\n+import { Env, envSchema, envValidator, PluginSettings, pluginSettingsSchema, pluginSettingsValidator } from \"../types\";\n+\n+export async function returnDataToKernel(repoToken: string, stateId: string, output: object, eventType = \"return-data-to-ubiquity-os-kernel\") {","score":{"reward":0.54,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":2391416311,"content":"You're free to merge after this passes CI.","url":"https://github.com/ubiquity-os/plugin-template/pull/23#issuecomment-2391416311","commentType":"PULL_COLLABORATOR","score":{"reward":0.545,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":103.70000000000002,"syllables":10,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1784207422,"content":"```suggestion\r\nexport async function returnDataToKernel(repoToken: string, stateId: string, output: object, eventType = \"return-data-to-ubiquity-os-kernel\") {\r\n```\r\nWe should deprecate \"ubiquibot\" and also underscores seem unusual in a javascript context","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/25#discussion_r1784207422","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,50 @@\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { TransformDecodeCheckError, TransformDecodeError, Value, ValueError } from \"@sinclair/typebox/value\";\n+import { Env, envSchema, envValidator, pluginSettingsValidator, PluginSettings, pluginSettingsSchema } from \"../types/plugin-inputs\";\n+\n+export function validateAndDecodeSchemas(rawEnv: object, rawSettings: object) {\n+  const errors: ValueError[] = [];\n+\n+  const env = Value.Default(envSchema, rawEnv) as Env;\n+  if (!envValidator.test(env)) {\n+    for (const error of envValidator.errors(env)) {\n+      errors.push(error);\n+    }\n+  }\n+\n+  const settings = Value.Default(pluginSettingsSchema, rawSettings) as PluginSettings;\n+  if (!pluginSettingsValidator.test(settings)) {\n+    for (const error of pluginSettingsValidator.errors(settings)) {\n+      errors.push(error);\n+    }\n+  }\n+\n+  if (errors.length) {\n+    throw { errors };\n+  }\n+\n+  try {\n+    const decodedSettings = Value.Decode(pluginSettingsSchema, settings);\n+    const decodedEnv = Value.Decode(envSchema, rawEnv || {});\n+    return { decodedEnv, decodedSettings };\n+  } catch (e) {\n+    if (e instanceof TransformDecodeCheckError || e instanceof TransformDecodeError) {\n+      throw { errors: [e.error] };\n+    }\n+    throw e;\n+  }\n+}\n+\n+export async function returnDataToKernel(repoToken: string, stateId: string, output: object, eventType = \"return_data_to_ubiquibot_kernel\") {","score":{"reward":0.917,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":24.440000000000026,"syllables":26,"sentences":1,"score":0.6444000000000003},"multiplier":1,"relevance":0.7}},{"id":1784671326,"content":"Auth as our bot using the github action in the previous step as we do in many other actions to get the auth token based on the `APP_ID` and `APP_PRIVATE_KEY`","url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/25#discussion_r1784671326","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,59 @@\n+name: \"Update Configuration\"\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+\n+jobs:\n+  update:\n+    name: \"Update Configuration in manifest.json\"\n+    runs-on: ubuntu-latest\n+    permissions: write-all\n+\n+    steps:\n+      - uses: actions/checkout@v4\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20.10.0\"\n+\n+      - name: Install deps and run configuration update\n+        run: |\n+          yarn install --immutable --immutable-cache --check-cache\n+          yarn tsc --noCheck --project tsconfig.json\n+\n+      - name: Update manifest configuration using GitHub Script\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            (async () => {\n+              const fs = await import('fs/promises');\n+              const path = await import('path');\n+\n+              const { pluginSettingsSchema } = await import(\"${{ github.workspace }}/src/types/plugin-inputs.js\");\n+\n+              const manifestPath = path.resolve(\"${{ github.workspace }}\", './manifest.json');\n+              const manifest = JSON.parse(await fs.readFile(manifestPath, 'utf8'));\n+\n+              const configuration = JSON.stringify(pluginSettingsSchema);\n+              manifest[\"configuration\"] = JSON.parse(configuration);\n+\n+              const updatedManifest = JSON.stringify(manifest, null, 2);\n+              console.log('Updated manifest:', updatedManifest);\n+              await fs.writeFile(manifestPath, updatedManifest);\n+            })();\n+\n+      - name: Commit and Push generated types\n+        run: |\n+          git config --global user.name 'github-actions[bot]'\n+          git config --global user.email 'github-actions[bot]@users.noreply.github.com'","score":{"reward":1.624,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":66.62214285714289,"syllables":37,"sentences":1,"score":0.9337785714285711},"multiplier":1,"relevance":0.7}},{"id":1786199067,"content":"I'm trying to understand how you got this to work without authentication. Is it really that easy to spoof?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786199067","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,58 @@\n+name: \"Update Configuration\"\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+\n+jobs:\n+  update:\n+    name: \"Update Configuration in manifest.json\"\n+    runs-on: ubuntu-latest\n+    permissions: write-all\n+\n+    steps:\n+      - uses: actions/checkout@v4\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20.10.0\"\n+\n+      - name: Install deps and run configuration update\n+        run: |\n+          yarn install --immutable --immutable-cache --check-cache\n+          yarn tsc --noCheck --project tsconfig.json\n+\n+      - name: Update manifest configuration using GitHub Script\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            const fs = require('fs');\n+            const path = require('path');\n+\n+            const { pluginSettingsSchema } = require('./src/types/plugin-inputs');\n+\n+            const manifestPath = path.resolve(\"${{ github.workspace }}\", './manifest.json');\n+            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));\n+\n+            const configuration = JSON.stringify(pluginSettingsSchema);\n+\n+            manifest[\"configuration\"] = JSON.parse(configuration);\n+\n+            const updatedManifest = JSON.stringify(manifest, null, 2)\n+            console.log('Updated manifest:', updatedManifest);\n+            fs.writeFileSync(manifestPath, updatedManifest);\n+\n+      - name: Commit and Push generated types\n+        run: |\n+          git config --global user.name 'ubiquity-os[bot]'\n+          git config --global user.email 'ubiquity-os[bot]@users.noreply.github.com'","score":{"reward":1.116,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":74.01500000000001,"syllables":29,"sentences":2,"score":0.8598499999999999},"multiplier":1,"relevance":0.6}},{"id":1786201647,"content":"These look like they are from the tests. This doesn't look right.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786201647","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,809 @@\n {\n   \"name\": \"Conversation rewards\",\n   \"description\": \"Generate rewards for on topic conversation for closing issues as complete.\",\n-  \"ubiquity:listeners\": [ \"issues.closed\" ]\n-}\n+  \"ubiquity:listeners\": [\n+    \"issues.closed\"\n+  ],\n+  \"configuration\": {\n+    \"default\": {},\n+    \"type\": \"object\",\n+    \"properties\": {\n+      \"logLevel\": {\n+        \"default\": \"info\",\n+        \"anyOf\": [\n+          {\n+            \"const\": \"fatal\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"error\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"info\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"verbose\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"debug\",\n+            \"type\": \"string\"\n+          }\n+        ]\n+      },\n+      \"evmNetworkId\": {\n+        \"default\": 100,\n+        \"type\": \"number\"\n+      },\n+      \"evmPrivateEncrypted\": {\n+        \"type\": \"string\"\n+      },\n+      \"erc20RewardToken\": {\n+        \"default\": \"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d\",\n+        \"type\": \"string\"\n+      },\n+      \"incentives\": {\n+        \"default\": {},\n+        \"type\": \"object\",\n+        \"properties\": {\n+          \"file\": {\n+            \"type\": \"string\"\n+          },\n+          \"requirePriceLabel\": {\n+            \"default\": true,\n+            \"type\": \"boolean\"\n+          },\n+          \"contentEvaluator\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"openAi\": {\n+                    \"default\": {},\n+                    \"type\": \"object\",\n+                    \"properties\": {\n+                      \"model\": {\n+                        \"default\": \"gpt-4o-2024-08-06\",\n+                        \"type\": \"string\"\n+                      },\n+                      \"endpoint\": {\n+                        \"default\": \"\",\n+                        \"type\": \"string\"\n+                      }\n+                    },\n+                    \"required\": [\n+                      \"model\",\n+                      \"endpoint\"\n+                    ]\n+                  },\n+                  \"multipliers\": {\n+                    \"default\": [\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_SPECIFICATION\"\n+                        ],\n+                        \"relevance\": 1\n+                      }\n+                    ],\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                      \"type\": \"object\",\n+                      \"properties\": {\n+                        \"role\": {\n+                          \"type\": \"array\",\n+                          \"items\": {\n+                            \"anyOf\": [\n+                              {\n+                                \"const\": \"1_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_128\",","score":{"reward":1.287,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":115.63750000000002,"syllables":13,"sentences":2,"score":1},"multiplier":1,"relevance":0.9}},{"id":1786202597,"content":"Counting the entire comment?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786202597","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,809 @@\n {\n   \"name\": \"Conversation rewards\",\n   \"description\": \"Generate rewards for on topic conversation for closing issues as complete.\",\n-  \"ubiquity:listeners\": [ \"issues.closed\" ]\n-}\n+  \"ubiquity:listeners\": [\n+    \"issues.closed\"\n+  ],\n+  \"configuration\": {\n+    \"default\": {},\n+    \"type\": \"object\",\n+    \"properties\": {\n+      \"logLevel\": {\n+        \"default\": \"info\",\n+        \"anyOf\": [\n+          {\n+            \"const\": \"fatal\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"error\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"info\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"verbose\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"debug\",\n+            \"type\": \"string\"\n+          }\n+        ]\n+      },\n+      \"evmNetworkId\": {\n+        \"default\": 100,\n+        \"type\": \"number\"\n+      },\n+      \"evmPrivateEncrypted\": {\n+        \"type\": \"string\"\n+      },\n+      \"erc20RewardToken\": {\n+        \"default\": \"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d\",\n+        \"type\": \"string\"\n+      },\n+      \"incentives\": {\n+        \"default\": {},\n+        \"type\": \"object\",\n+        \"properties\": {\n+          \"file\": {\n+            \"type\": \"string\"\n+          },\n+          \"requirePriceLabel\": {\n+            \"default\": true,\n+            \"type\": \"boolean\"\n+          },\n+          \"contentEvaluator\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"openAi\": {\n+                    \"default\": {},\n+                    \"type\": \"object\",\n+                    \"properties\": {\n+                      \"model\": {\n+                        \"default\": \"gpt-4o-2024-08-06\",\n+                        \"type\": \"string\"\n+                      },\n+                      \"endpoint\": {\n+                        \"default\": \"\",\n+                        \"type\": \"string\"\n+                      }\n+                    },\n+                    \"required\": [\n+                      \"model\",\n+                      \"endpoint\"\n+                    ]\n+                  },\n+                  \"multipliers\": {\n+                    \"default\": [\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_SPECIFICATION\"\n+                        ],\n+                        \"relevance\": 1\n+                      }\n+                    ],\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                      \"type\": \"object\",\n+                      \"properties\": {\n+                        \"role\": {\n+                          \"type\": \"array\",\n+                          \"items\": {\n+                            \"anyOf\": [\n+                              {\n+                                \"const\": \"1_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              }\n+                            ]\n+                          }\n+                        },\n+                        \"relevance\": {\n+                          \"type\": \"number\"\n+                        }\n+                      },\n+                      \"required\": [\n+                        \"role\"\n+                      ]\n+                    }\n+                  }\n+                },\n+                \"required\": [\n+                  \"openAi\",\n+                  \"multipliers\"\n+                ]\n+              },\n+              {\n+                \"type\": \"null\"\n+              }\n+            ]\n+          },\n+          \"userExtractor\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"redeemTask\": {\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                  }\n+                },\n+                \"required\": [\n+                  \"redeemTask\"\n+                ]\n+              },\n+              {\n+                \"type\": \"null\"\n+              }\n+            ]\n+          },\n+          \"dataPurge\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"type\": \"object\",\n+                \"properties\": {}\n+              },\n+              {\n+                \"type\": \"null\"\n+              }\n+            ]\n+          },\n+          \"formattingEvaluator\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"default\": {},\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"multipliers\": {\n+                    \"minItems\": 1,\n+                    \"default\": [\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_SPECIFICATION\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_AUTHOR\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.2\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_ASSIGNEE\"\n+                        ],\n+                        \"multiplier\": 0,\n+                        \"rewards\": {\n+                          \"wordValue\": 0\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_COLLABORATOR\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_CONTRIBUTOR\"\n+                        ],\n+                        \"multiplier\": 0.25,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_SPECIFICATION\"\n+                        ],\n+                        \"multiplier\": 0,\n+                        \"rewards\": {\n+                          \"wordValue\": 0\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_AUTHOR\"\n+                        ],\n+                        \"multiplier\": 2,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.2\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_ASSIGNEE\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_COLLABORATOR\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_CONTRIBUTOR\"\n+                        ],\n+                        \"multiplier\": 0.25,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      }\n+                    ],\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                      \"type\": \"object\",\n+                      \"properties\": {\n+                        \"role\": {\n+                          \"minItems\": 1,\n+                          \"type\": \"array\",\n+                          \"items\": {\n+                            \"anyOf\": [\n+                              {\n+                                \"const\": \"1_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              }\n+                            ]\n+                          }\n+                        },\n+                        \"multiplier\": {\n+                          \"type\": \"number\"\n+                        },\n+                        \"rewards\": {\n+                          \"default\": {},\n+                          \"type\": \"object\",\n+                          \"properties\": {\n+                            \"html\": {\n+                              \"default\": {\n+                                \"br\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"code\": {\n+                                  \"score\": 5,\n+                                  \"countWords\": false\n+                                },\n+                                \"p\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"em\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"img\": {\n+                                  \"score\": 5,\n+                                  \"countWords\": true\n+                                },\n+                                \"strong\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": false\n+                                },\n+                                \"blockquote\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": false\n+                                },\n+                                \"h1\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h2\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h3\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h4\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h5\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h6\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"a\": {\n+                                  \"score\": 5,\n+                                  \"countWords\": true\n+                                },\n+                                \"li\": {\n+                                  \"score\": 0.5,\n+                                  \"countWords\": true\n+                                },\n+                                \"ul\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"td\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"hr\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"pre\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"ol\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                }\n+                              },\n+                              \"type\": \"object\",\n+                              \"patternProperties\": {\n+                                \"^(.*)$\": {","score":{"reward":0.114,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":54.72500000000002,"syllables":7,"sentences":1,"score":0.9472500000000003},"multiplier":1,"relevance":0.2}},{"id":1786204546,"content":"I still have a gut feeling that this should be in a separate file. One `manifest.json` is meant to be hand edited by the plugin developer, and another `config.manifest.json` (?) is automatically generated and should not be manually edited by any developer. Same as how other tools do it.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786204546","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,809 @@\n {\n   \"name\": \"Conversation rewards\",\n   \"description\": \"Generate rewards for on topic conversation for closing issues as complete.\",\n-  \"ubiquity:listeners\": [ \"issues.closed\" ]\n-}\n+  \"ubiquity:listeners\": [\n+    \"issues.closed\"\n+  ],\n+  \"configuration\": {\n+    \"default\": {},\n+    \"type\": \"object\",\n+    \"properties\": {\n+      \"logLevel\": {\n+        \"default\": \"info\",\n+        \"anyOf\": [\n+          {\n+            \"const\": \"fatal\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"error\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"info\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"verbose\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"debug\",\n+            \"type\": \"string\"\n+          }\n+        ]\n+      },\n+      \"evmNetworkId\": {\n+        \"default\": 100,\n+        \"type\": \"number\"\n+      },\n+      \"evmPrivateEncrypted\": {\n+        \"type\": \"string\"\n+      },\n+      \"erc20RewardToken\": {\n+        \"default\": \"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d\",\n+        \"type\": \"string\"\n+      },\n+      \"incentives\": {\n+        \"default\": {},\n+        \"type\": \"object\",\n+        \"properties\": {\n+          \"file\": {\n+            \"type\": \"string\"\n+          },\n+          \"requirePriceLabel\": {\n+            \"default\": true,\n+            \"type\": \"boolean\"\n+          },\n+          \"contentEvaluator\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"openAi\": {\n+                    \"default\": {},\n+                    \"type\": \"object\",\n+                    \"properties\": {\n+                      \"model\": {\n+                        \"default\": \"gpt-4o-2024-08-06\",\n+                        \"type\": \"string\"\n+                      },\n+                      \"endpoint\": {\n+                        \"default\": \"\",\n+                        \"type\": \"string\"\n+                      }\n+                    },\n+                    \"required\": [\n+                      \"model\",\n+                      \"endpoint\"\n+                    ]\n+                  },\n+                  \"multipliers\": {\n+                    \"default\": [\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_SPECIFICATION\"\n+                        ],\n+                        \"relevance\": 1\n+                      }\n+                    ],\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                      \"type\": \"object\",\n+                      \"properties\": {\n+                        \"role\": {\n+                          \"type\": \"array\",\n+                          \"items\": {\n+                            \"anyOf\": [\n+                              {\n+                                \"const\": \"1_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              }\n+                            ]\n+                          }\n+                        },\n+                        \"relevance\": {\n+                          \"type\": \"number\"\n+                        }\n+                      },\n+                      \"required\": [\n+                        \"role\"\n+                      ]\n+                    }\n+                  }\n+                },\n+                \"required\": [\n+                  \"openAi\",\n+                  \"multipliers\"\n+                ]\n+              },\n+              {\n+                \"type\": \"null\"\n+              }\n+            ]\n+          },\n+          \"userExtractor\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"redeemTask\": {\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                  }\n+                },\n+                \"required\": [\n+                  \"redeemTask\"\n+                ]\n+              },\n+              {\n+                \"type\": \"null\"\n+              }\n+            ]\n+          },\n+          \"dataPurge\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"type\": \"object\",\n+                \"properties\": {}\n+              },\n+              {\n+                \"type\": \"null\"\n+              }\n+            ]\n+          },\n+          \"formattingEvaluator\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"default\": {},\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"multipliers\": {\n+                    \"minItems\": 1,\n+                    \"default\": [\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_SPECIFICATION\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_AUTHOR\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.2\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_ASSIGNEE\"\n+                        ],\n+                        \"multiplier\": 0,\n+                        \"rewards\": {\n+                          \"wordValue\": 0\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_COLLABORATOR\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_CONTRIBUTOR\"\n+                        ],\n+                        \"multiplier\": 0.25,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_SPECIFICATION\"\n+                        ],\n+                        \"multiplier\": 0,\n+                        \"rewards\": {\n+                          \"wordValue\": 0\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_AUTHOR\"\n+                        ],\n+                        \"multiplier\": 2,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.2\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_ASSIGNEE\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_COLLABORATOR\"\n+                        ],\n+                        \"multiplier\": 1,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      },\n+                      {\n+                        \"role\": [\n+                          \"PULL_CONTRIBUTOR\"\n+                        ],\n+                        \"multiplier\": 0.25,\n+                        \"rewards\": {\n+                          \"wordValue\": 0.1\n+                        }\n+                      }\n+                    ],\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                      \"type\": \"object\",\n+                      \"properties\": {\n+                        \"role\": {\n+                          \"minItems\": 1,\n+                          \"type\": \"array\",\n+                          \"items\": {\n+                            \"anyOf\": [\n+                              {\n+                                \"const\": \"1_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              }\n+                            ]\n+                          }\n+                        },\n+                        \"multiplier\": {\n+                          \"type\": \"number\"\n+                        },\n+                        \"rewards\": {\n+                          \"default\": {},\n+                          \"type\": \"object\",\n+                          \"properties\": {\n+                            \"html\": {\n+                              \"default\": {\n+                                \"br\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"code\": {\n+                                  \"score\": 5,\n+                                  \"countWords\": false\n+                                },\n+                                \"p\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"em\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"img\": {\n+                                  \"score\": 5,\n+                                  \"countWords\": true\n+                                },\n+                                \"strong\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": false\n+                                },\n+                                \"blockquote\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": false\n+                                },\n+                                \"h1\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h2\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h3\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h4\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h5\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"h6\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"a\": {\n+                                  \"score\": 5,\n+                                  \"countWords\": true\n+                                },\n+                                \"li\": {\n+                                  \"score\": 0.5,\n+                                  \"countWords\": true\n+                                },\n+                                \"ul\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                },\n+                                \"td\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"hr\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"pre\": {\n+                                  \"score\": 0,\n+                                  \"countWords\": true\n+                                },\n+                                \"ol\": {\n+                                  \"score\": 1,\n+                                  \"countWords\": true\n+                                }\n+                              },\n+                              \"type\": \"object\",\n+                              \"patternProperties\": {\n+                                \"^(.*)$\": {\n+                                  \"type\": \"object\",\n+                                  \"properties\": {\n+                                    \"score\": {\n+                                      \"type\": \"number\"\n+                                    },\n+                                    \"countWords\": {\n+                                      \"default\": true,\n+                                      \"type\": \"boolean\"\n+                                    }\n+                                  },\n+                                  \"required\": [\n+                                    \"score\",\n+                                    \"countWords\"\n+                                  ]\n+                                }\n+                              }\n+                            },\n+                            \"wordValue\": {\n+                              \"default\": 0.1,\n+                              \"type\": \"number\"\n+                            }\n+                          },\n+                          \"required\": [\n+                            \"html\",\n+                            \"wordValue\"\n+                          ]\n+                        }\n+                      },\n+                      \"required\": [\n+                        \"role\",\n+                        \"multiplier\",\n+                        \"rewards\"\n+                      ]\n+                    }\n+                  },\n+                  \"wordCountExponent\": {\n+                    \"default\": 0.85,\n+                    \"type\": \"number\"\n+                  }\n+                },\n+                \"required\": [\n+                  \"multipliers\",\n+                  \"wordCountExponent\"\n+                ]\n+              },\n+              {\n+                \"type\": \"null\"\n+              }\n+            ]\n+          },\n+          \"permitGeneration\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"type\": \"object\",\n+                \"properties\": {}\n+              },\n+              {\n+                \"type\": \"null\"\n+              }\n+            ]\n+          },\n+          \"githubComment\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"default\": {},\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"post\": {\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                  },\n+                  \"debug\": {\n+                    \"default\": false,\n+                    \"type\": \"boolean\"\n+                  }\n+                },\n+                \"required\": [\n+                  \"post\",\n+                  \"debug\"\n+                ]\n+              },\n+              {\n+                \"type\": \"null\"\n+              }\n+            ]\n+          }\n+        },\n+        \"required\": [\n+          \"requirePriceLabel\",\n+          \"contentEvaluator\",\n+          \"userExtractor\",\n+          \"dataPurge\",\n+          \"formattingEvaluator\",\n+          \"permitGeneration\",\n+          \"githubComment\"\n+        ]\n+      },\n+      \"dataCollection\": {\n+        \"default\": {},\n+        \"type\": \"object\",\n+        \"properties\": {\n+          \"maxAttempts\": {\n+            \"default\": 10,\n+            \"minimum\": 1,\n+            \"type\": \"number\"\n+          },\n+          \"delayMs\": {\n+            \"default\": 1000,\n+            \"minimum\": 100,\n+            \"type\": \"number\"\n+          }\n+        },\n+        \"required\": [\n+          \"maxAttempts\",\n+          \"delayMs\"\n+        ]\n+      }\n+    },\n+    \"required\": [\n+      \"logLevel\",\n+      \"evmNetworkId\",\n+      \"evmPrivateEncrypted\",\n+      \"erc20RewardToken\",\n+      \"incentives\",\n+      \"dataCollection\"\n+    ]\n+  }\n+}","score":{"reward":2.673,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":64.58423913043481,"syllables":71,"sentences":4,"score":0.9541576086956519},"multiplier":1,"relevance":0.9}},{"id":1786206294,"content":"This is really useful for QA, you shouldn't delete as it will be re-added right away again.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786206294","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.253,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":76.2342105263158,"syllables":25,"sentences":1,"score":0.8376578947368419},"multiplier":1,"relevance":0.7}},{"id":1786206892,"content":"We should deprecate \"ubiquibot\" and why do we have underscores in a js context?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786206892","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,20 @@\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+\n+export async function returnDataToKernel(\n+  repoToken: string,\n+  stateId: string,\n+  output: object,\n+  eventType = \"return_data_to_ubiquibot_kernel\"","score":{"reward":0.906,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":59.68214285714288,"syllables":22,"sentences":1,"score":0.9968214285714287},"multiplier":1,"relevance":0.6}},{"id":1786216448,"content":"I guess its possible because we added this app with write permissions to this repository. Good find! This seems super simple.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786216448","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,58 @@\n+name: \"Update Configuration\"\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+\n+jobs:\n+  update:\n+    name: \"Update Configuration in manifest.json\"\n+    runs-on: ubuntu-latest\n+    permissions: write-all\n+\n+    steps:\n+      - uses: actions/checkout@v4\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20.10.0\"\n+\n+      - name: Install deps and run configuration update\n+        run: |\n+          yarn install --immutable --immutable-cache --check-cache\n+          yarn tsc --noCheck --project tsconfig.json\n+\n+      - name: Update manifest configuration using GitHub Script\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            const fs = require('fs');\n+            const path = require('path');\n+\n+            const { pluginSettingsSchema } = require('./src/types/plugin-inputs');\n+\n+            const manifestPath = path.resolve(\"${{ github.workspace }}\", './manifest.json');\n+            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));\n+\n+            const configuration = JSON.stringify(pluginSettingsSchema);\n+\n+            manifest[\"configuration\"] = JSON.parse(configuration);\n+\n+            const updatedManifest = JSON.stringify(manifest, null, 2)\n+            console.log('Updated manifest:', updatedManifest);\n+            fs.writeFileSync(manifestPath, updatedManifest);\n+\n+      - name: Commit and Push generated types\n+        run: |\n+          git config --global user.name 'ubiquity-os[bot]'\n+          git config --global user.email 'ubiquity-os[bot]@users.noreply.github.com'","score":{"reward":0.965,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":70.81571428571431,"syllables":32,"sentences":3,"score":0.8918428571428569},"multiplier":1,"relevance":0.5}},{"id":1786660853,"content":"I have little understanding of this.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786660853","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,809 @@\n {\n   \"name\": \"Conversation rewards\",\n   \"description\": \"Generate rewards for on topic conversation for closing issues as complete.\",\n-  \"ubiquity:listeners\": [ \"issues.closed\" ]\n-}\n+  \"ubiquity:listeners\": [\n+    \"issues.closed\"\n+  ],\n+  \"configuration\": {\n+    \"default\": {},\n+    \"type\": \"object\",\n+    \"properties\": {\n+      \"logLevel\": {\n+        \"default\": \"info\",\n+        \"anyOf\": [\n+          {\n+            \"const\": \"fatal\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"error\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"info\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"verbose\",\n+            \"type\": \"string\"\n+          },\n+          {\n+            \"const\": \"debug\",\n+            \"type\": \"string\"\n+          }\n+        ]\n+      },\n+      \"evmNetworkId\": {\n+        \"default\": 100,\n+        \"type\": \"number\"\n+      },\n+      \"evmPrivateEncrypted\": {\n+        \"type\": \"string\"\n+      },\n+      \"erc20RewardToken\": {\n+        \"default\": \"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d\",\n+        \"type\": \"string\"\n+      },\n+      \"incentives\": {\n+        \"default\": {},\n+        \"type\": \"object\",\n+        \"properties\": {\n+          \"file\": {\n+            \"type\": \"string\"\n+          },\n+          \"requirePriceLabel\": {\n+            \"default\": true,\n+            \"type\": \"boolean\"\n+          },\n+          \"contentEvaluator\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"openAi\": {\n+                    \"default\": {},\n+                    \"type\": \"object\",\n+                    \"properties\": {\n+                      \"model\": {\n+                        \"default\": \"gpt-4o-2024-08-06\",\n+                        \"type\": \"string\"\n+                      },\n+                      \"endpoint\": {\n+                        \"default\": \"\",\n+                        \"type\": \"string\"\n+                      }\n+                    },\n+                    \"required\": [\n+                      \"model\",\n+                      \"endpoint\"\n+                    ]\n+                  },\n+                  \"multipliers\": {\n+                    \"default\": [\n+                      {\n+                        \"role\": [\n+                          \"ISSUE_SPECIFICATION\"\n+                        ],\n+                        \"relevance\": 1\n+                      }\n+                    ],\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                      \"type\": \"object\",\n+                      \"properties\": {\n+                        \"role\": {\n+                          \"type\": \"array\",\n+                          \"items\": {\n+                            \"anyOf\": [\n+                              {\n+                                \"const\": \"1_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"1_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"2_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_128\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_ASSIGNEE\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_AUTHOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_COLLABORATOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_CONTRIBUTOR\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"PULL_SPECIFICATION\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_4\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_8\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_16\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_32\",\n+                                \"type\": \"string\"\n+                              },\n+                              {\n+                                \"const\": \"ISSUE_128\",","score":{"reward":0.079,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":59.745000000000005,"syllables":10,"sentences":1,"score":0.9974500000000001},"multiplier":1,"relevance":0.1}},{"id":1786669250,"content":"I don't like this removal of the file name extension.","url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/19#discussion_r1786669250","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -37,7 +37,7 @@ describe(\"Plugin tests\", () => {\n \n   it(\"Should serve the manifest file\", async () => {\n     const worker = (await import(\"../src/worker\")).default;\n-    const response = await worker.fetch(new Request(\"http://localhost/manifest.json\"), {\n+    const response = await worker.fetch(new Request(\"http://localhost/manifest\"), {","score":{"reward":0.976,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":72.61545454545457,"syllables":16,"sentences":1,"score":0.8738454545454544},"multiplier":1,"relevance":0.8}},{"id":2391837757,"content":"I think just request my review on a single instance, and apply those requested changes all in one shot instead of asking me to review every one.","url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/18#issuecomment-2391837757","commentType":"PULL_COLLABORATOR","score":{"reward":1.386,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":60.363333333333344,"syllables":38,"sentences":1,"score":0.9963666666666665},"multiplier":1,"relevance":0.6}},{"id":1786667259,"content":"I noticed this version of TypeScript throws a warning with our linter but I suppose we can wait for the linter to upgrade too.","url":"https://github.com/ubiquity-os-marketplace/command-query/pull/13#discussion_r1786667259","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -67,8 +68,8 @@\n     \"prettier\": \"^3.2.5\",\n     \"supabase\": \"1.167.4\",\n     \"ts-jest\": \"29.1.2\",\n-    \"typescript\": \"^5.3.3\",\n-    \"wrangler\": \"3.57.0\"\n+    \"typescript\": \"5.6.2\",","score":{"reward":1.065,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":66.15000000000003,"syllables":33,"sentences":1,"score":0.9384999999999997},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2319646651,"effect":{"addition":246,"deletion":22},"reward":2.68,"priority":1},{"reviewId":2342611060,"effect":{"addition":330,"deletion":153},"reward":4.83,"priority":1},{"reviewId":2345930150,"effect":{"addition":26,"deletion":20},"reward":0.46,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112"},{"reviews":[{"reviewId":2341992107,"effect":{"addition":236,"deletion":51},"reward":2.87,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21"},{"reviews":[{"reviewId":2342022692,"effect":{"addition":139,"deletion":34},"reward":1.73,"priority":1},{"reviewId":2345612134,"effect":{"addition":22,"deletion":6},"reward":0.28,"priority":1}],"url":"https://github.com/ubiquity-os/plugin-template/pull/23"},{"reviews":[{"reviewId":2342452831,"effect":{"addition":187,"deletion":22},"reward":2.09,"priority":1},{"reviewId":2346395557,"effect":{"addition":3,"deletion":3},"reward":0.06,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/25"},{"reviews":[{"reviewId":2345577160,"effect":{"addition":1187,"deletion":227},"reward":14.14,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127"},{"reviews":[{"reviewId":2346392190,"effect":{"addition":929,"deletion":82},"reward":10.11,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/19"},{"url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/18"},{"reviews":[{"reviewId":2346388909,"effect":{"addition":137,"deletion":23},"reward":1.6,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/command-query/pull/13"},{"url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/37"},{"url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/63"},{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/146"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 100.64 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>11</td><td>40.85</td></tr><tr><td>Issue</td><td>Comment</td><td>19</td><td>27.61</td></tr><tr><td>Review</td><td>Comment</td><td>30</td><td>32.18</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112\" target=\"_blank\" rel=\"noopener\">#112</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+246 -22</td><td>1</td><td>2.68</td></tr><tr><td>+330 -153</td><td>1</td><td>4.83</td></tr><tr><td>+26 -20</td><td>1</td><td>0.46</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21\" target=\"_blank\" rel=\"noopener\">#21</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+236 -51</td><td>1</td><td>2.87</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/23\" target=\"_blank\" rel=\"noopener\">#23</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+139 -34</td><td>1</td><td>1.73</td></tr><tr><td>+22 -6</td><td>1</td><td>0.28</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/25\" target=\"_blank\" rel=\"noopener\">#25</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+187 -22</td><td>1</td><td>2.09</td></tr><tr><td>+3 -3</td><td>1</td><td>0.06</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127\" target=\"_blank\" rel=\"noopener\">#127</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1187 -227</td><td>1</td><td>14.14</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/19\" target=\"_blank\" rel=\"noopener\">#19</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+929 -82</td><td>1</td><td>10.11</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/13\" target=\"_blank\" rel=\"noopener\">#13</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+137 -23</td><td>1</td><td>1.6</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2255305866\" target=\"_blank\" rel=\"noopener\">I think its fine given that we can make 5000 requests per hour, &hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.448</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2257360108\" target=\"_blank\" rel=\"noopener\">We can do this in a plugin instead?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.728</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2257545837\" target=\"_blank\" rel=\"noopener\">Cool ideaResearch will reveal the answer!</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.528</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2316829758\" target=\"_blank\" rel=\"noopener\">Can you elaborate this isn't clear to others</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.525</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2362655936\" target=\"_blank\" rel=\"noopener\">Not sure let's try. Make sure it comments on the commit AND tags&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.899</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2362667593\" target=\"_blank\" rel=\"noopener\">Also use the [!CAUTION]syntaxThe red one whatever the syntax &hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.048</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2365434313\" target=\"_blank\" rel=\"noopener\">Yes do both of your suggestions</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.518</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2368508182\" target=\"_blank\" rel=\"noopener\">Oh I thought the validator is one and done inside the kernel. Th&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    br:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.196</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2368689050\" target=\"_blank\" rel=\"noopener\">My idea was to import and run the ajv validation code. Could be &hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.133</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2368820674\" target=\"_blank\" rel=\"noopener\">I think we need to figure this out eventually because of the mar&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.28</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2370199742\" target=\"_blank\" rel=\"noopener\">My vision is not too different from a Docker-like approach. We c&hellip;</a></h6></td><td><details><summary>2.64</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;  result: 0&#13;regex:&#13;  wordCount: 85&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.648</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2370895994\" target=\"_blank\" rel=\"noopener\">One expensive idea is to consume the type with &#96;o1-mini&#96;&hellip;</a></h6></td><td><details><summary>2.22</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 151&#13;  wordValue: 0.1&#13;  result: 2.22&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.592</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2375322411\" target=\"_blank\" rel=\"noopener\">Admin can make a config change, the Action runs and posts a comm&hellip;</a></h6></td><td><details><summary>2.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.691</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2375890252\" target=\"_blank\" rel=\"noopener\">@whilefoo  you can make the decision</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.474</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2377511227\" target=\"_blank\" rel=\"noopener\">Standard location (root, sibling of manifest) seems simplest</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.752</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2382249225\" target=\"_blank\" rel=\"noopener\">Speed isn't as important as accuracy I think. I would rather one&hellip;</a></h6></td><td><details><summary>2.23</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 42&#13;  wordValue: 0.1&#13;  result: 2.23&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.232</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2382311848\" target=\"_blank\" rel=\"noopener\">Okay then lets do JSON and then maybe a future task can be a slo&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.881</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2393167518\" target=\"_blank\" rel=\"noopener\">I can add to marketplace then</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.518</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2396821994\" target=\"_blank\" rel=\"noopener\">What about default? Its supposed to credit 0 for p tags, but cre&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.519</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#pullrequestreview-2319646651\" target=\"_blank\" rel=\"noopener\">Can you explain to me how this works:</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.198</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1784301479\" target=\"_blank\" rel=\"noopener\">Let's deprecate &#96;ubiquibot&#96; in favor of &#96;ubiquity-os&hellip;</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.231</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1786421156\" target=\"_blank\" rel=\"noopener\">No file extension? That seems wrong. Even if you changed it on t&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.464</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1787167995\" target=\"_blank\" rel=\"noopener\">The file is a json file. It should be with the file extension fo&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.337</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#issuecomment-2388377789\" target=\"_blank\" rel=\"noopener\">404</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.072</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#issuecomment-2391418882\" target=\"_blank\" rel=\"noopener\">That screenshot looks great. Good work. It would be really cool &hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.776</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#pullrequestreview-2341992107\" target=\"_blank\" rel=\"noopener\">I think handling the undefined elements before placing into the &hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.416</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#discussion_r1783904580\" target=\"_blank\" rel=\"noopener\">I'm debating if we should have a different manifest file for thi&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.617</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#discussion_r1783909622\" target=\"_blank\" rel=\"noopener\">We should filter out empty elements before placing into the arra&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.032</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#discussion_r1783909892\" target=\"_blank\" rel=\"noopener\">Or else you get situations like this</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.581</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#discussion_r1783910830\" target=\"_blank\" rel=\"noopener\">What about our logger?It seems to me that we spent all this tim&hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.946</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#issuecomment-2392513147\" target=\"_blank\" rel=\"noopener\">I see potential in this being a general purpose tool to update a&hellip;</a></h6></td><td><details><summary>3.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0.1&#13;  result: 2.4&#13;</pre></details></td><td>0.5</td><td>1</td><td>2.195</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21#issuecomment-2392790695\" target=\"_blank\" rel=\"noopener\">It's fine but to simplify I need to specify the target file for &hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.525</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/23#discussion_r1783925398\" target=\"_blank\" rel=\"noopener\">Probably best to compile the js with &#96;ncc&#96; This will al&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 74&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.344</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/23#discussion_r1786220299\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"description\": \"ts-template for Ubi&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.5</td><td>1</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/23#discussion_r1786220864\" target=\"_blank\" rel=\"noopener\">Cool to see you updated this string &#96;return-data-to-ubiquity&hellip;</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.54</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/23#issuecomment-2391416311\" target=\"_blank\" rel=\"noopener\">You're free to merge after this passes CI.</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.545</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/25#discussion_r1784207422\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionexport async function returnDataToKer&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.917</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/25#discussion_r1784671326\" target=\"_blank\" rel=\"noopener\">Auth as our bot using the github action in the previous step as &hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.624</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786199067\" target=\"_blank\" rel=\"noopener\">I'm trying to understand how you got this to work without authen&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.116</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786201647\" target=\"_blank\" rel=\"noopener\">These look like they are from the tests. This doesn't look right.</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.287</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786202597\" target=\"_blank\" rel=\"noopener\">Counting the entire comment?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.114</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786204546\" target=\"_blank\" rel=\"noopener\">I still have a gut feeling that this should be in a separate fil&hellip;</a></h6></td><td><details><summary>2.31</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 46&#13;  wordValue: 0.1&#13;  result: 2.31&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.673</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786206294\" target=\"_blank\" rel=\"noopener\">This is really useful for QA, you shouldn't delete as it will be&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.253</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786206892\" target=\"_blank\" rel=\"noopener\">We should deprecate \"ubiquibot\" and why do we have underscores i&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.906</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786216448\" target=\"_blank\" rel=\"noopener\">I guess its possible because we added this app with write permis&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.965</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127#discussion_r1786660853\" target=\"_blank\" rel=\"noopener\">I have little understanding of this.</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.079</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/19#discussion_r1786669250\" target=\"_blank\" rel=\"noopener\">I don't like this removal of the file name extension.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.976</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-wallet/pull/18#issuecomment-2391837757\" target=\"_blank\" rel=\"noopener\">I think just request my review on a single instance, and apply t&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.386</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-query/pull/13#discussion_r1786667259\" target=\"_blank\" rel=\"noopener\">I noticed this version of TypeScript throws a warning with our l&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.5</td><td>1</td><td>1.065</td></tr></tbody></table></details>"},"whilefoo":{"total":22.827,"userId":139262667,"comments":[{"id":2373600159,"content":"Yeah my first idea was that worker plugins could serve configuration schema through the manifest but that's too cumbersome to write in the manifest so instead it could just convert typebox schema to json schema and send it over a dedicated endpoint, but the problem is with action plugins because we can't get a fast and sync response","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2373600159","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.682,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":60,"wordValue":0.1,"result":2.52},"readability":{"fleschKincaid":20.445000000000007,"syllables":89,"sentences":1,"score":0.60445},"multiplier":1,"relevance":0.9}},{"id":2377253240,"content":"What do you mean by environment validation?\r\nI think decode validation is not that important and also I think it's more secure if the kernel does validation and not the plugin which can access the configuration.\r\nHow would the action know where the configuration schema is located in the codebase? Unless the developer sets a path to the file and name of the variable","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2377253240","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.624,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":1,"words":{"wordCount":65,"wordValue":0.1,"result":2.56},"readability":{"fleschKincaid":53.67971153846156,"syllables":105,"sentences":4,"score":0.9367971153846156},"multiplier":1,"relevance":0.8}},{"id":2383939887,"content":"Another benefit is that doing validation with JSON avoids using KV","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2383939887","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.726,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":41.8518181818182,"syllables":20,"sentences":1,"score":0.818518181818182},"multiplier":1,"relevance":0.6}},{"id":1774809461,"content":"i think it's better to negate the ifs so it's not nesting so much","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1774809461","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,260 @@\n+import { GitHubContext } from \"../github-context\";\n+import { CONFIG_FULL_PATH, getConfigurationFromRepo } from \"../utils/config\";\n+import YAML, { LineCounter, Node, YAMLError } from \"yaml\";\n+import { ValueError } from \"typebox-validators\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n+import { PluginChainState, PluginInput, PluginOutput, pluginOutputSchema } from \"../types/plugin\";\n+import { isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { Value, ValueErrorType } from \"@sinclair/typebox/value\";\n+import { pluginValidationResponseSchema, StateValidation, stateValidationErrorSchemaValidator, stateValidationSchema } from \"../types/state-validation-payload\";\n+\n+function constructErrorBody(\n+  errors: Iterable<ValueError> | (YAML.YAMLError | ValueError)[],\n+  rawData: string | null,\n+  repository: GitHubContext<\"push\">[\"payload\"][\"repository\"],\n+  after: string\n+) {\n+  const body = [];\n+  if (errors) {\n+    for (const error of errors) {\n+      body.push(\"> [!CAUTION]\\n\");\n+      if (error instanceof YAMLError) {\n+        body.push(`> https://github.com/${repository.owner?.login}/${repository.name}/blob/${after}/${CONFIG_FULL_PATH}#L${error.linePos?.[0].line || 0}`);\n+      } else if (rawData) {\n+        const lineCounter = new LineCounter();\n+        const doc = YAML.parseDocument(rawData, { lineCounter });\n+        const path = error.path.split(\"/\").filter((o) => o);\n+        if (error.type === ValueErrorType.ObjectRequiredProperty) {\n+          path.splice(path.length - 1, 1);\n+        }\n+        const node = doc.getIn(path, true) as Node;\n+        const linePosStart = lineCounter.linePos(node?.range?.[0] || 0);\n+        body.push(`> https://github.com/${repository.owner?.login}/${repository.name}/blob/${after}/${CONFIG_FULL_PATH}#L${linePosStart.line}`);\n+      }\n+      const message = [];\n+      if (error instanceof YAMLError) {\n+        message.push(error.message);\n+      } else {\n+        message.push(`path: ${error.path}\\n`);\n+        message.push(`value: ${error.value}\\n`);\n+        message.push(`message: ${error.message}`);\n+      }\n+      body.push(`\\n> \\`\\`\\`\\n`);\n+      body.push(`> ${message.join(\"\").replaceAll(\"\\n\", \"\\n> \")}`);\n+      body.push(`\\n> \\`\\`\\`\\n\\n`);\n+    }\n+  }\n+  return body;\n+}\n+\n+export async function handleActionValidationWorkflowCompleted(context: GitHubContext<\"repository_dispatch\">) {\n+  const { payload } = context;\n+  const { client_payload } = payload;\n+  let pluginOutput: PluginOutput;\n+  let stateValidation: StateValidation;\n+\n+  try {\n+    pluginOutput = Value.Decode(pluginOutputSchema, client_payload);\n+  } catch (error) {\n+    console.error(\"[handleActionValidationWorkflowCompleted]: Cannot decode plugin output\", error);\n+    throw error;\n+  }\n+\n+  const state = (await context.eventHandler.pluginChainState.get(pluginOutput.state_id)) as PluginChainState<\"push\">;\n+\n+  if (!state) {\n+    console.error(`[handleActionValidationWorkflowCompleted]: No state found for plugin chain ${pluginOutput.state_id}`);\n+    return;\n+  }\n+\n+  console.log(\"Received Action output result for validation, will process.\", pluginOutput.output);\n+\n+  const errors = pluginOutput.output.errors as ValueError[];\n+  try {\n+    stateValidation = Value.Decode(stateValidationSchema, state.additionalProperties);\n+  } catch (e) {\n+    console.error(`[handleActionValidationWorkflowCompleted]: Cannot decode state properties`);\n+    throw e;\n+  }\n+  if (!stateValidation) {\n+    console.error(`[handleActionValidationWorkflowCompleted]: State validation is invalid for ${pluginOutput.state_id}`);\n+    return;\n+  }\n+\n+  const { rawData, path } = stateValidation;\n+  try {\n+    if (errors.length && state.eventPayload.repository.owner) {\n+      const body = [];\n+      if (errors.length) {\n+        body.push(\n+          ...constructErrorBody(\n+            errors.map((err) => ({ ...err, path: `${path}${err.path}` })),\n+            rawData as string,\n+            state.eventPayload.repository as GitHubContext<\"push\">[\"payload\"][\"repository\"],\n+            state.eventPayload.after as string\n+          )\n+        );\n+      }\n+      await createCommitComment(\n+        context,\n+        {\n+          owner: state.eventPayload.repository.owner.login,\n+          repo: state.eventPayload.repository.name,\n+          commitSha: state.eventPayload.after as string,\n+          userLogin: state.eventPayload.sender?.login,\n+        },\n+        body\n+      );\n+    }\n+  } catch (e) {\n+    console.error(\"handleActionValidationWorkflowCompleted\", e);\n+  }\n+}\n+\n+async function createCommitComment(\n+  context: GitHubContext,\n+  { owner, repo, commitSha, userLogin }: { owner: string; repo: string; commitSha: string; userLogin?: string },\n+  body: string[]\n+) {\n+  const { octokit } = context;\n+\n+  const commit = (\n+    await octokit.rest.repos.listCommentsForCommit({\n+      owner: owner,\n+      repo: repo,\n+      commit_sha: commitSha,\n+    })\n+  ).data\n+    .filter((o) => o.user?.type === \"Bot\")\n+    .pop();\n+  if (commit) {\n+    await octokit.rest.repos.updateCommitComment({\n+      owner: owner,\n+      repo: repo,\n+      commit_sha: commitSha,\n+      comment_id: commit.id,\n+      body: `${commit.body}\\n${body.join(\"\")}`,\n+    });\n+  } else {\n+    body.unshift(`@${userLogin} Configuration is invalid.\\n`);\n+    await octokit.rest.repos.createCommitComment({\n+      owner: owner,\n+      repo: repo,\n+      commit_sha: commitSha,\n+      body: body.join(\"\"),\n+    });\n+  }\n+}\n+\n+async function checkPluginConfigurations(context: GitHubContext<\"push\">, config: PluginConfiguration, rawData: string | null) {\n+  const { payload, eventHandler } = context;\n+  const errors: (ValueError | YAML.YAMLError)[] = [];\n+\n+  for (let i = 0; i < config.plugins.length; ++i) {\n+    const { uses } = config.plugins[i];\n+    for (let j = 0; j < uses.length; ++j) {\n+      const { plugin, with: args } = uses[j];\n+      const isGithubPluginObject = isGithubPlugin(plugin);\n+      const stateId = crypto.randomUUID();\n+      const token = payload.installation ? await eventHandler.getToken(payload.installation.id) : \"\";\n+      const ref = isGithubPluginObject ? (plugin.ref ?? (await getDefaultBranch(context, plugin.owner, plugin.repo))) : plugin;\n+      const inputs = new PluginInput(context.eventHandler, stateId, context.key, payload, args, token, ref);\n+\n+      if (!isGithubPluginObject) {\n+        try {\n+          const response = await dispatchWorker(`${plugin}/manifest`, await inputs.getWorkerInputs());\n+          const responseWithDefaults = Value.Default(pluginValidationResponseSchema, response) as StateValidation;\n+          if (!stateValidationErrorSchemaValidator.test(responseWithDefaults)) {\n+            console.error(\"Malformed response from the endpoints\");\n+            for (const err of stateValidationErrorSchemaValidator.errors(responseWithDefaults)) {\n+              console.error(err);\n+            }\n+          }\n+          const decodedResponse = Value.Decode(pluginValidationResponseSchema, responseWithDefaults);\n+          if (decodedResponse.errors.length) {\n+            errors.push(...decodedResponse.errors.map((err) => ({ ...err, path: `plugins/${i}/uses/${j}/with${err.path}` })));\n+          }\n+        } catch (e) {\n+          errors.push({\n+            path: `plugins/${i}/uses/${j}`,\n+            message: `Failed to reach plugin endpoint: ${e}`,\n+            value: plugin,\n+            type: 0,\n+            schema: stateValidationSchema,\n+          });\n+        }\n+      } else {\n+        try {\n+          await dispatchWorkflow(context, {\n+            owner: plugin.owner,\n+            repository: plugin.repo,\n+            workflowId: \"validate-schema.yml\",\n+            ref: plugin.ref,\n+            inputs: inputs.getWorkflowInputs(),\n+          });\n+          await eventHandler.pluginChainState.put(stateId, {\n+            eventPayload: payload,\n+            currentPlugin: 0,\n+            eventId: \"\",\n+            eventName: \"push\",\n+            inputs: [inputs],\n+            outputs: new Array(uses.length),\n+            pluginChain: uses,\n+            additionalProperties: {\n+              rawData,\n+              path: `plugins/${i}/uses/${j}/with`,\n+            },\n+          });\n+        } catch (e) {\n+          errors.push({\n+            path: `plugins/${i}/uses/${j}`,\n+            message: `Failed to reach plugin action: ${e}`,\n+            value: JSON.stringify(plugin),\n+            type: 0,\n+            schema: stateValidationSchema,\n+          });\n+        }\n+      }\n+    }\n+  }\n+  return errors;\n+}\n+\n+export default async function handlePushEvent(context: GitHubContext<\"push\">) {\n+  const { payload } = context;\n+  const { repository, commits, after } = payload;\n+\n+  const didConfigurationFileChange = commits.some((commit) => commit.modified?.includes(CONFIG_FULL_PATH) || commit.added?.includes(CONFIG_FULL_PATH));\n+\n+  if (didConfigurationFileChange) {\n+    console.log(\"Configuration file changed, will run configuration checks.\");\n+\n+    if (repository.owner) {","score":{"reward":1.078,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":90.13250000000001,"syllables":19,"sentences":1,"score":0.6986749999999999},"multiplier":1,"relevance":0.7}},{"id":1774831678,"content":"```suggestion\r\n  const comment = (\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1774831678","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,260 @@\n+import { GitHubContext } from \"../github-context\";\n+import { CONFIG_FULL_PATH, getConfigurationFromRepo } from \"../utils/config\";\n+import YAML, { LineCounter, Node, YAMLError } from \"yaml\";\n+import { ValueError } from \"typebox-validators\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n+import { PluginChainState, PluginInput, PluginOutput, pluginOutputSchema } from \"../types/plugin\";\n+import { isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { Value, ValueErrorType } from \"@sinclair/typebox/value\";\n+import { pluginValidationResponseSchema, StateValidation, stateValidationErrorSchemaValidator, stateValidationSchema } from \"../types/state-validation-payload\";\n+\n+function constructErrorBody(\n+  errors: Iterable<ValueError> | (YAML.YAMLError | ValueError)[],\n+  rawData: string | null,\n+  repository: GitHubContext<\"push\">[\"payload\"][\"repository\"],\n+  after: string\n+) {\n+  const body = [];\n+  if (errors) {\n+    for (const error of errors) {\n+      body.push(\"> [!CAUTION]\\n\");\n+      if (error instanceof YAMLError) {\n+        body.push(`> https://github.com/${repository.owner?.login}/${repository.name}/blob/${after}/${CONFIG_FULL_PATH}#L${error.linePos?.[0].line || 0}`);\n+      } else if (rawData) {\n+        const lineCounter = new LineCounter();\n+        const doc = YAML.parseDocument(rawData, { lineCounter });\n+        const path = error.path.split(\"/\").filter((o) => o);\n+        if (error.type === ValueErrorType.ObjectRequiredProperty) {\n+          path.splice(path.length - 1, 1);\n+        }\n+        const node = doc.getIn(path, true) as Node;\n+        const linePosStart = lineCounter.linePos(node?.range?.[0] || 0);\n+        body.push(`> https://github.com/${repository.owner?.login}/${repository.name}/blob/${after}/${CONFIG_FULL_PATH}#L${linePosStart.line}`);\n+      }\n+      const message = [];\n+      if (error instanceof YAMLError) {\n+        message.push(error.message);\n+      } else {\n+        message.push(`path: ${error.path}\\n`);\n+        message.push(`value: ${error.value}\\n`);\n+        message.push(`message: ${error.message}`);\n+      }\n+      body.push(`\\n> \\`\\`\\`\\n`);\n+      body.push(`> ${message.join(\"\").replaceAll(\"\\n\", \"\\n> \")}`);\n+      body.push(`\\n> \\`\\`\\`\\n\\n`);\n+    }\n+  }\n+  return body;\n+}\n+\n+export async function handleActionValidationWorkflowCompleted(context: GitHubContext<\"repository_dispatch\">) {\n+  const { payload } = context;\n+  const { client_payload } = payload;\n+  let pluginOutput: PluginOutput;\n+  let stateValidation: StateValidation;\n+\n+  try {\n+    pluginOutput = Value.Decode(pluginOutputSchema, client_payload);\n+  } catch (error) {\n+    console.error(\"[handleActionValidationWorkflowCompleted]: Cannot decode plugin output\", error);\n+    throw error;\n+  }\n+\n+  const state = (await context.eventHandler.pluginChainState.get(pluginOutput.state_id)) as PluginChainState<\"push\">;\n+\n+  if (!state) {\n+    console.error(`[handleActionValidationWorkflowCompleted]: No state found for plugin chain ${pluginOutput.state_id}`);\n+    return;\n+  }\n+\n+  console.log(\"Received Action output result for validation, will process.\", pluginOutput.output);\n+\n+  const errors = pluginOutput.output.errors as ValueError[];\n+  try {\n+    stateValidation = Value.Decode(stateValidationSchema, state.additionalProperties);\n+  } catch (e) {\n+    console.error(`[handleActionValidationWorkflowCompleted]: Cannot decode state properties`);\n+    throw e;\n+  }\n+  if (!stateValidation) {\n+    console.error(`[handleActionValidationWorkflowCompleted]: State validation is invalid for ${pluginOutput.state_id}`);\n+    return;\n+  }\n+\n+  const { rawData, path } = stateValidation;\n+  try {\n+    if (errors.length && state.eventPayload.repository.owner) {\n+      const body = [];\n+      if (errors.length) {\n+        body.push(\n+          ...constructErrorBody(\n+            errors.map((err) => ({ ...err, path: `${path}${err.path}` })),\n+            rawData as string,\n+            state.eventPayload.repository as GitHubContext<\"push\">[\"payload\"][\"repository\"],\n+            state.eventPayload.after as string\n+          )\n+        );\n+      }\n+      await createCommitComment(\n+        context,\n+        {\n+          owner: state.eventPayload.repository.owner.login,\n+          repo: state.eventPayload.repository.name,\n+          commitSha: state.eventPayload.after as string,\n+          userLogin: state.eventPayload.sender?.login,\n+        },\n+        body\n+      );\n+    }\n+  } catch (e) {\n+    console.error(\"handleActionValidationWorkflowCompleted\", e);\n+  }\n+}\n+\n+async function createCommitComment(\n+  context: GitHubContext,\n+  { owner, repo, commitSha, userLogin }: { owner: string; repo: string; commitSha: string; userLogin?: string },\n+  body: string[]\n+) {\n+  const { octokit } = context;\n+\n+  const commit = (","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":1,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1774856772,"content":"```suggestion\r\nexport type StateValidation = StaticDecode<typeof pluginValidationResponseSchema>;\r\n```\r\ndid you mean to use `pluginValidationResponseSchema`? \r\nBecause in `checkPluginConfigurations` function you use `pluginValidationResponseSchema` with `StateValidation`","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1774856772","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,36 @@\n+import { StaticDecode, Type } from \"@sinclair/typebox\";\n+import { StandardValidator } from \"typebox-validators\";\n+\n+export const stateValidationSchema = Type.Object({\n+  /**\n+   * The YAML raw data\n+   */\n+  rawData: Type.String(),\n+  /**\n+   * Path to the YAML element in the document\n+   */\n+  path: Type.String(),\n+});\n+\n+const validationErrorSchema = Type.Object(\n+  {\n+    path: Type.String({ default: \"/\" }),\n+    message: Type.String(),\n+    type: Type.Number({ default: 0 }),\n+    value: Type.Any({ default: undefined }),\n+    schema: Type.Any({ default: {} }),\n+  },\n+  { default: {} }\n+);\n+\n+export const pluginValidationResponseSchema = Type.Object(\n+  {\n+    message: Type.Optional(Type.String()),\n+    errors: Type.Array(validationErrorSchema, { default: [] }),\n+  },\n+  { default: {} }\n+);\n+\n+export const stateValidationErrorSchemaValidator = new StandardValidator(pluginValidationResponseSchema);\n+\n+export type StateValidation = StaticDecode<typeof stateValidationSchema>;","score":{"reward":1.134,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":101.27068181818181,"syllables":13,"sentences":2,"score":1},"multiplier":1,"relevance":0.9}},{"id":1774874224,"content":"here you didn't stringify the plugin like below, I'm not sure which is correct","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1774874224","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,260 @@\n+import { GitHubContext } from \"../github-context\";\n+import { CONFIG_FULL_PATH, getConfigurationFromRepo } from \"../utils/config\";\n+import YAML, { LineCounter, Node, YAMLError } from \"yaml\";\n+import { ValueError } from \"typebox-validators\";\n+import { dispatchWorker, dispatchWorkflow, getDefaultBranch } from \"../utils/workflow-dispatch\";\n+import { PluginChainState, PluginInput, PluginOutput, pluginOutputSchema } from \"../types/plugin\";\n+import { isGithubPlugin, PluginConfiguration } from \"../types/plugin-configuration\";\n+import { Value, ValueErrorType } from \"@sinclair/typebox/value\";\n+import { pluginValidationResponseSchema, StateValidation, stateValidationErrorSchemaValidator, stateValidationSchema } from \"../types/state-validation-payload\";\n+\n+function constructErrorBody(\n+  errors: Iterable<ValueError> | (YAML.YAMLError | ValueError)[],\n+  rawData: string | null,\n+  repository: GitHubContext<\"push\">[\"payload\"][\"repository\"],\n+  after: string\n+) {\n+  const body = [];\n+  if (errors) {\n+    for (const error of errors) {\n+      body.push(\"> [!CAUTION]\\n\");\n+      if (error instanceof YAMLError) {\n+        body.push(`> https://github.com/${repository.owner?.login}/${repository.name}/blob/${after}/${CONFIG_FULL_PATH}#L${error.linePos?.[0].line || 0}`);\n+      } else if (rawData) {\n+        const lineCounter = new LineCounter();\n+        const doc = YAML.parseDocument(rawData, { lineCounter });\n+        const path = error.path.split(\"/\").filter((o) => o);\n+        if (error.type === ValueErrorType.ObjectRequiredProperty) {\n+          path.splice(path.length - 1, 1);\n+        }\n+        const node = doc.getIn(path, true) as Node;\n+        const linePosStart = lineCounter.linePos(node?.range?.[0] || 0);\n+        body.push(`> https://github.com/${repository.owner?.login}/${repository.name}/blob/${after}/${CONFIG_FULL_PATH}#L${linePosStart.line}`);\n+      }\n+      const message = [];\n+      if (error instanceof YAMLError) {\n+        message.push(error.message);\n+      } else {\n+        message.push(`path: ${error.path}\\n`);\n+        message.push(`value: ${error.value}\\n`);\n+        message.push(`message: ${error.message}`);\n+      }\n+      body.push(`\\n> \\`\\`\\`\\n`);\n+      body.push(`> ${message.join(\"\").replaceAll(\"\\n\", \"\\n> \")}`);\n+      body.push(`\\n> \\`\\`\\`\\n\\n`);\n+    }\n+  }\n+  return body;\n+}\n+\n+export async function handleActionValidationWorkflowCompleted(context: GitHubContext<\"repository_dispatch\">) {\n+  const { payload } = context;\n+  const { client_payload } = payload;\n+  let pluginOutput: PluginOutput;\n+  let stateValidation: StateValidation;\n+\n+  try {\n+    pluginOutput = Value.Decode(pluginOutputSchema, client_payload);\n+  } catch (error) {\n+    console.error(\"[handleActionValidationWorkflowCompleted]: Cannot decode plugin output\", error);\n+    throw error;\n+  }\n+\n+  const state = (await context.eventHandler.pluginChainState.get(pluginOutput.state_id)) as PluginChainState<\"push\">;\n+\n+  if (!state) {\n+    console.error(`[handleActionValidationWorkflowCompleted]: No state found for plugin chain ${pluginOutput.state_id}`);\n+    return;\n+  }\n+\n+  console.log(\"Received Action output result for validation, will process.\", pluginOutput.output);\n+\n+  const errors = pluginOutput.output.errors as ValueError[];\n+  try {\n+    stateValidation = Value.Decode(stateValidationSchema, state.additionalProperties);\n+  } catch (e) {\n+    console.error(`[handleActionValidationWorkflowCompleted]: Cannot decode state properties`);\n+    throw e;\n+  }\n+  if (!stateValidation) {\n+    console.error(`[handleActionValidationWorkflowCompleted]: State validation is invalid for ${pluginOutput.state_id}`);\n+    return;\n+  }\n+\n+  const { rawData, path } = stateValidation;\n+  try {\n+    if (errors.length && state.eventPayload.repository.owner) {\n+      const body = [];\n+      if (errors.length) {\n+        body.push(\n+          ...constructErrorBody(\n+            errors.map((err) => ({ ...err, path: `${path}${err.path}` })),\n+            rawData as string,\n+            state.eventPayload.repository as GitHubContext<\"push\">[\"payload\"][\"repository\"],\n+            state.eventPayload.after as string\n+          )\n+        );\n+      }\n+      await createCommitComment(\n+        context,\n+        {\n+          owner: state.eventPayload.repository.owner.login,\n+          repo: state.eventPayload.repository.name,\n+          commitSha: state.eventPayload.after as string,\n+          userLogin: state.eventPayload.sender?.login,\n+        },\n+        body\n+      );\n+    }\n+  } catch (e) {\n+    console.error(\"handleActionValidationWorkflowCompleted\", e);\n+  }\n+}\n+\n+async function createCommitComment(\n+  context: GitHubContext,\n+  { owner, repo, commitSha, userLogin }: { owner: string; repo: string; commitSha: string; userLogin?: string },\n+  body: string[]\n+) {\n+  const { octokit } = context;\n+\n+  const commit = (\n+    await octokit.rest.repos.listCommentsForCommit({\n+      owner: owner,\n+      repo: repo,\n+      commit_sha: commitSha,\n+    })\n+  ).data\n+    .filter((o) => o.user?.type === \"Bot\")\n+    .pop();\n+  if (commit) {\n+    await octokit.rest.repos.updateCommitComment({\n+      owner: owner,\n+      repo: repo,\n+      commit_sha: commitSha,\n+      comment_id: commit.id,\n+      body: `${commit.body}\\n${body.join(\"\")}`,\n+    });\n+  } else {\n+    body.unshift(`@${userLogin} Configuration is invalid.\\n`);\n+    await octokit.rest.repos.createCommitComment({\n+      owner: owner,\n+      repo: repo,\n+      commit_sha: commitSha,\n+      body: body.join(\"\"),\n+    });\n+  }\n+}\n+\n+async function checkPluginConfigurations(context: GitHubContext<\"push\">, config: PluginConfiguration, rawData: string | null) {\n+  const { payload, eventHandler } = context;\n+  const errors: (ValueError | YAML.YAMLError)[] = [];\n+\n+  for (let i = 0; i < config.plugins.length; ++i) {\n+    const { uses } = config.plugins[i];\n+    for (let j = 0; j < uses.length; ++j) {\n+      const { plugin, with: args } = uses[j];\n+      const isGithubPluginObject = isGithubPlugin(plugin);\n+      const stateId = crypto.randomUUID();\n+      const token = payload.installation ? await eventHandler.getToken(payload.installation.id) : \"\";\n+      const ref = isGithubPluginObject ? (plugin.ref ?? (await getDefaultBranch(context, plugin.owner, plugin.repo))) : plugin;\n+      const inputs = new PluginInput(context.eventHandler, stateId, context.key, payload, args, token, ref);\n+\n+      if (!isGithubPluginObject) {\n+        try {\n+          const response = await dispatchWorker(`${plugin}/manifest`, await inputs.getWorkerInputs());\n+          const responseWithDefaults = Value.Default(pluginValidationResponseSchema, response) as StateValidation;\n+          if (!stateValidationErrorSchemaValidator.test(responseWithDefaults)) {\n+            console.error(\"Malformed response from the endpoints\");\n+            for (const err of stateValidationErrorSchemaValidator.errors(responseWithDefaults)) {\n+              console.error(err);\n+            }\n+          }\n+          const decodedResponse = Value.Decode(pluginValidationResponseSchema, responseWithDefaults);\n+          if (decodedResponse.errors.length) {\n+            errors.push(...decodedResponse.errors.map((err) => ({ ...err, path: `plugins/${i}/uses/${j}/with${err.path}` })));\n+          }\n+        } catch (e) {\n+          errors.push({\n+            path: `plugins/${i}/uses/${j}`,\n+            message: `Failed to reach plugin endpoint: ${e}`,\n+            value: plugin,","score":{"reward":1.264,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":79.5575,"syllables":21,"sentences":1,"score":0.804425},"multiplier":1,"relevance":0.8}},{"id":2366911448,"content":"Looks good, just wondering if it would be better for plugin to provide the schema for the `with` object in the manifest instead of doing the check. This way we could avoid calling a workflow and async stuff. What do you think?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#issuecomment-2366911448","commentType":"PULL_COLLABORATOR","score":{"reward":2.457,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":79.47552845528456,"syllables":55,"sentences":3,"score":0.8052447154471544},"multiplier":1,"relevance":0.9}},{"id":2383955471,"content":"Will the Github action which updates the configuration in the manifest work both for worker and action plugins?\r\n I thought worker plugins will have a separate endpoint to provide the json schema but I guess it makes more sense to put in the manifest to make it uniform for both types of plugins","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#issuecomment-2383955471","commentType":"PULL_COLLABORATOR","score":{"reward":2.512,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":57.02806603773587,"syllables":77,"sentences":2,"score":0.9702806603773587},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2327573178,"effect":{"addition":331,"deletion":23},"reward":3.54,"priority":1},{"reviewId":2342517037,"effect":{"addition":290,"deletion":191},"reward":4.81,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112"},{"url":"https://github.com/ubiquity-os-marketplace/daemon-merging/pull/21"},{"url":"https://github.com/ubiquity-os/plugin-template/pull/23"},{"url":"https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/25"},{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/127"},{"url":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/19"},{"url":"https://github.com/ubiquity-os-marketplace/command-wallet/pull/18"},{"url":"https://github.com/ubiquity-os-marketplace/command-query/pull/13"},{"url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/37"},{"url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/63"},{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/146"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 22.827 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>8.35</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>6.032</td></tr><tr><td>Review</td><td>Comment</td><td>6</td><td>8.445</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112\" target=\"_blank\" rel=\"noopener\">#112</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+331 -23</td><td>1</td><td>3.54</td></tr><tr><td>+290 -191</td><td>1</td><td>4.81</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2373600159\" target=\"_blank\" rel=\"noopener\">Yeah my first idea was that worker plugins could serve configura&hellip;</a></h6></td><td><details><summary>2.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 60&#13;  wordValue: 0.1&#13;  result: 2.52&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.682</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2377253240\" target=\"_blank\" rel=\"noopener\">What do you mean by environment validation?I think decode vali&hellip;</a></h6></td><td><details><summary>2.56</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 65&#13;  wordValue: 0.1&#13;  result: 2.56&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.624</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2383939887\" target=\"_blank\" rel=\"noopener\">Another benefit is that doing validation with JSON avoids using &hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.726</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1774809461\" target=\"_blank\" rel=\"noopener\">i think it's better to negate the ifs so it's not nesting so much</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.078</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1774831678\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionconst comment = (&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>1</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1774856772\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionexport type StateValidation = StaticD&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.134</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#discussion_r1774874224\" target=\"_blank\" rel=\"noopener\">here you didn't stringify the plugin like below, I'm not sure wh&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.264</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#issuecomment-2366911448\" target=\"_blank\" rel=\"noopener\">Looks good, just wondering if it would be better for plugin to p&hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.457</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/112#issuecomment-2383955471\" target=\"_blank\" rel=\"noopener\">Will the Github action which updates the configuration in the ma&hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.512</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_configuration-loader_1.json","json":{"gentlementlegen":{"userId":9807008,"total":200.468,"task":{"reward":200,"multiplier":1},"comments":[{"id":1947781218,"content":"@pavlovcik would like to work on it, but shouldn't you merge back your Ubiquibot fork?","url":"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1947781218","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.468,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":79.5575,"syllables":21,"sentences":1,"score":0.804425},"multiplier":0.25,"relevance":0.6}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 200.468 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>200</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.468</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1947781218\" target=\"_blank\" rel=\"noopener\">@pavlovcik would like to work on it, but shouldn't you merge bac&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.6</td><td>2</td><td>0.468</td></tr></tbody></table></details>"},"0x4007":{"total":61.07,"userId":4975670,"comments":[{"id":1947782427,"content":"I have a few things on my plate now so you may be better off just working on my fork lol","url":"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1947782427","commentType":"ISSUE_AUTHOR","score":{"reward":0.732,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":92.86285714285715,"syllables":23,"sentences":1,"score":0.6713714285714285},"multiplier":1,"relevance":0.2}},{"id":1949652368,"content":"@FernandVEYRIER please refer to the kernel code when designing this. \r\nFor context: the kernel is still in a very young development stage. Just to get started we are including some simple GitHub webhook event handlers inside of the kernel. However the plan is to move all of these event handlers into seperate plugins (loaded in from separate codebases)\r\nhttps://github.com/ubiquity/ubiquibot-kernel/blob/development/src/github/handlers/issue-comment/created.ts\r\nAnd here is how it is currently mounted: \r\nhttps://github.com/ubiquity/ubiquibot-kernel/blob/development/src/github/handlers/index.ts\r\n---\r\nI was doing some research around this earlier in the week, and when I loaded the configuration, I would need to do that right after the plugin module's entry (like within the first line of code inside of the function body i.e. [here](https://github.com/ubiquity/ubiquibot-kernel/blob/development/src/github/handlers/issue-comment/created.ts#L4).)\r\nThere is a lot of noise in my example because I would not have pushed it under normal circumstances but I wanted to share my insights.\r\nhttps://github.com/ubiquity/ubiquibot-kernel/blob/f0be88d83d04d50918ca4acfa38814227ffdb73a/src/github/handlers/issue-comment/created.ts#L9","url":"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1949652368","commentType":"ISSUE_AUTHOR","score":{"reward":12.51,"formatting":{"content":{"p":{"score":0,"elementCount":8},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":3}},"result":3},"priority":2,"words":{"wordCount":137,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":60.035151933701684,"syllables":286,"sentences":14,"score":0.9996484806629832},"multiplier":1,"relevance":0.9}},{"id":1949758048,"content":"Yes I just wanted to provide context so you know how it is likely to be implemented.","url":"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1949758048","commentType":"ISSUE_AUTHOR","score":{"reward":2.324,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":75.12117647058825,"syllables":23,"sentences":1,"score":0.8487882352941175},"multiplier":1,"relevance":0.7}},{"id":1949760848,"content":"Now you probably have a better idea of why I want to make a local office. Fast iteration across multiple interconnected systems may be easier in the same room with a whiteboard occasionally.","url":"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1949760848","commentType":"ISSUE_AUTHOR","score":{"reward":1.494,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":46.52386363636364,"syllables":56,"sentences":2,"score":0.8652386363636364},"multiplier":1,"relevance":0.3}},{"id":1949780007,"content":"It's a good idea although I fear that depending on the level of detail it can become deprecated quite fast. I'll see if I can get some help from ChatGPT.","url":"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1949780007","commentType":"ISSUE_AUTHOR","score":{"reward":2.892,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":82.20125,"syllables":41,"sentences":2,"score":0.7779874999999999},"multiplier":1,"relevance":0.6}},{"id":1951948113,"content":"Looks like the private key is wrong on this org. We need to fix this from the code to take the private key from the runtime secrets (netlify) but let me try and make a quick fix here.","url":"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1951948113","commentType":"ISSUE_AUTHOR","score":{"reward":0.516,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":89.5921052631579,"syllables":44,"sentences":2,"score":0.7040789473684209},"multiplier":1,"relevance":0.1}},{"id":2136119763,"content":"Plugin developers need to import the configuration to modify the output of their plugins. We should make this as simple as possible with an NPM module. This module should abstract away the following:\r\n1. fetching the repository configuration\r\n2. fetching the organization configuration\r\n3. merging to a single configuration\r\n4. config validation\r\nPseudo code (I didn't deeply think through this):\r\n```ts\r\nimport { getConfig } from \"@ubiquibot/configuration\";\r\nconst config = await getConfig(context);\r\n```\r\nOriginal post: https://github.com/ubiquity/pay.ubq.fi/issues/135#issuecomment-1945382710","url":"https://github.com/ubiquity-os/configuration-loader/issues/1","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.75,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1.4},"priority":1,"words":{"wordCount":59,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":31.836190476190495,"syllables":135,"sentences":6,"score":0.718361904761905},"multiplier":1,"relevance":1}},{"id":1493281107,"content":"```suggestion\r\n  \"name\": \"@ubiquibot/configuration\",\r\n```\r\nThat name is mixing up with our runtime `.yml` configs","url":"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493281107","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,8 +1,8 @@\n {\n-  \"name\": \"ts-template\",\n+  \"name\": \"ubiquibot-config\",","score":{"reward":1.854,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":84.90000000000003,"syllables":12,"sentences":1,"score":0.7509999999999997},"multiplier":1,"relevance":0.9}},{"id":1493294487,"content":"We use 20.10.0 (Node LTS) for all of our projects except the Dollar.","url":"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493294487","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,28 @@\n+name: public-package\r\n+\r\n+on:\r\n+  workflow_dispatch:\r\n+  push:\r\n+    branches:\r\n+      - main\r\n+\r\n+jobs:\r\n+  release-please:\r\n+    runs-on: ubuntu-latest\r\n+    steps:\r\n+      - uses: google-github-actions/release-please-action@v3\r\n+        with:\r\n+          release-type: node\r\n+          package-name: ubiquibot-config\r\n+          default-branch: main\r\n+      - uses: actions/checkout@v3\r\n+      - uses: actions/setup-node@v3\r\n+        with:\r\n+          node-version: '20.x'\r","score":{"reward":2.198,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":100.24000000000002,"syllables":18,"sentences":3,"score":1},"multiplier":1,"relevance":0.7}},{"id":1493294537,"content":"This needs to be changed to a different name for reasons I mentioned earlier.","url":"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493294537","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,28 @@\n+name: public-package\r\n+\r\n+on:\r\n+  workflow_dispatch:\r\n+  push:\r\n+    branches:\r\n+      - main\r\n+\r\n+jobs:\r\n+  release-please:\r\n+    runs-on: ubuntu-latest\r\n+    steps:\r\n+      - uses: google-github-actions/release-please-action@v3\r\n+        with:\r\n+          release-type: node\r\n+          package-name: ubiquibot-config\r","score":{"reward":2.32,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":77.81071428571428,"syllables":19,"sentences":1,"score":0.8218928571428572},"multiplier":1,"relevance":0.8}},{"id":1493294644,"content":"This needs to be changed","url":"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493294644","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,8 +1,3 @@\n-# `@ubiquity/ts-template`\n+# `ubiqubot-config`","score":{"reward":0.828,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1493294862,"content":"We should not include this file in the deployment because this is only for if we are working on it inside of our organization and want to configure our bot. I guess it doesn't matter too much but just letting you know that the end user won't be using this.","url":"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493294862","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":4.326,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":52,"wordValue":0.1,"result":2.41},"readability":{"fleschKincaid":66.56038461538463,"syllables":70,"sentences":2,"score":0.9343961538461536},"multiplier":1,"relevance":0.7}},{"id":1493320371,"content":"I accidentally self marked myself as spam in the iPad. Client doesn't let me undo it, but you should probably delete this file.","url":"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493320371","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":2.1,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":71.28000000000002,"syllables":35,"sentences":2,"score":0.8871999999999999},"multiplier":1,"relevance":0.5}},{"id":1494168536,"content":"This is only used for meta purposes. For example, for our team to be financially incentivized to work on this repo we can config the settings of the bot's behavior on our org's instance. \r\nI'm just saying that in the actual package distribution this is not necessary. \r\nThe bot will automatically inherit the organization config (`@ubiquibot/ubiquibot-config/.github/ubiquibot-config.yml`) and if neither the repo or org config exists, then yes there are some built in defaults (which basically disable the bot from doing anything intrusive, for new partners to get started easily.)","url":"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1494168536","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":5.376,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":2,"words":{"wordCount":91,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":52.63013186813188,"syllables":146,"sentences":5,"score":0.9263013186813188},"multiplier":1,"relevance":0.8}},{"id":1949925915,"content":"I don't have a lot of experience publishing to NPM so can you clarify?\r\nSure makes sense","url":"https://github.com/ubiquity-os/configuration-loader/pull/2#issuecomment-1949925915","commentType":"PULL_COLLABORATOR","score":{"reward":0.676,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":2,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":84.90000000000003,"syllables":24,"sentences":2,"score":0.7509999999999997},"multiplier":1,"relevance":0.2}},{"id":1951935697,"content":"Hey writing a test case would be appreciated to show that it works! You can fork the test setup from my repository https://github.com/pavlovcik/conversation-rewards/commit/0820b8f0c8a76d26c91f0ba5255ce5755241f8fd","url":"https://github.com/ubiquity-os/configuration-loader/pull/2#issuecomment-1951935697","commentType":"PULL_COLLABORATOR","score":{"reward":5.994,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":61.32500000000002,"syllables":48,"sentences":3,"score":0.9867499999999998},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":1886515919,"effect":{"addition":462,"deletion":34},"reward":9.92,"priority":2},{"reviewId":1886525573,"effect":{"addition":1,"deletion":1},"reward":0.04,"priority":2},{"reviewId":1887820604,"effect":{"addition":6,"deletion":5},"reward":0.22,"priority":2}],"url":"https://github.com/ubiquity-os/configuration-loader/pull/2"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 61.07 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>10.18</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.75</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>20.468</td></tr><tr><td>Review</td><td>Comment</td><td>9</td><td>25.672</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2\" target=\"_blank\" rel=\"noopener\">#2</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+462 -34</td><td>2</td><td>9.92</td></tr><tr><td>+1 -1</td><td>2</td><td>0.04</td></tr><tr><td>+6 -5</td><td>2</td><td>0.22</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/1\" target=\"_blank\" rel=\"noopener\">Plugin developers need to import the configuration to modify the&hellip;</a></h6></td><td><details><summary>3.91</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.4&#13;regex:&#13;  wordCount: 59&#13;  wordValue: 0.1&#13;  result: 2.51&#13;</pre></details></td><td>1</td><td>1</td><td>4.75</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1947782427\" target=\"_blank\" rel=\"noopener\">I have a few things on my plate now so you may be better off jus&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.732</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1949652368\" target=\"_blank\" rel=\"noopener\">@FernandVEYRIER please refer to the kernel code when designing t&hellip;</a></h6></td><td><details><summary>5.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3&#13;regex:&#13;  wordCount: 137&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>0.9</td><td>2</td><td>12.51</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1949758048\" target=\"_blank\" rel=\"noopener\">Yes I just wanted to provide context so you know how it is likel&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.324</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1949760848\" target=\"_blank\" rel=\"noopener\">Now you probably have a better idea of why I want to make a loca&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.3</td><td>2</td><td>1.494</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1949780007\" target=\"_blank\" rel=\"noopener\">It's a good idea although I fear that depending on the level of &hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.6</td><td>2</td><td>2.892</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/1#issuecomment-1951948113\" target=\"_blank\" rel=\"noopener\">Looks like the private key is wrong on this org. We need to fix &hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.516</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493281107\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"name\": \"@ubiquibot/configuration\",&hellip;</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.854</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493294487\" target=\"_blank\" rel=\"noopener\">We use 20.10.0 (Node LTS) for all of our projects except the Dol&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.198</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493294537\" target=\"_blank\" rel=\"noopener\">This needs to be changed to a different name for reasons I menti&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.32</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493294644\" target=\"_blank\" rel=\"noopener\">This needs to be changed</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.6</td><td>2</td><td>0.828</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493294862\" target=\"_blank\" rel=\"noopener\">We should not include this file in the deployment because this i&hellip;</a></h6></td><td><details><summary>2.41</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 52&#13;  wordValue: 0.1&#13;  result: 2.41&#13;</pre></details></td><td>0.7</td><td>2</td><td>4.326</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1493320371\" target=\"_blank\" rel=\"noopener\">I accidentally self marked myself as spam in the iPad. Client do&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.5</td><td>2</td><td>2.1</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2#discussion_r1494168536\" target=\"_blank\" rel=\"noopener\">This is only used for meta purposes. For example, for our team t&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 91&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.8</td><td>2</td><td>5.376</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2#issuecomment-1949925915\" target=\"_blank\" rel=\"noopener\">I don't have a lot of experience publishing to NPM so can you cl&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.676</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/2#issuecomment-1951935697\" target=\"_blank\" rel=\"noopener\">Hey writing a test case would be appreciated to show that it wor&hellip;</a></h6></td><td><details><summary>2.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.9</td><td>2</td><td>5.994</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-logger_60.json","json":{"gentlementlegen":{"userId":9807008,"total":12,"task":{"reward":6,"multiplier":1},"comments":[{"id":2862012860,"content":"The problem with aggregate error is that it accepts pretty much anything, so if you push an array of logger errors then it looks like this:\nhttps://github.com/Meniole/plugin-template/issues/1#issuecomment-2657899904\nCorresponding code:\n```ts\n  throw new AggregateError([new Error(\"error 1\"), new Error(\"error 2\"), logger.error(\"logger error\"), new RangeError(\"range error\")]);\n```\nBut I think it would be the `logger` responsibility to properly handle `toString()` method so it doesn't display this way.\n_Originally posted by @gentlementlegen in https://github.com/ubiquity-os/plugin-sdk/issues/69#issuecomment-2657902847_\nThe logger should properly handle `toString` so it displays the error instead of `[object Object]` when printed.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/60","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.73,"formatting":{"content":{"p":{"score":0,"elementCount":2},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":66,"wordValue":0.1,"result":2.57},"readability":{"fleschKincaid":44.73116379310349,"syllables":144,"sentences":4,"score":0.8473116379310349},"multiplier":1,"relevance":1}},{"id":2437690251,"content":"Resolves https://github.com/ubiquity-os/ubiquity-os-logger/issues/60\r\nQA: https://github.com/Meniole/plugin-template/issues/1#issuecomment-2776527139\r\nThe error does not seem to happen on the newest SDK, which is why I bumped it here with a few other updates.","url":"https://github.com/ubiquity-os/plugin-template/pull/52","commentType":"PULL_SPECIFICATION","score":{"reward":3.832,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":61.890000000000015,"syllables":69,"sentences":3,"score":0.9810999999999999},"multiplier":1,"relevance":0.8}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 12 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>⚠️ Your rewards have been limited to the task price of 6 XP.</h6><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>6</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.73</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>3.832</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/60\" target=\"_blank\" rel=\"noopener\">The problem with aggregate error is that it accepts pretty much &hellip;</a></h6></td><td><details><summary>4.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 66&#13;  wordValue: 0.1&#13;  result: 2.57&#13;</pre></details></td><td>1</td><td>1</td><td>5.73</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/52\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquity-os/ubiquity-os-logger/issue&hellip;</a></h6></td><td><details><summary>3.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.8</td><td>1</td><td>3.832</td></tr></tbody></table></details>"},"0x4007":{"total":0,"userId":4975670,"comments":[{"id":2705466693,"content":"@whilefoo $12 are yours for the taking","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/60#issuecomment-2705466693","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/52"}]}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_157.json","json":{"gentlementlegen":{"userId":9807008,"total":17.382,"task":{"reward":12,"multiplier":1},"comments":[{"id":2598888778,"content":"Just curious but does it make sense to Promise.all and invoke all requests concurrently?\r\nAlternatively we should make the ordering more explicit in our config so that its more apparent we intend to take outputs from one and make it accessible to the others? \r\nThe concept of plugin chains is useful but seems very abstract with our current config layout. Hence why im inquiring about concurrency. \r\nIt could be interesting to support in series for configs that explicitly need that, and concurrency by default?\r\n_Originally posted by @0x4007 in https://github.com/ubiquity-os/ubiquity-os-kernel/pull/156#discussion_r1807218564_","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/157","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.64,"formatting":{"content":{"p":{"score":0,"elementCount":5},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":90,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":52.462209158415845,"syllables":169,"sentences":8,"score":0.9246220915841584},"multiplier":1,"relevance":1}},{"id":2142689365,"content":"Abstracted CloudflareKv to KvStore interface and added EmptyStore class.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167","commentType":"PULL_SPECIFICATION","score":{"reward":0.742,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":47.30000000000004,"syllables":16,"sentences":1,"score":0.8730000000000004},"multiplier":1,"relevance":0.7}},{"id":2434603976,"content":"I thought it would just be about the KV, I an add the concurrency here too.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167#issuecomment-2434603976","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":16,"wordValue":0,"result":0},"readability":{"fleschKincaid":84.845,"syllables":20,"sentences":1,"score":0.75155},"multiplier":0,"relevance":0.6}},{"id":2434651984,"content":"@0x4007 Yeah sorry cannot link the kernel logs here, so here is a screenshot\r\n![image](https://github.com/user-attachments/assets/925a3cf1-b694-4bc4-9806-e78de44d55a6)\r\nEven in the screenshot it is not clear that it is concurrent but it runs with the code from this PR.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167#issuecomment-2434651984","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":2,"words":{"wordCount":35,"wordValue":0,"result":0},"readability":{"fleschKincaid":67.37285714285714,"syllables":43,"sentences":1,"score":0.9262714285714285},"multiplier":0,"relevance":0.4}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 17.382 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>12</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.64</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>0.742</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/157\" target=\"_blank\" rel=\"noopener\">Just curious but does it make sense to Promise.all and invoke al&hellip;</a></h6></td><td><details><summary>3.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 90&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>4.64</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167\" target=\"_blank\" rel=\"noopener\">Abstracted CloudflareKv to KvStore interface and added EmptyStor&hellip;</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.742</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167#issuecomment-2434603976\" target=\"_blank\" rel=\"noopener\">I thought it would just be about the KV, I an add the concurrenc&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167#issuecomment-2434651984\" target=\"_blank\" rel=\"noopener\">@0x4007 Yeah sorry cannot link the kernel logs here, so here is &hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.4</td><td>2</td><td>0</td></tr></tbody></table></details>"},"0x4007":{"total":11.634,"userId":4975670,"comments":[{"id":2391622351,"content":"In the future you should at least describe context in your pull body. \nWe decided to disable the use of KV because the original purpose of tracking state between runs was to be able to run plugin chains in series, with the potential to make use of the output of one plugin as an input to another, similar to Github Actions.  \nWe decided that due to us constantly hitting KV limits, and that none of our plugins depend on this behavior, that we can run all of them concurrently and not track state anymore. \n---\nI don't see any changes related to concurrency. Is this finished?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167#pullrequestreview-2391622351","commentType":"PULL_COLLABORATOR","score":{"reward":7.392,"formatting":{"content":{"h2":{"score":1,"elementCount":1},"br":{"score":0,"elementCount":1},"p":{"score":0,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":106,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":63.20567924528304,"syllables":153,"sentences":5,"score":0.9679432075471697},"multiplier":1,"relevance":0.8}},{"id":2391729400,"content":"I'm not sure how you can prove QA so hope that you tested it.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167#pullrequestreview-2391729400","commentType":"PULL_COLLABORATOR","score":{"reward":0.942,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":107.01000000000002,"syllables":15,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2391622351,"effect":{"addition":65,"deletion":6},"reward":1.42,"priority":2},{"reviewId":2391729400,"effect":{"addition":50,"deletion":44},"reward":1.88,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 11.634 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>3.3</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>8.334</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167\" target=\"_blank\" rel=\"noopener\">#167</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+65 -6</td><td>2</td><td>1.42</td></tr><tr><td>+50 -44</td><td>2</td><td>1.88</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167#pullrequestreview-2391622351\" target=\"_blank\" rel=\"noopener\">In the future you should at least describe context in your pull &hellip;</a></h6></td><td><details><summary>3.58</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    br:&#13;      score: 0&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 106&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>0.8</td><td>2</td><td>7.392</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/167#pullrequestreview-2391729400\" target=\"_blank\" rel=\"noopener\">I'm not sure how you can prove QA so hope that you tested it.</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.942</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-template_19.json","json":{"whck6":{"userId":6612648,"total":50,"task":{"reward":50,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 50 XP ]</a>&nbsp;</h3><h6>@whck6</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"Keyrxng":{"total":1.857,"userId":106303466,"comments":[{"id":2318286182,"content":"This is good. \r\nWe could also create a task in each core plugin to create a pool of easy to complete plugin issues as it's not a hard task to add the param and extract error and common strings, what do you think?","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2318286182","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.49,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":80.67772727272727,"syllables":54,"sentences":2,"score":0.7932227272727274},"multiplier":0.25,"relevance":0.7}},{"id":2320276675,"content":"If we use a file then how does a partner customize the strings for their install?\r\nI think ideally, we'd make the config item optional so that it's not a requirement to define customStrings. Then if the partner wants a non-english version they can simply add their string in whatever language they choose.","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320276675","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.711,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":67.0311904761905,"syllables":80,"sentences":3,"score":0.9296880952380949},"multiplier":0.25,"relevance":0.9}},{"id":2320345661,"content":"There should be a mic drop emoji\r\nI expected that 9/10 the defaults would have been used anyway but yeah that's what thought too, all strings would naturally have our defaults applied.\r\nAgreed large plugins could end up messy if they decided they wanted to customize every string\r\nVery much agreed plus with modern browsers supporting translation maybe it's not as important here as it is on telegram for example","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320345661","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.656,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":1,"words":{"wordCount":73,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":46.94366438356167,"syllables":106,"sentences":2,"score":0.8694366438356167},"multiplier":0.25,"relevance":0.8}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/20"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.857 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>3</td><td>1.857</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2318286182\" target=\"_blank\" rel=\"noopener\">This is good. We could also create a task in each core plugin &hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 44&#13;  wordValue: 0.1&#13;  result: 2.27&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.49</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320276675\" target=\"_blank\" rel=\"noopener\">If we use a file then how does a partner customize the strings f&hellip;</a></h6></td><td><details><summary>2.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.9</td><td>1</td><td>0.711</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320345661\" target=\"_blank\" rel=\"noopener\">There should be a mic drop emojiI expected that 9/10 the defau&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 73&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.656</td></tr></tbody></table></details>"},"rndquu":{"total":27.761,"userId":119500907,"comments":[{"id":2318347305,"content":"I would again keep it simple and add custom strings to the core plugins only when we really need them :)\r\nThis issue is more of a reminder for plugin developers that plugin users might want to customize some of the text messages.","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2318347305","commentType":"ISSUE_AUTHOR","score":{"reward":2.232,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":42,"wordValue":0.1,"result":2.23},"readability":{"fleschKincaid":43.347857142857166,"syllables":60,"sentences":1,"score":0.8334785714285716},"multiplier":1,"relevance":0.8}},{"id":2320320049,"content":"`i18n` is not quite fit with the plugins:\r\n- How should a plugin developer determine the source language of a user's comment? \r\n- It seems to be a standard to use only English across github\r\n- I haven't yet met real cases where we need i18n of strings\r\nI guess default values should be provided in cases a string is missing in the config. So partners will have to \"clutter\" the config with custom strings only when they need to rewrite them.\r\nI agree this approach is way easier (basically web2 approach) but it's not clear where to host those translation files for all plugins that partners would use.\r\nOverall it's more of a product related question. @0x4007 Do the bot's plugins need to support different languages for output text strings (i.e. the ones that the bot replies in github comments)?","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320320049","commentType":"ISSUE_AUTHOR","score":{"reward":2.952,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":1,"words":{"wordCount":143,"wordValue":0.1,"result":2.3},"readability":{"fleschKincaid":72.73663024475526,"syllables":196,"sentences":8,"score":0.8726336975524474},"multiplier":1,"relevance":0.9}},{"id":2320338322,"content":"@Keyrxng @gentlementlegen \r\nWhat if we simply add a new config param like `customStringsUrl` which would point to a `json` file with text string contents? This way plugin developer would host `json` file in the plugin's repo while partners would be able to customize the whole \"text strings\" file without cluttering the config too much.","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320338322","commentType":"ISSUE_AUTHOR","score":{"reward":3.07,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":52,"wordValue":0.1,"result":2.41},"readability":{"fleschKincaid":51.91807692307697,"syllables":79,"sentences":2,"score":0.9191807692307696},"multiplier":1,"relevance":1}},{"id":2320427765,"content":"@whck6 Sorry for the inconvenience, pls check the updated issue description","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320427765","commentType":"ISSUE_AUTHOR","score":{"reward":0.738,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":49.54272727272729,"syllables":19,"sentences":1,"score":0.895427272727273},"multiplier":1,"relevance":0.6}},{"id":2323029577,"content":"If you mean whether the `customStringsUrl` parameter should be optional for other plugin decelopers, then yes, but `ubiquibot/plugin-template` must use it and have an example of how string localization can be set up","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2323029577","commentType":"ISSUE_AUTHOR","score":{"reward":1.928,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":44.37645161290325,"syllables":48,"sentences":1,"score":0.8437645161290326},"multiplier":1,"relevance":0.8}},{"id":2494980666,"content":"Original comment: https://github.com/ubiquibot/command-start-stop/pull/25#discussion_r1736233348\r\nThere may be [cases](https://github.com/ubiquibot/command-start-stop/issues/22) when partner would need to customize the plugin's text response to some commands. \r\nPossible use cases:\r\n- different text messages for different business logic flows\r\n- translation to other languages\r\nIt could be useful to keep a separate `json` file of used strings in the plugin repository. This way plugin developers would host `json` file in the plugin's repo while partners would be able to customize the whole \"text strings\" file without cluttering the config too much.\r\nExample config with a new param `customStringsUrl`:\r\n```\r\n- plugin: http://localhost:4000\r\n  name: start-stop\r\n  id: start-stop-command\r\n  description: \"Allows a user to start/stop a task without negative XP impact\"\r\n  command: \"\\/start|\\/stop\"\r\n  example: \"/start\" # or \"/stop\"\r\n  with:\r\n    reviewDelayTolerance: \"3 Days\"\r\n    taskStaleTimeoutDuration: \"30 Days\"\r\n    maxConcurrentTasks: 3\r\n    startRequiresWallet: true\r\n    ## ...\r\n    ## ...\r\n    ## NEWLY ADDED CONFIG PARAM\r\n    customStringsUrl: https://raw.githubusercontent.com/dev/new-pugin/development/strings.json\r\n```\r\nSo as a part of this issue we should add a basic plugin config and an example usage of the `customStringsUrl` param so that future plugin developers could fork this repo and use configurable text messages instead of hardcoding them in the code.","url":"https://github.com/ubiquity-os/plugin-template/issues/19","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.76,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2.2},"priority":1,"words":{"wordCount":129,"wordValue":0.1,"result":2.42},"readability":{"fleschKincaid":42.28418705035972,"syllables":224,"sentences":5,"score":0.8228418705035971},"multiplier":1,"relevance":1}},{"id":2281465211,"content":"@whck6 Overall looks good, pls add a real example of `json` file with custom strings","url":"https://github.com/ubiquity-os/plugin-template/pull/20#pullrequestreview-2281465211","commentType":"PULL_COLLABORATOR","score":{"reward":1.176,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":71.76785714285715,"syllables":20,"sentences":1,"score":0.8823214285714285},"multiplier":1,"relevance":0.8}},{"id":1741842631,"content":"Why don't we pass a real `json` file here from the https://github.com/ubiquibot/plugin-template repo?","url":"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1741842631","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -32,6 +32,7 @@ plugins:\n         with:\n           # Define configurable items here and the kernel will pass these to the plugin.\n           configurableResponse: \"Hello, is it me you are looking for?\"\n+          customStringsUrl: \"https://raw.githubusercontent.com/dev/new-pugin/development/strings.json\"","score":{"reward":2.304,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":75.50000000000003,"syllables":26,"sentences":2,"score":0.8449999999999998},"multiplier":1,"relevance":0.9}},{"id":1741845628,"content":"Keep `configurableResponse` untouched, it should serve as an example for config parameters.\r\nWe should also show a real usage of the `customStringsUrl` strings customization. So you may add a new command or respond one extra time but with a string from the `json` file set in `customStringsUrl` config param.","url":"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1741845628","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -32,12 +32,18 @@ export async function helloWorld(context: Context) {\n   logger.info(\"Hello, world!\");\n   logger.debug(`Executing helloWorld:`, { sender, repo, issueNumber, owner });\n \n+  let response = configurableResponse;\n+  if (customStringsUrl) {\n+    const { string } = await fetch(customStringsUrl).then((value) => value.json());\n+    response = string;\n+  }\n+\n   try {\n     await octokit.issues.createComment({\n       owner: payload.repository.owner.login,\n       repo: payload.repository.name,\n       issue_number: payload.issue.number,\n-      body: configurableResponse,\n+      body: response,","score":{"reward":2.755,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":71.29000000000002,"syllables":64,"sentences":3,"score":0.8870999999999998},"multiplier":1,"relevance":0.95}},{"id":1744540264,"content":"Pls create and use a real file hosted in https://github.com/ubiquibot/plugin-template","url":"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744540264","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -32,6 +32,7 @@ plugins:\n         with:\n           # Define configurable items here and the kernel will pass these to the plugin.\n           configurableResponse: \"Hello, is it me you are looking for?\"\n+          customStringsUrl: \"https://raw.githubusercontent.com/dev/new-pugin/development/strings.json\"","score":{"reward":1.964,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.14250000000001,"syllables":22,"sentences":2,"score":0.8485749999999999},"multiplier":1,"relevance":0.85}},{"id":1744541525,"content":"Yes, the format could be (example):\r\n```json\r\n{\r\n  \"greeting\": \"Hello user\",\r\n  \"taskAssignment\": \"You've been assigned to the task\"\r\n}\r\n```","url":"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744541525","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -32,12 +32,18 @@ export async function helloWorld(context: Context) {\n   logger.info(\"Hello, world!\");\n   logger.debug(`Executing helloWorld:`, { sender, repo, issueNumber, owner });\n \n+  let response = configurableResponse;\n+  if (customStringsUrl) {\n+    const { string } = await fetch(customStringsUrl).then((value) => value.json());\n+    response = string;\n+  }\n+\n   try {\n     await octokit.issues.createComment({\n       owner: payload.repository.owner.login,\n       repo: payload.repository.name,\n       issue_number: payload.issue.number,\n-      body: configurableResponse,\n+      body: response,","score":{"reward":0.693,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.9}},{"id":1744544960,"content":"Is there a way to use a single/unified instance of `logger.error` instead of multiple calls:\r\n```\r\nlogger.error(`Error creating comment:`, { error: error, stack: error.stack });\r\nlogger.error(`Error creating comment:`, { err: error, error: new Error() });\r\n```\r\n?","url":"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744544960","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -54,6 +54,31 @@ export async function helloWorld(context: Context) {\n     }\n   }\n \n+  if (customStringsUrl) {\n+    try {\n+      const response = await fetch(customStringsUrl).then((value) => value.json());\n+      await octokit.issues.createComment({\n+        owner: payload.repository.owner.login,\n+        repo: payload.repository.name,\n+        issue_number: payload.issue.number,\n+        body: response.string,\n+      });\n+    } catch (error) {\n+      /**\n+       * logger.fatal should not be used in 9/10 cases. Use logger.error instead.\n+       *\n+       * Below are examples of passing error objects to the logger, only one is needed.\n+       */\n+      if (error instanceof Error) {\n+        logger.error(`Error creating comment:`, { error: error, stack: error.stack });\n+        throw error;\n+      } else {\n+        logger.error(`Error creating comment:`, { err: error, error: new Error() });","score":{"reward":1.085,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":67.53000000000003,"syllables":22,"sentences":1,"score":0.9246999999999997},"multiplier":1,"relevance":0.7}},{"id":1744977830,"content":"I think it's fine, it's just for demo purposes","url":"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744977830","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -39,6 +39,15 @@ export async function helloWorld(context: Context) {\n       issue_number: payload.issue.number,\n       body: configurableResponse,\n     });\n+    if (customStringsUrl) {\n+      const response = await fetch(customStringsUrl).then((value) => value.json());\n+      await octokit.issues.createComment({","score":{"reward":0.464,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":95.68818181818183,"syllables":13,"sentences":1,"score":0.6431181818181817},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2277072549,"effect":{"addition":10,"deletion":2},"reward":0.12,"priority":1},{"reviewId":2281465211,"effect":{"addition":27,"deletion":8},"reward":0.35,"priority":1},{"reviewId":2281961708,"effect":{"addition":16,"deletion":1},"reward":0.17,"priority":1}],"url":"https://github.com/ubiquity-os/plugin-template/pull/20"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 27.761 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>0.64</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.76</td></tr><tr><td>Issue</td><td>Comment</td><td>5</td><td>10.92</td></tr><tr><td>Review</td><td>Comment</td><td>7</td><td>10.441</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/20\" target=\"_blank\" rel=\"noopener\">#20</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+10 -2</td><td>1</td><td>0.12</td></tr><tr><td>+27 -8</td><td>1</td><td>0.35</td></tr><tr><td>+16 -1</td><td>1</td><td>0.17</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19\" target=\"_blank\" rel=\"noopener\">Original comment: https://github.com/ubiquibot/command-start-sto&hellip;</a></h6></td><td><details><summary>4.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.2&#13;regex:&#13;  wordCount: 129&#13;  wordValue: 0.1&#13;  result: 2.42&#13;</pre></details></td><td>1</td><td>1</td><td>5.76</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2318347305\" target=\"_blank\" rel=\"noopener\">I would again keep it simple and add custom strings to the core &hellip;</a></h6></td><td><details><summary>2.23</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 42&#13;  wordValue: 0.1&#13;  result: 2.23&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.232</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320320049\" target=\"_blank\" rel=\"noopener\">&#96;i18n&#96; is not quite fit with the plugins:- How should &hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 143&#13;  wordValue: 0.1&#13;  result: 2.3&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.952</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320338322\" target=\"_blank\" rel=\"noopener\">@Keyrxng @gentlementlegen What if we simply add a new config p&hellip;</a></h6></td><td><details><summary>2.41</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 52&#13;  wordValue: 0.1&#13;  result: 2.41&#13;</pre></details></td><td>1</td><td>1</td><td>3.07</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320427765\" target=\"_blank\" rel=\"noopener\">@whck6 Sorry for the inconvenience, pls check the updated issue &hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.738</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2323029577\" target=\"_blank\" rel=\"noopener\">If you mean whether the &#96;customStringsUrl&#96; parameter sho&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.928</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/20#pullrequestreview-2281465211\" target=\"_blank\" rel=\"noopener\">@whck6 Overall looks good, pls add a real example of &#96;json&#&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.176</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1741842631\" target=\"_blank\" rel=\"noopener\">Why don't we pass a real &#96;json&#96; file here from the https&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.304</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1741845628\" target=\"_blank\" rel=\"noopener\">Keep &#96;configurableResponse&#96; untouched, it should serve a&hellip;</a></h6></td><td><details><summary>2.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.95</td><td>1</td><td>2.755</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744540264\" target=\"_blank\" rel=\"noopener\">Pls create and use a real file hosted in https://github.com/ubiq&hellip;</a></h6></td><td><details><summary>1.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.85</td><td>1</td><td>1.964</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744541525\" target=\"_blank\" rel=\"noopener\">Yes, the format could be (example):&#96;&#96;&#96;json{\"&hellip;</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.9</td><td>1</td><td>0.693</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744544960\" target=\"_blank\" rel=\"noopener\">Is there a way to use a single/unified instance of &#96;logger.e&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.085</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744977830\" target=\"_blank\" rel=\"noopener\">I think it's fine, it's just for demo purposes</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.464</td></tr></tbody></table></details>"},"gentlementlegen":{"total":9.791,"userId":9807008,"comments":[{"id":2319649463,"content":"Wouldn't it be more handy to use a `i18n` package directly that can handle this way better than manually exposing all the strings of the plugin? Anyone could make a PR with just a json file containing all the translations. If this goes beyond simply translating, I think a file would be better than cluttering the whole configuration with strings.","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2319649463","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.943,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":60,"wordValue":0.1,"result":2.52},"readability":{"fleschKincaid":59.63500000000003,"syllables":90,"sentences":3,"score":0.9963500000000003},"multiplier":1,"relevance":0.9}},{"id":2320298540,"content":"A partner can host their file and point towards it in the configuration too. I just think it will be inconvenient to have a configuration full of strings, and it is very easy to make typos and not have the content work properly. If there are like < 5 strings it's fine I suppose, but above it will clutter quickly.","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320298540","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.889,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":60,"wordValue":0.1,"result":2.52},"readability":{"fleschKincaid":68.09500000000004,"syllables":84,"sentences":3,"score":0.9190499999999996},"multiplier":1,"relevance":0.9}},{"id":1744954486,"content":"Maybe it would make more sense to default this to the `strings.json` url?","url":"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744954486","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -21,6 +21,7 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n export const pluginSettingsSchema = T.Object(\n   {\n     configurableResponse: T.String(),\n+    customStringsUrl: T.Optional(T.String()),","score":{"reward":0.945,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":103.00500000000001,"syllables":13,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1744956832,"content":"With this logic, it seems that when `customStringsUrl` is provided, 2 comments get posted (first comes from https://github.com/ubiquibot/plugin-template/pull/20/files#diff-3fcb1026946a1e4b90855060978cdf067206311f0330a9f808bc89c98e3dfb67R36). Is that behavior intended?","url":"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744956832","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -39,6 +39,15 @@ export async function helloWorld(context: Context) {\n       issue_number: payload.issue.number,\n       body: configurableResponse,\n     });\n+    if (customStringsUrl) {\n+      const response = await fetch(customStringsUrl).then((value) => value.json());\n+      await octokit.issues.createComment({","score":{"reward":2.844,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":68.08215053763442,"syllables":47,"sentences":3,"score":0.9191784946236559},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2282089071,"effect":{"addition":16,"deletion":1},"reward":0.17,"priority":1}],"url":"https://github.com/ubiquity-os/plugin-template/pull/20"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 9.791 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.17</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>5.832</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>3.789</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/20\" target=\"_blank\" rel=\"noopener\">#20</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+16 -1</td><td>1</td><td>0.17</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2319649463\" target=\"_blank\" rel=\"noopener\">Wouldn't it be more handy to use a &#96;i18n&#96; package direct&hellip;</a></h6></td><td><details><summary>2.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 60&#13;  wordValue: 0.1&#13;  result: 2.52&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.943</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320298540\" target=\"_blank\" rel=\"noopener\">A partner can host their file and point towards it in the config&hellip;</a></h6></td><td><details><summary>2.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 60&#13;  wordValue: 0.1&#13;  result: 2.52&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.889</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744954486\" target=\"_blank\" rel=\"noopener\">Maybe it would make more sense to default this to the &#96;strin&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.945</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/20#discussion_r1744956832\" target=\"_blank\" rel=\"noopener\">With this logic, it seems that when &#96;customStringsUrl&#96; i&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.844</td></tr></tbody></table></details>"},"0x4007":{"total":2.02,"userId":4975670,"comments":[{"id":2320324884,"content":"I don't think supporting other languages is a priority in the near future. Besides, modern browsers all have translation built in.","url":"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320324884","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.02,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":64.9245454545455,"syllables":34,"sentences":2,"score":0.9507545454545451},"multiplier":1,"relevance":1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/20"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.02 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>2.02</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/19#issuecomment-2320324884\" target=\"_blank\" rel=\"noopener\">I don't think supporting other languages is a priority in the ne&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>1</td><td>1</td><td>2.02</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-template_14.json","json":{"Keyrxng":{"userId":106303466,"total":106.974,"task":{"reward":100,"multiplier":1},"comments":[{"id":2433387320,"content":"Create a `hello-world` plugin and bring the template up to date\r\n- fix ci\r\n- update logger\r\n- create a minimal but well-rounded example\r\n- improve test env with helpers and handlers\r\n- add tests for example plugin demo-ing structure\r\nI think we should remove supabase etc all together as it's being phased out and when I start a fresh plugin my first move is to remove it","url":"https://github.com/ubiquity-os/plugin-template/issues/14","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.67,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5}},"result":0.5},"priority":1,"words":{"wordCount":65,"wordValue":0.1,"result":2.56},"readability":{"fleschKincaid":26.3246153846154,"syllables":88,"sentences":1,"score":0.663246153846154},"multiplier":1,"relevance":1}},{"id":1990459584,"content":"Resolves https://github.com/ubiquibot/plugin-template/issues/14\r\nI realise that the readme config may be outdated, how should it look at this current moment in time @gentlementlegen?\r\nQA:\r\n- https://github.com/ubq-testing/bot-ai/issues/50#issuecomment-2254089365","url":"https://github.com/ubiquity-os/plugin-template/pull/15","commentType":"PULL_SPECIFICATION","score":{"reward":3.304,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2.1},"priority":1,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":64.37271341463415,"syllables":64,"sentences":4,"score":0.9562728658536586},"multiplier":1,"relevance":0.7}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 106.974 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>100</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.67</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>3.304</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/14\" target=\"_blank\" rel=\"noopener\">Create a &#96;hello-world&#96; plugin and bring the template up &hellip;</a></h6></td><td><details><summary>3.06</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;  result: 0.5&#13;regex:&#13;  wordCount: 65&#13;  wordValue: 0.1&#13;  result: 2.56&#13;</pre></details></td><td>1</td><td>1</td><td>3.67</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquibot/plugin-template/issues/14&hellip;</a></h6></td><td><details><summary>3.67</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.1&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.7</td><td>1</td><td>3.304</td></tr></tbody></table></details>"},"0x4007":{"total":13.97,"userId":4975670,"comments":[{"id":2254960873,"content":"Great idea.","url":"https://github.com/ubiquity-os/plugin-template/issues/14#issuecomment-2254960873","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.372,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":1,"relevance":0.6}},{"id":1697637124,"content":"I think we should only use fatal from within the kernel and core features like permit generation. \nMy vision was to make a triage telegram bot/group to immediately jump on any fatal issues that affect every user.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1697637124","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,59 @@\n+import { Context } from \"../types\";\n+\n+/**\n+ * NOTICE: Remove this file or use it as a template for your own plugins.\n+ *\n+ * This encapsulates the logic for a plugin if the only thing it does is say \"Hello, world!\".\n+ *\n+ * Try it out by running your local kernel worker and running the `yarn worker` command.\n+ * Comment on an issue in a repository where your GitHub App is installed and see the magic happen!\n+ *\n+ * Logger examples are provided to show how to log different types of data.\n+ */\n+export async function helloWorld(context: Context) {\n+  const {\n+    logger,\n+    payload,\n+    octokit,\n+    config: { configurableResponse },\n+  } = context;\n+\n+  const sender = payload.comment.user?.login;\n+  const repo = payload.repository.name;\n+  const issueNumber = payload.issue.number;\n+  const owner = payload.repository.owner.login;\n+  const body = payload.comment.body;\n+\n+  if (!body.match(/hello/i)) {\n+    logger.error(`Invalid use of slash command, use \"/hello\".`, { body });\n+    return;\n+  }\n+\n+  logger.info(\"Hello, world!\");\n+  logger.debug(`Executing helloWorld:`, { sender, repo, issueNumber, owner });\n+\n+  try {\n+    await octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: payload.issue.number,\n+      body: configurableResponse,\n+    });\n+  } catch (error) {\n+    /**\n+     * logger.fatal should not be used in 9/10 cases. Use logger.error instead.","score":{"reward":4.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":53.97105263157897,"syllables":60,"sentences":2,"score":0.9397105263157897},"multiplier":1,"relevance":0.8}},{"id":2254960435,"content":"Perhaps you can add a time estimate on the issue?","url":"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2254960435","commentType":"PULL_COLLABORATOR","score":{"reward":0.672,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":78.24500000000002,"syllables":14,"sentences":1,"score":0.8175499999999998},"multiplier":1,"relevance":0.3}},{"id":2259973474,"content":"I think its also a good idea to create landing/docs pages at [dao.ubq.fi](https://dao.ubq.fi)\r\nIf anybody wants to work on it just let me know and I can add you to the notion. I just need your notion email. Please feel free to dm me on telegram.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2259973474","commentType":"PULL_COLLABORATOR","score":{"reward":0.808,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":49,"wordValue":0.1,"result":2.37},"readability":{"fleschKincaid":93.29616326530613,"syllables":60,"sentences":5,"score":0.6670383673469387},"multiplier":1,"relevance":0.1}},{"id":2260393610,"content":"No I would not allow for edit access to non collaborators.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2260393610","commentType":"PULL_COLLABORATOR","score":{"reward":0.25,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":57.23363636363638,"syllables":18,"sentences":1,"score":0.9723363636363638},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":2208765070,"effect":{"addition":298,"deletion":77},"reward":7.5,"priority":2}],"url":"https://github.com/ubiquity-os/plugin-template/pull/15"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 13.97 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>7.5</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.372</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>6.098</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/15\" target=\"_blank\" rel=\"noopener\">#15</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+298 -77</td><td>2</td><td>7.5</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/14#issuecomment-2254960873\" target=\"_blank\" rel=\"noopener\">Great idea.</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.6</td><td>2</td><td>0.372</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1697637124\" target=\"_blank\" rel=\"noopener\">I think we should only use fatal from within the kernel and core&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.8</td><td>2</td><td>4.368</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2254960435\" target=\"_blank\" rel=\"noopener\">Perhaps you can add a time estimate on the issue?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.672</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2259973474\" target=\"_blank\" rel=\"noopener\">I think its also a good idea to create landing/docs pages at [da&hellip;</a></h6></td><td><details><summary>3.37</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 49&#13;  wordValue: 0.1&#13;  result: 2.37&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.808</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2260393610\" target=\"_blank\" rel=\"noopener\">No I would not allow for edit access to non collaborators.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.25</td></tr></tbody></table></details>"},"gentlementlegen":{"total":33.288,"userId":9807008,"comments":[{"id":1693952549,"content":"The config shape is like this:\r\n```yml\r\nplugins:\r\n  - name: hello-world\r\n    id: hello-world\r\n    uses:\r\n      - plugin: http://localhost:4000\r\n        with:\r\n          # Define configurable items here and the kernel will pass these to the plugin.\r\n          configurableResponse: \"Hello, is it me you are looking for?\"\r\n```\r\nThe removed elements are now defined within the manifest.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1693952549","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -24,22 +24,20 @@\n - Your plugin config should look similar to this:\n \n ```yml\n-- plugin: <plugin-org/owner>/<plugin-repo-name>:compute.yml@development\n-  name: plugin-name\n-  id: plugin-name-command\n-  description: \"Plugin description\" # small description of what the plugin does\n-  command: \"<regex for command>\" # if you are creating a plugin with a slash command\n-  example: \"<example usage>\" # how to invoke the slash command\n-  with: # these are the example settings, the kernel passes these to the plugin.\n-    disabledCommands: []\n-    timers:\n-      reviewDelayTolerance: 86000\n-      taskStaleTimeoutDuration: 2580000\n-    miscellaneous:\n-      maxConcurrentTasks: 3\n-    labels:\n-      time: []\n-      priority: []\n+plugins:\n+  \"issue_comment.created\":\n+    - name: hello-world\n+      id: hello-world\n+      type: github\n+      description: \"A simple hello world plugin\" # small description of what the plugin does\n+      command: \"\\/hello\" # if you are creating a plugin with a slash command\n+      example: \"/hello\" # how to invoke the slash command\n+      uses:\n+        # - plugin: <plugin-org/owner>/<plugin-repo-name>:compute.yml@development\n+        - plugin: http://localhost:4000\n+          with:\n+            # Define configurable items here and the kernel will pass these to the plugin.\n+            configurableResponse: \"Hello, is it me you are looking for?\"\n ```","score":{"reward":2.826,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":2,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":61.890000000000015,"syllables":23,"sentences":1,"score":0.9810999999999999},"multiplier":1,"relevance":0.9}},{"id":1693952663,"content":"What about the comments and the todo?","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1693952663","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.032,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0.6}},{"id":1693952705,"content":"Maybe remove comments","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1693952705","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -4,8 +4,8 @@ import \"dotenv/config\";\n import { StandardValidator } from \"typebox-validators\";\n \n export const envSchema = T.Object({\n-  SUPABASE_URL: T.String(),\n-  SUPABASE_KEY: T.String(),\n+  // SUPABASE_URL: T.String(),","score":{"reward":0.63,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":62.79000000000002,"syllables":5,"sentences":1,"score":0.9720999999999997},"multiplier":1,"relevance":0.7}},{"id":1693952744,"content":"Empty file","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1693952744","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.124,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":35.60500000000002,"syllables":4,"sentences":1,"score":0.7560500000000002},"multiplier":1,"relevance":0.2}},{"id":1694047949,"content":"I think it's a nice to have but ideally we should not enforce Supabase specifically. Maybe let's keep them for now as they give a guideline on how to link the plugin with a DB.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1694047949","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":4.208,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":76.01966216216218,"syllables":49,"sentences":2,"score":0.8398033783783783},"multiplier":1,"relevance":0.8}},{"id":1695019829,"content":"I wonder if we could directly pick up the values from the manifest to avoid mistakes? If we import the `json` the types should be working properly, what do you think?","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1695019829","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,8 +3,14 @@ import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as Webhook\n import { createAdapters } from \"../adapters\";\n import { Env } from \"./env\";\n import { PluginSettings } from \"./plugin-inputs\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n \n-export type SupportedEventsU = \"issue_comment.created\"; // Add more events here\n+/**\n+ * Update `manifest.json` with any events you want to support like so:","score":{"reward":4.266,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":73.17000000000003,"syllables":42,"sentences":2,"score":0.8682999999999997},"multiplier":1,"relevance":0.9}},{"id":1695021011,"content":"Maybe a comment to say that this corresponds to the environment variables","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1695021011","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,10 +3,7 @@ import { StaticDecode } from \"@sinclair/typebox\";\n import \"dotenv/config\";\n import { StandardValidator } from \"typebox-validators\";\n \n-export const envSchema = T.Object({\n-  SUPABASE_URL: T.String(),\n-  SUPABASE_KEY: T.String(),\n-});\n+export const envSchema = T.Object({});","score":{"reward":1.862,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":53.655,"syllables":20,"sentences":1,"score":0.93655},"multiplier":1,"relevance":0.7}},{"id":1695051972,"content":"`process.env`, `dev.vars` or fed by the Worker yes.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1695051972","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,10 +3,7 @@ import { StaticDecode } from \"@sinclair/typebox\";\n import \"dotenv/config\";\n import { StandardValidator } from \"typebox-validators\";\n \n-export const envSchema = T.Object({\n-  SUPABASE_URL: T.String(),\n-  SUPABASE_KEY: T.String(),\n-});\n+export const envSchema = T.Object({});","score":{"reward":0.948,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1696162482,"content":"I didn't realize that arrays were not typed, I expected it to export as const strings. The only options we would is to generate the code with a script, or change it to an object. But I do not see what kind of object we would have as we just require a list of strings. Let's keep it that way for now.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1696162482","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,8 +3,14 @@ import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as Webhook\n import { createAdapters } from \"../adapters\";\n import { Env } from \"./env\";\n import { PluginSettings } from \"./plugin-inputs\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n \n-export type SupportedEventsU = \"issue_comment.created\"; // Add more events here\n+/**\n+ * Update `manifest.json` with any events you want to support like so:","score":{"reward":4.912,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":64,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":91.454375,"syllables":75,"sentences":4,"score":0.68545625},"multiplier":1,"relevance":0.8}},{"id":2254971113,"content":"Does `2 hours` seems fair @Keyrxng ?","url":"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2254971113","commentType":"PULL_COLLABORATOR","score":{"reward":0.342,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":2259907363,"content":"@gitcoindev It would be great that people are aware of this template so they are not stuck as well, I am not sure how we can advertise it better.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2259907363","commentType":"PULL_COLLABORATOR","score":{"reward":2.35,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":69.46206896551725,"syllables":37,"sentences":1,"score":0.9053793103448275},"multiplier":1,"relevance":0.5}},{"id":2259932430,"content":"@Keyrxng Just pinned it in Ubiquibot. Maybe having a README in the organization would help as well.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2259932430","commentType":"PULL_COLLABORATOR","score":{"reward":1.328,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":73.79573529411766,"syllables":25,"sentences":2,"score":0.8620426470588234},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2203170275,"effect":{"addition":290,"deletion":68},"reward":7.16,"priority":2},{"reviewId":2204612827,"effect":{"addition":25,"deletion":24},"reward":0.98,"priority":2},{"reviewId":2206416395,"effect":{"addition":7,"deletion":9},"reward":0.32,"priority":2}],"url":"https://github.com/ubiquity-os/plugin-template/pull/15"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 33.288 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>8.46</td></tr><tr><td>Review</td><td>Comment</td><td>12</td><td>24.828</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/15\" target=\"_blank\" rel=\"noopener\">#15</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+290 -68</td><td>2</td><td>7.16</td></tr><tr><td>+25 -24</td><td>2</td><td>0.98</td></tr><tr><td>+7 -9</td><td>2</td><td>0.32</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1693952549\" target=\"_blank\" rel=\"noopener\">The config shape is like this:&#96;&#96;&#96;ymlplugins:&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.9</td><td>2</td><td>2.826</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1693952663\" target=\"_blank\" rel=\"noopener\">What about the comments and the todo?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.032</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1693952705\" target=\"_blank\" rel=\"noopener\">Maybe remove comments</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>2</td><td>0.63</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1693952744\" target=\"_blank\" rel=\"noopener\">Empty file</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.124</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1694047949\" target=\"_blank\" rel=\"noopener\">I think it's a nice to have but ideally we should not enforce Su&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>0.8</td><td>2</td><td>4.208</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1695019829\" target=\"_blank\" rel=\"noopener\">I wonder if we could directly pick up the values from the manife&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.9</td><td>2</td><td>4.266</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1695021011\" target=\"_blank\" rel=\"noopener\">Maybe a comment to say that this corresponds to the environment &hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.862</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1695051972\" target=\"_blank\" rel=\"noopener\">&#96;process.env&#96;, &#96;dev.vars&#96; or fed by the Worker y&hellip;</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.6</td><td>2</td><td>0.948</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1696162482\" target=\"_blank\" rel=\"noopener\">I didn't realize that arrays were not typed, I expected it to ex&hellip;</a></h6></td><td><details><summary>2.55</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 64&#13;  wordValue: 0.1&#13;  result: 2.55&#13;</pre></details></td><td>0.8</td><td>2</td><td>4.912</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2254971113\" target=\"_blank\" rel=\"noopener\">Does &#96;2 hours&#96; seems fair @Keyrxng ?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.342</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2259907363\" target=\"_blank\" rel=\"noopener\">@gitcoindev It would be great that people are aware of this temp&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.5</td><td>2</td><td>2.35</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2259932430\" target=\"_blank\" rel=\"noopener\">@Keyrxng Just pinned it in Ubiquibot. Maybe having a README in t&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.4</td><td>2</td><td>1.328</td></tr></tbody></table></details>"},"gitcoindev":{"total":9.01,"userId":88761781,"comments":[{"id":1697034279,"content":"It would be good to add 1/10 case when logger.fatal should be applied.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1697034279","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,59 @@\n+import { Context } from \"../types\";\n+\n+/**\n+ * NOTICE: Remove this file or use it as a template for your own plugins.\n+ *\n+ * This encapsulates the logic for a plugin if the only thing it does is say \"Hello, world!\".\n+ *\n+ * Try it out by running your local kernel worker and running the `yarn worker` command.\n+ * Comment on an issue in a repository where your GitHub App is installed and see the magic happen!\n+ *\n+ * Logger examples are provided to show how to log different types of data.\n+ */\n+export async function helloWorld(context: Context) {\n+  const {\n+    logger,\n+    payload,\n+    octokit,\n+    config: { configurableResponse },\n+  } = context;\n+\n+  const sender = payload.comment.user?.login;\n+  const repo = payload.repository.name;\n+  const issueNumber = payload.issue.number;\n+  const owner = payload.repository.owner.login;\n+  const body = payload.comment.body;\n+\n+  if (!body.match(/hello/i)) {\n+    logger.error(`Invalid use of slash command, use \"/hello\".`, { body });\n+    return;\n+  }\n+\n+  logger.info(\"Hello, world!\");\n+  logger.debug(`Executing helloWorld:`, { sender, repo, issueNumber, owner });\n+\n+  try {\n+    await octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: payload.issue.number,\n+      body: configurableResponse,\n+    });\n+  } catch (error) {\n+    /**\n+     * logger.fatal should not be used in 9/10 cases. Use logger.error instead.","score":{"reward":0.576,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":97.7025,"syllables":18,"sentences":2,"score":0.622975},"multiplier":0.25,"relevance":0.8}},{"id":1697041505,"content":"Very good to mention this as I was exactly doing this as well, starting from env vars to context...","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1697041505","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -1,47 +1,45 @@\n import { Octokit } from \"@octokit/rest\";\n-import { createClient } from \"@supabase/supabase-js\";\n+// import { createClient } from \"@supabase/supabase-js\";\n import { createAdapters } from \"./adapters\";\n import { Env, PluginInputs } from \"./types\";\n import { Context } from \"./types\";\n+import { isIssueCommentEvent } from \"./types/typeguards\";\n+import { helloWorld } from \"./handlers/hello-world\";\n+import { LogLevel, Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n+\n+/**\n+ * The main plugin function. Split for easier testing.\n+ */\n+export async function runPlugin(context: Context) {\n+  const { logger, eventName } = context;\n+\n+  if (isIssueCommentEvent(context)) {\n+    return await helloWorld(context);\n+  }\n+\n+  logger.error(`Unsupported event: ${eventName}`);\n+}\n \n /**\n  * How a worker executes the plugin.\n  */\n export async function plugin(inputs: PluginInputs, env: Env) {\n   const octokit = new Octokit({ auth: inputs.authToken });\n-  const supabase = createClient(env.SUPABASE_URL, env.SUPABASE_KEY);\n+  // const supabase = createClient(env.SUPABASE_URL, env.SUPABASE_KEY);\n \n   const context: Context = {\n     eventName: inputs.eventName,\n     payload: inputs.eventPayload,\n     config: inputs.settings,\n     octokit,\n     env,\n-    logger: {\n-      debug(message: unknown, ...optionalParams: unknown[]) {\n-        console.debug(message, ...optionalParams);\n-      },\n-      info(message: unknown, ...optionalParams: unknown[]) {\n-        console.log(message, ...optionalParams);\n-      },\n-      warn(message: unknown, ...optionalParams: unknown[]) {\n-        console.warn(message, ...optionalParams);\n-      },\n-      error(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-      fatal(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-    },\n+    logger: new Logs(\"info\" as LogLevel),\n     adapters: {} as ReturnType<typeof createAdapters>,\n   };\n \n-  context.adapters = createAdapters(supabase, context);\n+  // consider non-database storage solutions unless necessary\n+  // TODO: deprecate adapters/supabase from context.","score":{"reward":0.54,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":76.2342105263158,"syllables":25,"sentences":1,"score":0.8376578947368419},"multiplier":0.25,"relevance":0.6}},{"id":1697049579,"content":"Just leaving a note and resolving.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1697049579","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,59 @@\n+import { Context } from \"../types\";\n+\n+/**\n+ * NOTICE: Remove this file or use it as a template for your own plugins.\n+ *\n+ * This encapsulates the logic for a plugin if the only thing it does is say \"Hello, world!\".\n+ *\n+ * Try it out by running your local kernel worker and running the `yarn worker` command.\n+ * Comment on an issue in a repository where your GitHub App is installed and see the magic happen!\n+ *\n+ * Logger examples are provided to show how to log different types of data.\n+ */\n+export async function helloWorld(context: Context) {\n+  const {\n+    logger,\n+    payload,\n+    octokit,\n+    config: { configurableResponse },\n+  } = context;\n+\n+  const sender = payload.comment.user?.login;\n+  const repo = payload.repository.name;\n+  const issueNumber = payload.issue.number;\n+  const owner = payload.repository.owner.login;\n+  const body = payload.comment.body;\n+\n+  if (!body.match(/hello/i)) {\n+    logger.error(`Invalid use of slash command, use \"/hello\".`, { body });\n+    return;\n+  }\n+\n+  logger.info(\"Hello, world!\");\n+  logger.debug(`Executing helloWorld:`, { sender, repo, issueNumber, owner });\n+\n+  try {\n+    await octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: payload.issue.number,\n+      body: configurableResponse,\n+    });\n+  } catch (error) {\n+    /**\n+     * logger.fatal should not be used in 9/10 cases. Use logger.error instead.","score":{"reward":0.076,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":0.25,"relevance":0.2}},{"id":2258430326,"content":"Good I discovered this pull request. I got stuck and was tweaking multiple local changes, will start fresh and base on this improved template now.","url":"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2258430326","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.318,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":79.09150000000001,"syllables":34,"sentences":2,"score":0.8090849999999999},"multiplier":0.25,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2207806663,"effect":{"addition":298,"deletion":77},"reward":7.5,"priority":2},{"reviewId":2207832365,"effect":{"addition":0,"deletion":0},"reward":0,"priority":2}],"url":"https://github.com/ubiquity-os/plugin-template/pull/15"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 9.01 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>7.5</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>1.51</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/15\" target=\"_blank\" rel=\"noopener\">#15</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+298 -77</td><td>2</td><td>7.5</td></tr><tr><td>+0 -0</td><td>2</td><td>0</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1697034279\" target=\"_blank\" rel=\"noopener\">It would be good to add 1/10 case when logger.fatal should be ap&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.8</td><td>2</td><td>0.576</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1697041505\" target=\"_blank\" rel=\"noopener\">Very good to mention this as I was exactly doing this as well, s&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.6</td><td>2</td><td>0.54</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#discussion_r1697049579\" target=\"_blank\" rel=\"noopener\">Just leaving a note and resolving.</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.076</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/15#issuecomment-2258430326\" target=\"_blank\" rel=\"noopener\">Good I discovered this pull request. I got stuck and was tweakin&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.318</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_88.json","json":{"luisantoniocrag":{"userId":42625753,"total":6,"task":{"reward":6,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 6 XP ]</a>&nbsp;</h3><h6>@luisantoniocrag</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>6</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"rajiknows":{"total":0.091,"userId":136908732,"comments":[{"id":2411184374,"content":"cant find that file","url":"https://github.com/ubiquity-os/permit-generation/issues/88#issuecomment-2411184374","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.091,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/permit-generation/pull/90"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.091 XP ]</a>&nbsp;</h3><h6>@rajiknows</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.091</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/88#issuecomment-2411184374\" target=\"_blank\" rel=\"noopener\">cant find that file</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.091</td></tr></tbody></table></details>"},"0x4007":{"total":3.995,"userId":4975670,"comments":[{"id":2411712592,"content":"@whilefoo rfc","url":"https://github.com/ubiquity-os/permit-generation/issues/88#issuecomment-2411712592","commentType":"ISSUE_AUTHOR","score":{"reward":0.124,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":35.60500000000002,"syllables":4,"sentences":1,"score":0.7560500000000002},"multiplier":1,"relevance":0.4}},{"id":2583369855,"content":"_Originally posted by @0x4007 in https://github.com/ubiquity-os/permit-generation/pull/69#discussion_r1797709276_\r\nDo it with TypeBox","url":"https://github.com/ubiquity-os/permit-generation/issues/88","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.29,"formatting":{"content":{"p":{"score":0,"elementCount":2},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":41.350394736842105,"syllables":35,"sentences":2,"score":0.813503947368421},"multiplier":1,"relevance":1}},{"id":2425168814,"content":"@whilefoo rfc","url":"https://github.com/ubiquity-os/permit-generation/pull/90#issuecomment-2425168814","commentType":"PULL_COLLABORATOR","score":{"reward":0.062,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":35.60500000000002,"syllables":4,"sentences":1,"score":0.7560500000000002},"multiplier":1,"relevance":0.2}},{"id":2426059506,"content":"It isn't required for ERC20 Permits https://github.com/ubiquity-os/permit-generation/pull/69#discussion_r1797709276","url":"https://github.com/ubiquity-os/permit-generation/pull/90#issuecomment-2426059506","commentType":"PULL_COLLABORATOR","score":{"reward":1.519,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":53.889852941176486,"syllables":29,"sentences":2,"score":0.9388985294117649},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/permit-generation/pull/90"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 3.995 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.29</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.124</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>1.581</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/88\" target=\"_blank\" rel=\"noopener\">_Originally posted by @0x4007 in https://github.com/ubiquity-os/&hellip;</a></h6></td><td><details><summary>1.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>1</td><td>1</td><td>2.29</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/88#issuecomment-2411712592\" target=\"_blank\" rel=\"noopener\">@whilefoo rfc</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.124</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/90#issuecomment-2425168814\" target=\"_blank\" rel=\"noopener\">@whilefoo rfc</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.062</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/90#issuecomment-2426059506\" target=\"_blank\" rel=\"noopener\">It isn't required for ERC20 Permits https://github.com/ubiquity-&hellip;</a></h6></td><td><details><summary>1.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.519</td></tr></tbody></table></details>"},"whilefoo":{"total":2.765,"userId":139262667,"comments":[{"id":2414874718,"content":"https://github.com/ubiquity-os/permit-generation/blob/development/src/types/env.ts","url":"https://github.com/ubiquity-os/permit-generation/issues/88#issuecomment-2414874718","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.008,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":46.2520512820513,"syllables":24,"sentences":3,"score":0.862520512820513},"multiplier":1,"relevance":0.8}},{"id":1829747394,"content":"you can put message in variable to avoid duplicating","url":"https://github.com/ubiquity-os/permit-generation/pull/90#discussion_r1829747394","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -68,9 +68,21 @@ export async function generateErc721PermitSignature(\n     _userId = contextOrPermitPayload.userId;\n   } else {\n     const { NFT_MINTER_PRIVATE_KEY, NFT_CONTRACT_ADDRESS } = contextOrPermitPayload.env;\n+\n+    _logger = contextOrPermitPayload.logger;\n+\n+    if (!NFT_MINTER_PRIVATE_KEY) {\n+      _logger.error(\"NFT minter private key is not defined\");\n+      throw new Error(\"NFT minter private key is not defined\");","score":{"reward":0.742,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":47.30000000000004,"syllables":16,"sentences":1,"score":0.8730000000000004},"multiplier":1,"relevance":0.7}},{"id":2426030071,"content":"@0x4007 why did we want to make them optional in the first place?","url":"https://github.com/ubiquity-os/permit-generation/pull/90#issuecomment-2426030071","commentType":"PULL_COLLABORATOR","score":{"reward":0.655,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":96.02461538461542,"syllables":15,"sentences":1,"score":0.6397538461538459},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2416279538,"effect":{"addition":16,"deletion":10},"reward":0.26,"priority":1},{"reviewId":2419381103,"effect":{"addition":6,"deletion":4},"reward":0.1,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/90"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.765 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>0.36</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.008</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>1.397</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/90\" target=\"_blank\" rel=\"noopener\">#90</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+16 -10</td><td>1</td><td>0.26</td></tr><tr><td>+6 -4</td><td>1</td><td>0.1</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/88#issuecomment-2414874718\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os/permit-generation/blob/developmen&hellip;</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.008</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/90#discussion_r1829747394\" target=\"_blank\" rel=\"noopener\">you can put message in variable to avoid duplicating</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.742</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/90#issuecomment-2426030071\" target=\"_blank\" rel=\"noopener\">@0x4007 why did we want to make them optional in the first place?</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.655</td></tr></tbody></table></details>"},"Keyrxng":{"total":0.446,"userId":106303466,"comments":[{"id":1828444778,"content":"This should throw if these are not defined rather than assigning them an empty string. Otherwise I think things are okay","url":"https://github.com/ubiquity-os/permit-generation/pull/90#discussion_r1828444778","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -67,7 +67,8 @@ export async function generateErc721PermitSignature(\n     _repositoryName = contextOrPermitPayload.repositoryName;\n     _userId = contextOrPermitPayload.userId;\n   } else {\n-    const { NFT_MINTER_PRIVATE_KEY, NFT_CONTRACT_ADDRESS } = contextOrPermitPayload.env;\n+    const { NFT_MINTER_PRIVATE_KEY = \"\", NFT_CONTRACT_ADDRESS = \"\" } = contextOrPermitPayload.env;","score":{"reward":0.376,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":79.34892857142859,"syllables":29,"sentences":2,"score":0.8065107142857141},"multiplier":0.25,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2414204534,"effect":{"addition":4,"deletion":3},"reward":0.07,"priority":1}],"url":"https://github.com/ubiquity-os/permit-generation/pull/90"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.446 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.07</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.376</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/permit-generation/pull/90\" target=\"_blank\" rel=\"noopener\">#90</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+4 -3</td><td>1</td><td>0.07</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/pull/90#discussion_r1828444778\" target=\"_blank\" rel=\"noopener\">This should throw if these are not defined rather than assigning&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.376</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-sdk_28.json","json":{"gentlementlegen":{"userId":9807008,"total":28.136,"task":{"reward":25,"multiplier":1},"comments":[{"id":2647102061,"content":"The SDK should allow to reuse the same comment during a run to avoid posting multiple comments about a result, like for example with `text-conversation-rewards` that posts a waiting comment during its run. This capability should be implemented within the SDK.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/28","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.8,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":55.40500000000003,"syllables":62,"sentences":2,"score":0.9540500000000003},"multiplier":1,"relevance":1}},{"id":2256031097,"content":"Resolves #28\nQA: https://github.com/Meniole/text-conversation-rewards/issues/45#issuecomment-2566088976","url":"https://github.com/ubiquity-os/plugin-sdk/pull/43","commentType":"PULL_SPECIFICATION","score":{"reward":0.336,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":42.61571428571432,"syllables":26,"sentences":2,"score":0.8261571428571431},"multiplier":1,"relevance":0.2}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 28.136 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.8</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.336</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/issues/28\" target=\"_blank\" rel=\"noopener\">The SDK should allow to reuse the same comment during a run to a&hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>1</td><td>1</td><td>2.8</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/43\" target=\"_blank\" rel=\"noopener\">Resolves #28QA: https://github.com/Meniole/text-conversation-re&hellip;</a></h6></td><td><details><summary>1.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.336</td></tr></tbody></table></details>"},"0x4007":{"total":1.622,"userId":4975670,"comments":[{"id":2531037658,"content":"QA looks fine","url":"https://github.com/ubiquity-os/plugin-sdk/pull/43#pullrequestreview-2531037658","commentType":"PULL_COLLABORATOR","score":{"reward":0.092,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"reviews":[{"reviewId":2531037658,"effect":{"addition":114,"deletion":39},"reward":1.53,"priority":1}],"url":"https://github.com/ubiquity-os/plugin-sdk/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.622 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>1.53</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.092</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/43\" target=\"_blank\" rel=\"noopener\">#43</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+114 -39</td><td>1</td><td>1.53</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-sdk/pull/43#pullrequestreview-2531037658\" target=\"_blank\" rel=\"noopener\">QA looks fine</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.092</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_104.json","json":{"rndquu":{"userId":119500907,"total":405.96,"task":{"reward":400,"multiplier":1},"comments":[{"id":2333614540,"content":"I suppose this is the same issue [ubiquibot/permit-generation#20](https://github.com/ubiquibot/permit-generation/issues/20) (although with a different solution).\r\nThe solution could be to expect [evmPrivateEncrypted](https://github.com/rndquu-org/ubiquibot-config/blob/4025a687c0fc1e75b8b38aa6f4e3737edffa63a5/.github/.ubiquibot-config.yml#L7) to be in 2 formats:\r\n```\r\n# 1\r\nWALLET_PRIVATE_KEY:GITHUB_ORGANIZATION_ID:GITHUB_REPOSITORY_ID\r\n# 2\r\nWALLET_PRIVATE_KEY:GITHUB_ORGANIZATION_ID\r\n```\r\nSo on decrypting we could check that:\r\n1. If org and repo name exists then check that current issue's context matches the values from a decrypted `evmPrivateEncrypted`\r\n2. If only org exists then check that current issue's org context matches the value from `evmPrivateEncrypted`\r\nThis way we can use `WALLET_PRIVATE_KEY:GITHUB_ORGANIZATION_ID` format in repositories as well.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104#issuecomment-2333614540","commentType":"ISSUE_ASSIGNEE","score":{"reward":5.96,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2.2},"priority":4,"words":{"wordCount":80,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":37.22000000000003,"syllables":122,"sentences":2,"score":0.7722000000000002},"multiplier":0.25,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 405.96 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>400</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>5.96</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104#issuecomment-2333614540\" target=\"_blank\" rel=\"noopener\">I suppose this is the same issue [ubiquibot/permit-generation#20&hellip;</a></h6></td><td><details><summary>4.83</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.2&#13;regex:&#13;  wordCount: 80&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>4</td><td>5.96</td></tr></tbody></table></details>"},"0x4007":{"total":77.816,"userId":4975670,"comments":[{"id":2333548032,"content":"@rndquu @Keyrxng would you guys mind urgently looking into this?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104#issuecomment-2333548032","commentType":"ISSUE_AUTHOR","score":{"reward":1.792,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":78.24500000000002,"syllables":14,"sentences":1,"score":0.8175499999999998},"multiplier":1,"relevance":0.4}},{"id":2351740996,"content":"@rndquu \nOr it could possibly be the pull that's opened on the permit generation repo maybe? Not sure if that at all affects permit generation in our system.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104#issuecomment-2351740996","commentType":"ISSUE_AUTHOR","score":{"reward":4.74,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":66.67612068965518,"syllables":43,"sentences":2,"score":0.9332387931034483},"multiplier":1,"relevance":0.5}},{"id":2509858039,"content":"I know I've highlighted this issue in the past, but I'm not sure where. \nAs I'm going around these conferences and trying to fundraisers/find partners we realize that to quickly set up partners, we basically just send them the ubiquibot config file. \nSo the encrypted private key was leaked unintentionally. \nAs part of the decryption process, we should also include the organization ID or repo ID as part of the salt. \nThat way, if I copy my ubiquibot config in my organization and I leak it, and somebody else tries to use my same exact EVM private key encrypted the bot, it will fail to decrypt correctly because their repository ID is different for example.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.2,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":119,"wordValue":0.1,"result":2.5},"readability":{"fleschKincaid":53.28976470588236,"syllables":182,"sentences":5,"score":0.9328976470588236},"multiplier":1,"relevance":1}},{"id":1749105838,"content":"I decided that we should rely on the repository ID first, and use the organization ID as a fallback in case no config is defined for some reason. \nThe ubiquibot-config repository is intended to be private, which means that no external contributors can guess the ID, making it a suitable salt. \nAnybody can query anybody's organization ID, and create a malicious \"drainer\" plugin though (after obtaining their evm private key encrypted of course)","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1749105838","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -53,6 +54,11 @@ export class PermitGenerationModule implements Module {\n       console.warn(\"[PermitGenerationModule] Invalid env detected, skipping.\");\n       return Promise.resolve(result);\n     }\n+    const isPrivateKeyAllowed = await this._isPrivateKeyAllowed(payload.evmPrivateEncrypted, program.eventPayload.organization?.id || 0, program.eventPayload.repository.id);","score":{"reward":10.336,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":75,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":37.07600000000002,"syllables":128,"sentences":3,"score":0.7707600000000002},"multiplier":1,"relevance":0.8}},{"id":1750358748,"content":"True\nThis I don't understand for reasons: \n1. You're excluding the prefix `010:Repository`\n2. How many bits of entropy is required?\n3. Isn't the string representation of the number, as it is here concatenation to the prefix, 9 bytes? \nI don't understand the log function being used here. \nThat's good!","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1750358748","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -53,6 +54,11 @@ export class PermitGenerationModule implements Module {\n       console.warn(\"[PermitGenerationModule] Invalid env detected, skipping.\");\n       return Promise.resolve(result);\n     }\n+    const isPrivateKeyAllowed = await this._isPrivateKeyAllowed(payload.evmPrivateEncrypted, program.eventPayload.organization?.id || 0, program.eventPayload.repository.id);","score":{"reward":9.576,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":4,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":71.14080882352944,"syllables":74,"sentences":4,"score":0.8885919117647056},"multiplier":1,"relevance":0.7}},{"id":1752264672,"content":"The last part I realize doesn't matter because the attacker would be forced to use the string representation of the number anyways. \nIf you are curious what I was asking about:\nhttps://chatgpt.com/share/9bad1cf1-d14d-4bc3-841d-105fffb94b7a","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752264672","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -53,6 +54,11 @@ export class PermitGenerationModule implements Module {\n       console.warn(\"[PermitGenerationModule] Invalid env detected, skipping.\");\n       return Promise.resolve(result);\n     }\n+    const isPrivateKeyAllowed = await this._isPrivateKeyAllowed(payload.evmPrivateEncrypted, program.eventPayload.organization?.id || 0, program.eventPayload.repository.id);","score":{"reward":7.4,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":75.3486991869919,"syllables":57,"sentences":3,"score":0.846513008130081},"multiplier":1,"relevance":0.5}},{"id":1752299015,"content":"Why do you support this intermediary format? Why not just support the max secure one below?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752299015","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -153,3 +153,30 @@ with:\n         post: true\n         debug: false\n ```\n+\n+## How to encrypt the `evmPrivateEncrypted` parameter\n+\n+Partner private key (`evmPrivateEncrypted` config param in `conversation-rewards` plugin) supports 3 formats:\n+1. `PRIVATE_KEY` (allowed to be used only in `ubiquity` and `ubiquibot` organizations)\n+2. `PRIVATE_KEY:GITHUB_ORGANIZATION_ID`\n+3. `PRIVATE_KEY:GITHUB_ORGANIZATION_ID:GITHUB_REPOSITORY_ID`\n+\n+Format `PRIVATE_KEY` can be used only for `ubiquity` and `ubiquibot` organizations. It is kept for backwards compatibility in order not to update private key formats for our existing values set in the `evmPrivateEncrypted` param.\n+   \n+Format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID` restricts in which particular organization this private key can be used. It can be set either in the organization wide config either in the repository wide one.","score":{"reward":5.216,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":66.5275,"syllables":25,"sentences":2,"score":0.9347249999999999},"multiplier":1,"relevance":0.8}},{"id":1752301025,"content":"```suggestion\n5. Click \"Encrypt\" to get an encrypted value in the `CIPHER_TEXT` field\n```","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752301025","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -153,3 +153,30 @@ with:\n         post: true\n         debug: false\n ```\n+\n+## How to encrypt the `evmPrivateEncrypted` parameter\n+\n+Partner private key (`evmPrivateEncrypted` config param in `conversation-rewards` plugin) supports 3 formats:\n+1. `PRIVATE_KEY` (allowed to be used only in `ubiquity` and `ubiquibot` organizations)\n+2. `PRIVATE_KEY:GITHUB_ORGANIZATION_ID`\n+3. `PRIVATE_KEY:GITHUB_ORGANIZATION_ID:GITHUB_REPOSITORY_ID`\n+\n+Format `PRIVATE_KEY` can be used only for `ubiquity` and `ubiquibot` organizations. It is kept for backwards compatibility in order not to update private key formats for our existing values set in the `evmPrivateEncrypted` param.\n+   \n+Format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID` restricts in which particular organization this private key can be used. It can be set either in the organization wide config either in the repository wide one.\n+\n+Format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID:GITHUB_REPOSITORY_ID` restricts organization and a particular repository where private key is allowed to be used.\n+\n+How to encrypt for you local organization for testing purposes:\n+1. Get your organization id\n+```\n+curl -H \"Accept: application/json\" -H \"Authorization: token GITHUB_PAT_TOKEN\" https://api.github.com/orgs/ubiquity\n+```\n+2. Open https://keygen.ubq.fi/\n+3. Click \"Generate\" to create a new `x25519_PRIVATE_KEY` (which will be used in the `conversation-rewards` plugin to decrypt encrypted wallet private key)\n+4. Input a string in the format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID` in the `PLAIN_TEXT` UI text input where:\n+- `PRIVATE_KEY`: your ethereum wallet private key without the `0x` prefix\n+- `GITHUB_ORGANIZATION_ID`: your github organization id (which you got from step 1)\n+5. Click \"Ecnrypt\" to get an encrypted value in the `CIPHER_TEXT` field","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.9}},{"id":1752301286,"content":"```suggestion\n6. Set the encrypted text (from step 5) in the `evmPrivateEncrypted` config parameter\n```","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752301286","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -153,3 +153,30 @@ with:\n         post: true\n         debug: false\n ```\n+\n+## How to encrypt the `evmPrivateEncrypted` parameter\n+\n+Partner private key (`evmPrivateEncrypted` config param in `conversation-rewards` plugin) supports 3 formats:\n+1. `PRIVATE_KEY` (allowed to be used only in `ubiquity` and `ubiquibot` organizations)\n+2. `PRIVATE_KEY:GITHUB_ORGANIZATION_ID`\n+3. `PRIVATE_KEY:GITHUB_ORGANIZATION_ID:GITHUB_REPOSITORY_ID`\n+\n+Format `PRIVATE_KEY` can be used only for `ubiquity` and `ubiquibot` organizations. It is kept for backwards compatibility in order not to update private key formats for our existing values set in the `evmPrivateEncrypted` param.\n+   \n+Format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID` restricts in which particular organization this private key can be used. It can be set either in the organization wide config either in the repository wide one.\n+\n+Format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID:GITHUB_REPOSITORY_ID` restricts organization and a particular repository where private key is allowed to be used.\n+\n+How to encrypt for you local organization for testing purposes:\n+1. Get your organization id\n+```\n+curl -H \"Accept: application/json\" -H \"Authorization: token GITHUB_PAT_TOKEN\" https://api.github.com/orgs/ubiquity\n+```\n+2. Open https://keygen.ubq.fi/\n+3. Click \"Generate\" to create a new `x25519_PRIVATE_KEY` (which will be used in the `conversation-rewards` plugin to decrypt encrypted wallet private key)\n+4. Input a string in the format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID` in the `PLAIN_TEXT` UI text input where:\n+- `PRIVATE_KEY`: your ethereum wallet private key without the `0x` prefix\n+- `GITHUB_ORGANIZATION_ID`: your github organization id (which you got from step 1)\n+5. Click \"Ecnrypt\" to get an encrypted value in the `CIPHER_TEXT` field\n+6. Set the ecnrypted text (from step 5) in the `evmPrivateEncrypted` config parameter","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.9}},{"id":1752302217,"content":"```suggestion\n7. Set `X25519_PRIVATE_KEY` environment variable in github secrets of your forked instance of the `conversation-rewards` plugin \n```","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752302217","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -153,3 +153,30 @@ with:\n         post: true\n         debug: false\n ```\n+\n+## How to encrypt the `evmPrivateEncrypted` parameter\n+\n+Partner private key (`evmPrivateEncrypted` config param in `conversation-rewards` plugin) supports 3 formats:\n+1. `PRIVATE_KEY` (allowed to be used only in `ubiquity` and `ubiquibot` organizations)\n+2. `PRIVATE_KEY:GITHUB_ORGANIZATION_ID`\n+3. `PRIVATE_KEY:GITHUB_ORGANIZATION_ID:GITHUB_REPOSITORY_ID`\n+\n+Format `PRIVATE_KEY` can be used only for `ubiquity` and `ubiquibot` organizations. It is kept for backwards compatibility in order not to update private key formats for our existing values set in the `evmPrivateEncrypted` param.\n+   \n+Format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID` restricts in which particular organization this private key can be used. It can be set either in the organization wide config either in the repository wide one.\n+\n+Format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID:GITHUB_REPOSITORY_ID` restricts organization and a particular repository where private key is allowed to be used.\n+\n+How to encrypt for you local organization for testing purposes:\n+1. Get your organization id\n+```\n+curl -H \"Accept: application/json\" -H \"Authorization: token GITHUB_PAT_TOKEN\" https://api.github.com/orgs/ubiquity\n+```\n+2. Open https://keygen.ubq.fi/\n+3. Click \"Generate\" to create a new `x25519_PRIVATE_KEY` (which will be used in the `conversation-rewards` plugin to decrypt encrypted wallet private key)\n+4. Input a string in the format `PRIVATE_KEY:GITHUB_ORGANIZATION_ID` in the `PLAIN_TEXT` UI text input where:\n+- `PRIVATE_KEY`: your ethereum wallet private key without the `0x` prefix\n+- `GITHUB_ORGANIZATION_ID`: your github organization id (which you got from step 1)\n+5. Click \"Ecnrypt\" to get an encrypted value in the `CIPHER_TEXT` field\n+6. Set the ecnrypted text (from step 5) in the `evmPrivateEncrypted` config parameter\n+7. Set `x25519_PRIVATE_KEY` environment variable in github secrets of your forked instance of the `conversation-rewards` plugin ","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.9}},{"id":2341428924,"content":"I appreciate this attention to detail but it would only take a few minutes to update our keys, so why don't we go ahead and rotate them anyways?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#issuecomment-2341428924","commentType":"PULL_COLLABORATOR","score":{"reward":5.736,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":57.793103448275886,"syllables":41,"sentences":1,"score":0.9779310344827589},"multiplier":1,"relevance":0.6}},{"id":2348587536,"content":"I'll need to update the keys when I'm back on computer. Are there any instructions or tooling for this? Will review the full pull when I get a chance to again on computer.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#issuecomment-2348587536","commentType":"PULL_COLLABORATOR","score":{"reward":3.984,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":86.22190476190477,"syllables":45,"sentences":3,"score":0.7377809523809523},"multiplier":1,"relevance":0.4}},{"id":2349006186,"content":"Looks like [it works](https://github.com/ubiquibot/production/issues/107#issuecomment-2349001283). Will need to top up balance and set up allowance.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#issuecomment-2349006186","commentType":"PULL_COLLABORATOR","score":{"reward":7.196,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":97.0014285714286,"syllables":17,"sentences":2,"score":0.6299857142857139},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2288462140,"effect":{"addition":243,"deletion":2},"reward":9.8,"priority":4},{"reviewId":2290071021,"effect":{"addition":22,"deletion":21},"reward":1.72,"priority":4},{"reviewId":2292987855,"effect":{"addition":34,"deletion":4},"reward":1.52,"priority":4},{"reviewId":2302739866,"effect":{"addition":44,"deletion":96},"reward":5.6,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 77.816 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>18.64</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.2</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>6.532</td></tr><tr><td>Review</td><td>Comment</td><td>10</td><td>49.444</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111\" target=\"_blank\" rel=\"noopener\">#111</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+243 -2</td><td>4</td><td>9.8</td></tr><tr><td>+22 -21</td><td>4</td><td>1.72</td></tr><tr><td>+34 -4</td><td>4</td><td>1.52</td></tr><tr><td>+44 -96</td><td>4</td><td>5.6</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104\" target=\"_blank\" rel=\"noopener\">I know I've highlighted this issue in the past, but I'm not sure&hellip;</a></h6></td><td><details><summary>2.5</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 119&#13;  wordValue: 0.1&#13;  result: 2.5&#13;</pre></details></td><td>1</td><td>1</td><td>3.2</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104#issuecomment-2333548032\" target=\"_blank\" rel=\"noopener\">@rndquu @Keyrxng would you guys mind urgently looking into this?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.4</td><td>4</td><td>1.792</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104#issuecomment-2351740996\" target=\"_blank\" rel=\"noopener\">@rndquu Or it could possibly be the pull that's opened on the p&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.5</td><td>4</td><td>4.74</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1749105838\" target=\"_blank\" rel=\"noopener\">I decided that we should rely on the repository ID first, and us&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 75&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.8</td><td>4</td><td>10.336</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1750358748\" target=\"_blank\" rel=\"noopener\">TrueThis I don't understand for reasons: 1. You're excluding t&hellip;</a></h6></td><td><details><summary>2.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0.1&#13;  result: 2.4&#13;</pre></details></td><td>0.7</td><td>4</td><td>9.576</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752264672\" target=\"_blank\" rel=\"noopener\">The last part I realize doesn't matter because the attacker woul&hellip;</a></h6></td><td><details><summary>2.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.5</td><td>4</td><td>7.4</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752299015\" target=\"_blank\" rel=\"noopener\">Why do you support this intermediary format? Why not just suppor&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>4</td><td>5.216</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752301025\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion5. Click \"Encrypt\" to get an encrypted&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752301286\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion6. Set the encrypted text (from step 5&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1752302217\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion7. Set &#96;X25519_PRIVATE_KEY&#96; en&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#issuecomment-2341428924\" target=\"_blank\" rel=\"noopener\">I appreciate this attention to detail but it would only take a f&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.6</td><td>4</td><td>5.736</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#issuecomment-2348587536\" target=\"_blank\" rel=\"noopener\">I'll need to update the keys when I'm back on computer. Are ther&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.4</td><td>4</td><td>3.984</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#issuecomment-2349006186\" target=\"_blank\" rel=\"noopener\">Looks like [it works](https://github.com/ubiquibot/production/is&hellip;</a></h6></td><td><details><summary>2.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>4</td><td>7.196</td></tr></tbody></table></details>"},"whilefoo":{"total":27.292,"userId":139262667,"comments":[{"id":2351583305,"content":"something weird is going on. the link to permit is `https://github.com/ubiquity/ubiquibot-kernel/issues/undefined`","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104#issuecomment-2351583305","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.748,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":91.78000000000003,"syllables":13,"sentences":2,"score":0.6821999999999997},"multiplier":1,"relevance":0.3}},{"id":1753511209,"content":"so this plugin won't work for repos without organization? I know this is an edge case but we could easily make it work if we use `eventPayload.repository.owner.id` which is org or user","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1753511209","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -53,6 +54,11 @@ export class PermitGenerationModule implements Module {\n       console.warn(\"[PermitGenerationModule] Invalid env detected, skipping.\");\n       return Promise.resolve(result);\n     }\n+    const isPrivateKeyAllowed = await this._isPrivateKeyAllowed(payload.evmPrivateEncrypted, program.eventPayload.organization?.id || 0, program.eventPayload.repository.id);","score":{"reward":7.744,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":79.5575,"syllables":42,"sentences":2,"score":0.804425},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2295999701,"effect":{"addition":276,"deletion":4},"reward":11.2,"priority":4},{"reviewId":2302731875,"effect":{"addition":44,"deletion":96},"reward":5.6,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 27.292 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>16.8</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>2.748</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>7.744</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111\" target=\"_blank\" rel=\"noopener\">#111</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+276 -4</td><td>4</td><td>11.2</td></tr><tr><td>+44 -96</td><td>4</td><td>5.6</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/104#issuecomment-2351583305\" target=\"_blank\" rel=\"noopener\">something weird is going on. the link to permit is &#96;https://&hellip;</a></h6></td><td><details><summary>1.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.3</td><td>4</td><td>2.748</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/111#discussion_r1753511209\" target=\"_blank\" rel=\"noopener\">so this plugin won't work for repos without organization? I know&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.8</td><td>4</td><td>7.744</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_60.json","json":{"ishowvel":{"userId":186167176,"total":1602.016,"task":{"reward":1600,"multiplier":1},"comments":[{"id":2530230191,"content":"The spec basically gives a reward to the diff of the commits combined between each review\nif this were to be a separate plugin wouldn't the reward infrastructure have to be implemented first?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2530230191","commentType":"ISSUE_ASSIGNEE","score":{"reward":2.016,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":45.425000000000026,"syllables":51,"sentences":1,"score":0.8542500000000003},"multiplier":0.25,"relevance":0.8}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1602.016 XP ]</a>&nbsp;</h3><h6>@ishowvel</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>1600</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>2.016</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2530230191\" target=\"_blank\" rel=\"noopener\">The spec basically gives a reward to the diff of the commits com&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.8</td><td>4</td><td>2.016</td></tr></tbody></table></details>"},"0x4007":{"total":307.136,"userId":4975670,"comments":[{"id":2507469146,"content":"# Source Specification\r\n## uusd.ubq.fi#3\r\nTaking this large pull as an example: https://github.com/ubiquity/uusd.ubq.fi/pull/3/files\r\n```\r\n+8406 \r\n−189 \r\nnet line changes = 8595\r\nminus yarn lockfile (697) = 7898\r\n7898/100=$78.98 \r\n```\r\n###### We can exclude the lockfile diff and other common generated files line changes count using [linguist-generated](https://docs.github.com/en/repositories/working-with-files/managing-files/customizing-how-changed-files-appear-on-github)\r\nI think a minimum credit of $25 could be nice because even taking the time to see a tightly scoped pull of only a few lines requires context switching and thinking about the changes in relation to the codebase, also while checking CI status and conversation state. We could add this minimum ONE TIME if the reviewer left a conclusive (approval or request changes, not just commented) so the full review would yield `$103.98`. We could also refer to it as a `conclusiveReviewCredit: 25`\r\n### Handling Multiple Reviews\r\nProblem: pulls may be reviewed multiple times by a team member. How do we handle this dynamically (no hard numbers) so that the incentives scale with small and large pulls accurately? \r\nSolution: we track exactly which lines the reviewer is reviewing and credit only for changed lines reviewed. \r\nExample: \r\n- I (reviewer) see the pull up to commit https://github.com/ubiquity/uusd.ubq.fi/pull/3/commits/6fe4bf0910487612f3c4466893029f07e28eb128 commit 31/32\r\n- I leave a review\r\n- Review changes are implemented \r\n- I review again at the next commit https://github.com/ubiquity/uusd.ubq.fi/pull/3/commits/f07a96b90f12d024b704a52b3d447f092c6601af 32/32\r\n- Diff is here https://github.com/ubiquity/uusd.ubq.fi/compare/f07a96b90f12d024b704a52b3d447f092c6601af..6fe4bf0910487612f3c4466893029f07e28eb128 with a net change of `+6 −8  = 14` /100 = $0.14\r\nSecond example, starting from the middle of the commits:\r\n- I see the halfway point at https://github.com/ubiquity/uusd.ubq.fi/compare/development...5be5157bf2cd3a355a35eaa0d8ef84499e106e99  commit 16/32 `+7,904 -91 = 7995 minus 697 generated = 7,298 / 100 = $72.98. \r\n- Finally I review again at the last commit 32/32 https://github.com/ubiquity/uusd.ubq.fi/compare/5be5157bf2cd3a355a35eaa0d8ef84499e106e99..f07a96b90f12d024b704a52b3d447f092c6601af `+1176 -772=1,948 minus generated 0 /100 = $19.48`\r\n- With an approval (+$25) my reviewer rewards are $72.98+$19.48+$25=$117.46","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2507469146","commentType":"ISSUE_AUTHOR","score":{"reward":66.84,"formatting":{"content":{"h1":{"score":1,"elementCount":1},"h2":{"score":1,"elementCount":1},"p":{"score":0,"elementCount":14},"h6":{"score":1,"elementCount":1},"h3":{"score":1,"elementCount":1},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":8},"a":{"score":1,"elementCount":7}},"result":11.8},"priority":4,"words":{"wordCount":257,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":65.24732288401253,"syllables":499,"sentences":35,"score":0.9475267711598747},"multiplier":1,"relevance":1}},{"id":2507501720,"content":"A last consideration is the premium for priority level. Similar to our other rewards, we should grant higher rewards for higher priority projects. \r\nMultiplying the entire output doesn't seem right, because $25 * 4 (priority 4: urgent) = $100 just for leaving a rejection or approval which seems excessive. \r\nIn example 2 above, as this was a priority 4 task: $92.46 * 4 = $369.84 + $25 = $394.84 in review rewards for me.\r\nBasically the same for rndquu as they approved the last commit at the time of writing. \r\n### whilefoo last reviewed https://github.com/ubiquity/uusd.ubq.fi/pull/3/commits/7e705c19cf5fd128c6661f5c618076e2eae80ead so \r\n```\r\n7,112 additions and 91 deletions.\r\n697 generated\r\n= 6,506 / 100 \r\n= $65.06\r\n* 4 = $260.24\r\n```\r\n### zugdev https://github.com/ubiquity/uusd.ubq.fi/pull/3/commits/f07a96b90f12d024b704a52b3d447f092c6601af\r\n```\r\n8,406 additions and 189 deletions.\r\n697 generated\r\n= $78.98\r\n* 4 = $315.92\r\n```\r\nThis does not include the conversation rewards so we might need to normalize them to be the same amount for every contributor. And review rewards only for collaborators.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2507501720","commentType":"ISSUE_AUTHOR","score":{"reward":30.168,"formatting":{"content":{"p":{"score":0,"elementCount":5},"h3":{"score":1,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":4},"priority":4,"words":{"wordCount":121,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":62.285115821678346,"syllables":229,"sentences":16,"score":0.9771488417832166},"multiplier":1,"relevance":0.9}},{"id":2510953565,"content":"@kingsley-einstein the reason why it follows up is because you aren't working on it. You should be working on it to avoid the follow ups.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2510953565","commentType":"ISSUE_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":77.19916666666668,"syllables":37,"sentences":2,"score":0.8280083333333331},"multiplier":1,"relevance":0}},{"id":2530554476,"content":"This seems like it might be related to that one problem a long time ago with the shifted rows in the database @whilefoo @gentlementlegen any ideas? \nAlso @ishowvel that is an accurate assessment so I think for the short term it would make sense for @gentlementlegen to implement a module inside of the text-conversation-rewards plugin and then later we can move it out to its own plugin once we support \"permit requests\" from all plugins to the kernel and the kernel generating them all in one shot.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2530554476","commentType":"ISSUE_AUTHOR","score":{"reward":9.044,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":89,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":36.19334269662923,"syllables":132,"sentences":2,"score":0.7619334269662923},"multiplier":1,"relevance":0.7}},{"id":2533229301,"content":"I remember thinking of this in the past but I couldn't find my old proposals. It would be helpful if you put together a proposal with the math formula as thats the most important part to figure out.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2533229301","commentType":"ISSUE_AUTHOR","score":{"reward":7.644,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":69.90403846153849,"syllables":54,"sentences":2,"score":0.9009596153846151},"multiplier":1,"relevance":0.7}},{"id":2543652860,"content":"That looks fine for now, we can keep iterating to find something good. It's kind of a minor detail.  \nI think the ID is not useful to show so you can exclude it.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2543652860","commentType":"ISSUE_AUTHOR","score":{"reward":6.888,"formatting":{"content":{"p":{"score":0,"elementCount":1},"br":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":85.8493137254902,"syllables":44,"sentences":3,"score":0.7415068627450979},"multiplier":1,"relevance":0.7}},{"id":2544041863,"content":"I think we should retain limits across the board for all incentives. This was discussed elsewhere but the maximum should be 3x over the limit for the assignee:\n- If they wrote the spec\n- assignee reward\n- pull request body \nThose are the ways they should be able to maximize their rewards. For everybody else it should be limited to the task price.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2544041863","commentType":"ISSUE_AUTHOR","score":{"reward":11.712,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":4,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":62.76387978142078,"syllables":89,"sentences":3,"score":0.9723612021857921},"multiplier":1,"relevance":0.8}},{"id":2550147094,"content":"I think perhaps the conclusive review score should be based on XP. \nIf somebody has a lot of XP in a repo their review is a lot more meaningful compared to some random contributor who doesn't know the repo. \nAn example is [here](https://github.com/ubiquity/ts-template/pull/93) that an unrecognized user left an approval. It doesn't make sense to credit them since these rewards are too easy to farm. \nThis depends on us implementing the XP system but will need to file a new task for this.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2550147094","commentType":"ISSUE_AUTHOR","score":{"reward":16.596,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":85,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":71.14000000000003,"syllables":119,"sentences":5,"score":0.8885999999999997},"multiplier":1,"relevance":0.9}},{"id":2615063628,"content":"This is interesting that I've never seen this scenario happen before. Your suggestion is good!","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615063628","commentType":"ISSUE_AUTHOR","score":{"reward":3.96,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":61.24000000000001,"syllables":26,"sentences":2,"score":0.9875999999999999},"multiplier":1,"relevance":0.6}},{"id":2615067110,"content":"It looks like the metadata writer is outdated. I suppose we should bump the plugin-sdk dependency to latest?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615067110","commentType":"ISSUE_AUTHOR","score":{"reward":4.416,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":63.613552631578955,"syllables":30,"sentences":2,"score":0.9638644736842105},"multiplier":1,"relevance":0.6}},{"id":2615838898,"content":"Linter settings also should ban anonymous functions. They should be named or else we can't target this metadata.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615838898","commentType":"ISSUE_AUTHOR","score":{"reward":5.152,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":63.613552631578955,"syllables":30,"sentences":2,"score":0.9638644736842105},"multiplier":1,"relevance":0.7}},{"id":2629199538,"content":"How's this coming along","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2629199538","commentType":"ISSUE_AUTHOR","score":{"reward":1.56,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.6}},{"id":2634929010,"content":"@gentlementlegen any update","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2634929010","commentType":"ISSUE_AUTHOR","score":{"reward":0.7,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":-21.809999999999945,"syllables":8,"sentences":1,"score":0},"multiplier":1,"relevance":0.5}},{"id":2635000187,"content":"@ishowvel can you open a pull to our organization config to enable this feature?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2635000187","commentType":"ISSUE_AUTHOR","score":{"reward":3.456,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":41.553571428571445,"syllables":25,"sentences":1,"score":0.8155357142857145},"multiplier":1,"relevance":0.6}},{"id":2635046255,"content":"To here https://github.com/ubiquity-os-marketplace/.ubiquity-os/blob/main/.github/.ubiquity-os.config.dev.yml","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2635046255","commentType":"ISSUE_AUTHOR","score":{"reward":3.84,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":54.15125000000003,"syllables":32,"sentences":8,"score":0.9415125000000003},"multiplier":1,"relevance":0.6}},{"id":2704561536,"content":"Reviews always seem to be slower than new pulls being submitted. Perhaps with better incentive design we can speed up this operational problem. \r\nMy original spec was dense but provides a lot of context on the problem. I asked Claude to rewrite it to be more clear, but in case you want more context, [please scroll to the bottom](https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2507469146). \r\nJump to [this comment](https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2507501720) to see final output amounts from a large pull. \r\n# Claude Rewrite\r\n## Base Calculation\r\n```typescript\r\ninterface ReviewReward {\r\n  baseRate: number; // $1 per 100 lines\r\n  conclusiveReviewCredit: number; // $25 flat rate\r\n  excludedFiles: string[]; // Files marked with linguist-generated\r\n}\r\nfunction calculateReviewReward(linesChanged: number): number {\r\n  return linesChanged / 100;\r\n}\r\n```\r\n## Core Components\r\n### 1. Minimum Review Credit\r\n- **Amount**: $25 (`conclusiveReviewCredit`)\r\n- **Conditions**:\r\n  - One-time payment per pull request\r\n  - Requires conclusive review (approval or request changes)\r\n  - Comments-only reviews do not qualify\r\n### 2. Line Change Calculation\r\n- **Formula**: `(additions + deletions - generated_files) / 100`\r\n- **Example**:\r\n```typescript\r\nfunction calculateNetLines(diff: {\r\n  additions: number;\r\n  deletions: number;\r\n  generatedFiles: number;\r\n}): number {\r\n  return (diff.additions + diff.deletions - diff.generatedFiles) / 100;\r\n}\r\n```\r\n### 3. Multiple Review Handling\r\n- Track line changes between review points\r\n- Only credit newly reviewed lines\r\n- Use commit hashes as review checkpoints\r\n## Example Scenarios\r\n### Single Complete Review\r\n```typescript\r\nconst example1 = {\r\n  additions: 8406,\r\n  deletions: 189,\r\n  generatedFiles: 697,\r\n  isConclusive: true\r\n};\r\nconst reward = calculateNetLines(example1) + (example1.isConclusive ? 25 : 0);\r\n// $78.98 + $25 = $103.98\r\n```\r\n### Incremental Reviews\r\n```typescript\r\ninterface IncrementalReview {\r\n  startCommit: string;\r\n  endCommit: string;\r\n  additions: number;\r\n  deletions: number;\r\n  generatedFiles: number;\r\n}\r\nfunction calculateIncrementalReward(reviews: IncrementalReview[]): number {\r\n  return reviews.reduce((total, review) => \r\n    total + calculateNetLines(review), 0);\r\n}\r\n```\r\n## Implementation Notes\r\n1. **File Exclusions**\r\n   - Use `.gitattributes` with `linguist-generated`\r\n   - Common exclusions:\r\n     - `yarn.lock`\r\n     - Generated documentation\r\n     - Build artifacts\r\n2. **Diff Comparison**\r\n   - Recommendation: Use three-dot diff (`...`)\r\n   - Rationale: More accurate representation of changes specific to PR\r\n3. **Review Tracking**\r\n   - Store commit hashes as checkpoints\r\n   - Calculate incremental diffs between reviews\r\n   - Track review conclusiveness status","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60","commentType":"ISSUE_SPECIFICATION","score":{"reward":17.84,"formatting":{"content":{"p":{"score":0,"elementCount":26},"h1":{"score":1,"elementCount":1},"h2":{"score":1,"elementCount":4},"h3":{"score":1,"elementCount":5},"ul":{"score":0,"elementCount":8},"li":{"score":0.1,"elementCount":23},"ol":{"score":0,"elementCount":1}},"result":12.3},"priority":1,"words":{"wordCount":172,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":42.33838501291993,"syllables":295,"sentences":9,"score":0.8233838501291992},"multiplier":1,"relevance":1}},{"id":1889500624,"content":"You should retain comments","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1889500624","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -347,8 +398,8 @@ export class GithubCommentModule extends BaseModule {\n       }\n     </details>\n     `\n-      .replace(/(\\r?\\n|\\r)\\s*/g, \"\") // Remove newlines and leading spaces/tabs after them\n-      .replace(/\\s*(<\\/?[^>]+>)\\s*/g, \"$1\") // Trim spaces around HTML tags\n+      .replace(/(\\r?\\n|\\r)\\s*/g, \"\")\n+      .replace(/\\s*(<\\/?[^>]+>)\\s*/g, \"$1\")","score":{"reward":0.66,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.3}},{"id":1902287248,"content":"I imagine that there may be a different dedicated property name for this like trunk or branch base?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1902287248","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -93,30 +97,42 @@ export class ReviewIncentivizerModule extends BaseModule {\n \n     return diff;\n   }\n+  async getReviewableDiff(owner: string, repo: string, baseSha: string, headSha: string) {\n+    const excludedFilePatterns = await getExcludedFiles();\n+    const diff = await this.getTripleDotDiffAsObject(owner, repo, baseSha, headSha);\n+    const reviewEffect = { addition: 0, deletion: 0 };\n+    for (const [fileName, changes] of Object.entries(diff)) {\n+      if (!excludedFilePatterns.some((pattern) => minimatch(fileName, pattern))) {\n+        reviewEffect.addition += changes.addition;\n+        reviewEffect.deletion += changes.deletion;\n+      }\n+    }\n+    return reviewEffect;\n+  }\n \n   async fetchReviewDiffRewards(owner: string, repo: string, reviewsByUser: GitHubPullRequestReviewState[]) {\n+    if (reviewsByUser.length == 0) {\n+      return;\n+    }\n     const reviews: ReviewScore[] = [];\n     const priority = parsePriorityLabel(this.context.payload.issue.labels);\n+    const pullNumber = Number(reviewsByUser[0].pull_request_url.split(\"/\").slice(-1)[0]);\n+    const pullCommits = (\n+      await this.context.octokit.rest.pulls.listCommits({ owner: owner, repo: repo, pull_number: pullNumber })\n+    ).data;\n+    const firstCommitSha = pullCommits[0].sha;","score":{"reward":2.832,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":66.36500000000001,"syllables":26,"sentences":1,"score":0.9363499999999999},"multiplier":1,"relevance":0.4}},{"id":1903275831,"content":"The reviewers should get paid for every new line of code they review. New lines of code are introduced (additions or subtractions) between each commit that they check. I thought I had a clear definition of the algorithm in the spec.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903275831","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -93,30 +97,42 @@ export class ReviewIncentivizerModule extends BaseModule {\n \n     return diff;\n   }\n+  async getReviewableDiff(owner: string, repo: string, baseSha: string, headSha: string) {\n+    const excludedFilePatterns = await getExcludedFiles();\n+    const diff = await this.getTripleDotDiffAsObject(owner, repo, baseSha, headSha);\n+    const reviewEffect = { addition: 0, deletion: 0 };\n+    for (const [fileName, changes] of Object.entries(diff)) {\n+      if (!excludedFilePatterns.some((pattern) => minimatch(fileName, pattern))) {\n+        reviewEffect.addition += changes.addition;\n+        reviewEffect.deletion += changes.deletion;\n+      }\n+    }\n+    return reviewEffect;\n+  }\n \n   async fetchReviewDiffRewards(owner: string, repo: string, reviewsByUser: GitHubPullRequestReviewState[]) {\n+    if (reviewsByUser.length == 0) {\n+      return;\n+    }\n     const reviews: ReviewScore[] = [];\n     const priority = parsePriorityLabel(this.context.payload.issue.labels);\n+    const pullNumber = Number(reviewsByUser[0].pull_request_url.split(\"/\").slice(-1)[0]);\n+    const pullCommits = (\n+      await this.context.octokit.rest.pulls.listCommits({ owner: owner, repo: repo, pull_number: pullNumber })\n+    ).data;\n+    const firstCommitSha = pullCommits[0].sha;","score":{"reward":10.044,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":71.2218699186992,"syllables":59,"sentences":3,"score":0.887781300813008},"multiplier":1,"relevance":0.9}},{"id":1930095672,"content":"@ishowvel can you prove that this always stays at $25 no matter the priority level?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930095672","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -324,6 +324,30 @@\n               }\n             ]\n           },\n+          \"reviewIncentivizer\": {\n+            \"default\": null,\n+            \"anyOf\": [\n+              {\n+                \"default\": {},\n+                \"type\": \"object\",\n+                \"properties\": {\n+                  \"baseRate\": {\n+                    \"default\": 100,\n+                    \"description\": \"Number of lines of code that equals $1 in review credit\",\n+                    \"type\": \"number\"\n+                  },\n+                  \"conclusiveReviewCredit\": {\n+                    \"default\": 25,\n+                    \"description\": \"Flat rate bonus in dollars for completing a conclusive review i.e (Approved or Changes Requested)\",","score":{"reward":4.34,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":67.53000000000003,"syllables":22,"sentences":1,"score":0.9246999999999997},"multiplier":1,"relevance":0.7}},{"id":1930096337,"content":"Maybe better as a warning.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930096337","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,75 @@\n+import { ContextPlugin } from \"../types/plugin-input\";\n+\n+interface GitAttributes {\n+  pattern: string;\n+  attributes: { [key: string]: string | boolean };\n+}\n+\n+async function parseGitAttributes(content: string): Promise<GitAttributes[]> {\n+  const lines = content.split(\"\\n\");\n+  return lines\n+    .map((line) => {\n+      line = line.trim();\n+      if (!line || line.startsWith(\"#\")) return null;\n+\n+      const parts = line.split(/\\s+/);\n+      if (parts.length < 2) return null;\n+\n+      const pattern = parts[0];\n+      const attributes: { [key: string]: string | boolean } = {};\n+\n+      for (let i = 1; i < parts.length; i++) {\n+        const attr = parts[i];\n+        if (attr.includes(\"=\")) {\n+          const [key, value] = attr.split(\"=\");\n+          attributes[key.trim()] = value.trim();\n+        } else {\n+          attributes[attr.trim()] = true;\n+        }\n+      }\n+\n+      return { pattern, attributes };\n+    })\n+    .filter((item): item is GitAttributes => item !== null);\n+}\n+\n+export async function getExcludedFiles(context: ContextPlugin, owner: string, repo: string) {\n+  const gitAttributesContent = await getFileContent(context, \".gitattributes\", owner, repo);\n+  if (!gitAttributesContent) {\n+    return null;\n+  }\n+  const gitAttributesLinguistGenerated = (await parseGitAttributes(gitAttributesContent))\n+    .filter((v) => v.attributes[\"linguist-generated\"])\n+    .map((v) => v.pattern);\n+\n+  return gitAttributesLinguistGenerated;\n+}\n+\n+async function getFileContent(\n+  context: ContextPlugin,\n+  path: string,\n+  owner: string,\n+  repo: string\n+): Promise<string | null> {\n+  try {\n+    const response = await context.octokit.rest.repos.getContent({\n+      owner,\n+      repo,\n+      path,\n+    });\n+\n+    // GitHub API returns content as base64\n+    if (\"content\" in response.data && !Array.isArray(response.data)) {\n+      return Buffer.from(response.data.content, \"base64\").toString(\"utf-8\");\n+    }\n+    return null;\n+  } catch (err) {\n+    if (err instanceof Error && \"status\" in err && err.status === 404) {\n+      context.logger.error(","score":{"reward":1.3,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.5}},{"id":1930096923,"content":"```ts\r\nexport function parsePriorityLabel(labels?: GitHubIssue[\"labels\"]) {\r\n```\r\nI think would have been more concise","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930096923","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,22 @@\n import * as github from \"@actions/github\";\n+import { GitHubIssue } from \"../github-types\";\n \n export function getGithubWorkflowRunUrl() {\n   return `${github.context.payload.repository?.html_url}/actions/runs/${github.context.runId}`;\n }\n+\n+export function parsePriorityLabel(labels: GitHubIssue[\"labels\"] | undefined) {","score":{"reward":2.16,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1930097329,"content":"Why is empty string CI not working? I suppose its not set up in this repo @gentlementlegen rfc","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930097329","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,22 @@\n import * as github from \"@actions/github\";\n+import { GitHubIssue } from \"../github-types\";\n \n export function getGithubWorkflowRunUrl() {\n   return `${github.context.payload.repository?.html_url}/actions/runs/${github.context.runId}`;\n }\n+\n+export function parsePriorityLabel(labels: GitHubIssue[\"labels\"] | undefined) {\n+  if (!labels) return 1;\n+\n+  for (const label of labels) {\n+    const priorityLabel = typeof label === \"string\" ? label : (label.name ?? \"\");","score":{"reward":4.152,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":75.50000000000003,"syllables":26,"sentences":2,"score":0.8449999999999998},"multiplier":1,"relevance":0.6}},{"id":1930097756,"content":"```ts\r\nconst matched = priorityLabel.match(/^Priority:\\s*(\\d+)/);\r\n```\r\nShould be case sensitive.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930097756","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,22 @@\n import * as github from \"@actions/github\";\n+import { GitHubIssue } from \"../github-types\";\n \n export function getGithubWorkflowRunUrl() {\n   return `${github.context.payload.repository?.html_url}/actions/runs/${github.context.runId}`;\n }\n+\n+export function parsePriorityLabel(labels: GitHubIssue[\"labels\"] | undefined) {\n+  if (!labels) return 1;\n+\n+  for (const label of labels) {\n+    const priorityLabel = typeof label === \"string\" ? label : (label.name ?? \"\");\n+    const matched = priorityLabel.match(/^Priority:\\s*(\\d+)/i);","score":{"reward":1.54,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.7}},{"id":1930099099,"content":"This should throw an error instead of assuming 100. This value is required for the program to start.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930099099","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,174 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+import { getExcludedFiles } from \"../helpers/excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;","score":{"reward":5.472,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":80.20000000000003,"syllables":25,"sentences":2,"score":0.7979999999999997},"multiplier":1,"relevance":0.8}},{"id":1930099233,"content":"Same","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930099233","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,174 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+import { getExcludedFiles } from \"../helpers/excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;","score":{"reward":0.504,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":121.22000000000003,"syllables":1,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1930340653,"content":"Our special labels aren't defined like that and it should be targeting specifically our brand of labels. I think the only customization should be the name of the priority level in parenthesis.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930340653","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,22 @@\n import * as github from \"@actions/github\";\n+import { GitHubIssue } from \"../github-types\";\n \n export function getGithubWorkflowRunUrl() {\n   return `${github.context.payload.repository?.html_url}/actions/runs/${github.context.runId}`;\n }\n+\n+export function parsePriorityLabel(labels: GitHubIssue[\"labels\"] | undefined) {\n+  if (!labels) return 1;\n+\n+  for (const label of labels) {\n+    const priorityLabel = typeof label === \"string\" ? label : (label.name ?? \"\");\n+    const matched = priorityLabel.match(/^Priority:\\s*(\\d+)/i);","score":{"reward":8.032,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":49.087500000000006,"syllables":55,"sentences":2,"score":0.8908750000000001},"multiplier":1,"relevance":0.8}},{"id":2591911500,"content":"![image](https://github.com/user-attachments/assets/2f3bb6b4-2057-4eba-b8dd-0f88d8e9737a)\nA double count of base review doesn't look right\n---\nI saw the link to each below, so I answered my own question. I just wish that it was a bit more intuitive.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2591911500","commentType":"PULL_COLLABORATOR","score":{"reward":8.712,"formatting":{"content":{"h2":{"score":1,"elementCount":1},"p":{"score":0,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":87.54204545454546,"syllables":40,"sentences":2,"score":0.7245795454545454},"multiplier":1,"relevance":0.6}},{"id":2615052185,"content":"@whilefoo would you mind incorporating my changes? Sorry for the late review I think I was traveling for my birthday when this was going on.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2615052185","commentType":"PULL_COLLABORATOR","score":{"reward":3.44,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":72.32350000000002,"syllables":36,"sentences":2,"score":0.8767649999999998},"multiplier":1,"relevance":0.4}},{"id":2594055635,"content":"Thank you!","url":"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13#pullrequestreview-2594055635","commentType":"PULL_COLLABORATOR","score":{"reward":0.132,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":120.20500000000001,"syllables":2,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":2510612542,"effect":{"addition":244,"deletion":16},"reward":10.4,"priority":4},{"reviewId":2529892796,"effect":{"addition":332,"deletion":205},"reward":21.48,"priority":4},{"reviewId":2574719880,"effect":{"addition":613,"deletion":185},"reward":31.92,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218"},{"reviews":[{"reviewId":2594055635,"effect":{"addition":4,"deletion":1},"reward":0.2,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 307.136 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>64</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>17.84</td></tr><tr><td>Issue</td><td>Comment</td><td>15</td><td>171.976</td></tr><tr><td>Review</td><td>Comment</td><td>14</td><td>53.32</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218\" target=\"_blank\" rel=\"noopener\">#218</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+244 -16</td><td>4</td><td>10.4</td></tr><tr><td>+332 -205</td><td>4</td><td>21.48</td></tr><tr><td>+613 -185</td><td>4</td><td>31.92</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13\" target=\"_blank\" rel=\"noopener\">#13</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+4 -1</td><td>4</td><td>0.2</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60\" target=\"_blank\" rel=\"noopener\">Reviews always seem to be slower than new pulls being submitted.&hellip;</a></h6></td><td><details><summary>14.31</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 26&#13;    h1:&#13;      score: 1&#13;      elementCount: 1&#13;    h2:&#13;      score: 1&#13;      elementCount: 4&#13;    h3:&#13;      score: 1&#13;      elementCount: 5&#13;    ul:&#13;      score: 0&#13;      elementCount: 8&#13;    li:&#13;      score: 0.1&#13;      elementCount: 23&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 12.3&#13;regex:&#13;  wordCount: 172&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>1</td><td>1</td><td>17.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2507469146\" target=\"_blank\" rel=\"noopener\"># Source Specification## uusd.ubq.fi#3Taking this large pull&hellip;</a></h6></td><td><details><summary>13.01</summary><pre>content:&#13;  content:&#13;    h1:&#13;      score: 1&#13;      elementCount: 1&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 14&#13;    h6:&#13;      score: 1&#13;      elementCount: 1&#13;    h3:&#13;      score: 1&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 8&#13;    a:&#13;      score: 1&#13;      elementCount: 7&#13;  result: 11.8&#13;regex:&#13;  wordCount: 257&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>1</td><td>4</td><td>66.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2507501720\" target=\"_blank\" rel=\"noopener\">A last consideration is the premium for priority level. Similar &hellip;</a></h6></td><td><details><summary>6.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    h3:&#13;      score: 1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 4&#13;regex:&#13;  wordCount: 121&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.9</td><td>4</td><td>30.168</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2510953565\" target=\"_blank\" rel=\"noopener\">@kingsley-einstein the reason why it follows up is because you a&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2530554476\" target=\"_blank\" rel=\"noopener\">This seems like it might be related to that one problem a long t&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 89&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.7</td><td>4</td><td>9.044</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2533229301\" target=\"_blank\" rel=\"noopener\">I remember thinking of this in the past but I couldn't find my o&hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.7</td><td>4</td><td>7.644</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2543652860\" target=\"_blank\" rel=\"noopener\">That looks fine for now, we can keep iterating to find something&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    br:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.7</td><td>4</td><td>6.888</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2544041863\" target=\"_blank\" rel=\"noopener\">I think we should retain limits across the board for all incenti&hellip;</a></h6></td><td><details><summary>2.83</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>0.8</td><td>4</td><td>11.712</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2550147094\" target=\"_blank\" rel=\"noopener\">I think perhaps the conclusive review score should be based on X&hellip;</a></h6></td><td><details><summary>3.64</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 85&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>0.9</td><td>4</td><td>16.596</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615063628\" target=\"_blank\" rel=\"noopener\">This is interesting that I've never seen this scenario happen be&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.6</td><td>4</td><td>3.96</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615067110\" target=\"_blank\" rel=\"noopener\">It looks like the metadata writer is outdated. I suppose we shou&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.6</td><td>4</td><td>4.416</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615838898\" target=\"_blank\" rel=\"noopener\">Linter settings also should ban anonymous functions. They should&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.7</td><td>4</td><td>5.152</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2629199538\" target=\"_blank\" rel=\"noopener\">How's this coming along</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.6</td><td>4</td><td>1.56</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2634929010\" target=\"_blank\" rel=\"noopener\">@gentlementlegen any update</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.5</td><td>4</td><td>0.7</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2635000187\" target=\"_blank\" rel=\"noopener\">@ishowvel can you open a pull to our organization config to enab&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.6</td><td>4</td><td>3.456</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2635046255\" target=\"_blank\" rel=\"noopener\">To here https://github.com/ubiquity-os-marketplace/.ubiquity-os/&hellip;</a></h6></td><td><details><summary>1.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.6</td><td>4</td><td>3.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1889500624\" target=\"_blank\" rel=\"noopener\">You should retain comments</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.3</td><td>4</td><td>0.66</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1902287248\" target=\"_blank\" rel=\"noopener\">I imagine that there may be a different dedicated property name &hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.4</td><td>4</td><td>2.832</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903275831\" target=\"_blank\" rel=\"noopener\">The reviewers should get paid for every new line of code they re&hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.9</td><td>4</td><td>10.044</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930095672\" target=\"_blank\" rel=\"noopener\">@ishowvel can you prove that this always stays at $25 no matter &hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.7</td><td>4</td><td>4.34</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930096337\" target=\"_blank\" rel=\"noopener\">Maybe better as a warning.</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.5</td><td>4</td><td>1.3</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930096923\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;tsexport function parsePriorityLabel(labels?: G&hellip;</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>4</td><td>2.16</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930097329\" target=\"_blank\" rel=\"noopener\">Why is empty string CI not working? I suppose its not set up in &hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.6</td><td>4</td><td>4.152</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930097756\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;tsconst matched = priorityLabel.match(/^Priorit&hellip;</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>4</td><td>1.54</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930099099\" target=\"_blank\" rel=\"noopener\">This should throw an error instead of assuming 100. This value i&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.8</td><td>4</td><td>5.472</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930099233\" target=\"_blank\" rel=\"noopener\">Same</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.7</td><td>4</td><td>0.504</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930340653\" target=\"_blank\" rel=\"noopener\">Our special labels aren't defined like that and it should be tar&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.8</td><td>4</td><td>8.032</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2591911500\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/user-attachments/assets/2f3bb6b4-205&hellip;</a></h6></td><td><details><summary>2.98</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.6</td><td>4</td><td>8.712</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2615052185\" target=\"_blank\" rel=\"noopener\">@whilefoo would you mind incorporating my changes? Sorry for the&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.4</td><td>4</td><td>3.44</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13#pullrequestreview-2594055635\" target=\"_blank\" rel=\"noopener\">Thank you!</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.1</td><td>4</td><td>0.132</td></tr></tbody></table></details>"},"kingsley-einstein":{"total":0,"userId":35224620,"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218"},{"url":"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13"}]},"Keyrxng":{"total":3.192,"userId":106303466,"comments":[{"id":2508763226,"content":"I agree this would be great and solve a problem that's existed for some time now, particularly the last couple months although pace seems to be improving rapidly these day in my experience.\r\nI started on https://github.com/ubiquity-os/ubiquity-os-plugin-installer ~3 weeks ago and it will be tied away in the next week so I am free to pick this up and rush it through if needed, lmk ty.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2508763226","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":3.192,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":66,"wordValue":0.1,"result":2.57},"readability":{"fleschKincaid":67.53200000000001,"syllables":101,"sentences":3,"score":0.92468},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218"},{"url":"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 3.192 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>3.192</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2508763226\" target=\"_blank\" rel=\"noopener\">I agree this would be great and solve a problem that's existed f&hellip;</a></h6></td><td><details><summary>3.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 66&#13;  wordValue: 0.1&#13;  result: 2.57&#13;</pre></details></td><td>0.7</td><td>4</td><td>3.192</td></tr></tbody></table></details>"},"surafeldev":{"total":1.344,"userId":163689088,"comments":[{"id":2541640538,"content":"I have been researching and find out how should it be done, I have started working on it.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2541640538","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.344,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":89.865,"syllables":21,"sentences":1,"score":0.70135},"multiplier":0.25,"relevance":0.8}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218"},{"url":"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.344 XP ]</a>&nbsp;</h3><h6>@surafeldev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.344</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2541640538\" target=\"_blank\" rel=\"noopener\">I have been researching and find out how should it be done, I ha&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.8</td><td>4</td><td>1.344</td></tr></tbody></table></details>"},"gentlementlegen":{"total":205.928,"userId":9807008,"comments":[{"id":2530607015,"content":"I think [this pull-request](https://github.com/ubiquity-os-marketplace/command-wallet/pull/29) should help re-registering a different wallet to an account.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2530607015","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.288,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":61.890000000000015,"syllables":23,"sentences":1,"score":0.9810999999999999},"multiplier":1,"relevance":0.2}},{"id":2614783937,"content":"@whilefoo I think you forgot to disable comment posting during tests 😄","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614783937","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.444,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":49.54272727272729,"syllables":19,"sentences":1,"score":0.895427272727273},"multiplier":1,"relevance":0.7}},{"id":2614800109,"content":"This is problematic, I suppose. Indeed all linked pull-requests here have not been closed but this one can't be closed on disqualification by the bot nor manually by myself because I do not have rights on the repo and the PR doesn't even target ours.  I also tried through the UI to un-link it but no luck.\nIf suppose the condition to keep the issue re-opened should also check if the author of the pull-request is in the assignee list.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614800109","commentType":"ISSUE_COLLABORATOR","score":{"reward":12.024,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":86,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":71.88459302325585,"syllables":115,"sentences":4,"score":0.8811540697674416},"multiplier":1,"relevance":0.9}},{"id":2615139214,"content":"This seems to come from a local run (http://localhost) so a lot of context can be lost because it's running on someone's computer (it's not an Action runner nor a Cloudflare Worker).","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615139214","commentType":"ISSUE_COLLABORATOR","score":{"reward":12.384,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":55.145000000000024,"syllables":49,"sentences":1,"score":0.9514500000000002},"multiplier":1,"relevance":0.8}},{"id":2615411388,"content":"Good remark, there is not way to globally disable the comment posting from the SDK itself.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615411388","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.592,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":63.69500000000001,"syllables":24,"sentences":1,"score":0.96305},"multiplier":1,"relevance":0.7}},{"id":2616387137,"content":"@ishowvel please ignore, this should have been closed, I'll fix that within the next few days.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2616387137","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.888,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":85.07411764705884,"syllables":21,"sentences":1,"score":0.7492588235294115},"multiplier":1,"relevance":0.6}},{"id":1896462639,"content":"Don't we want some defaults here? Plus a description and an example.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1896462639","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,11 @@\n+import { Static, Type } from \"@sinclair/typebox\";\n+\n+export const reviewIncentivizerConfigurationType = Type.Object(\n+  {\n+    baseRate: Type.Number(),","score":{"reward":3.78,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.09903846153848,"syllables":18,"sentences":2,"score":0.7690096153846152},"multiplier":1,"relevance":0.7}},{"id":1898964863,"content":"add `{ }` to the else block","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1898964863","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -51,7 +53,9 @@ export class Processor {\n       }\n       // Aggregate total result\n       for (const item of Object.keys(this._result)) {\n-        this._result[item].total = this._sumRewards(this._result[item], this._getRewardsLimit(data.self));\n+        if (item === data.self?.assignee?.login) {\n+          this._result[item].total = this._sumRewards(this._result[item], this._getRewardsLimit(data.self) * 3);\n+        } else this._result[item].total = this._sumRewards(this._result[item], this._getRewardsLimit(data.self));","score":{"reward":2.208,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1898965675,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1898965675","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,6 +7,8 @@ import { formattingEvaluatorConfigurationType } from \"../configuration/formattin\n import { githubCommentConfigurationType } from \"../configuration/github-comment-config\";\n import { permitGenerationConfigurationType } from \"../configuration/permit-generation-configuration\";\n import { userExtractorConfigurationType } from \"../configuration/user-extractor-config\";\n+import { reviewIncentivizerConfigurationType } from \"../configuration/review-incentivizer-config\";\n+","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.3}},{"id":1903642540,"content":"There can be multiple assignees to an issue, is this case handled?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903642540","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -51,7 +53,11 @@ export class Processor {\n       }\n       // Aggregate total result\n       for (const item of Object.keys(this._result)) {\n-        this._result[item].total = this._sumRewards(this._result[item], this._getRewardsLimit(data.self));\n+        if (item === data.self?.assignee?.login) {","score":{"reward":4.716,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":74.805,"syllables":17,"sentences":1,"score":0.85195},"multiplier":1,"relevance":0.9}},{"id":1903643288,"content":"I believe this is meant to pick up a single PR, but are you sure this is the one that will close the issue from the proper user?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903643288","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,175 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+import { getExcludedFiles } from \"../helpers/excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0]?.number;","score":{"reward":8.1,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":78.70785714285716,"syllables":33,"sentences":1,"score":0.8129214285714284},"multiplier":1,"relevance":0.9}},{"id":1903644208,"content":"Why is the reward here `1200`? It should be `800` most likely.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903644208","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -425,7 +454,7 @@ describe(\"Modules tests\", () => {\n     expect(result).toBe(9.25);\n     const total = await processor.run(activity);\n     expect(total).toMatchObject({\n-      gentlementlegen: { total: 800, task: { multiplier: 1, reward: 400 }, userId: 9807008 },\n+      gentlementlegen: { total: 1200, task: { multiplier: 1, reward: 400 }, userId: 9807008 },","score":{"reward":3.456,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":91.78000000000003,"syllables":13,"sentences":2,"score":0.6821999999999997},"multiplier":1,"relevance":0.8}},{"id":1905127622,"content":"@ishowvel I can do `/start @ishowvel` which would assign both of us. Reward splitting is handled by this package as well.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905127622","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -51,7 +53,11 @@ export class Processor {\n       }\n       // Aggregate total result\n       for (const item of Object.keys(this._result)) {\n-        this._result[item].total = this._sumRewards(this._result[item], this._getRewardsLimit(data.self));\n+        if (item === data.self?.assignee?.login) {","score":{"reward":4.2,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":85.87671052631579,"syllables":25,"sentences":2,"score":0.7412328947368421},"multiplier":1,"relevance":0.6}},{"id":1907449345,"content":"@whilefoo wouldn't there be only one that would technically close the pull-request? Even if two (or more) people are assigned, could they have two separate pull-requests?\r\nActually there is logic to reopen an issue and not generate if multiple requests are opened and marked as \"Resolves\" against the issue: https://github.com/ubiquity-os-marketplace/text-conversation-rewards/blob/a602dbacbce2425cf43d81015c29073a35915ff3/src/run.ts#L38\r\nI added this a while ago to handle the case where many pull-requests are needed from different repositories to really finish a task, never tried with multiple assignees however.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1907449345","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -47,7 +47,7 @@ export class ReviewIncentivizerModule extends BaseModule {\n         repo: repo,\n         issue_number: data.self?.number,\n       })\n-    ).slice(-1)[0]?.number;\n+    ).filter((pull) => data.self?.assignee && pull.author.login === data.self.assignee.login)[0].number;","score":{"reward":14.784,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":82,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":51.08626804123713,"syllables":156,"sentences":5,"score":0.9108626804123713},"multiplier":1,"relevance":0.8}},{"id":1908144580,"content":"Given that the plugin does not generate and re-opens the issue if multiple pull-requests are linked, I think we should be fined processing all of them then.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1908144580","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -47,7 +47,7 @@ export class ReviewIncentivizerModule extends BaseModule {\n         repo: repo,\n         issue_number: data.self?.number,\n       })\n-    ).slice(-1)[0]?.number;\n+    ).filter((pull) => data.self?.assignee && pull.author.login === data.self.assignee.login)[0].number;","score":{"reward":6.72,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":60.71034482758621,"syllables":40,"sentences":1,"score":0.9928965517241379},"multiplier":1,"relevance":0.7}},{"id":1922536663,"content":"Why is the `* 3` hard coded here?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1922536663","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -50,8 +52,12 @@ export class Processor {\n         this._result = await transformer.transform(data, this._result);\n       }\n       // Aggregate total result\n-      for (const item of Object.keys(this._result)) {\n-        this._result[item].total = this._sumRewards(this._result[item], this._getRewardsLimit(data.self));\n+      for (const username of Object.keys(this._result)) {\n+        if (data.self?.assignees?.map((v) => v.login).includes(username)) {\n+          this._result[username].total = this._sumRewards(this._result[username], this._getRewardsLimit(data.self) * 3);","score":{"reward":2.844,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.9}},{"id":1922537742,"content":"```suggestion\nreviewIncentivizer: {}\n```\nLet's set the default like the other elements.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1922537742","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -7,6 +7,9 @@ incentives:\n   dataPurge: {}\n   formattingEvaluator: {}\n   permitGeneration: {}\n+  reviewIncentivizer:","score":{"reward":2.94,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.50000000000003,"syllables":13,"sentences":1,"score":0.8449999999999998},"multiplier":1,"relevance":0.7}},{"id":1922554968,"content":"Yes, but it doesn't mean to hard code a times 3 in the code. As described in the comment, the logic is that `spec reward <= assignee rewards <= pull body reward`. The code should make sure that these three categories of reward cannot go higher than the limit. If tomorrow we want to add another form of reward, we wouldn't do `* 4` but rather add that reward to the total.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1922554968","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -50,8 +52,12 @@ export class Processor {\n         this._result = await transformer.transform(data, this._result);\n       }\n       // Aggregate total result\n-      for (const item of Object.keys(this._result)) {\n-        this._result[item].total = this._sumRewards(this._result[item], this._getRewardsLimit(data.self));\n+      for (const username of Object.keys(this._result)) {\n+        if (data.self?.assignees?.map((v) => v.login).includes(username)) {\n+          this._result[username].total = this._sumRewards(this._result[username], this._getRewardsLimit(data.self) * 3);","score":{"reward":11.34,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":63,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":82.07732142857142,"syllables":81,"sentences":4,"score":0.7792267857142857},"multiplier":1,"relevance":0.9}},{"id":1924643880,"content":"Please bump to `2.0.2`","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1924643880","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -34,13 +34,14 @@\n     \"@supabase/supabase-js\": \"2.42.0\",\n     \"@ubiquity-dao/rpc-handler\": \"1.3.0\",\n     \"@ubiquity-os/permit-generation\": \"^2.0.6\",\n-    \"@ubiquity-os/plugin-sdk\": \"^2.0.0\",\n+    \"@ubiquity-os/plugin-sdk\": \"^2.0.1\",","score":{"reward":0.92,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1924658463,"content":"Shouldn't this be 1200, or is it a reason why it is back to 800","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1924658463","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -455,7 +455,7 @@ describe(\"Modules tests\", () => {\n     expect(result).toBe(9.25);\n     const total = await processor.run(activity);\n     expect(total).toMatchObject({\n-      gentlementlegen: { total: 1200, task: { multiplier: 1, reward: 400 }, userId: 9807008 },\n+      gentlementlegen: { total: 800, task: { multiplier: 1, reward: 400 }, userId: 9807008 },","score":{"reward":4.62,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":100.70750000000001,"syllables":17,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":2564400872,"content":"You should add the module configuration to the readme, and inside https://github.com/ubiquity-os-marketplace/text-conversation-rewards/blob/3a40daf6ffc53bbed7e0734bb03419499d1a7938/src/web/.ubiquity-os.config.yml","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2564400872","commentType":"PULL_COLLABORATOR","score":{"reward":7.84,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":41.01528571428574,"syllables":53,"sentences":5,"score":0.8101528571428573},"multiplier":1,"relevance":0.8}},{"id":2581661378,"content":"@ishowvel Please redo a QA with multiple pull-requests and assginees.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2581661378","commentType":"PULL_COLLABORATOR","score":{"reward":2.952,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":49.54272727272729,"syllables":19,"sentences":1,"score":0.895427272727273},"multiplier":1,"relevance":0.6}},{"id":2606232976,"content":"@shiv810 The `command-ask` seem to be running on each pull request comment now.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2606232976","commentType":"PULL_COLLABORATOR","score":{"reward":3.528,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":88.905,"syllables":15,"sentences":1,"score":0.71095},"multiplier":1,"relevance":0.7}},{"id":2608861047,"content":"Seems to work fine: https://github.com/Meniole/text-conversation-rewards/issues/50#issuecomment-2608853916\r\nWith two pull-requests: https://github.com/Meniole/text-conversation-rewards/issues/50#issuecomment-2608870172\r\nI still think that this is dangerous to reward base on line count, since some files can be generated and because sometimes the pull-requests are not rebased and contain other pull-requests within it but only time will tell I suppose.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2608861047","commentType":"PULL_COLLABORATOR","score":{"reward":13.76,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":50.87500000000003,"syllables":112,"sentences":3,"score":0.9087500000000003},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2521559677,"effect":{"addition":448,"deletion":172},"reward":24.8,"priority":4},{"reviewId":2524776536,"effect":{"addition":19,"deletion":4},"reward":0.92,"priority":4},{"reviewId":2531310570,"effect":{"addition":102,"deletion":22},"reward":4.96,"priority":4},{"reviewId":2537603519,"effect":{"addition":92,"deletion":13},"reward":4.2,"priority":4},{"reviewId":2562617005,"effect":{"addition":348,"deletion":126},"reward":18.96,"priority":4},{"reviewId":2566113464,"effect":{"addition":132,"deletion":34},"reward":6.64,"priority":4},{"reviewId":2566134416,"effect":{"addition":0,"deletion":0},"reward":0,"priority":4},{"reviewId":2568880636,"effect":{"addition":151,"deletion":52},"reward":8.12,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218"},{"url":"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 205.928 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>8</td><td>68.6</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>38.62</td></tr><tr><td>Review</td><td>Comment</td><td>18</td><td>98.708</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218\" target=\"_blank\" rel=\"noopener\">#218</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+448 -172</td><td>4</td><td>24.8</td></tr><tr><td>+19 -4</td><td>4</td><td>0.92</td></tr><tr><td>+102 -22</td><td>4</td><td>4.96</td></tr><tr><td>+92 -13</td><td>4</td><td>4.2</td></tr><tr><td>+348 -126</td><td>4</td><td>18.96</td></tr><tr><td>+132 -34</td><td>4</td><td>6.64</td></tr><tr><td>+0 -0</td><td>4</td><td>0</td></tr><tr><td>+151 -52</td><td>4</td><td>8.12</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2530607015\" target=\"_blank\" rel=\"noopener\">I think [this pull-request](https://github.com/ubiquity-os-marke&hellip;</a></h6></td><td><details><summary>2.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.2</td><td>4</td><td>2.288</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614783937\" target=\"_blank\" rel=\"noopener\">@whilefoo I think you forgot to disable comment posting during t&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.7</td><td>4</td><td>3.444</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614800109\" target=\"_blank\" rel=\"noopener\">This is problematic, I suppose. Indeed all linked pull-requests &hellip;</a></h6></td><td><details><summary>2.64</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 86&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>0.9</td><td>4</td><td>12.024</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615139214\" target=\"_blank\" rel=\"noopener\">This seems to come from a local run (http://localhost) so a lot &hellip;</a></h6></td><td><details><summary>3.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.8</td><td>4</td><td>12.384</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615411388\" target=\"_blank\" rel=\"noopener\">Good remark, there is not way to globally disable the comment po&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.7</td><td>4</td><td>4.592</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2616387137\" target=\"_blank\" rel=\"noopener\">@ishowvel please ignore, this should have been closed, I'll fix &hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.6</td><td>4</td><td>3.888</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1896462639\" target=\"_blank\" rel=\"noopener\">Don't we want some defaults here? Plus a description and an exam&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.7</td><td>4</td><td>3.78</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1898964863\" target=\"_blank\" rel=\"noopener\">add &#96;{ }&#96; to the else block</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.8</td><td>4</td><td>2.208</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1898965675\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.3</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903642540\" target=\"_blank\" rel=\"noopener\">There can be multiple assignees to an issue, is this case handle&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.9</td><td>4</td><td>4.716</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903643288\" target=\"_blank\" rel=\"noopener\">I believe this is meant to pick up a single PR, but are you sure&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.9</td><td>4</td><td>8.1</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903644208\" target=\"_blank\" rel=\"noopener\">Why is the reward here &#96;1200&#96;? It should be &#96;800&#96&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.8</td><td>4</td><td>3.456</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905127622\" target=\"_blank\" rel=\"noopener\">@ishowvel I can do &#96;/start @ishowvel&#96; which would assign&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.6</td><td>4</td><td>4.2</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1907449345\" target=\"_blank\" rel=\"noopener\">@whilefoo wouldn't there be only one that would technically clos&hellip;</a></h6></td><td><details><summary>3.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 82&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.8</td><td>4</td><td>14.784</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1908144580\" target=\"_blank\" rel=\"noopener\">Given that the plugin does not generate and re-opens the issue i&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.7</td><td>4</td><td>6.72</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1922536663\" target=\"_blank\" rel=\"noopener\">Why is the &#96;* 3&#96; hard coded here?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.9</td><td>4</td><td>2.844</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1922537742\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionreviewIncentivizer: {}&#96;&#96;&#96;&hellip;</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>4</td><td>2.94</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1922554968\" target=\"_blank\" rel=\"noopener\">Yes, but it doesn't mean to hard code a times 3 in the code. As &hellip;</a></h6></td><td><details><summary>2.55</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 63&#13;  wordValue: 0.1&#13;  result: 2.55&#13;</pre></details></td><td>0.9</td><td>4</td><td>11.34</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1924643880\" target=\"_blank\" rel=\"noopener\">Please bump to &#96;2.0.2&#96;</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.5</td><td>4</td><td>0.92</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1924658463\" target=\"_blank\" rel=\"noopener\">Shouldn't this be 1200, or is it a reason why it is back to 800</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.7</td><td>4</td><td>4.62</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2564400872\" target=\"_blank\" rel=\"noopener\">You should add the module configuration to the readme, and insid&hellip;</a></h6></td><td><details><summary>1.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>4</td><td>7.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2581661378\" target=\"_blank\" rel=\"noopener\">@ishowvel Please redo a QA with multiple pull-requests and assgi&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.6</td><td>4</td><td>2.952</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2606232976\" target=\"_blank\" rel=\"noopener\">@shiv810 The &#96;command-ask&#96; seem to be running on each pu&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.7</td><td>4</td><td>3.528</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2608861047\" target=\"_blank\" rel=\"noopener\">Seems to work fine: https://github.com/Meniole/text-conversation&hellip;</a></h6></td><td><details><summary>3.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.8</td><td>4</td><td>13.76</td></tr></tbody></table></details>"},"whilefoo":{"total":271.856,"userId":139262667,"comments":[{"id":2533090250,"content":"Maybe this can be done after this task but I think we should also incentivise fast reviews, either by increasing the reward for fast reviews or decreasing reward for slow reviews. \r\nThis should also take into account that PRs with higher priority will be prioritized so slow reviews for lower priority tasks wouldn't be penalized, and also by taking size of the PR into account as bigger PRs will take longer to review than smaller PRs","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2533090250","commentType":"ISSUE_COLLABORATOR","score":{"reward":11.772,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":77,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":42.50555194805197,"syllables":114,"sentences":2,"score":0.8250555194805197},"multiplier":1,"relevance":0.9}},{"id":2614586391,"content":"```diff\n# Results are being retried\n```","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614586391","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.1}},{"id":2614588985,"content":"```diff\n# Results are being retried\n```","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614588985","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.1}},{"id":2614589004,"content":"```diff\n# Results are being retried\n```","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614589004","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.1}},{"id":2614594535,"content":"```diff\n# Results are being retried\n```","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614594535","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.1}},{"id":2614596652,"content":"```diff\n# Results are being retried\n```","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614596652","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.1}},{"id":2614597204,"content":"```diff\n# Results are being retried\n```","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614597204","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.1}},{"id":2614597225,"content":"```diff\n# Results are being retried\n```","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614597225","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.1}},{"id":2614597242,"content":"```diff\n# Results are being retried\n```","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614597242","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.1}},{"id":2614599278,"content":"```diff\n# Results are being retried\n```","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614599278","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.1}},{"id":2615397879,"content":"Actually I realized that the comment posting is turned off but that is only valid for the Github Comment module, but this comment gets posted in ContentEvaluator module so that's why it was posting","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615397879","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.064,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":38.36714285714288,"syllables":55,"sentences":1,"score":0.7836714285714288},"multiplier":1,"relevance":0.8}},{"id":2550542545,"content":"![image](https://github.com/user-attachments/assets/daa6bc37-0957-4a6f-b913-01838ca80d74)\r\nI think `Review Details` should be separate for each PR so it's clear which reviews are from which PR and it should be linked to the PR so you can click on it","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#pullrequestreview-2550542545","commentType":"PULL_COLLABORATOR","score":{"reward":5.784,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":81.82375000000002,"syllables":35,"sentences":1,"score":0.7817624999999998},"multiplier":1,"relevance":0.6}},{"id":2569733369,"content":"I tried running the plugin on https://github.com/ubiquity-os/plugins-wishlist/issues/60 and found a bug where the plugin tries to list commits on PR `ubiquity-os/plugins-wishlist/pull/218` instead of `ubiquity-os-marketplace/text-conversation-rewards/pull/218` because it assumes that the PR is in the same repo as the issue but it's a wrong assumption. \r\nAnother similar bug is that `.gitattributes` is fetched from `plugins-wishlist` instead of `text-conversation-rewards`\r\nYou can get PR repo and owner with `linkedPullReviews.self.base.repo.name` and `linkedPullReviews.self.base.repo.owner.login`\r\nAfter fixing these problems I was able to run the calculation and got this result:\r\nThe odd thing is that @ishowvel got 7 code reviews even though they are the author and don't have any reviews","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#pullrequestreview-2569733369","commentType":"PULL_COLLABORATOR","score":{"reward":16.74,"formatting":{"content":{"p":{"score":0,"elementCount":5},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":97,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":55.24525157232708,"syllables":145,"sentences":3,"score":0.9524525157232708},"multiplier":1,"relevance":0.9}},{"id":2573470750,"content":"you still fetch `.gitattributes` from issue's repo instead of PR's repo","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#pullrequestreview-2573470750","commentType":"PULL_COLLABORATOR","score":{"reward":4.096,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":81.85500000000002,"syllables":16,"sentences":1,"score":0.7814499999999999},"multiplier":1,"relevance":0.8}},{"id":1900395837,"content":"you need to check array length or use `?.`","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900395837","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,143 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0].number;","score":{"reward":3.168,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":103.54,"syllables":9,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1900396733,"content":"conclusive review means either `APPROVED` or `CHANGES_REQUESTED`","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900396733","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,143 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0].number;\n+\n+    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n+\n+    const linkedPullReviews = await getPullRequestReviews(this.context, {\n+      owner: owner,\n+      repo: repo,\n+      pull_number: linkedPullNumber,\n+    });\n+\n+    for (const key of Object.keys(result)) {\n+      const currentElement = result[key];\n+      currentElement.reviewReward = {};\n+\n+      const reviewsByUser = linkedPullReviews.filter((v) => v.user?.login === key);\n+\n+      currentElement.reviewReward.reviewBaseReward = reviewsByUser.some((v) => v.state === \"APPROVED\")\n+        ? { reward: this._conclusiveReviewCredit }\n+        : { reward: 0 };","score":{"reward":2.412,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":49.48000000000002,"syllables":9,"sentences":1,"score":0.8948000000000002},"multiplier":1,"relevance":0.9}},{"id":1900400660,"content":"you can use `Object.entries`","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900400660","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,143 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0].number;\n+\n+    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n+\n+    const linkedPullReviews = await getPullRequestReviews(this.context, {\n+      owner: owner,\n+      repo: repo,\n+      pull_number: linkedPullNumber,\n+    });\n+\n+    for (const key of Object.keys(result)) {\n+      const currentElement = result[key];\n+      currentElement.reviewReward = {};\n+\n+      const reviewsByUser = linkedPullReviews.filter((v) => v.user?.login === key);\n+\n+      currentElement.reviewReward.reviewBaseReward = reviewsByUser.some((v) => v.state === \"APPROVED\")\n+        ? { reward: this._conclusiveReviewCredit }\n+        : { reward: 0 };\n+\n+      const reviewDiffs = await this.fetchReviewDiffRewards(owner, repo, reviewsByUser);\n+\n+      currentElement.reviewReward.reviews = reviewDiffs;\n+    }\n+\n+    return result;\n+  }\n+\n+  async getTripleDotDiffAsObject(owner: string, repo: string, baseSha: string, headSha: string): Promise<CommitDiff> {\n+    const response = await this.context.octokit.rest.repos.compareCommits({\n+      owner,\n+      repo,\n+      base: baseSha,\n+      head: headSha,\n+    });\n+\n+    const files = response.data.files || [];\n+    const diff: CommitDiff = {};\n+\n+    for (const file of files) {\n+      diff[file.filename] = {\n+        addition: file.additions || 0,\n+        deletion: file.deletions || 0,\n+      };\n+    }\n+\n+    return diff;\n+  }\n+\n+  async fetchReviewDiffRewards(owner: string, repo: string, reviewsByUser: GitHubPullRequestReviewState[]) {\n+    const reviews: ReviewScore[] = [];\n+    const priority = parsePriorityLabel(this.context.payload.issue.labels);\n+\n+    for (let i = 0; i < reviewsByUser.length; i++) {\n+      const currentReview = reviewsByUser[i];\n+      const nextReview = reviewsByUser[i + 1];\n+\n+      if (currentReview.commit_id && nextReview?.commit_id && currentReview.state !== \"APPROVED\") {\n+        const baseSha = currentReview.commit_id;\n+        const headSha = nextReview.commit_id;\n+\n+        if (headSha) {\n+          try {\n+            const diff = await this.getTripleDotDiffAsObject(owner, repo, baseSha, headSha);\n+            const reviewEffect = { addition: 0, deletion: 0 };\n+            Object.keys(diff).forEach((fileName) => {","score":{"reward":0.92,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1900401661,"content":"you should exclude files in `.gitattributes` marked as `linguist-generated` ([example](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/blob/development/.gitattributes))","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900401661","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,143 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0].number;\n+\n+    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n+\n+    const linkedPullReviews = await getPullRequestReviews(this.context, {\n+      owner: owner,\n+      repo: repo,\n+      pull_number: linkedPullNumber,\n+    });\n+\n+    for (const key of Object.keys(result)) {\n+      const currentElement = result[key];\n+      currentElement.reviewReward = {};\n+\n+      const reviewsByUser = linkedPullReviews.filter((v) => v.user?.login === key);\n+\n+      currentElement.reviewReward.reviewBaseReward = reviewsByUser.some((v) => v.state === \"APPROVED\")\n+        ? { reward: this._conclusiveReviewCredit }\n+        : { reward: 0 };\n+\n+      const reviewDiffs = await this.fetchReviewDiffRewards(owner, repo, reviewsByUser);\n+\n+      currentElement.reviewReward.reviews = reviewDiffs;\n+    }\n+\n+    return result;\n+  }\n+\n+  async getTripleDotDiffAsObject(owner: string, repo: string, baseSha: string, headSha: string): Promise<CommitDiff> {\n+    const response = await this.context.octokit.rest.repos.compareCommits({\n+      owner,\n+      repo,\n+      base: baseSha,\n+      head: headSha,\n+    });\n+\n+    const files = response.data.files || [];\n+    const diff: CommitDiff = {};\n+\n+    for (const file of files) {\n+      diff[file.filename] = {\n+        addition: file.additions || 0,\n+        deletion: file.deletions || 0,\n+      };\n+    }\n+\n+    return diff;\n+  }\n+\n+  async fetchReviewDiffRewards(owner: string, repo: string, reviewsByUser: GitHubPullRequestReviewState[]) {\n+    const reviews: ReviewScore[] = [];\n+    const priority = parsePriorityLabel(this.context.payload.issue.labels);\n+\n+    for (let i = 0; i < reviewsByUser.length; i++) {\n+      const currentReview = reviewsByUser[i];\n+      const nextReview = reviewsByUser[i + 1];\n+\n+      if (currentReview.commit_id && nextReview?.commit_id && currentReview.state !== \"APPROVED\") {\n+        const baseSha = currentReview.commit_id;\n+        const headSha = nextReview.commit_id;\n+\n+        if (headSha) {\n+          try {\n+            const diff = await this.getTripleDotDiffAsObject(owner, repo, baseSha, headSha);\n+            const reviewEffect = { addition: 0, deletion: 0 };\n+            Object.keys(diff).forEach((fileName) => {\n+              if (fileName !== \"yarn.lock\") {\n+                const changes = diff[fileName];\n+                reviewEffect.addition += changes.addition;\n+                reviewEffect.deletion += changes.deletion;\n+              }","score":{"reward":8.028,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":71.81500000000001,"syllables":12,"sentences":1,"score":0.8818499999999999},"multiplier":1,"relevance":0.9}},{"id":1900403936,"content":"```suggestion\r\n    for (const username of Object.keys(result)) {\r\n```","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900403936","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,143 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0].number;\n+\n+    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n+\n+    const linkedPullReviews = await getPullRequestReviews(this.context, {\n+      owner: owner,\n+      repo: repo,\n+      pull_number: linkedPullNumber,\n+    });\n+\n+    for (const key of Object.keys(result)) {","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1900403966,"content":"```suggestion\r\n      const reward = result[key];\r\n```","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900403966","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,143 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0].number;\n+\n+    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n+\n+    const linkedPullReviews = await getPullRequestReviews(this.context, {\n+      owner: owner,\n+      repo: repo,\n+      pull_number: linkedPullNumber,\n+    });\n+\n+    for (const key of Object.keys(result)) {\n+      const currentElement = result[key];","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1900428835,"content":"This doesn't seem correct. you are comparing commits between the first and second review and treating it as the reward for the 1st review so you effectively skip commits before the first review.\r\nFor the first review, it should compare commits between the commit right before the PR and the commit at the review, and for the second review compare the commit between the first review and second review.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900428835","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,143 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0].number;\n+\n+    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n+\n+    const linkedPullReviews = await getPullRequestReviews(this.context, {\n+      owner: owner,\n+      repo: repo,\n+      pull_number: linkedPullNumber,\n+    });\n+\n+    for (const key of Object.keys(result)) {\n+      const currentElement = result[key];\n+      currentElement.reviewReward = {};\n+\n+      const reviewsByUser = linkedPullReviews.filter((v) => v.user?.login === key);\n+\n+      currentElement.reviewReward.reviewBaseReward = reviewsByUser.some((v) => v.state === \"APPROVED\")\n+        ? { reward: this._conclusiveReviewCredit }\n+        : { reward: 0 };\n+\n+      const reviewDiffs = await this.fetchReviewDiffRewards(owner, repo, reviewsByUser);\n+\n+      currentElement.reviewReward.reviews = reviewDiffs;\n+    }\n+\n+    return result;\n+  }\n+\n+  async getTripleDotDiffAsObject(owner: string, repo: string, baseSha: string, headSha: string): Promise<CommitDiff> {\n+    const response = await this.context.octokit.rest.repos.compareCommits({\n+      owner,\n+      repo,\n+      base: baseSha,\n+      head: headSha,\n+    });\n+\n+    const files = response.data.files || [];\n+    const diff: CommitDiff = {};\n+\n+    for (const file of files) {\n+      diff[file.filename] = {\n+        addition: file.additions || 0,\n+        deletion: file.deletions || 0,\n+      };\n+    }\n+\n+    return diff;\n+  }\n+\n+  async fetchReviewDiffRewards(owner: string, repo: string, reviewsByUser: GitHubPullRequestReviewState[]) {\n+    const reviews: ReviewScore[] = [];\n+    const priority = parsePriorityLabel(this.context.payload.issue.labels);\n+\n+    for (let i = 0; i < reviewsByUser.length; i++) {\n+      const currentReview = reviewsByUser[i];\n+      const nextReview = reviewsByUser[i + 1];\n+\n+      if (currentReview.commit_id && nextReview?.commit_id && currentReview.state !== \"APPROVED\") {\n+        const baseSha = currentReview.commit_id;\n+        const headSha = nextReview.commit_id;","score":{"reward":12.132,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":70,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":58.66880952380953,"syllables":103,"sentences":3,"score":0.9866880952380953},"multiplier":1,"relevance":0.9}},{"id":1900429155,"content":"why is base reward 0 here?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900429155","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,1456 @@\n+{\n+    \"gentlementlegen\": {\n+      \"userId\": 9807008,\n+      \"total\": 1872.688,\n+      \"task\": { \"reward\": 400, \"multiplier\": 1 },\n+      \"comments\": [\n+        {\n+          \"id\": 2033404518,\n+          \"content\": \"This needs https://github.com/ubiquity-os/conversation-rewards/pull/7 to be merged first. Also probably needs https://github.com/ubiquity-os/permit-generation/pull/2 to be able to generate the permits properly.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2033404518\",\n+          \"type\": \"ISSUE_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 16.704,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 }, \"a\": { \"score\": 1, \"elementCount\": 2 } },\n+              \"result\": 3\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 17, \"wordValue\": 0.2, \"result\": 2.22 },\n+            \"multiplier\": 1,\n+            \"relevance\": 0.8\n+          }\n+        },\n+        {\n+          \"id\": 2036174312,\n+          \"content\": \"To me 1 is the most straightforward to do for few reasons:\\r\\n- the comment reward plugin has all the needed data already\\r\\n- it can import the https://github.com/ubiquity-os/permit-generation to generate permits itself\\r\\n- if it is done this way it can be used as a complete standalone without the kernel\\r\\n3 might make more sense in terms of architecture however. In such case the kernel should pass down results. It is more of an architecture question. Although, if we ever have other plugins in the flow that have influence on the total incentives, it would make sense to go through the kernel to aggregate the total result.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036174312\",\n+          \"type\": \"ISSUE_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 65.152,\n+            \"formatting\": {\n+              \"content\": {\n+                \"p\": { \"score\": 1, \"elementCount\": 5 },\n+                \"ul\": { \"score\": 1, \"elementCount\": 1 },\n+                \"li\": { \"score\": 1, \"elementCount\": 3 },\n+                \"a\": { \"score\": 1, \"elementCount\": 1 }\n+              },\n+              \"result\": 10\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 104, \"wordValue\": 0.2, \"result\": 10.36 },\n+            \"multiplier\": 1,\n+            \"relevance\": 0.8\n+          }\n+        },\n+        {\n+          \"id\": 2036367126,\n+          \"content\": \"I think each plugin should output JSON not html as it is not reliable to parse nor manipulate and requires `window` instance to be instantiated which is annoying on `node` based projects. \\r\\nHaving a plugin handling commenting seems quite weird as commenting is done by calling Octokit and the REST api which is already a library by itself, so no need to encapsulate it within another one to do the same thing.\\r\\nMy view on this, is to finalize https://github.com/ubiquity-os/permit-generation/issues/5 to import it withing the `conversation-reward` that will post the comment itself as well, otherwise the architecture will be quite convoluted doing ping pong with everything.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036367126\",\n+          \"type\": \"ISSUE_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 56.096,\n+            \"formatting\": {\n+              \"content\": {\n+                \"p\": { \"score\": 1, \"elementCount\": 3 },\n+                \"code\": { \"score\": 1, \"elementCount\": 3 },\n+                \"a\": { \"score\": 1, \"elementCount\": 1 }\n+              },\n+              \"result\": 7\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 106, \"wordValue\": 0.2, \"result\": 10.53 },\n+            \"multiplier\": 1,\n+            \"relevance\": 0.8\n+          }\n+        },\n+        {\n+          \"id\": 2036385985,\n+          \"content\": \"If you want to manipulate and convey data, HTML really is not made for this. If you want something formatted similarly but made for data we can use XML format.\\r\\nThe new comment reward actually does instantiate a DOM through [JSDOM](https://github.com/ubiquity-os/conversation-rewards/blob/ba434761281446a23566cd02c68bd3b0e79d4eb1/src/parser/formatting-evaluator-module.ts#L80) to make things way simpler instead of using Regex everywhere which is highly unreliable. But there it makes sense because we are parsing comments from an HTML page content.\\r\\nBiggest advantage from this is to have the comment reward fully standalone, while easy to integrate with the kernel.\\r\\nIf we do something that handles the comment it means each and every module has to send it there and that module should understand every different content / format we send which would be way easier if the module itself handled its own comments, formatting wise.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036385985\",\n+          \"type\": \"ISSUE_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 57.12,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 4 }, \"a\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 5\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 134, \"wordValue\": 0.2, \"result\": 12.85 },\n+            \"multiplier\": 1,\n+            \"relevance\": 0.8\n+          }\n+        },\n+        {\n+          \"id\": 2036411811,\n+          \"content\": \"But then how do we consider the formatting of that output?\\r\\nPractical case: we want to post a comment when a user queries a wallet. That comment is 'user name': 'wallet 0x0'\\r\\nKernel calls the comment plugin, saying that it wants a comment to be posted. Should the Kernel send the rendering it wants, should the comment plugin transform the data to HTML?\\r\\nThen, comment-reward wants to post the results. Should ask the Kernel to call the comment plugin, but then formatting is different. Should the Kernel notify the comment plugin that it wants a different output formatting? Should the Kernel compute beforehand the HTML and send it to the comment plugin?\\r\\nMight be something I don't grasp there. Because I do understand your use case but it seems to be very deterministic on what is the purpose of the plugins which kinda defeats the purpose of having plugins, looks more like a monolithic approach to me\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036411811\",\n+          \"type\": \"ISSUE_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 63.584,\n+            \"formatting\": { \"content\": { \"p\": { \"score\": 1, \"elementCount\": 5 } }, \"result\": 5 },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 159, \"wordValue\": 0.2, \"result\": 14.87 },\n+            \"multiplier\": 1,\n+            \"relevance\": 0.8\n+          }\n+        },\n+        {\n+          \"id\": 2036458775,\n+          \"content\": \"This can work, but we skyrocket coupling and to me defeat purpose of plugins that should be unaware of each other. If any plugin has to understand the result of a previous plugin, it means these plugins have necessarily to co-exist so basically they become a single plugin with no purpose to split them.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036458775\",\n+          \"type\": \"ISSUE_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 22.496,\n+            \"formatting\": { \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 } }, \"result\": 1 },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 55, \"wordValue\": 0.2, \"result\": 6.03 },\n+            \"multiplier\": 1,\n+            \"relevance\": 0.8\n+          }\n+        },\n+        {\n+          \"id\": 2036535332,\n+          \"content\": \"@pavlovcik To mitigate that that's why inside the comment reward itself I also integrated that `Module` principle so code is not coupled tightly and easy to build on. There is as usual pros and cons to both approaches (splitting or not) but biggest pro is that comments get evaluated once in the same spot, so we save calls to OpenAPI and speed up the process. Also makes it only one configuration file in one location. We need to think about our best options there.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036535332\",\n+          \"type\": \"ISSUE_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 34.336,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 }, \"code\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 2\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 85, \"wordValue\": 0.2, \"result\": 8.73 },\n+            \"multiplier\": 1,\n+            \"relevance\": 0.8\n+          }\n+        },\n+        {\n+          \"id\": 2051094255,\n+          \"content\": \"I realized that to carry this task properly we need to handle flags for comment more delicately as they only indicate if the comment is `ISSUE | REVIEW` with the level `MEMBER | CONTRIBUTOR` etc. but doesn't specify if it is from a task, a specification and so on. Tags should be added to the config properly as well.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2051094255\",\n+          \"type\": \"ISSUE_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 29.792,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 }, \"code\": { \"score\": 1, \"elementCount\": 2 } },\n+              \"result\": 3\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 58, \"wordValue\": 0.2, \"result\": 6.31 },\n+            \"multiplier\": 1,\n+            \"relevance\": 0.8\n+          }\n+        },\n+        {\n+          \"id\": 2054424028,\n+          \"content\": \"Agreed, I think currently there are 3 possible things to annotate on the comments:\\r\\n- `SPECIFICATION` for the issue itself, `TASK` for the related PR fixing it, or simply `COMMENT`\\r\\n- `MEMBER` or `CONTRIBUTOR` for the status of the member\\r\\n- `REVIEW` or `ISSUE` for where the comment was added\\r\\nI think this shall cover all cases.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2054424028\",\n+          \"type\": \"ISSUE_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 70.208,\n+            \"formatting\": {\n+              \"content\": {\n+                \"p\": { \"score\": 1, \"elementCount\": 5 },\n+                \"ul\": { \"score\": 1, \"elementCount\": 1 },\n+                \"li\": { \"score\": 1, \"elementCount\": 3 },\n+                \"code\": { \"score\": 1, \"elementCount\": 7 }\n+              },\n+              \"result\": 16\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 54, \"wordValue\": 0.2, \"result\": 5.94 },\n+            \"multiplier\": 1,\n+            \"relevance\": 0.8\n+          }\n+        },\n+        {\n+          \"id\": 2218638141,\n+          \"content\": \"In the v1 of the Ubiquibot, when a result gets evaluated, a recap is posted to the related issue with a summary and details of the rewards as well as the link to the rewards themselves Example: https://github.com/ubiquity/cloudflare-deploy-action/issues/9#issuecomment-2028623754\\r\\nThe same logic should be applied in the v2 version by creating a new Module responsible to post that comment. This module will receive a similar input than the one mentioned [here](https://github.com/ubiquity/cloudflare-deploy-action/issues/9#issuecomment-2028623754)\\r\\nThe module should be:\\r\\n- possible to enable / disable\\r\\n- eventually configurable (what data to show / hide)\\r\\n- coming with tests\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/issues/5\",\n+          \"type\": \"ISSUE_SPECIFICATION\",\n+          \"score\": {\n+            \"reward\": 61.8,\n+            \"formatting\": {\n+              \"content\": {\n+                \"p\": { \"score\": 1, \"elementCount\": 6 },\n+                \"ul\": { \"score\": 1, \"elementCount\": 1 },\n+                \"li\": { \"score\": 1, \"elementCount\": 3 },\n+                \"a\": { \"score\": 1, \"elementCount\": 1 }\n+              },\n+              \"result\": 11\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 87, \"wordValue\": 0.1, \"result\": 4.45 },\n+            \"multiplier\": 1,\n+            \"relevance\": 1\n+          }\n+        },\n+        {\n+          \"id\": 1822452078,\n+          \"content\": \"Resolves #5 \\r\\nDepends on #8 \\r\\nReviews looks gigantic but it's only due to the API snapshots I promise.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12\",\n+          \"type\": \"PULL_SPECIFICATION\",\n+          \"score\": {\n+            \"reward\": 0,\n+            \"formatting\": { \"content\": { \"p\": { \"score\": 1, \"elementCount\": 3 } }, \"result\": 3 },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 19, \"wordValue\": 0, \"result\": 0 },\n+            \"multiplier\": 0,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1570010044,\n+          \"content\": \"I think in this case it makes sense because this function will return `\\\"\\\"` if nothing is found. If I return `undefined` or `null` it will be interpreted in HTML as a string and will display the text null or undefined.\\r\\nI changed the code to always return `content` so it forces it to be properly initialized which should avoid mistakes.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1570010044\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,212 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    let body = \\\"\\\";\",\n+          \"score\": {\n+            \"reward\": 69.944,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 2 }, \"code\": { \"score\": 1, \"elementCount\": 4 } },\n+              \"result\": 6\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 60, \"wordValue\": 0.2, \"result\": 6.49 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1570011467,\n+          \"content\": \"It is supposed to represent a comment. Would you prefer a descriptive action such as `COMMENTED`?\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1570011467\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -27,29 +27,39 @@ formattingEvaluator:\\n     td: 1\\n     hr: 0\\n   multipliers:\\n-    - type: [ISSUE, ISSUER]:\\n+    - type: [ISSUE, ISSUER, TASK]:\\n+      formattingMultiplier: 1\\n+      wordValue: 0.1\\n+    - type: [ISSUE, ISSUER, COMMENT]:\\n       formattingMultiplier: 1\\n       wordValue: 0.2\\n-    - type: [ISSUE, ASSIGNEE]:\\n+    - type: [ISSUE, ASSIGNEE, COMMENT]:\",\n+          \"score\": {\n+            \"reward\": 23.016,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 }, \"code\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 2\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 16, \"wordValue\": 0.2, \"result\": 2.11 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1570014142,\n+          \"content\": \"True, just picked this up from the previous codebase. https://rpc.gnosischain.com should do it for both then?\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1570014142\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,22 @@\\n+// available tokens for payouts\\n+export const PAYMENT_TOKEN_PER_NETWORK: Record<string, { rpc: string; token: string; symbol: string }> = {\\n+  \\\"1\\\": {\\n+    rpc: \\\"https://rpc-bot.ubq.fi/v1/mainnet\\\",\",\n+          \"score\": {\n+            \"reward\": 22.4,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 }, \"a\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 2\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 15, \"wordValue\": 0.2, \"result\": 2 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1570187141,\n+          \"content\": \"Seems convoluted to me and I don't know what problem that solved, but sure can do. Because either way this will yield an empty string or populated string?\\r\\nEither way changed to a `const string[]` to minimize mistakes then!\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1570187141\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,212 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    let body = \\\"\\\";\",\n+          \"score\": {\n+            \"reward\": 42.56,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 2 }, \"code\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 3\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 40, \"wordValue\": 0.2, \"result\": 4.6 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1570188450,\n+          \"content\": \"Changed `COMMENT` to `COMMENTED`, added jsdoc description for each value\\r\\nhttps://github.com/ubiquity-os/conversation-rewards/blob/559c13c9a7d548519a6434e1b8393fd0d5c8f3db/src/issue-activity.ts#L21\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1570188450\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -27,29 +27,39 @@ formattingEvaluator:\\n     td: 1\\n     hr: 0\\n   multipliers:\\n-    - type: [ISSUE, ISSUER]:\\n+    - type: [ISSUE, ISSUER, TASK]:\\n+      formattingMultiplier: 1\\n+      wordValue: 0.1\\n+    - type: [ISSUE, ISSUER, COMMENT]:\\n       formattingMultiplier: 1\\n       wordValue: 0.2\\n-    - type: [ISSUE, ASSIGNEE]:\\n+    - type: [ISSUE, ASSIGNEE, COMMENT]:\",\n+          \"score\": {\n+            \"reward\": 35.952,\n+            \"formatting\": {\n+              \"content\": {\n+                \"p\": { \"score\": 1, \"elementCount\": 2 },\n+                \"code\": { \"score\": 1, \"elementCount\": 2 },\n+                \"a\": { \"score\": 1, \"elementCount\": 1 }\n+              },\n+              \"result\": 5\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 10, \"wordValue\": 0.2, \"result\": 1.42 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1573413974,\n+          \"content\": \"Simply makes the docs linking the code within the comment, for convenience, and looks like this\\r\\n<img width=\\\"598\\\" alt=\\\"image\\\" src=\\\"https://github.com/ubiquity-os/conversation-rewards/assets/9807008/76a60610-f3e4-4886-a9bd-c34a4c67a198\\\">\\r\\nAlso be careful you linked a random GitHub account within your comment\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1573413974\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -19,12 +19,42 @@ import {\\n } from \\\"./start\\\";\\n \\n export enum CommentType {\\n+  /**\\n+   * Review related item\\n+   */\\n   REVIEW = 0b1,\\n+  /**\\n+   * Issue related item\\n+   */\\n   ISSUE = 0b10,\\n+  /**\\n+   * User assigned to the {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n   ASSIGNEE = 0b100,\\n+  /**\\n+   * The author of the {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n   ISSUER = 0b1000,\\n+  /**\\n+   * A user that is part of the organization or owner of the repo\\n+   */\\n   COLLABORATOR = 0b10000,\\n+  /**\\n+   * A user that is NOT part of the organization nor owner of the repo\\n+   */\\n   CONTRIBUTOR = 0b100000,\\n+  /**\\n+   * A user comment action on a {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\",\n+          \"score\": {\n+            \"reward\": 44.856,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 3 }, \"a\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 4\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 34, \"wordValue\": 0.2, \"result\": 4.01 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1573416633,\n+          \"content\": \"In the case of a string it would coerce the value and you would get \\\"null\\\" as a string so I get your point indeed\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1573416633\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,212 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    let body = \\\"\\\";\",\n+          \"score\": {\n+            \"reward\": 22.904,\n+            \"formatting\": { \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 } }, \"result\": 1 },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 25, \"wordValue\": 0.2, \"result\": 3.09 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1573420718,\n+          \"content\": \"`observe` would help to chose what we want to include and ignore? We surely can add more properties as it goes. The purpose of this section is to attribute different multipliers based on the type of comment, mimicking the old [codebase](https://github.com/ubiquity-os/comment-incentives/blob/525fcdccc8f0d9032a41cdaed3b4fbc6514d44b6/src/handlers/issue/comment-scoring-by-contribution-style.ts)\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1573420718\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -27,29 +27,39 @@ formattingEvaluator:\\n     td: 1\\n     hr: 0\\n   multipliers:\\n-    - type: [ISSUE, ISSUER]:\\n+    - type: [ISSUE, ISSUER, TASK]:\\n+      formattingMultiplier: 1\\n+      wordValue: 0.1\\n+    - type: [ISSUE, ISSUER, COMMENTED]:\\n       formattingMultiplier: 1\\n       wordValue: 0.2\\n-    - type: [ISSUE, ASSIGNEE]:\\n+    - type: [ISSUE, ASSIGNEE, COMMENTED]:\\n       formattingMultiplier: 0\\n       wordValue: 0\\n-    - type: [ISSUE, COLLABORATOR]:\\n+    - type: [ISSUE, COLLABORATOR, COMMENTED]:\",\n+          \"score\": {\n+            \"reward\": 43.12,\n+            \"formatting\": {\n+              \"content\": {\n+                \"p\": { \"score\": 1, \"elementCount\": 1 },\n+                \"code\": { \"score\": 1, \"elementCount\": 1 },\n+                \"a\": { \"score\": 1, \"elementCount\": 1 }\n+              },\n+              \"result\": 3\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 41, \"wordValue\": 0.2, \"result\": 4.7 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1573731420,\n+          \"content\": \"Not very useful indeed. I am working on the tests on a separate PR to avoid cluttering that one. I didn't cover all the tests cases yet!\\r\\nhttps://github.com/ubiquity-os/conversation-rewards/pull/14\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1573731420\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"\",\n+          \"score\": {\n+            \"reward\": 35.84,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 2 }, \"a\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 3\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 28, \"wordValue\": 0.2, \"result\": 3.4 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1573731649,\n+          \"content\": \"See https://github.com/ubiquity-os/conversation-rewards/pull/14 for the soon up to date mocks\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1573731649\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"\",\n+          \"score\": {\n+            \"reward\": 17.752,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 }, \"a\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 2\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 8, \"wordValue\": 0.2, \"result\": 1.17 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1573733603,\n+          \"content\": \"Good point, also symbol should not be DAI but ETH isn't it?\\r\\n`pay.ubq.fi` seems to be using https://rpc.mevblocker.io for its RPC which seems to have low latency, a good privacy and score according to Chainlist as well.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1573733603\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,22 @@\\n+// available tokens for payouts\\n+export const PAYMENT_TOKEN_PER_NETWORK: Record<string, { rpc: string; token: string; symbol: string }> = {\\n+  \\\"1\\\": {\\n+    rpc: \\\"https://rpc.gnosischain.com\\\",\\n+    token: \\\"0x6B175474E89094C44Da98b954EedeAC495271d0F\\\",\\n+    symbol: \\\"DAI\\\",\\n+  },\",\n+          \"score\": {\n+            \"reward\": 47.6,\n+            \"formatting\": {\n+              \"content\": {\n+                \"p\": { \"score\": 1, \"elementCount\": 2 },\n+                \"code\": { \"score\": 1, \"elementCount\": 1 },\n+                \"a\": { \"score\": 1, \"elementCount\": 1 }\n+              },\n+              \"result\": 4\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 39, \"wordValue\": 0.2, \"result\": 4.5 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1573737049,\n+          \"content\": \"Had changed it everywhere else but here, now it should be fine\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1573737049\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,212 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    let body = \\\"\\\";\",\n+          \"score\": {\n+            \"reward\": 14.84,\n+            \"formatting\": { \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 } }, \"result\": 1 },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 12, \"wordValue\": 0.2, \"result\": 1.65 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1574114225,\n+          \"content\": \"This matches any whitespace character (spaces, tabs, line breaks) so basically I make the produced HTML one liner. This helps to collect it from the CLI, makes the string shorter and more compact.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1574114225\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,216 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    let body = \\\"\\\";\\n+\\n+    for (const [key, value] of Object.entries(result)) {\\n+      result[key].evaluationCommentHtml = this._generateHtml(key, value);\\n+      body += result[key].evaluationCommentHtml;\\n+    }\\n+    if (this._configuration.debug) {\\n+      fs.writeFileSync(this._debugFilePath, body);\\n+    }\\n+    if (this._configuration.post) {\\n+      try {\\n+        const octokit = getOctokitInstance();\\n+        const { owner, repo, issue_number } = parseGitHubUrl(program.opts().issue);\\n+\\n+        await octokit.issues.createComment({\\n+          body,\\n+          repo,\\n+          owner,\\n+          issue_number,\\n+        });\\n+      } catch (e) {\\n+        console.error(`Could not post GitHub comment: ${e}`);\\n+      }\\n+    }\\n+    return Promise.resolve(result);\\n+  }\\n+\\n+  get enabled(): boolean {\\n+    if (!Value.Check(githubCommentConfig, this._configuration)) {\\n+      console.warn(\\\"Invalid configuration detected for GithubContentModule, disabling.\\\");\\n+      return false;\\n+    }\\n+    return true;\\n+  }\\n+\\n+  _generateHtml(username: string, result: Result[0]) {\\n+    const sorted = result.comments?.reduce<{\\n+      issues: { task: GithubCommentScore | null; comments: GithubCommentScore[] };\\n+      reviews: GithubCommentScore[];\\n+    }>(\\n+      (acc, curr) => {\\n+        if (curr.type & CommentType.ISSUE) {\\n+          if (curr.type & CommentType.TASK) {\\n+            acc.issues.task = curr;\\n+          } else {\\n+            acc.issues.comments.push(curr);\\n+          }\\n+        } else if (curr.type & CommentType.REVIEW) {\\n+          acc.reviews.push(curr);\\n+        }\\n+        return acc;\\n+      },\\n+      { issues: { task: null, comments: [] }, reviews: [] }\\n+    );\\n+\\n+    function createContributionRows() {\\n+      const content: string[] = [];\\n+\\n+      if (!sorted) {\\n+        return content.join(\\\"\\\");\\n+      }\\n+\\n+      function generateContributionRow(\\n+        view: string,\\n+        contribution: string,\\n+        count: number,\\n+        reward: number | Decimal | undefined\\n+      ) {\\n+        return `\\n+          <tr>\\n+            <td>${view}</td>\\n+            <td>${contribution}</td>\\n+            <td>${count}</td>\\n+            <td>${reward || \\\"-\\\"}</td>\\n+          </tr>`;\\n+      }\\n+\\n+      if (result.task?.reward) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Task\\\", 1, result.task.reward));\\n+      }\\n+      if (sorted.issues.task) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Specification\\\", 1, sorted.issues.task.score?.reward));\\n+      }\\n+      if (sorted.issues.comments.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Issue\\\",\\n+            \\\"Comment\\\",\\n+            sorted.issues.comments.length,\\n+            sorted.issues.comments.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\\n+          )\\n+        );\\n+      }\\n+      if (sorted.reviews.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Review\\\",\\n+            \\\"Comment\\\",\\n+            sorted.reviews.length,\\n+            sorted.reviews.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\\n+          )\\n+        );\\n+      }\\n+      return content.join(\\\"\\\");\\n+    }\\n+\\n+    function createIncentiveRows() {\\n+      const content: string[] = [];\\n+\\n+      if (!sorted) {\\n+        return content.join(\\\"\\\");\\n+      }\\n+\\n+      function buildIncentiveRow(commentScore: GithubCommentScore) {\\n+        // Properly escape carriage returns for HTML rendering\\n+        const formatting = stringify(commentScore.score?.formatting?.content).replace(/[\\\\n\\\\r]/g, \\\"&#13;\\\");\\n+        return `\\n+          <tr>\\n+            <td>\\n+              <h6>\\n+                <a href=\\\"${commentScore.url}\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">${commentScore.content.replace(/(.{64})..+/, \\\"$1…\\\")}</a>\\n+              </h6>\\n+            </td>\\n+            <td>\\n+            <details>\\n+              <summary>\\n+                ${Object.values(commentScore.score?.formatting?.content || {}).reduce((acc, curr) => {\\n+                  return acc.add(curr.score * curr.count);\\n+                }, new Decimal(0))}\\n+              </summary>\\n+              <pre>${formatting}</pre>\\n+             </details>\\n+            </td>\\n+            <td>${commentScore.score?.relevance || \\\"-\\\"}</td>\\n+            <td>${commentScore.score?.reward || \\\"-\\\"}</td>\\n+          </tr>`;\\n+      }\\n+\\n+      for (const issueComment of sorted.issues.comments) {\\n+        content.push(buildIncentiveRow(issueComment));\\n+      }\\n+      for (const reviewComment of sorted.reviews) {\\n+        content.push(buildIncentiveRow(reviewComment));\\n+      }\\n+      return content.join(\\\"\\\");\\n+    }\\n+\\n+    return `\\n+    <details>\\n+      <summary>\\n+        <b>\\n+          <h3>\\n+            <a href=\\\"${result.permitUrl}\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">\\n+              [ ${result.total} ${getPayoutConfigByNetworkId(program.opts().evmNetworkId).symbol} ]\\n+            </a>\\n+          </h3>\\n+          <h6>\\n+            @${username}\\n+          </h6>\\n+        </b>\\n+      </summary>\\n+      <h6>Contributions Overview</h6>\\n+      <table>\\n+        <thead>\\n+          <tr>\\n+            <th>View</th>\\n+            <th>Contribution</th>\\n+            <th>Count</th>\\n+            <th>Reward</th>\\n+          </tr>\\n+        </thead>\\n+        <tbody>\\n+          ${createContributionRows()}\\n+        </tbody>\\n+      </table>\\n+      <h6>Conversation Incentives</h6>\\n+      <table>\\n+        <thead>\\n+          <tr>\\n+            <th>Comment</th>\\n+            <th>Formatting</th>\\n+            <th>Relevance</th>\\n+            <th>Reward</th>\\n+          </tr>\\n+        </thead>\\n+        <tbody>\\n+          ${createIncentiveRows()}\\n+        </tbody>\\n+      </table>\\n+    </details>\\n+    `\\n+      .replace(/\\\\s+/g, \\\" \\\")\",\n+          \"score\": {\n+            \"reward\": 27.496,\n+            \"formatting\": { \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 } }, \"result\": 1 },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 33, \"wordValue\": 0.2, \"result\": 3.91 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1574622869,\n+          \"content\": \"By definition `dump` was just outputting results to stdout, but I could make it return the result as well. Since the console log is what we want to make sure works properly to be reused by other workflows, I thought it would make sense to test it that way because potentially if we forget other logs somewhere that would mess up the output for the next Action step.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1574622869\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,41 @@\\n+import { parseGitHubUrl } from \\\"../src/start\\\";\\n+import { IssueActivity } from \\\"../src/issue-activity\\\";\\n+import { Processor } from \\\"../src/parser/processor\\\";\\n+import { UserExtractorModule } from \\\"../src/parser/user-extractor-module\\\";\\n+import { server } from \\\"./__mocks__/node\\\";\\n+import { DataPurgeModule } from \\\"../src/parser/data-purge-module\\\";\\n+import userCommentResults from \\\"./__mocks__/results/user-comment-results.json\\\";\\n+import dataPurgeResults from \\\"./__mocks__/results/data-purge-result.json\\\";\\n+\\n+const issueUrl = process.env.TEST_ISSUE_URL || \\\"https://github.com/ubiquity-os/comment-incentives/issues/22\\\";\\n+\\n+beforeAll(() => server.listen());\\n+afterEach(() => server.resetHandlers());\\n+afterAll(() => server.close());\\n+\\n+describe(\\\"Modules tests\\\", () => {\\n+  const issue = parseGitHubUrl(issueUrl);\\n+  const activity = new IssueActivity(issue);\\n+\\n+  beforeAll(async () => {\\n+    await activity.init();\\n+  });\\n+\\n+  it(\\\"Should extract users from comments\\\", async () => {\\n+    const logSpy = jest.spyOn(console, \\\"log\\\");\\n+    const processor = new Processor();\\n+    processor[\\\"_transformers\\\"] = [new UserExtractorModule()];\\n+    await processor.run(activity);\\n+    processor.dump();\\n+    expect(logSpy).toHaveBeenCalledWith(JSON.stringify(userCommentResults, undefined, 2));\",\n+          \"score\": {\n+            \"reward\": 51.632,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 }, \"code\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 2\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 68, \"wordValue\": 0.2, \"result\": 7.22 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1574702577,\n+          \"content\": \"Un-nested them one level. I think that the `buildXrow` should just be contained by that function because its purpose only serves inside of it.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1574702577\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,217 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    const bodyArray: (string | undefined)[] = [];\\n+\\n+    for (const [key, value] of Object.entries(result)) {\\n+      result[key].evaluationCommentHtml = this._generateHtml(key, value);\\n+      bodyArray.push(result[key].evaluationCommentHtml);\\n+    }\\n+    const body = bodyArray.join(\\\"\\\");\\n+    if (this._configuration.debug) {\\n+      fs.writeFileSync(this._debugFilePath, body);\\n+    }\\n+    if (this._configuration.post) {\\n+      try {\\n+        const octokit = getOctokitInstance();\\n+        const { owner, repo, issue_number } = parseGitHubUrl(program.opts().issue);\\n+\\n+        await octokit.issues.createComment({\\n+          body,\\n+          repo,\\n+          owner,\\n+          issue_number,\\n+        });\\n+      } catch (e) {\\n+        console.error(`Could not post GitHub comment: ${e}`);\\n+      }\\n+    }\\n+    return Promise.resolve(result);\\n+  }\\n+\\n+  get enabled(): boolean {\\n+    if (!Value.Check(githubCommentConfig, this._configuration)) {\\n+      console.warn(\\\"Invalid configuration detected for GithubContentModule, disabling.\\\");\\n+      return false;\\n+    }\\n+    return true;\\n+  }\\n+\\n+  _generateHtml(username: string, result: Result[0]) {\\n+    const sorted = result.comments?.reduce<{\\n+      issues: { task: GithubCommentScore | null; comments: GithubCommentScore[] };\\n+      reviews: GithubCommentScore[];\\n+    }>(\\n+      (acc, curr) => {\\n+        if (curr.type & CommentType.ISSUE) {\\n+          if (curr.type & CommentType.TASK) {\\n+            acc.issues.task = curr;\\n+          } else {\\n+            acc.issues.comments.push(curr);\\n+          }\\n+        } else if (curr.type & CommentType.REVIEW) {\\n+          acc.reviews.push(curr);\\n+        }\\n+        return acc;\\n+      },\\n+      { issues: { task: null, comments: [] }, reviews: [] }\\n+    );\\n+\\n+    function createContributionRows() {\\n+      const content: string[] = [];\\n+\\n+      if (!sorted) {\\n+        return content.join(\\\"\\\");\\n+      }\\n+\\n+      function generateContributionRow(\",\n+          \"score\": {\n+            \"reward\": 28.504,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 }, \"code\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 2\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 25, \"wordValue\": 0.2, \"result\": 3.09 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1574724902,\n+          \"content\": \"I assumed BigInt only handles integers, and we manipulate a lot of floating decimal values for our operations (mostly everything has a floating point)\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1574724902\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,217 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    const bodyArray: (string | undefined)[] = [];\\n+\\n+    for (const [key, value] of Object.entries(result)) {\\n+      result[key].evaluationCommentHtml = this._generateHtml(key, value);\\n+      bodyArray.push(result[key].evaluationCommentHtml);\\n+    }\\n+    const body = bodyArray.join(\\\"\\\");\\n+    if (this._configuration.debug) {\\n+      fs.writeFileSync(this._debugFilePath, body);\\n+    }\\n+    if (this._configuration.post) {\\n+      try {\\n+        const octokit = getOctokitInstance();\\n+        const { owner, repo, issue_number } = parseGitHubUrl(program.opts().issue);\\n+\\n+        await octokit.issues.createComment({\\n+          body,\\n+          repo,\\n+          owner,\\n+          issue_number,\\n+        });\\n+      } catch (e) {\\n+        console.error(`Could not post GitHub comment: ${e}`);\\n+      }\\n+    }\\n+    return Promise.resolve(result);\\n+  }\\n+\\n+  get enabled(): boolean {\\n+    if (!Value.Check(githubCommentConfig, this._configuration)) {\\n+      console.warn(\\\"Invalid configuration detected for GithubContentModule, disabling.\\\");\\n+      return false;\\n+    }\\n+    return true;\\n+  }\\n+\\n+  _generateHtml(username: string, result: Result[0]) {\\n+    const sorted = result.comments?.reduce<{\\n+      issues: { task: GithubCommentScore | null; comments: GithubCommentScore[] };\\n+      reviews: GithubCommentScore[];\\n+    }>(\\n+      (acc, curr) => {\\n+        if (curr.type & CommentType.ISSUE) {\\n+          if (curr.type & CommentType.TASK) {\\n+            acc.issues.task = curr;\\n+          } else {\\n+            acc.issues.comments.push(curr);\\n+          }\\n+        } else if (curr.type & CommentType.REVIEW) {\\n+          acc.reviews.push(curr);\\n+        }\\n+        return acc;\\n+      },\\n+      { issues: { task: null, comments: [] }, reviews: [] }\\n+    );\\n+\\n+    function createContributionRows() {\\n+      const content: string[] = [];\\n+\\n+      if (!sorted) {\\n+        return content.join(\\\"\\\");\\n+      }\\n+\\n+      function generateContributionRow(\\n+        view: string,\\n+        contribution: string,\\n+        count: number,\\n+        reward: number | Decimal | undefined\\n+      ) {\\n+        return `\\n+          <tr>\\n+            <td>${view}</td>\\n+            <td>${contribution}</td>\\n+            <td>${count}</td>\\n+            <td>${reward || \\\"-\\\"}</td>\\n+          </tr>`;\\n+      }\\n+\\n+      if (result.task?.reward) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Task\\\", 1, result.task.reward));\\n+      }\\n+      if (sorted.issues.task) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Specification\\\", 1, sorted.issues.task.score?.reward));\\n+      }\\n+      if (sorted.issues.comments.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Issue\\\",\\n+            \\\"Comment\\\",\\n+            sorted.issues.comments.length,\\n+            sorted.issues.comments.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\\n+          )\\n+        );\\n+      }\\n+      if (sorted.reviews.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Review\\\",\\n+            \\\"Comment\\\",\\n+            sorted.reviews.length,\\n+            sorted.reviews.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\",\n+          \"score\": {\n+            \"reward\": 22.288,\n+            \"formatting\": { \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 } }, \"result\": 1 },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 24, \"wordValue\": 0.2, \"result\": 2.98 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1574767984,\n+          \"content\": \"There is one permit generated per participating user, last run:\\r\\nhttps://github.com/Meniole/test/issues/1#issuecomment-2069443938\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1574767984\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,217 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    const bodyArray: (string | undefined)[] = [];\\n+\\n+    for (const [key, value] of Object.entries(result)) {\\n+      result[key].evaluationCommentHtml = this._generateHtml(key, value);\\n+      bodyArray.push(result[key].evaluationCommentHtml);\\n+    }\\n+    const body = bodyArray.join(\\\"\\\");\\n+    if (this._configuration.debug) {\\n+      fs.writeFileSync(this._debugFilePath, body);\\n+    }\\n+    if (this._configuration.post) {\\n+      try {\\n+        const octokit = getOctokitInstance();\\n+        const { owner, repo, issue_number } = parseGitHubUrl(program.opts().issue);\\n+\\n+        await octokit.issues.createComment({\\n+          body,\\n+          repo,\\n+          owner,\\n+          issue_number,\\n+        });\\n+      } catch (e) {\\n+        console.error(`Could not post GitHub comment: ${e}`);\\n+      }\\n+    }\\n+    return Promise.resolve(result);\\n+  }\\n+\\n+  get enabled(): boolean {\\n+    if (!Value.Check(githubCommentConfig, this._configuration)) {\\n+      console.warn(\\\"Invalid configuration detected for GithubContentModule, disabling.\\\");\\n+      return false;\\n+    }\\n+    return true;\\n+  }\\n+\\n+  _generateHtml(username: string, result: Result[0]) {\\n+    const sorted = result.comments?.reduce<{\\n+      issues: { task: GithubCommentScore | null; comments: GithubCommentScore[] };\\n+      reviews: GithubCommentScore[];\\n+    }>(\\n+      (acc, curr) => {\\n+        if (curr.type & CommentType.ISSUE) {\\n+          if (curr.type & CommentType.TASK) {\\n+            acc.issues.task = curr;\\n+          } else {\\n+            acc.issues.comments.push(curr);\\n+          }\\n+        } else if (curr.type & CommentType.REVIEW) {\\n+          acc.reviews.push(curr);\\n+        }\\n+        return acc;\\n+      },\\n+      { issues: { task: null, comments: [] }, reviews: [] }\\n+    );\\n+\\n+    function createContributionRows() {\\n+      const content: string[] = [];\\n+\\n+      if (!sorted) {\\n+        return content.join(\\\"\\\");\\n+      }\\n+\\n+      function generateContributionRow(\\n+        view: string,\\n+        contribution: string,\\n+        count: number,\\n+        reward: number | Decimal | undefined\\n+      ) {\\n+        return `\\n+          <tr>\\n+            <td>${view}</td>\\n+            <td>${contribution}</td>\\n+            <td>${count}</td>\\n+            <td>${reward || \\\"-\\\"}</td>\\n+          </tr>`;\\n+      }\\n+\\n+      if (result.task?.reward) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Task\\\", 1, result.task.reward));\\n+      }\\n+      if (sorted.issues.task) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Specification\\\", 1, sorted.issues.task.score?.reward));\\n+      }\\n+      if (sorted.issues.comments.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Issue\\\",\\n+            \\\"Comment\\\",\\n+            sorted.issues.comments.length,\\n+            sorted.issues.comments.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\\n+          )\\n+        );\\n+      }\\n+      if (sorted.reviews.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Review\\\",\\n+            \\\"Comment\\\",\\n+            sorted.reviews.length,\\n+            sorted.reviews.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\\n+          )\\n+        );\\n+      }\\n+      return content.join(\\\"\\\");\\n+    }\\n+\\n+    function createIncentiveRows() {\\n+      const content: string[] = [];\\n+\\n+      if (!sorted) {\\n+        return content.join(\\\"\\\");\\n+      }\\n+\\n+      function buildIncentiveRow(commentScore: GithubCommentScore) {\\n+        // Properly escape carriage returns for HTML rendering\\n+        const formatting = stringify(commentScore.score?.formatting?.content).replace(/[\\\\n\\\\r]/g, \\\"&#13;\\\");\\n+        return `\\n+          <tr>\\n+            <td>\\n+              <h6>\\n+                <a href=\\\"${commentScore.url}\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">${commentScore.content.replace(/(.{64})..+/, \\\"$1…\\\")}</a>\\n+              </h6>\\n+            </td>\\n+            <td>\\n+            <details>\\n+              <summary>\\n+                ${Object.values(commentScore.score?.formatting?.content || {}).reduce((acc, curr) => {\\n+                  return acc.add(curr.score * curr.count);\\n+                }, new Decimal(0))}\\n+              </summary>\\n+              <pre>${formatting}</pre>\\n+             </details>\\n+            </td>\\n+            <td>${commentScore.score?.relevance || \\\"-\\\"}</td>\\n+            <td>${commentScore.score?.reward || \\\"-\\\"}</td>\\n+          </tr>`;\\n+      }\\n+\\n+      for (const issueComment of sorted.issues.comments) {\\n+        content.push(buildIncentiveRow(issueComment));\\n+      }\\n+      for (const reviewComment of sorted.reviews) {\\n+        content.push(buildIncentiveRow(reviewComment));\\n+      }\\n+      return content.join(\\\"\\\");\\n+    }\\n+\\n+    return `\\n+    <details>\\n+      <summary>\\n+        <b>\\n+          <h3>\\n+            <a href=\\\"${result.permitUrl}\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">\",\n+          \"score\": {\n+            \"reward\": 24.752,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 2 }, \"a\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 3\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 10, \"wordValue\": 0.2, \"result\": 1.42 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1575659438,\n+          \"content\": \"I made it according to the previous version:\\r\\n- Issue Specification means the item when opening an issue\\r\\n- Issue Task means the item that fixed the issue\\r\\nExample with the current comments:\\r\\nhttps://github.com/ubiquity-os/comment-incentives/issues/31#issuecomment-1998609326\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1575659438\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -19,12 +19,42 @@ import {\\n } from \\\"./start\\\";\\n \\n export enum CommentType {\\n+  /**\\n+   * Review related item\\n+   */\\n   REVIEW = 0b1,\\n+  /**\\n+   * Issue related item\\n+   */\\n   ISSUE = 0b10,\\n+  /**\\n+   * User assigned to the {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n   ASSIGNEE = 0b100,\\n+  /**\\n+   * The author of the {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n   ISSUER = 0b1000,\\n+  /**\\n+   * A user that is part of the organization or owner of the repo\\n+   */\\n   COLLABORATOR = 0b10000,\\n+  /**\\n+   * A user that is NOT part of the organization nor owner of the repo\\n+   */\\n   CONTRIBUTOR = 0b100000,\\n+  /**\\n+   * A user comment action on a {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n+  COMMENTED = 0b1000000,\\n+  /**\\n+   * Pull request opening item\\n+   */\\n+  TASK = 0b10000000,\",\n+          \"score\": {\n+            \"reward\": 71.12,\n+            \"formatting\": {\n+              \"content\": {\n+                \"p\": { \"score\": 1, \"elementCount\": 5 },\n+                \"ul\": { \"score\": 1, \"elementCount\": 1 },\n+                \"li\": { \"score\": 1, \"elementCount\": 2 },\n+                \"a\": { \"score\": 1, \"elementCount\": 1 }\n+              },\n+              \"result\": 9\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 31, \"wordValue\": 0.2, \"result\": 3.7 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1575675704,\n+          \"content\": \"Wouldn't that lead to precision loss in JS and after the division we could end up with 42.000000001 results? That's also what `DecimalJs` fixes in this case.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1575675704\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,217 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    const bodyArray: (string | undefined)[] = [];\\n+\\n+    for (const [key, value] of Object.entries(result)) {\\n+      result[key].evaluationCommentHtml = this._generateHtml(key, value);\\n+      bodyArray.push(result[key].evaluationCommentHtml);\\n+    }\\n+    const body = bodyArray.join(\\\"\\\");\\n+    if (this._configuration.debug) {\\n+      fs.writeFileSync(this._debugFilePath, body);\\n+    }\\n+    if (this._configuration.post) {\\n+      try {\\n+        const octokit = getOctokitInstance();\\n+        const { owner, repo, issue_number } = parseGitHubUrl(program.opts().issue);\\n+\\n+        await octokit.issues.createComment({\\n+          body,\\n+          repo,\\n+          owner,\\n+          issue_number,\\n+        });\\n+      } catch (e) {\\n+        console.error(`Could not post GitHub comment: ${e}`);\\n+      }\\n+    }\\n+    return Promise.resolve(result);\\n+  }\\n+\\n+  get enabled(): boolean {\\n+    if (!Value.Check(githubCommentConfig, this._configuration)) {\\n+      console.warn(\\\"Invalid configuration detected for GithubContentModule, disabling.\\\");\\n+      return false;\\n+    }\\n+    return true;\\n+  }\\n+\\n+  _generateHtml(username: string, result: Result[0]) {\\n+    const sorted = result.comments?.reduce<{\\n+      issues: { task: GithubCommentScore | null; comments: GithubCommentScore[] };\\n+      reviews: GithubCommentScore[];\\n+    }>(\\n+      (acc, curr) => {\\n+        if (curr.type & CommentType.ISSUE) {\\n+          if (curr.type & CommentType.TASK) {\\n+            acc.issues.task = curr;\\n+          } else {\\n+            acc.issues.comments.push(curr);\\n+          }\\n+        } else if (curr.type & CommentType.REVIEW) {\\n+          acc.reviews.push(curr);\\n+        }\\n+        return acc;\\n+      },\\n+      { issues: { task: null, comments: [] }, reviews: [] }\\n+    );\\n+\\n+    function createContributionRows() {\\n+      const content: string[] = [];\\n+\\n+      if (!sorted) {\\n+        return content.join(\\\"\\\");\\n+      }\\n+\\n+      function generateContributionRow(\\n+        view: string,\\n+        contribution: string,\\n+        count: number,\\n+        reward: number | Decimal | undefined\\n+      ) {\\n+        return `\\n+          <tr>\\n+            <td>${view}</td>\\n+            <td>${contribution}</td>\\n+            <td>${count}</td>\\n+            <td>${reward || \\\"-\\\"}</td>\\n+          </tr>`;\\n+      }\\n+\\n+      if (result.task?.reward) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Task\\\", 1, result.task.reward));\\n+      }\\n+      if (sorted.issues.task) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Specification\\\", 1, sorted.issues.task.score?.reward));\\n+      }\\n+      if (sorted.issues.comments.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Issue\\\",\\n+            \\\"Comment\\\",\\n+            sorted.issues.comments.length,\\n+            sorted.issues.comments.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\\n+          )\\n+        );\\n+      }\\n+      if (sorted.reviews.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Review\\\",\\n+            \\\"Comment\\\",\\n+            sorted.reviews.length,\\n+            sorted.reviews.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\",\n+          \"score\": {\n+            \"reward\": 31.36,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 }, \"code\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 2\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 30, \"wordValue\": 0.2, \"result\": 3.6 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1576567583,\n+          \"content\": \"That is correct. I understand now why you're confused:\\r\\nThe value for the task would be\\r\\n`\\\"ISSUE|ISSUER|TASK\\\"`\\r\\nbecause it is inside the `issue`\\r\\nThe value for the Specification would be\\r\\n`\\\"REVIEW|ISSUER|SPECIFICATION\\\"`\\r\\nbecause it is inside the `pull`\\r\\nI display `Issue: Specification` and `Issue: Task` just to stick to our current display format. Maybe instead I could display `Review: Task` instead?\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1576567583\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -19,12 +19,42 @@ import {\\n } from \\\"./start\\\";\\n \\n export enum CommentType {\\n+  /**\\n+   * Review related item\\n+   */\\n   REVIEW = 0b1,\\n+  /**\\n+   * Issue related item\\n+   */\\n   ISSUE = 0b10,\\n+  /**\\n+   * User assigned to the {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n   ASSIGNEE = 0b100,\\n+  /**\\n+   * The author of the {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n   ISSUER = 0b1000,\\n+  /**\\n+   * A user that is part of the organization or owner of the repo\\n+   */\\n   COLLABORATOR = 0b10000,\\n+  /**\\n+   * A user that is NOT part of the organization nor owner of the repo\\n+   */\\n   CONTRIBUTOR = 0b100000,\\n+  /**\\n+   * A user comment action on a {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n+  COMMENTED = 0b1000000,\\n+  /**\\n+   * Pull request opening item\\n+   */\\n+  TASK = 0b10000000,\",\n+          \"score\": {\n+            \"reward\": 122.92,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 8 }, \"code\": { \"score\": 1, \"elementCount\": 7 } },\n+              \"result\": 15\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 65, \"wordValue\": 0.2, \"result\": 6.95 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1577477616,\n+          \"content\": \"I don't think is it relevant in this scenario because we are not manipulating big numbers. Decimaljs allows for non-precision loss on the operations because there is a lot of multiply / divide with floating points which can result in very long decimals due to Js nature.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1577477616\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -0,0 +1,217 @@\\n+import { Value } from \\\"@sinclair/typebox/value\\\";\\n+import Decimal from \\\"decimal.js\\\";\\n+import * as fs from \\\"fs\\\";\\n+import { stringify } from \\\"yaml\\\";\\n+import configuration from \\\"../configuration/config-reader\\\";\\n+import githubCommentConfig, { GithubCommentConfiguration } from \\\"../configuration/github-comment-config\\\";\\n+import { getOctokitInstance } from \\\"../get-authentication-token\\\";\\n+import { CommentType, IssueActivity } from \\\"../issue-activity\\\";\\n+import { parseGitHubUrl } from \\\"../start\\\";\\n+import { getPayoutConfigByNetworkId } from \\\"../types/payout\\\";\\n+import program from \\\"./command-line\\\";\\n+import { GithubCommentScore, Module, Result } from \\\"./processor\\\";\\n+\\n+/**\\n+ * Posts a GitHub comment according to the given results.\\n+ */\\n+export class GithubCommentModule implements Module {\\n+  private readonly _configuration: GithubCommentConfiguration = configuration.githubComment;\\n+  private readonly _debugFilePath = \\\"./output.html\\\";\\n+\\n+  async transform(data: Readonly<IssueActivity>, result: Result): Promise<Result> {\\n+    const bodyArray: (string | undefined)[] = [];\\n+\\n+    for (const [key, value] of Object.entries(result)) {\\n+      result[key].evaluationCommentHtml = this._generateHtml(key, value);\\n+      bodyArray.push(result[key].evaluationCommentHtml);\\n+    }\\n+    const body = bodyArray.join(\\\"\\\");\\n+    if (this._configuration.debug) {\\n+      fs.writeFileSync(this._debugFilePath, body);\\n+    }\\n+    if (this._configuration.post) {\\n+      try {\\n+        const octokit = getOctokitInstance();\\n+        const { owner, repo, issue_number } = parseGitHubUrl(program.opts().issue);\\n+\\n+        await octokit.issues.createComment({\\n+          body,\\n+          repo,\\n+          owner,\\n+          issue_number,\\n+        });\\n+      } catch (e) {\\n+        console.error(`Could not post GitHub comment: ${e}`);\\n+      }\\n+    }\\n+    return Promise.resolve(result);\\n+  }\\n+\\n+  get enabled(): boolean {\\n+    if (!Value.Check(githubCommentConfig, this._configuration)) {\\n+      console.warn(\\\"Invalid configuration detected for GithubContentModule, disabling.\\\");\\n+      return false;\\n+    }\\n+    return true;\\n+  }\\n+\\n+  _generateHtml(username: string, result: Result[0]) {\\n+    const sorted = result.comments?.reduce<{\\n+      issues: { task: GithubCommentScore | null; comments: GithubCommentScore[] };\\n+      reviews: GithubCommentScore[];\\n+    }>(\\n+      (acc, curr) => {\\n+        if (curr.type & CommentType.ISSUE) {\\n+          if (curr.type & CommentType.TASK) {\\n+            acc.issues.task = curr;\\n+          } else {\\n+            acc.issues.comments.push(curr);\\n+          }\\n+        } else if (curr.type & CommentType.REVIEW) {\\n+          acc.reviews.push(curr);\\n+        }\\n+        return acc;\\n+      },\\n+      { issues: { task: null, comments: [] }, reviews: [] }\\n+    );\\n+\\n+    function createContributionRows() {\\n+      const content: string[] = [];\\n+\\n+      if (!sorted) {\\n+        return content.join(\\\"\\\");\\n+      }\\n+\\n+      function generateContributionRow(\\n+        view: string,\\n+        contribution: string,\\n+        count: number,\\n+        reward: number | Decimal | undefined\\n+      ) {\\n+        return `\\n+          <tr>\\n+            <td>${view}</td>\\n+            <td>${contribution}</td>\\n+            <td>${count}</td>\\n+            <td>${reward || \\\"-\\\"}</td>\\n+          </tr>`;\\n+      }\\n+\\n+      if (result.task?.reward) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Task\\\", 1, result.task.reward));\\n+      }\\n+      if (sorted.issues.task) {\\n+        content.push(generateContributionRow(\\\"Issue\\\", \\\"Specification\\\", 1, sorted.issues.task.score?.reward));\\n+      }\\n+      if (sorted.issues.comments.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Issue\\\",\\n+            \\\"Comment\\\",\\n+            sorted.issues.comments.length,\\n+            sorted.issues.comments.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\\n+          )\\n+        );\\n+      }\\n+      if (sorted.reviews.length) {\\n+        content.push(\\n+          generateContributionRow(\\n+            \\\"Review\\\",\\n+            \\\"Comment\\\",\\n+            sorted.reviews.length,\\n+            sorted.reviews.reduce((acc, curr) => acc.add(curr.score?.reward ?? 0), new Decimal(0))\",\n+          \"score\": {\n+            \"reward\": 35.672,\n+            \"formatting\": { \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 } }, \"result\": 1 },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 48, \"wordValue\": 0.2, \"result\": 5.37 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 1578162024,\n+          \"content\": \"@whilefoo you are correct, these were wrongly used. I corrected `TASK` and replaced it by `SPECIFICATION` so we have:\\r\\n`\\\"ISSUE|ISSUER|SPECIFICATION\\\"` and `\\\"REVIEW|ISSUER|TASK\\\"`\\r\\nI used `ISSUER` for this because technically the issuer is not necessarily the assignee in both cases.\\r\\nFix within next PR:\\r\\nhttps://github.com/ubiquity-os/conversation-rewards/pull/14/commits/90e150f76073c9cfa16a251f8c1ae48a75aa5408\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#discussion_r1578162024\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"diffHunk\": \"@@ -19,12 +19,42 @@ import {\\n } from \\\"./start\\\";\\n \\n export enum CommentType {\\n+  /**\\n+   * Review related item\\n+   */\\n   REVIEW = 0b1,\\n+  /**\\n+   * Issue related item\\n+   */\\n   ISSUE = 0b10,\\n+  /**\\n+   * User assigned to the {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n   ASSIGNEE = 0b100,\\n+  /**\\n+   * The author of the {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n   ISSUER = 0b1000,\\n+  /**\\n+   * A user that is part of the organization or owner of the repo\\n+   */\\n   COLLABORATOR = 0b10000,\\n+  /**\\n+   * A user that is NOT part of the organization nor owner of the repo\\n+   */\\n   CONTRIBUTOR = 0b100000,\\n+  /**\\n+   * A user comment action on a {@link CommentType.ISSUE} or {@link CommentType.REVIEW}\\n+   */\\n+  COMMENTED = 0b1000000,\\n+  /**\\n+   * Pull request opening item\\n+   */\\n+  TASK = 0b10000000,\",\n+          \"score\": {\n+            \"reward\": 91.168,\n+            \"formatting\": {\n+              \"content\": {\n+                \"p\": { \"score\": 1, \"elementCount\": 5 },\n+                \"code\": { \"score\": 1, \"elementCount\": 5 },\n+                \"a\": { \"score\": 1, \"elementCount\": 1 }\n+              },\n+              \"result\": 11\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 47, \"wordValue\": 0.2, \"result\": 5.28 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 2056635516,\n+          \"content\": \"Example of successful comment posting with results:\\r\\nhttps://github.com/Meniole/test/issues/1#issuecomment-2056572986\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#issuecomment-2056635516\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 22.68,\n+            \"formatting\": {\n+              \"content\": { \"p\": { \"score\": 1, \"elementCount\": 2 }, \"a\": { \"score\": 1, \"elementCount\": 1 } },\n+              \"result\": 3\n+            },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 7, \"wordValue\": 0.2, \"result\": 1.05 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        },\n+        {\n+          \"id\": 2063348339,\n+          \"content\": \"@0x4007 I believe that if I had all the tests in this PR it will become enormous, maybe I ought to do it in a separate PR.\",\n+          \"url\": \"https://github.com/ubiquity-os/conversation-rewards/pull/12#issuecomment-2063348339\",\n+          \"type\": \"PULL_AUTHOR\",\n+          \"score\": {\n+            \"reward\": 24.024,\n+            \"formatting\": { \"content\": { \"p\": { \"score\": 1, \"elementCount\": 1 } }, \"result\": 1 },\n+            \"priority\": 4,\n+            \"words\": { \"wordCount\": 27, \"wordValue\": 0.2, \"result\": 3.29 },\n+            \"multiplier\": 2,\n+            \"relevance\": 0.7\n+          }\n+        }\n+      ],\n+      \"reviewReward\": {\n+        \"reviewBaseReward\": { \"reward\": 0 },","score":{"reward":2.528,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1900429501,"content":"why did this change?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900429501","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -370,7 +398,7 @@ describe(\"Modules tests\", () => {\n         total: 9.25,\n       },\n       whilefoo: {\n-        total: 9.084,\n+        total: 9.25,","score":{"reward":1.824,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1902179326,"content":"because this runs in a loop it seems inefficient to read files every time","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1902179326","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -93,30 +97,42 @@ export class ReviewIncentivizerModule extends BaseModule {\n \n     return diff;\n   }\n+  async getReviewableDiff(owner: string, repo: string, baseSha: string, headSha: string) {\n+    const excludedFilePatterns = await getExcludedFiles();","score":{"reward":4.172,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":65.72500000000001,"syllables":21,"sentences":1,"score":0.9427499999999999},"multiplier":1,"relevance":0.7}},{"id":1902180439,"content":"I think you need the commit before the first one, because when you do a comparison between 1st commit and x-th commit, the 1st commit is the base so you will get changes that happened after that commit so if you want to also get changes from the first commit, you need to find a commit before the 1st commit of the PR.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1902180439","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -93,30 +97,42 @@ export class ReviewIncentivizerModule extends BaseModule {\n \n     return diff;\n   }\n+  async getReviewableDiff(owner: string, repo: string, baseSha: string, headSha: string) {\n+    const excludedFilePatterns = await getExcludedFiles();\n+    const diff = await this.getTripleDotDiffAsObject(owner, repo, baseSha, headSha);\n+    const reviewEffect = { addition: 0, deletion: 0 };\n+    for (const [fileName, changes] of Object.entries(diff)) {\n+      if (!excludedFilePatterns.some((pattern) => minimatch(fileName, pattern))) {\n+        reviewEffect.addition += changes.addition;\n+        reviewEffect.deletion += changes.deletion;\n+      }\n+    }\n+    return reviewEffect;\n+  }\n \n   async fetchReviewDiffRewards(owner: string, repo: string, reviewsByUser: GitHubPullRequestReviewState[]) {\n+    if (reviewsByUser.length == 0) {\n+      return;\n+    }\n     const reviews: ReviewScore[] = [];\n     const priority = parsePriorityLabel(this.context.payload.issue.labels);\n+    const pullNumber = Number(reviewsByUser[0].pull_request_url.split(\"/\").slice(-1)[0]);\n+    const pullCommits = (\n+      await this.context.octokit.rest.pulls.listCommits({ owner: owner, repo: repo, pull_number: pullNumber })\n+    ).data;\n+    const firstCommitSha = pullCommits[0].sha;","score":{"reward":11.196,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":64,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":33.48125,"syllables":82,"sentences":1,"score":0.7348125},"multiplier":1,"relevance":0.9}},{"id":1903328720,"content":"here you are also reading files instead of fetching from Github","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903328720","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,42 @@\n+import { readFile } from \"fs/promises\";\n+\n+interface GitAttributes {\n+  pattern: string;\n+  attributes: { [key: string]: string | boolean };\n+}\n+\n+async function parseGitAttributes(content: string): Promise<GitAttributes[]> {\n+  const lines = content.split(\"\\n\");\n+  return lines\n+    .map((line) => {\n+      line = line.trim();\n+      if (!line || line.startsWith(\"#\")) return null;\n+\n+      const parts = line.split(/\\s+/);\n+      if (parts.length < 2) return null;\n+\n+      const pattern = parts[0];\n+      const attributes: { [key: string]: string | boolean } = {};\n+\n+      for (let i = 1; i < parts.length; i++) {\n+        const attr = parts[i];\n+        if (attr.includes(\"=\")) {\n+          const [key, value] = attr.split(\"=\");\n+          attributes[key.trim()] = value.trim();\n+        } else {\n+          attributes[attr.trim()] = true;\n+        }\n+      }\n+\n+      return { pattern, attributes };\n+    })\n+    .filter((item): item is GitAttributes => item !== null);\n+}\n+\n+export async function getExcludedFiles() {\n+  const gitAttributesContent = await readFile(\".gitattributes\", \"utf-8\");\n+  const gitAttributesLinguistGenerated = (await parseGitAttributes(gitAttributesContent))\n+    .filter((v) => v.attributes[\"linguist-generated\"])\n+    .map((v) => v.pattern);","score":{"reward":4,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":64.9245454545455,"syllables":17,"sentences":1,"score":0.9507545454545451},"multiplier":1,"relevance":0.8}},{"id":1903328825,"content":"```suggestion\r\n    const firstCommitSha = pullCommits[0]?.parents[0]?.sha;\r\n```\r\nadd a check if `firstCommitSha` is undefined","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903328825","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,175 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+import { getExcludedFiles } from \"../helpers/excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0]?.number;\n+\n+    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n+\n+    const linkedPullReviews = await getPullRequestReviews(this.context, {\n+      owner: owner,\n+      repo: repo,\n+      pull_number: linkedPullNumber,\n+    });\n+\n+    for (const username of Object.keys(result)) {\n+      const reward = result[username];\n+      reward.reviewReward = {};\n+\n+      const reviewsByUser = linkedPullReviews.filter((v) => v.user?.login === username);\n+\n+      reward.reviewReward.reviewBaseReward = reviewsByUser.some(\n+        (v) => v.state === \"APPROVED\" || v.state === \"CHANGES_REQUESTED\"\n+      )\n+        ? { reward: this._conclusiveReviewCredit }\n+        : { reward: 0 };\n+\n+      const reviewDiffs = await this.fetchReviewDiffRewards(owner, repo, reviewsByUser);\n+\n+      reward.reviewReward.reviews = reviewDiffs;\n+    }\n+\n+    return result;\n+  }\n+\n+  async getTripleDotDiffAsObject(owner: string, repo: string, baseSha: string, headSha: string): Promise<CommitDiff> {\n+    const response = await this.context.octokit.rest.repos.compareCommits({\n+      owner,\n+      repo,\n+      base: baseSha,\n+      head: headSha,\n+    });\n+\n+    const files = response.data.files || [];\n+    const diff: CommitDiff = {};\n+\n+    for (const file of files) {\n+      diff[file.filename] = {\n+        addition: file.additions || 0,\n+        deletion: file.deletions || 0,\n+      };\n+    }\n+\n+    return diff;\n+  }\n+  async getReviewableDiff(\n+    owner: string,\n+    repo: string,\n+    baseSha: string,\n+    headSha: string,\n+    excludedFilePatterns?: string[]\n+  ) {\n+    const diff = await this.getTripleDotDiffAsObject(owner, repo, baseSha, headSha);\n+    const reviewEffect = { addition: 0, deletion: 0 };\n+    for (const [fileName, changes] of Object.entries(diff)) {\n+      if (\n+        !excludedFilePatterns ||\n+        (excludedFilePatterns && !excludedFilePatterns.every((pattern) => minimatch(fileName, pattern)))\n+      ) {\n+        reviewEffect.addition += changes.addition;\n+        reviewEffect.deletion += changes.deletion;\n+      }\n+    }\n+    return reviewEffect;\n+  }\n+\n+  async fetchReviewDiffRewards(owner: string, repo: string, reviewsByUser: GitHubPullRequestReviewState[]) {\n+    if (reviewsByUser.length == 0) {\n+      return;\n+    }\n+    const reviews: ReviewScore[] = [];\n+    const priority = parsePriorityLabel(this.context.payload.issue.labels);\n+    const pullNumber = Number(reviewsByUser[0].pull_request_url.split(\"/\").slice(-1)[0]);\n+\n+    const pullCommits = (\n+      await this.context.octokit.rest.pulls.listCommits({\n+        owner: owner,\n+        repo: repo,\n+        pull_number: pullNumber,\n+      })\n+    ).data;\n+\n+    // Get the commit before the PR\n+    const firstCommitSha = pullCommits[0].parents[0].sha;","score":{"reward":2.664,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.9}},{"id":1903329681,"content":"`excludedFilePatterns.every((pattern) => minimatch(fileName, pattern))` will be always false because if none patterns match it will be false and even if one pattern matches it will be false.\r\nThis should be covered in your tests.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903329681","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,175 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { collectLinkedMergedPulls } from \"../data-collection/collect-linked-pulls\";\n+import { getPullRequestReviews } from \"../start\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+import { getExcludedFiles } from \"../helpers/excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    const linkedPullNumber = (\n+      await collectLinkedMergedPulls(this.context, {\n+        owner: owner,\n+        repo: repo,\n+        issue_number: data.self?.number,\n+      })\n+    ).slice(-1)[0]?.number;\n+\n+    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n+\n+    const linkedPullReviews = await getPullRequestReviews(this.context, {\n+      owner: owner,\n+      repo: repo,\n+      pull_number: linkedPullNumber,\n+    });\n+\n+    for (const username of Object.keys(result)) {\n+      const reward = result[username];\n+      reward.reviewReward = {};\n+\n+      const reviewsByUser = linkedPullReviews.filter((v) => v.user?.login === username);\n+\n+      reward.reviewReward.reviewBaseReward = reviewsByUser.some(\n+        (v) => v.state === \"APPROVED\" || v.state === \"CHANGES_REQUESTED\"\n+      )\n+        ? { reward: this._conclusiveReviewCredit }\n+        : { reward: 0 };\n+\n+      const reviewDiffs = await this.fetchReviewDiffRewards(owner, repo, reviewsByUser);\n+\n+      reward.reviewReward.reviews = reviewDiffs;\n+    }\n+\n+    return result;\n+  }\n+\n+  async getTripleDotDiffAsObject(owner: string, repo: string, baseSha: string, headSha: string): Promise<CommitDiff> {\n+    const response = await this.context.octokit.rest.repos.compareCommits({\n+      owner,\n+      repo,\n+      base: baseSha,\n+      head: headSha,\n+    });\n+\n+    const files = response.data.files || [];\n+    const diff: CommitDiff = {};\n+\n+    for (const file of files) {\n+      diff[file.filename] = {\n+        addition: file.additions || 0,\n+        deletion: file.deletions || 0,\n+      };\n+    }\n+\n+    return diff;\n+  }\n+  async getReviewableDiff(\n+    owner: string,\n+    repo: string,\n+    baseSha: string,\n+    headSha: string,\n+    excludedFilePatterns?: string[]\n+  ) {\n+    const diff = await this.getTripleDotDiffAsObject(owner, repo, baseSha, headSha);\n+    const reviewEffect = { addition: 0, deletion: 0 };\n+    for (const [fileName, changes] of Object.entries(diff)) {\n+      if (\n+        !excludedFilePatterns ||\n+        (excludedFilePatterns && !excludedFilePatterns.every((pattern) => minimatch(fileName, pattern)))","score":{"reward":8.172,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":90.09000000000002,"syllables":36,"sentences":2,"score":0.6990999999999998},"multiplier":1,"relevance":0.9}},{"id":1905309210,"content":"I'm not certain but in Github API example it shows that both `assignee` and `assignees` are present so maybe if there are multiple assignees then `assignee` will be still non-empty, maybe you can test it to be sure","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905309210","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -55,6 +55,8 @@ export class Processor {\n       for (const item of Object.keys(this._result)) {\n         if (item === data.self?.assignee?.login) {\n           this._result[item].total = this._sumRewards(this._result[item], this._getRewardsLimit(data.self) * 3);\n+        } else if (data.self?.assignees?.map((v) => v.login).includes(item)) {\n+          this._result[item].total = this._sumRewards(this._result[item], this._getRewardsLimit(data.self) * 3);","score":{"reward":7.616,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":61.81513513513515,"syllables":47,"sentences":1,"score":0.9818486486486485},"multiplier":1,"relevance":0.7}},{"id":1905313662,"content":"you should check for undefined and throw error","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905313662","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -134,10 +131,10 @@ export class ReviewIncentivizerModule extends BaseModule {\n       })\n     ).data;\n \n-    // Get the commit before the PR\n-    const firstCommitSha = pullCommits[0].parents[0].sha;\n+    // Get the first commit of the PR\n+    const firstCommitSha = pullCommits[0]?.parents[0]?.sha;","score":{"reward":3.008,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.8}},{"id":1905314727,"content":"use logger","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905314727","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -33,10 +33,36 @@ async function parseGitAttributes(content: string): Promise<GitAttributes[]> {\n     .filter((item): item is GitAttributes => item !== null);\n }\n \n-export async function getExcludedFiles() {\n-  const gitAttributesContent = await readFile(\".gitattributes\", \"utf-8\");\n+export async function getExcludedFiles(context: ContextPlugin) {\n+  const gitAttributesContent = await getFileContent(context, \".gitattributes\");\n+  if (!gitAttributesContent) {\n+    return null;\n+  }\n   const gitAttributesLinguistGenerated = (await parseGitAttributes(gitAttributesContent))\n     .filter((v) => v.attributes[\"linguist-generated\"])\n     .map((v) => v.pattern);\n+\n   return gitAttributesLinguistGenerated;\n }\n+\n+async function getFileContent(context: ContextPlugin, path: string): Promise<string | null> {\n+  try {\n+    const response = await context.octokit.rest.repos.getContent({\n+      owner: context.payload.repository.owner.login,\n+      repo: context.payload.repository.name,\n+      path,\n+    });\n+\n+    // GitHub API returns content as base64\n+    if (\"content\" in response.data && !Array.isArray(response.data)) {\n+      return Buffer.from(response.data.content, \"base64\").toString(\"utf-8\");\n+    }\n+    return null;\n+  } catch (err) {\n+    if (err instanceof Error && \"status\" in err && err.status === 404) {\n+      console.error(\"File not found\");","score":{"reward":0.992,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":1,"relevance":0.8}},{"id":1905319462,"content":"why return if there's an assignee?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905319462","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -34,7 +34,7 @@ export class ReviewIncentivizerModule extends BaseModule {\n   }\n \n   async transform(data: Readonly<IssueActivity>, result: Result) {\n-    if (!data.self) {\n+    if (!data.self || data.self.assignee) {\n       return result;\n     }","score":{"reward":2.752,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0.8}},{"id":1905320831,"content":"What if there are multiple assignees?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905320831","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -47,7 +47,7 @@ export class ReviewIncentivizerModule extends BaseModule {\n         repo: repo,\n         issue_number: data.self?.number,\n       })\n-    ).slice(-1)[0]?.number;\n+    ).filter((pull) => data.self?.assignee && pull.author.login === data.self.assignee.login)[0].number;","score":{"reward":2.528,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":59.745000000000005,"syllables":10,"sentences":1,"score":0.9974500000000001},"multiplier":1,"relevance":0.8}},{"id":1907130371,"content":"I realized that `data.linkedReviews` already has reviews so you don't need to fetch them again and they also include all comments and reviews, check this [file](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/blob/development/src/issue-activity.ts). \r\nHowever the logic of  [_getLinkedReviews](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/blob/5bffc14d49d9d82304e38ac3761822abbb9a8c88/src/issue-activity.ts#L54) needs to be fixed, because it doesn't check that they are merged and only takes the last PR.\r\n@gentlementlegen I'm not sure if we should process all PRs or just 1, if we process all of them then they won't be all merged because when you merge one of them, the issue will be automatically closed and this plugin triggered but if we take just 1 PR then we can check that it's merged","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1907130371","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -47,7 +47,7 @@ export class ReviewIncentivizerModule extends BaseModule {\n         repo: repo,\n         issue_number: data.self?.number,\n       })\n-    ).slice(-1)[0]?.number;\n+    ).filter((pull) => data.self?.assignee && pull.author.login === data.self.assignee.login)[0].number;","score":{"reward":21.276,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":4,"words":{"wordCount":109,"wordValue":0.1,"result":2.56},"readability":{"fleschKincaid":58.967675840978615,"syllables":143,"sentences":3,"score":0.9896767584097862},"multiplier":1,"relevance":0.9}},{"id":1907694508,"content":"I haven't seen it happen but theoretically if an issue has 2 assignees they might be splitting the work so they have 2 PRs linked to the issue","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1907694508","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -47,7 +47,7 @@ export class ReviewIncentivizerModule extends BaseModule {\n         repo: repo,\n         issue_number: data.self?.number,\n       })\n-    ).slice(-1)[0]?.number;\n+    ).filter((pull) => data.self?.assignee && pull.author.login === data.self.assignee.login)[0].number;","score":{"reward":6.72,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":60.71034482758621,"syllables":40,"sentences":1,"score":0.9928965517241379},"multiplier":1,"relevance":0.7}},{"id":1909461813,"content":"@ishowvel then please use reviews from `data.linkedReviews` and modify [_getLinkedReviews](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/blob/5bffc14d49d9d82304e38ac3761822abbb9a8c88/src/issue-activity.ts#L54) to get all reviews (not just last) and verify that the PR author is one of the assignees","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1909461813","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -47,7 +47,7 @@ export class ReviewIncentivizerModule extends BaseModule {\n         repo: repo,\n         issue_number: data.self?.number,\n       })\n-    ).slice(-1)[0]?.number;\n+    ).filter((pull) => data.self?.assignee && pull.author.login === data.self.assignee.login)[0].number;","score":{"reward":12.636,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":47.83000000000001,"syllables":42,"sentences":1,"score":0.8783000000000001},"multiplier":1,"relevance":0.9}},{"id":1912241422,"content":"it would be easier to read this if it was inverted - `.every(reward.length === 0)`","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912241422","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -251,7 +262,7 @@ export class GithubCommentModule extends BaseModule {\n   }\n \n   _createReviewRows(result: Result[0]) {\n-    if (!result.reviewReward?.reviews?.length) {\n+    if (!result.reviewRewards?.some((reviewReward) => reviewReward.reviews?.length)) {","score":{"reward":2.784,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":95.68818181818183,"syllables":13,"sentences":1,"score":0.6431181818181817},"multiplier":1,"relevance":0.6}},{"id":1912247974,"content":"I'm guessing you accidentally committed this?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912247974","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -25,7 +25,7 @@ async function isUserAllowedToGeneratePermits(context: ContextPlugin) {\n \n export async function run(context: ContextPlugin) {\n   const { eventName, payload, logger, config } = context;\n-\n+  context.payload.repository.name = \".ubiquity-os\";","score":{"reward":2.752,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":42.61571428571432,"syllables":13,"sentences":1,"score":0.8261571428571431},"multiplier":1,"relevance":0.8}},{"id":1912267126,"content":"this is equivalent to `.find()`","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912267126","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -34,44 +33,47 @@ export class ReviewIncentivizerModule extends BaseModule {\n   }\n \n   async transform(data: Readonly<IssueActivity>, result: Result) {\n-    if (!data.self || data.self.assignee) {\n+    if (!data.self?.assignees) {\n       return result;\n     }\n \n     const owner = this.context.payload.repository.owner.login;\n     const repo = this.context.payload.repository.name;\n+    const assignees = data.self?.assignees?.map((assignee) => assignee.login);\n \n-    const linkedPullNumber = (\n+    const linkedPulls = (\n       await collectLinkedMergedPulls(this.context, {\n         owner: owner,\n         repo: repo,\n         issue_number: data.self?.number,\n       })\n-    ).filter((pull) => data.self?.assignee && pull.author.login === data.self.assignee.login)[0].number;\n-\n-    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n-\n-    const linkedPullReviews = await getPullRequestReviews(this.context, {\n-      owner: owner,\n-      repo: repo,\n-      pull_number: linkedPullNumber,\n-    });\n+    ).filter((pull) => assignees?.includes(pull.author.login));\n+\n+    if (linkedPulls.length > 1) {\n+      this.context.logger.info(`Pull requests ${linkedPulls.map((pull) => pull.number)} are linked to this issue`);\n+    } else if (linkedPulls.length == 1) {\n+      this.context.logger.info(`Pull request ${linkedPulls[0].number} is linked to this issue`);\n+    } else {\n+      throw this.context.logger.error(`No pull request linked to this issue, Aborting`);\n+    }\n \n     for (const username of Object.keys(result)) {\n       const reward = result[username];\n-      reward.reviewReward = {};\n-\n-      const reviewsByUser = linkedPullReviews.filter((v) => v.user?.login === username);\n+      reward.reviewRewards = [];\n \n-      reward.reviewReward.reviewBaseReward = reviewsByUser.some(\n-        (v) => v.state === \"APPROVED\" || v.state === \"CHANGES_REQUESTED\"\n-      )\n-        ? { reward: this._conclusiveReviewCredit }\n-        : { reward: 0 };\n+      for (const linkedPull of linkedPulls) {\n+        const linkedPullReviews = data.linkedReviews.filter((review) => review.self?.html_url === linkedPull.url)[0];","score":{"reward":1.596,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":54.72500000000002,"syllables":7,"sentences":1,"score":0.9472500000000003},"multiplier":1,"relevance":0.7}},{"id":1912267854,"content":"Why do you still fetch linked pulls if you have them in `data.linkedReviews`?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912267854","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -34,44 +33,47 @@ export class ReviewIncentivizerModule extends BaseModule {\n   }\n \n   async transform(data: Readonly<IssueActivity>, result: Result) {\n-    if (!data.self || data.self.assignee) {\n+    if (!data.self?.assignees) {\n       return result;\n     }\n \n     const owner = this.context.payload.repository.owner.login;\n     const repo = this.context.payload.repository.name;\n+    const assignees = data.self?.assignees?.map((assignee) => assignee.login);\n \n-    const linkedPullNumber = (\n+    const linkedPulls = (\n       await collectLinkedMergedPulls(this.context, {\n         owner: owner,\n         repo: repo,\n         issue_number: data.self?.number,\n       })\n-    ).filter((pull) => data.self?.assignee && pull.author.login === data.self.assignee.login)[0].number;\n-\n-    this.context.logger.info(`Pull request ${linkedPullNumber} is linked to this issue`);\n-\n-    const linkedPullReviews = await getPullRequestReviews(this.context, {\n-      owner: owner,\n-      repo: repo,\n-      pull_number: linkedPullNumber,\n-    });\n+    ).filter((pull) => assignees?.includes(pull.author.login));","score":{"reward":4.32,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":110.055,"syllables":12,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1912268687,"content":"```suggestion\r\n      for (const username of Object.keys(this._result)) {\r\n```","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912268687","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -53,9 +53,7 @@ export class Processor {\n       }\n       // Aggregate total result\n       for (const item of Object.keys(this._result)) {","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.5}},{"id":1913732158,"content":"still here","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1913732158","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -14,6 +14,7 @@ import { IssueActivityCache } from \"../db/issue-activity-cache\";\n const baseApp = createPlugin<PluginSettings, EnvConfig, null, SupportedEvents>(\n   async (context) => {\n     const { payload, config } = context;\n+    context.payload.repository.name = \".ubiquity-os\";","score":{"reward":0.924,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":120.20500000000001,"syllables":2,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1925999192,"content":"I'm not sure if this will work if the PR head branch is from the fork","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1925999192","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,167 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+import { getExcludedFiles } from \"../helpers/excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self?.assignees) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    if (data.linkedReviews.length > 1) {\n+      this.context.logger.info(\n+        `Pull requests ${data.linkedReviews.map((review) => review.self?.number)} are linked to this issue`\n+      );\n+    } else if (data.linkedReviews.length == 1) {\n+      this.context.logger.info(`Pull request ${data.linkedReviews[0].self?.number} is linked to this issue`);\n+    } else {\n+      throw this.context.logger.error(`No pull request linked to this issue, Aborting`);\n+    }\n+\n+    for (const username of Object.keys(result)) {\n+      const reward = result[username];\n+      reward.reviewRewards = [];\n+\n+      for (const linkedPullReviews of data.linkedReviews) {\n+        if (linkedPullReviews.reviews && linkedPullReviews.self) {\n+          const reviewsByUser = linkedPullReviews.reviews.filter((v) => v.user?.login === username);\n+\n+          const reviewBaseReward = reviewsByUser.some((v) => v.state === \"APPROVED\" || v.state === \"CHANGES_REQUESTED\")\n+            ? { reward: this._conclusiveReviewCredit }\n+            : { reward: 0 };\n+\n+          const reviewDiffs = await this.fetchReviewDiffRewards(owner, repo, reviewsByUser);\n+          reward.reviewRewards.push({ reviews: reviewDiffs, url: linkedPullReviews.self.html_url, reviewBaseReward });\n+        }\n+      }\n+    }\n+\n+    return result;\n+  }\n+\n+  async getTripleDotDiffAsObject(owner: string, repo: string, baseSha: string, headSha: string): Promise<CommitDiff> {\n+    const response = await this.context.octokit.rest.repos.compareCommits({\n+      owner,\n+      repo,\n+      base: baseSha,\n+      head: headSha,\n+    });\n+\n+    const files = response.data.files || [];\n+    const diff: CommitDiff = {};\n+\n+    for (const file of files) {\n+      diff[file.filename] = {\n+        addition: file.additions || 0,\n+        deletion: file.deletions || 0,\n+      };\n+    }\n+\n+    return diff;\n+  }\n+  async getReviewableDiff(\n+    owner: string,\n+    repo: string,\n+    baseSha: string,\n+    headSha: string,\n+    excludedFilePatterns?: string[] | null\n+  ) {\n+    const diff = await this.getTripleDotDiffAsObject(owner, repo, baseSha, headSha);\n+    const reviewEffect = { addition: 0, deletion: 0 };\n+    for (const [fileName, changes] of Object.entries(diff)) {\n+      if (!excludedFilePatterns?.length || !excludedFilePatterns.some((pattern) => minimatch(fileName, pattern))) {\n+        reviewEffect.addition += changes.addition;\n+        reviewEffect.deletion += changes.deletion;\n+      }\n+    }\n+    return reviewEffect;\n+  }\n+\n+  async fetchReviewDiffRewards(owner: string, repo: string, reviewsByUser: GitHubPullRequestReviewState[]) {\n+    if (reviewsByUser.length == 0) {\n+      return;\n+    }\n+    const reviews: ReviewScore[] = [];\n+    const priority = parsePriorityLabel(this.context.payload.issue.labels);\n+    const pullNumber = Number(reviewsByUser[0].pull_request_url.split(\"/\").slice(-1)[0]);\n+\n+    const pullCommits = (\n+      await this.context.octokit.rest.pulls.listCommits({\n+        owner: owner,\n+        repo: repo,\n+        pull_number: pullNumber,\n+      })\n+    ).data;\n+\n+    // Get the first commit of the PR\n+    const firstCommitSha = pullCommits[0]?.parents[0]?.sha;\n+    if (!firstCommitSha) {\n+      throw this.context.logger.error(\"Could not fetch base commit for this pull request\");\n+    }\n+    const excludedFilePatterns = await getExcludedFiles(this.context);\n+    for (let i = 0; i < reviewsByUser.length; i++) {\n+      const currentReview = reviewsByUser[i];\n+      const previousReview = reviewsByUser[i - 1];\n+\n+      if (currentReview.commit_id) {\n+        const baseSha = previousReview?.commit_id ? previousReview.commit_id : firstCommitSha;\n+        const headSha = currentReview.commit_id;\n+\n+        if (headSha) {\n+          try {\n+            const reviewEffect = await this.getReviewableDiff(owner, repo, baseSha, headSha, excludedFilePatterns);","score":{"reward":5.504,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":104.98000000000002,"syllables":17,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1926003622,"content":"Sometimes what happens is that a reviewer submits multiple reviews on the same commit so in those cases `baseSha` and `headSha` will be the same, so we should skip","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1926003622","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,167 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+import { getExcludedFiles } from \"../helpers/excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;\n+    this._conclusiveReviewCredit = this._configuration?.conclusiveReviewCredit ?? 25;\n+  }\n+\n+  async transform(data: Readonly<IssueActivity>, result: Result) {\n+    if (!data.self?.assignees) {\n+      return result;\n+    }\n+\n+    const owner = this.context.payload.repository.owner.login;\n+    const repo = this.context.payload.repository.name;\n+\n+    if (data.linkedReviews.length > 1) {\n+      this.context.logger.info(\n+        `Pull requests ${data.linkedReviews.map((review) => review.self?.number)} are linked to this issue`\n+      );\n+    } else if (data.linkedReviews.length == 1) {\n+      this.context.logger.info(`Pull request ${data.linkedReviews[0].self?.number} is linked to this issue`);\n+    } else {\n+      throw this.context.logger.error(`No pull request linked to this issue, Aborting`);\n+    }\n+\n+    for (const username of Object.keys(result)) {\n+      const reward = result[username];\n+      reward.reviewRewards = [];\n+\n+      for (const linkedPullReviews of data.linkedReviews) {\n+        if (linkedPullReviews.reviews && linkedPullReviews.self) {\n+          const reviewsByUser = linkedPullReviews.reviews.filter((v) => v.user?.login === username);\n+\n+          const reviewBaseReward = reviewsByUser.some((v) => v.state === \"APPROVED\" || v.state === \"CHANGES_REQUESTED\")\n+            ? { reward: this._conclusiveReviewCredit }\n+            : { reward: 0 };\n+\n+          const reviewDiffs = await this.fetchReviewDiffRewards(owner, repo, reviewsByUser);\n+          reward.reviewRewards.push({ reviews: reviewDiffs, url: linkedPullReviews.self.html_url, reviewBaseReward });\n+        }\n+      }\n+    }\n+\n+    return result;\n+  }\n+\n+  async getTripleDotDiffAsObject(owner: string, repo: string, baseSha: string, headSha: string): Promise<CommitDiff> {\n+    const response = await this.context.octokit.rest.repos.compareCommits({\n+      owner,\n+      repo,\n+      base: baseSha,\n+      head: headSha,\n+    });\n+\n+    const files = response.data.files || [];\n+    const diff: CommitDiff = {};\n+\n+    for (const file of files) {\n+      diff[file.filename] = {\n+        addition: file.additions || 0,\n+        deletion: file.deletions || 0,\n+      };\n+    }\n+\n+    return diff;\n+  }\n+  async getReviewableDiff(\n+    owner: string,\n+    repo: string,\n+    baseSha: string,\n+    headSha: string,\n+    excludedFilePatterns?: string[] | null\n+  ) {\n+    const diff = await this.getTripleDotDiffAsObject(owner, repo, baseSha, headSha);\n+    const reviewEffect = { addition: 0, deletion: 0 };\n+    for (const [fileName, changes] of Object.entries(diff)) {\n+      if (!excludedFilePatterns?.length || !excludedFilePatterns.some((pattern) => minimatch(fileName, pattern))) {\n+        reviewEffect.addition += changes.addition;\n+        reviewEffect.deletion += changes.deletion;\n+      }\n+    }\n+    return reviewEffect;\n+  }\n+\n+  async fetchReviewDiffRewards(owner: string, repo: string, reviewsByUser: GitHubPullRequestReviewState[]) {\n+    if (reviewsByUser.length == 0) {\n+      return;\n+    }\n+    const reviews: ReviewScore[] = [];\n+    const priority = parsePriorityLabel(this.context.payload.issue.labels);\n+    const pullNumber = Number(reviewsByUser[0].pull_request_url.split(\"/\").slice(-1)[0]);\n+\n+    const pullCommits = (\n+      await this.context.octokit.rest.pulls.listCommits({\n+        owner: owner,\n+        repo: repo,\n+        pull_number: pullNumber,\n+      })\n+    ).data;\n+\n+    // Get the first commit of the PR\n+    const firstCommitSha = pullCommits[0]?.parents[0]?.sha;\n+    if (!firstCommitSha) {\n+      throw this.context.logger.error(\"Could not fetch base commit for this pull request\");\n+    }\n+    const excludedFilePatterns = await getExcludedFiles(this.context);\n+    for (let i = 0; i < reviewsByUser.length; i++) {\n+      const currentReview = reviewsByUser[i];\n+      const previousReview = reviewsByUser[i - 1];\n+\n+      if (currentReview.commit_id) {\n+        const baseSha = previousReview?.commit_id ? previousReview.commit_id : firstCommitSha;\n+        const headSha = currentReview.commit_id;","score":{"reward":8.28,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":63.49666666666667,"syllables":37,"sentences":1,"score":0.9650333333333333},"multiplier":1,"relevance":0.9}},{"id":1926004238,"content":"Display pull request number","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1926004238","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -236,6 +269,43 @@ export class GithubCommentModule extends BaseModule {\n     return content.join(\"\");\n   }\n \n+  _createReviewRows(result: Result[0]) {\n+    if (result.reviewRewards?.every((reviewReward) => reviewReward.reviews?.length === 0) || !result.reviewRewards) {\n+      return \"\";\n+    }\n+\n+    function buildReviewRow(review: ReviewScore) {\n+      return `\n+        <tr>\n+          <td>+${review.effect.addition} -${review.effect.deletion}</td>\n+          <td>${review.priority ?? \"-\"}</td>\n+          <td>${review.reward}</td>\n+        </tr>`;\n+    }\n+\n+    const reviewTables = result.reviewRewards\n+      .filter((reviewReward) => reviewReward.reviews && reviewReward.reviews.length > 0)\n+      .map((reviewReward) => {\n+        const rows = reviewReward.reviews?.map(buildReviewRow).join(\"\") ?? \"\";\n+        return `\n+          <h6>Review Details for&nbsp;<a href=\"${reviewReward.url}\" target=\"_blank\" rel=\"noopener\">Pull Request</a></h6>","score":{"reward":1.596,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":54.72500000000002,"syllables":7,"sentences":1,"score":0.9472500000000003},"multiplier":1,"relevance":0.7}},{"id":1930112890,"content":"Technically the right hand side value would never run because `enabled()` checks if the configuration is present so the module won't run if the configuration is `null`","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930112890","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,174 @@\n+import { Value } from \"@sinclair/typebox/value\";\n+import {\n+  ReviewIncentivizerConfiguration,\n+  reviewIncentivizerConfigurationType,\n+} from \"../configuration/review-incentivizer-config\";\n+import { IssueActivity } from \"../issue-activity\";\n+import { BaseModule } from \"../types/module\";\n+import { Result, ReviewScore } from \"../types/results\";\n+import { ContextPlugin } from \"../types/plugin-input\";\n+import { GitHubPullRequestReviewState } from \"../github-types\";\n+import { parsePriorityLabel } from \"../helpers/github\";\n+import { getExcludedFiles } from \"../helpers/excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+interface CommitDiff {\n+  [fileName: string]: {\n+    addition: number;\n+    deletion: number;\n+  };\n+}\n+\n+export class ReviewIncentivizerModule extends BaseModule {\n+  private readonly _configuration: ReviewIncentivizerConfiguration | null =\n+    this.context.config.incentives.reviewIncentivizer;\n+  private readonly _baseRate: number;\n+  private readonly _conclusiveReviewCredit: number;\n+\n+  constructor(context: ContextPlugin) {\n+    super(context);\n+    this._baseRate = this._configuration?.baseRate ?? 100;","score":{"reward":5.184,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":40.529615384615425,"syllables":43,"sentences":1,"score":0.8052961538461543},"multiplier":1,"relevance":0.6}},{"id":1930114886,"content":"Why? The priority label could be defined like `priority: 3`","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930114886","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,5 +1,22 @@\n import * as github from \"@actions/github\";\n+import { GitHubIssue } from \"../github-types\";\n \n export function getGithubWorkflowRunUrl() {\n   return `${github.context.payload.repository?.html_url}/actions/runs/${github.context.runId}`;\n }\n+\n+export function parsePriorityLabel(labels: GitHubIssue[\"labels\"] | undefined) {\n+  if (!labels) return 1;\n+\n+  for (const label of labels) {\n+    const priorityLabel = typeof label === \"string\" ? label : (label.name ?? \"\");\n+    const matched = priorityLabel.match(/^Priority:\\s*(\\d+)/i);","score":{"reward":2.66,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":75.87500000000001,"syllables":12,"sentences":2,"score":0.8412499999999998},"multiplier":1,"relevance":0.7}},{"id":2608323527,"content":"@ishowvel let's finish this ASAP otherwise I will take over and finish","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2608323527","commentType":"PULL_COLLABORATOR","score":{"reward":3.976,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":56.97846153846157,"syllables":21,"sentences":1,"score":0.9697846153846157},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2526859360,"effect":{"addition":467,"deletion":172},"reward":25.56,"priority":4},{"reviewId":2529738747,"effect":{"addition":80,"deletion":20},"reward":4,"priority":4},{"reviewId":2530954793,"effect":{"addition":22,"deletion":6},"reward":1.12,"priority":4},{"reviewId":2534078936,"effect":{"addition":92,"deletion":13},"reward":4.2,"priority":4},{"reviewId":2545291170,"effect":{"addition":214,"deletion":81},"reward":11.8,"priority":4},{"reviewId":2547715991,"effect":{"addition":14,"deletion":24},"reward":1.52,"priority":4},{"reviewId":2550542545,"effect":{"addition":105,"deletion":19},"reward":4.96,"priority":4},{"reviewId":2568329810,"effect":{"addition":171,"deletion":60},"reward":9.24,"priority":4},{"reviewId":2569733369,"effect":{"addition":28,"deletion":24},"reward":2.08,"priority":4},{"reviewId":2573470750,"effect":{"addition":11,"deletion":13},"reward":0.96,"priority":4},{"reviewId":2574054131,"effect":{"addition":26,"deletion":15},"reward":1.64,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218"},{"url":"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 271.856 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>11</td><td>67.08</td></tr><tr><td>Issue</td><td>Comment</td><td>11</td><td>19.836</td></tr><tr><td>Review</td><td>Comment</td><td>37</td><td>184.94</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218\" target=\"_blank\" rel=\"noopener\">#218</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+467 -172</td><td>4</td><td>25.56</td></tr><tr><td>+80 -20</td><td>4</td><td>4</td></tr><tr><td>+22 -6</td><td>4</td><td>1.12</td></tr><tr><td>+92 -13</td><td>4</td><td>4.2</td></tr><tr><td>+214 -81</td><td>4</td><td>11.8</td></tr><tr><td>+14 -24</td><td>4</td><td>1.52</td></tr><tr><td>+105 -19</td><td>4</td><td>4.96</td></tr><tr><td>+171 -60</td><td>4</td><td>9.24</td></tr><tr><td>+28 -24</td><td>4</td><td>2.08</td></tr><tr><td>+11 -13</td><td>4</td><td>0.96</td></tr><tr><td>+26 -15</td><td>4</td><td>1.64</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2533090250\" target=\"_blank\" rel=\"noopener\">Maybe this can be done after this task but I think we should als&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 77&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>4</td><td>11.772</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614586391\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff# Results are being retried&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614588985\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff# Results are being retried&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614589004\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff# Results are being retried&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614594535\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff# Results are being retried&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614596652\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff# Results are being retried&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614597204\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff# Results are being retried&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614597225\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff# Results are being retried&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614597242\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff# Results are being retried&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2614599278\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;diff# Results are being retried&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/60#issuecomment-2615397879\" target=\"_blank\" rel=\"noopener\">Actually I realized that the comment posting is turned off but t&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.8</td><td>4</td><td>8.064</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#pullrequestreview-2550542545\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/user-attachments/assets/daa6bc37-095&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.6</td><td>4</td><td>5.784</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#pullrequestreview-2569733369\" target=\"_blank\" rel=\"noopener\">I tried running the plugin on https://github.com/ubiquity-os/plu&hellip;</a></h6></td><td><details><summary>3.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 97&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.9</td><td>4</td><td>16.74</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#pullrequestreview-2573470750\" target=\"_blank\" rel=\"noopener\">you still fetch &#96;.gitattributes&#96; from issue's repo inste&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>4</td><td>4.096</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900395837\" target=\"_blank\" rel=\"noopener\">you need to check array length or use &#96;?.&#96;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>4</td><td>3.168</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900396733\" target=\"_blank\" rel=\"noopener\">conclusive review means either &#96;APPROVED&#96; or &#96;CHANGE&hellip;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.9</td><td>4</td><td>2.412</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900400660\" target=\"_blank\" rel=\"noopener\">you can use &#96;Object.entries&#96;</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.5</td><td>4</td><td>0.92</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900401661\" target=\"_blank\" rel=\"noopener\">you should exclude files in &#96;.gitattributes&#96; marked as &&hellip;</a></h6></td><td><details><summary>1.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.9</td><td>4</td><td>8.028</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900403936\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionfor (const username of Object.key&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900403966\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionconst reward = result[key];&#&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900428835\" target=\"_blank\" rel=\"noopener\">This doesn't seem correct. you are comparing commits between the&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 70&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.9</td><td>4</td><td>12.132</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900429155\" target=\"_blank\" rel=\"noopener\">why is base reward 0 here?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.8</td><td>4</td><td>2.528</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1900429501\" target=\"_blank\" rel=\"noopener\">why did this change?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.8</td><td>4</td><td>1.824</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1902179326\" target=\"_blank\" rel=\"noopener\">because this runs in a loop it seems inefficient to read files e&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>4</td><td>4.172</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1902180439\" target=\"_blank\" rel=\"noopener\">I think you need the commit before the first one, because when y&hellip;</a></h6></td><td><details><summary>2.55</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 64&#13;  wordValue: 0.1&#13;  result: 2.55&#13;</pre></details></td><td>0.9</td><td>4</td><td>11.196</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903328720\" target=\"_blank\" rel=\"noopener\">here you are also reading files instead of fetching from Github</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>4</td><td>4</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903328825\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionconst firstCommitSha = pullCommit&hellip;</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.9</td><td>4</td><td>2.664</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1903329681\" target=\"_blank\" rel=\"noopener\">&#96;excludedFilePatterns.every((pattern) =&gt; minimatch(fileNa&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.9</td><td>4</td><td>8.172</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905309210\" target=\"_blank\" rel=\"noopener\">I'm not certain but in Github API example it shows that both &#9&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>0.7</td><td>4</td><td>7.616</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905313662\" target=\"_blank\" rel=\"noopener\">you should check for undefined and throw error</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>4</td><td>3.008</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905314727\" target=\"_blank\" rel=\"noopener\">use logger</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.8</td><td>4</td><td>0.992</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905319462\" target=\"_blank\" rel=\"noopener\">why return if there's an assignee?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>4</td><td>2.752</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1905320831\" target=\"_blank\" rel=\"noopener\">What if there are multiple assignees?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.8</td><td>4</td><td>2.528</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1907130371\" target=\"_blank\" rel=\"noopener\">I realized that &#96;data.linkedReviews&#96; already has reviews&hellip;</a></h6></td><td><details><summary>4.56</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 109&#13;  wordValue: 0.1&#13;  result: 2.56&#13;</pre></details></td><td>0.9</td><td>4</td><td>21.276</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1907694508\" target=\"_blank\" rel=\"noopener\">I haven't seen it happen but theoretically if an issue has 2 ass&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.7</td><td>4</td><td>6.72</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1909461813\" target=\"_blank\" rel=\"noopener\">@ishowvel then please use reviews from &#96;data.linkedReviews&#&hellip;</a></h6></td><td><details><summary>2.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.9</td><td>4</td><td>12.636</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912241422\" target=\"_blank\" rel=\"noopener\">it would be easier to read this if it was inverted - &#96;.every&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.6</td><td>4</td><td>2.784</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912247974\" target=\"_blank\" rel=\"noopener\">I'm guessing you accidentally committed this?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>4</td><td>2.752</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912267126\" target=\"_blank\" rel=\"noopener\">this is equivalent to &#96;.find()&#96;</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>4</td><td>1.596</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912267854\" target=\"_blank\" rel=\"noopener\">Why do you still fetch linked pulls if you have them in &#96;dat&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>4</td><td>4.32</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1912268687\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionfor (const username of Object.k&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.5</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1913732158\" target=\"_blank\" rel=\"noopener\">still here</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.7</td><td>4</td><td>0.924</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1925999192\" target=\"_blank\" rel=\"noopener\">I'm not sure if this will work if the PR head branch is from the&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.8</td><td>4</td><td>5.504</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1926003622\" target=\"_blank\" rel=\"noopener\">Sometimes what happens is that a reviewer submits multiple revie&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.9</td><td>4</td><td>8.28</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1926004238\" target=\"_blank\" rel=\"noopener\">Display pull request number</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>4</td><td>1.596</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930112890\" target=\"_blank\" rel=\"noopener\">Technically the right hand side value would never run because &#&hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.6</td><td>4</td><td>5.184</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#discussion_r1930114886\" target=\"_blank\" rel=\"noopener\">Why? The priority label could be defined like &#96;priority: 3&#&hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.7</td><td>4</td><td>2.66</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2608323527\" target=\"_blank\" rel=\"noopener\">@ishowvel let's finish this ASAP otherwise I will take over and &hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.7</td><td>4</td><td>3.976</td></tr></tbody></table></details>"},"shiv810":{"total":2.4,"userId":53160903,"comments":[{"id":2606251320,"content":"That's expected, assuming kernel is forwarding all pr review comments to `command-ask`. \r\nhttps://github.com/ubiquity-os-marketplace/command-ask/blob/1595ad3f3fe262d0d8fb555351c0dc0e27cd9ecd/src/handlers/comment-created-callback.ts#L16-L23\r\nIt does exit as expected, given that, the command router does not give the question in the param. I'll take a look at command router.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2606251320","commentType":"PULL_CONTRIBUTOR","score":{"reward":2.4,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":65.54557142857144,"syllables":86,"sentences":5,"score":0.9445442857142856},"multiplier":0.25,"relevance":0.6}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218"},{"url":"https://github.com/ubiquity-os-marketplace/.ubiquity-os/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.4 XP ]</a>&nbsp;</h3><h6>@shiv810</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>2.4</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/218#issuecomment-2606251320\" target=\"_blank\" rel=\"noopener\">That's expected, assuming kernel is forwarding all pr review com&hellip;</a></h6></td><td><details><summary>3.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.6</td><td>4</td><td>2.4</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_configuration-loader_16.json","json":{"gentlementlegen":{"userId":9807008,"total":103.98,"task":{"reward":100,"multiplier":1},"comments":[{"id":2280050882,"content":"The bot configuration contains lots of spurious data coming from the previous version of it. This should be cleaned up as it is not used in the new version anymore, but rather defined by plugins themselves.\r\nRelated conversation:\r\nhttps://github.com/ubiquity/ubiquibot-kernel/pull/38#discussion_r1590270331","url":"https://github.com/ubiquity-os/configuration-loader/issues/16","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.98,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":50.90875,"syllables":80,"sentences":4,"score":0.9090874999999999},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 103.98 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>100</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.98</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/16\" target=\"_blank\" rel=\"noopener\">The bot configuration contains lots of spurious data coming from&hellip;</a></h6></td><td><details><summary>3.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>1</td><td>1</td><td>3.98</td></tr></tbody></table></details>"},"gitcoindev":{"total":5.44,"userId":88761781,"comments":[{"id":2042401920,"content":"LGTM!","url":"https://github.com/ubiquity-os/configuration-loader/pull/17#pullrequestreview-2042401920","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.02,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":121.22000000000003,"syllables":1,"sentences":1,"score":1},"multiplier":0.25,"relevance":0.2}}],"reviewRewards":[{"reviews":[{"reviewId":2042401920,"effect":{"addition":59,"deletion":212},"reward":5.42,"priority":2}],"url":"https://github.com/ubiquity-os/configuration-loader/pull/17"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 5.44 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>5.42</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.02</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/configuration-loader/pull/17\" target=\"_blank\" rel=\"noopener\">#17</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+59 -212</td><td>2</td><td>5.42</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/pull/17#pullrequestreview-2042401920\" target=\"_blank\" rel=\"noopener\">LGTM!</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.02</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_65.json","json":{"0x4007":{"userId":4975670,"total":676.247,"task":{"reward":600,"multiplier":0.5},"comments":[{"id":2809453476,"content":"I think it would be the best UX to edit the behavior (config) of UbiquityOS just by telling it. For example:\n@UbiquityOS change the base score of all images in text-conversation-rewards from 5 to 10. \nI have a functional implementation [here](https://github.com/0x4007/sync-configs-agent) which works both from CLI and from the GitHub Actions dispatcher. The only capability that needs to be added potentially in the context of this plugin is to understand which repository is being worked on, and to edit the current repository's config (or if there is none, then the organization config.)\nThis implementation needs to be wrapped inside of a plugin. \n### Previous Context\nhttps://github.com/ubiquity/ubiquity-dollar/issues/964#issuecomment-2403859462\nGood scenario to test:\n\"@UbiquityOS in conversation rewards, you must manually initialize all the html tag defaults.\"\nShould yield something like https://github.com/Ubiquity-DAO/ubiquibot-config/commit/133419d51295c85e843a75f9f8ef63a0622ea0db\nAfter it successfully made the change (non interactive mode) it should automatically link back a pull\nIt must also check if you're an admin before being able to change the configuration.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/65","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.64,"formatting":{"content":{"p":{"score":0,"elementCount":2},"h3":{"score":1,"elementCount":1},"a":{"score":1,"elementCount":3}},"result":4},"priority":1,"words":{"wordCount":160,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":42.024314090626945,"syllables":306,"sentences":9,"score":0.8202431409062695},"multiplier":1,"relevance":1}},{"id":2683576969,"content":"Please address my last changes. @Whilefoo please do a retroactive review because we are about ready to test in production.","url":"https://github.com/ShivTestOrg/command-config/pull/1#pullrequestreview-2683576969","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.987,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":65.555,"syllables":31,"sentences":2,"score":0.9444499999999999},"multiplier":0.25,"relevance":0.7}},{"id":2684388714,"content":"Assuming you didn't make changes from my last approval on your version of the repo.","url":"https://github.com/ubiquity-os-marketplace/command-config/pull/1#pullrequestreview-2684388714","commentType":"PULL_COLLABORATOR","score":{"reward":1.92,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":74.27000000000001,"syllables":22,"sentences":1,"score":0.8573},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2672596690,"effect":{"addition":297,"deletion":149},"reward":13.38,"priority":3},{"reviewId":2681409104,"effect":{"addition":168,"deletion":198},"reward":10.98,"priority":3},{"reviewId":2683575994,"effect":{"addition":36,"deletion":23},"reward":1.77,"priority":3}],"url":"https://github.com/ShivTestOrg/command-config/pull/1"},{"reviews":[{"reviewId":2684388714,"effect":{"addition":1227,"deletion":92},"reward":39.57,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/command-config/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 676.247 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>0.5</td><td>600</td></tr><tr><td>Review</td><td>Code Review</td><td>4</td><td>65.7</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.64</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>2.907</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ShivTestOrg/command-config/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+297 -149</td><td>3</td><td>13.38</td></tr><tr><td>+168 -198</td><td>3</td><td>10.98</td></tr><tr><td>+36 -23</td><td>3</td><td>1.77</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-config/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1227 -92</td><td>3</td><td>39.57</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/65\" target=\"_blank\" rel=\"noopener\">I think it would be the best UX to edit the behavior (config) of&hellip;</a></h6></td><td><details><summary>6.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    h3:&#13;      score: 1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 4&#13;regex:&#13;  wordCount: 160&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>1</td><td>1</td><td>7.64</td></tr><tr><td><h6><a href=\"https://github.com/ShivTestOrg/command-config/pull/1#pullrequestreview-2683576969\" target=\"_blank\" rel=\"noopener\">Please address my last changes. @Whilefoo please do a retroactiv&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.987</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-config/pull/1#pullrequestreview-2684388714\" target=\"_blank\" rel=\"noopener\">Assuming you didn't make changes from my last approval on your v&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.92</td></tr></tbody></table></details>"},"shiv810":{"userId":53160903,"total":600,"task":{"reward":600,"multiplier":0.5},"reviewRewards":[{"url":"https://github.com/0x4007/sync-configs-agent/pull/7"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 600 XP ]</a>&nbsp;</h3><h6>@shiv810</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>0.5</td><td>600</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"gentlementlegen":{"total":7.23,"userId":9807008,"comments":[{"id":2613770889,"content":"So we need to include https://github.com/0x4007/sync-configs-agent as a plugin is that correct?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/65#issuecomment-2613770889","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.23,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":84.90000000000003,"syllables":24,"sentences":2,"score":0.7509999999999997},"multiplier":1,"relevance":1}}],"reviewRewards":[{"url":"https://github.com/0x4007/sync-configs-agent/pull/7"},{"url":"https://github.com/ShivTestOrg/command-config/pull/1"},{"url":"https://github.com/ubiquity-os-marketplace/command-config/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 7.23 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>7.23</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/65#issuecomment-2613770889\" target=\"_blank\" rel=\"noopener\">So we need to include https://github.com/0x4007/sync-configs-age&hellip;</a></h6></td><td><details><summary>1.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>1</td><td>3</td><td>7.23</td></tr></tbody></table></details>"},"Keyrxng":{"total":1.404,"userId":106303466,"comments":[{"id":2652732106,"content":"What's happening with this task @0x4007? Is your implementation to be made plugin-compatible or it can be built from scratch or what?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/65#issuecomment-2652732106","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.404,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":74.805,"syllables":34,"sentences":2,"score":0.85195},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[{"url":"https://github.com/0x4007/sync-configs-agent/pull/7"},{"url":"https://github.com/ShivTestOrg/command-config/pull/1"},{"url":"https://github.com/ubiquity-os-marketplace/command-config/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.404 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.404</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/65#issuecomment-2652732106\" target=\"_blank\" rel=\"noopener\">What's happening with this task @0x4007? Is your implementation &hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.9</td><td>3</td><td>1.404</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_action-deploy-plugin_3.json","json":{"gentlementlegen":{"userId":9807008,"total":6,"task":{"reward":6,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 6 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>6</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"0x4007":{"total":3.481,"userId":4975670,"comments":[{"id":2408968755,"content":"So when what is this spec about? Using a personal profile?","url":"https://github.com/ubiquity-os/action-deploy-plugin/issues/3#issuecomment-2408968755","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.369,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":70.50704545454548,"syllables":17,"sentences":2,"score":0.8949295454545453},"multiplier":1,"relevance":0.3}},{"id":2411711622,"content":"Dedicated GitHub Apps are always preferred.","url":"https://github.com/ubiquity-os/action-deploy-plugin/issues/3#issuecomment-2411711622","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.616,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":45.64500000000001,"syllables":11,"sentences":1,"score":0.8564500000000002},"multiplier":1,"relevance":0.8}},{"id":2383541513,"content":"QA looks good. Cant understand too much of the rest but seems fine","url":"https://github.com/ubiquity-os/action-deploy-plugin/pull/12#pullrequestreview-2383541513","commentType":"PULL_COLLABORATOR","score":{"reward":0.143,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":102.62211538461541,"syllables":15,"sentences":2,"score":1},"multiplier":1,"relevance":0.1}},{"id":1807265522,"content":"This is an interesting technique","url":"https://github.com/ubiquity-os/action-deploy-plugin/pull/12#discussion_r1807265522","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -134,39 +134,93 @@ runs:\n         app_id: ${{ env.APP_ID }}\n         private_key: ${{ env.APP_PRIVATE_KEY }}\n \n-    - name: Commit and Push changes\n+    - name: Install dependencies for GitHub Auth\n+      shell: bash\n+      run: |\n+        yarn add \"@actions/github\"\n+\n+    - name: Update manifest.json and dist folder\n       shell: bash\n       env:\n         GITHUB_TOKEN: ${{ steps.get_installation_token.outputs.token || github.token }}\n       run: |\n-        app_token=\"${{ steps.get_installation_token.outputs.token }}\" # Assuming this outputs your app token\n-        \n-        user_info=$(curl -s -H \"Authorization: token $app_token\" https://api.github.com/user)\n-        \n-        user_name=$(echo \"$user_info\" | jq -r .name)\n-        user_email=$(echo \"$user_info\" | jq -r .email)\n-        \n-        if [ \"$user_email\" == \"null\" ]; then\n-          user_email=\"ubiquity-os[bot]@users.noreply.github.com\"\n-          user_name=\"ubiquity-os[bot]\"\n-        fi\n-        \n-        # Configure Git with the retrieved user information\n-        git config --global user.name \"$user_name\"\n-        git config --global user.email \"$user_email\"\n-        git remote set-url origin https://${{ env.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git\n-        \n         git add \"${{ inputs.manifestPath }}\"\n         git add -f ${{ github.workspace }}/dist/\\*\n+        echo \"Changed files:\"\n+        echo \"$(git diff-index --cached --name-only HEAD)\"\n         if [ -n \"$(git diff-index --cached --name-only HEAD)\" ]; then\n-          git commit -m \"${{ inputs.commitMessage }}\" || echo \"Commit failed\"\n-          # Attempt to pull and resolve conflicts\n-          git pull origin ${{ github.ref_name }} || {\n-            echo \"Rebase failed, force pushing changes.\"\n-            git push --force origin HEAD:${{ github.ref_name }}\n-            exit 0\n-          }\n-          git push origin HEAD:${{ github.ref_name }}\n+          node -e \"","score":{"reward":0.195,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":32.56000000000003,"syllables":10,"sentences":1,"score":0.7256000000000004},"multiplier":1,"relevance":0.3}},{"id":1807267063,"content":"If you have to force it in CI you're doing something wrong","url":"https://github.com/ubiquity-os/action-deploy-plugin/pull/12#discussion_r1807267063","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -134,39 +134,93 @@ runs:\n         app_id: ${{ env.APP_ID }}\n         private_key: ${{ env.APP_PRIVATE_KEY }}\n \n-    - name: Commit and Push changes\n+    - name: Install dependencies for GitHub Auth\n+      shell: bash\n+      run: |\n+        yarn add \"@actions/github\"\n+\n+    - name: Update manifest.json and dist folder\n       shell: bash\n       env:\n         GITHUB_TOKEN: ${{ steps.get_installation_token.outputs.token || github.token }}\n       run: |\n-        app_token=\"${{ steps.get_installation_token.outputs.token }}\" # Assuming this outputs your app token\n-        \n-        user_info=$(curl -s -H \"Authorization: token $app_token\" https://api.github.com/user)\n-        \n-        user_name=$(echo \"$user_info\" | jq -r .name)\n-        user_email=$(echo \"$user_info\" | jq -r .email)\n-        \n-        if [ \"$user_email\" == \"null\" ]; then\n-          user_email=\"ubiquity-os[bot]@users.noreply.github.com\"\n-          user_name=\"ubiquity-os[bot]\"\n-        fi\n-        \n-        # Configure Git with the retrieved user information\n-        git config --global user.name \"$user_name\"\n-        git config --global user.email \"$user_email\"\n-        git remote set-url origin https://${{ env.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git\n-        \n         git add \"${{ inputs.manifestPath }}\"\n         git add -f ${{ github.workspace }}/dist/\\*\n+        echo \"Changed files:\"\n+        echo \"$(git diff-index --cached --name-only HEAD)\"\n         if [ -n \"$(git diff-index --cached --name-only HEAD)\" ]; then\n-          git commit -m \"${{ inputs.commitMessage }}\" || echo \"Commit failed\"\n-          # Attempt to pull and resolve conflicts\n-          git pull origin ${{ github.ref_name }} || {\n-            echo \"Rebase failed, force pushing changes.\"\n-            git push --force origin HEAD:${{ github.ref_name }}\n-            exit 0\n-          }\n-          git push origin HEAD:${{ github.ref_name }}\n+          node -e \"\n+            const fs = require('fs');\n+            const path = require('path');\n+            const github = require('@actions/github');\n+            const manifestPath = path.relative('.', '${{ inputs.manifestPath }}');\n+\n+            async function pushChanges() {\n+              const octokit = github.getOctokit(process.env.GITHUB_TOKEN);\n+\n+              const context = github.context;\n+              const owner = context.repo.owner;\n+              const repo = context.repo.repo;\n+              const ref = 'heads/${{ github.ref_name }}';\n+\n+              try {\n+                const currentCommit = await octokit.rest.git.getRef({\n+                  owner,\n+                  repo,\n+                  ref\n+                });\n+\n+                const newTree = await octokit.rest.git.createTree({\n+                  owner,\n+                  repo,\n+                  base_tree: currentCommit.data.object.sha,\n+                  tree: [\n+                    {\n+                      path: manifestPath,\n+                      mode: '100644',\n+                      type: 'blob',\n+                      content: fs.readFileSync(manifestPath, 'utf8'),\n+                    },\n+                    ...fs.readdirSync('${{ github.workspace }}/dist').map((file) => {\n+                        const relativePath = path.relative('.', '${{ github.workspace }}/dist/' + file);\n+                        return {\n+                          path: relativePath,\n+                          mode: '100644',\n+                          type: 'blob',\n+                          content: fs.readFileSync(\n+                          '${{ github.workspace }}/dist/' + file,\n+                          'utf-8',\n+                        ),\n+                      };\n+                    }),\n+                  ],\n+                });\n+\n+                const newCommit = await octokit.rest.git.createCommit({\n+                  owner,\n+                  repo,\n+                  message: '${{ inputs.commitMessage }}',\n+                  tree: newTree.data.sha,\n+                  parents: [currentCommit.data.object.sha]\n+                });\n+\n+                await octokit.rest.git.updateRef({\n+                  owner,\n+                  repo,\n+                  ref,\n+                  sha: newCommit.data.sha,\n+                  force: true","score":{"reward":1.048,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":96.02461538461542,"syllables":15,"sentences":1,"score":0.6397538461538459},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2379324027,"effect":{"addition":83,"deletion":27},"reward":1.1,"priority":1},{"reviewId":2383541513,"effect":{"addition":1,"deletion":0},"reward":0.01,"priority":1}],"url":"https://github.com/ubiquity-os/action-deploy-plugin/pull/12"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 3.481 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>1.11</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>0.985</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>1.386</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/action-deploy-plugin/pull/12\" target=\"_blank\" rel=\"noopener\">#12</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+83 -27</td><td>1</td><td>1.1</td></tr><tr><td>+1 -0</td><td>1</td><td>0.01</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/action-deploy-plugin/issues/3#issuecomment-2408968755\" target=\"_blank\" rel=\"noopener\">So when what is this spec about? Using a personal profile?</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.369</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/action-deploy-plugin/issues/3#issuecomment-2411711622\" target=\"_blank\" rel=\"noopener\">Dedicated GitHub Apps are always preferred.</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.616</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/action-deploy-plugin/pull/12#pullrequestreview-2383541513\" target=\"_blank\" rel=\"noopener\">QA looks good. Cant understand too much of the rest but seems fi&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.143</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/action-deploy-plugin/pull/12#discussion_r1807265522\" target=\"_blank\" rel=\"noopener\">This is an interesting technique</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.195</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/action-deploy-plugin/pull/12#discussion_r1807267063\" target=\"_blank\" rel=\"noopener\">If you have to force it in CI you're doing something wrong</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.048</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_96.json","json":{"whilefoo":{"userId":139262667,"total":202.47,"task":{"reward":200,"multiplier":1},"comments":[{"id":2489712438,"content":"SDK is currently only available for Worker plugins, but it should also be made for Action plugins, additionally we should handle posting error comment inside the SDK so that all plugins will have it.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/96","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.47,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":35.47205882352944,"syllables":55,"sentences":1,"score":0.7547205882352944},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 202.47 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>200</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.47</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/96\" target=\"_blank\" rel=\"noopener\">SDK is currently only available for Worker plugins, but it shoul&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>1</td><td>1</td><td>2.47</td></tr></tbody></table></details>"},"0x4007":{"total":23.678,"userId":4975670,"comments":[{"id":2351740267,"content":"Well, that's weird. I cleared your access","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/96#issuecomment-2351740267","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":107.60000000000001,"syllables":9,"sentences":2,"score":1},"multiplier":1,"relevance":0}},{"id":2351788178,"content":"I migrated the wallets a long time ago in the database manually and shifted some over by some rows on accident. That's the only thing I can think of related to these discrepancies.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/96#issuecomment-2351788178","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":70.14470588235295,"syllables":48,"sentences":2,"score":0.8985529411764704},"multiplier":1,"relevance":0}},{"id":2351893693,"content":"You haven't claimed any permits since like last year?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/96#issuecomment-2351893693","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":95.165,"syllables":12,"sentences":1,"score":0.64835},"multiplier":1,"relevance":0}},{"id":1749323837,"content":"@Whilefoo can you confirm that `APP_ID` can be used to target bot comments? As you may be aware, we have that open pull request by keyrxng which claims that this doesn't work.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1749323837","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -8,3 +8,4 @@ dkRj2Je2kag9b3FMxskv1npNSrPVcSc5lGNYlnZnfxIAnCknOC118JjitlrpT6wd\n 8wIDAQAB\n -----END PUBLIC KEY-----\n `;\n+export const KERNEL_APP_ID = 0;","score":{"reward":3.346,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":84.845,"syllables":40,"sentences":2,"score":0.75155},"multiplier":1,"relevance":0.7}},{"id":1752001234,"content":"```suggestion\r\n    \"@ubiquity-dao/ubiquibot-logger\": \"*\",\r\n```\r\nWe should do this until things are stable.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1752001234","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -58,7 +60,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.0\",\n+    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.1\",","score":{"reward":1.638,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.9}},{"id":1752997959,"content":"1.x is fine\nThe point is to catch problems as soon as they occur. Testing in production is the fastest way to tighten our feedback loop. Realistically we would notice the problem and triage likely within 12 hours max. Realistically, pretty much immediately.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1752997959","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -58,7 +60,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.0\",\n+    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.1\",","score":{"reward":3.516,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":63.312090909090955,"syllables":70,"sentences":5,"score":0.9668790909090904},"multiplier":1,"relevance":0.6}},{"id":1753035805,"content":"Can always revert in case of emergency. It takes a few seconds.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753035805","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -58,7 +60,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.0\",\n+    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.1\",","score":{"reward":1.048,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":73.84500000000001,"syllables":18,"sentences":2,"score":0.8615499999999998},"multiplier":1,"relevance":0.4}},{"id":1753039196,"content":"Would be pretty funny to automatically delete the latest on fatal crash. Almost like genetic algorithms.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753039196","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -58,7 +60,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.0\",\n+    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.1\",","score":{"reward":0.31,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":34.80250000000001,"syllables":31,"sentences":2,"score":0.748025},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":2288586303,"effect":{"addition":515,"deletion":96},"reward":12.22,"priority":2},{"reviewId":2292569195,"effect":{"addition":73,"deletion":7},"reward":1.6,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 23.678 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>13.82</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>0</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>9.858</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100\" target=\"_blank\" rel=\"noopener\">#100</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+515 -96</td><td>2</td><td>12.22</td></tr><tr><td>+73 -7</td><td>2</td><td>1.6</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/96#issuecomment-2351740267\" target=\"_blank\" rel=\"noopener\">Well, that's weird. I cleared your access</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/96#issuecomment-2351788178\" target=\"_blank\" rel=\"noopener\">I migrated the wallets a long time ago in the database manually &hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/96#issuecomment-2351893693\" target=\"_blank\" rel=\"noopener\">You haven't claimed any permits since like last year?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1749323837\" target=\"_blank\" rel=\"noopener\">@Whilefoo can you confirm that &#96;APP_ID&#96; can be used to t&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.7</td><td>2</td><td>3.346</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1752001234\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"@ubiquity-dao/ubiquibot-logger\":&hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.638</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1752997959\" target=\"_blank\" rel=\"noopener\">1.x is fineThe point is to catch problems as soon as they occur&hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 44&#13;  wordValue: 0.1&#13;  result: 2.27&#13;</pre></details></td><td>0.6</td><td>2</td><td>3.516</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753035805\" target=\"_blank\" rel=\"noopener\">Can always revert in case of emergency. It takes a few seconds.</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.4</td><td>2</td><td>1.048</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753039196\" target=\"_blank\" rel=\"noopener\">Would be pretty funny to automatically delete the latest on fata&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.31</td></tr></tbody></table></details>"},"gentlementlegen":{"total":48.85,"userId":9807008,"comments":[{"id":2300874086,"content":"Fine with the changes. Eager to see it used in our plugins!","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#pullrequestreview-2300874086","commentType":"PULL_COLLABORATOR","score":{"reward":0.81,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":102.045,"syllables":14,"sentences":2,"score":1},"multiplier":1,"relevance":0.3}},{"id":1744631178,"content":"Might be better to pin dependencies.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1744631178","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -48,6 +48,8 @@\n     \"open-source\"\n   ],\n   \"dependencies\": {\n+    \"@actions/core\": \"^1.10.1\",","score":{"reward":1.106,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":59.745000000000005,"syllables":10,"sentences":1,"score":0.9974500000000001},"multiplier":1,"relevance":0.7}},{"id":1744631489,"content":"```suggestion\r\nconfig();\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1744631489","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,116 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Context } from \"./context\";\n+import { customOctokit } from \"./octokit\";\n+import { EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n+import { Logs, LogLevel, LOG_LEVEL, LogReturn } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { config } from \"dotenv\";\n+import { Type as T, TAnySchema } from \"@sinclair/typebox\";\n+import { Value } from \"@sinclair/typebox/value\";\n+import { sanitizeMetadata } from \"./util\";\n+config();","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":2,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.8}},{"id":1744632073,"content":"Shouldn't the logger be used instead of console?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1744632073","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,116 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Context } from \"./context\";\n+import { customOctokit } from \"./octokit\";\n+import { EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n+import { Logs, LogLevel, LOG_LEVEL, LogReturn } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { config } from \"dotenv\";\n+import { Type as T, TAnySchema } from \"@sinclair/typebox\";\n+import { Value } from \"@sinclair/typebox/value\";\n+import { sanitizeMetadata } from \"./util\";\n+config();\n+\n+interface Options {\n+  logLevel?: LogLevel;\n+  postCommentOnError?: boolean;\n+  settingsSchema?: TAnySchema;\n+  envSchema?: TAnySchema;\n+}\n+\n+const inputSchema = T.Object({\n+  stateId: T.String(),\n+  eventName: T.String(),\n+  eventPayload: T.String(),\n+  authToken: T.String(),\n+  settings: T.String(),\n+  ref: T.String(),\n+});\n+\n+export async function createActionsPlugin<TConfig = unknown, TEnv = unknown, TSupportedEvents extends WebhookEventName = WebhookEventName>(\n+  handler: (context: Context<TConfig, TEnv, TSupportedEvents>) => Promise<Record<string, unknown> | undefined>,\n+  options?: Options\n+) {\n+  const pluginOptions = {\n+    logLevel: options?.logLevel || LOG_LEVEL.INFO,\n+    postCommentOnError: options?.postCommentOnError || true,\n+    settingsSchema: options?.settingsSchema,\n+    envSchema: options?.envSchema,\n+  };\n+\n+  const inputs = Value.Decode(inputSchema, github.context.payload.inputs);\n+\n+  let config: TConfig;\n+  if (pluginOptions.settingsSchema) {\n+    config = Value.Decode(pluginOptions.settingsSchema, JSON.parse(inputs.settings));\n+  } else {\n+    config = JSON.parse(inputs.settings) as TConfig;\n+  }\n+\n+  let env: TEnv;\n+  if (pluginOptions.envSchema) {\n+    env = Value.Decode(pluginOptions.envSchema, process.env);\n+  } else {\n+    env = process.env as TEnv;\n+  }\n+\n+  const context: Context<TConfig, TEnv, TSupportedEvents> = {\n+    eventName: inputs.eventName as TSupportedEvents,\n+    payload: JSON.parse(inputs.eventPayload),\n+    octokit: new customOctokit({ auth: inputs.authToken }),\n+    config: config,\n+    env: env,\n+    logger: new Logs(pluginOptions.logLevel),\n+  };\n+\n+  try {\n+    const result = await handler(context);\n+    core.setOutput(\"result\", result);\n+    await returnDataToKernel(inputs.authToken, inputs.stateId, result);\n+  } catch (error) {\n+    console.error(error);","score":{"reward":1.89,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.50000000000003,"syllables":13,"sentences":1,"score":0.8449999999999998},"multiplier":1,"relevance":0.9}},{"id":1744633570,"content":"How is this value supposed to be set when using the SDK?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1744633570","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -8,3 +8,4 @@ dkRj2Je2kag9b3FMxskv1npNSrPVcSc5lGNYlnZnfxIAnCknOC118JjitlrpT6wd\n 8wIDAQAB\n -----END PUBLIC KEY-----\n `;\n+export const KERNEL_APP_ID = 0;","score":{"reward":2.016,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":88.905,"syllables":15,"sentences":1,"score":0.71095},"multiplier":1,"relevance":0.8}},{"id":1747162547,"content":"Got it. Shouldn't we set the value now instead of 0?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1747162547","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -8,3 +8,4 @@ dkRj2Je2kag9b3FMxskv1npNSrPVcSc5lGNYlnZnfxIAnCknOC118JjitlrpT6wd\n 8wIDAQAB\n -----END PUBLIC KEY-----\n `;\n+export const KERNEL_APP_ID = 0;","score":{"reward":1.89,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":102.045,"syllables":14,"sentences":2,"score":1},"multiplier":1,"relevance":0.7}},{"id":1747166492,"content":"I think it is important to log to understand within the plug-in itself what went wrong. Console would work inside of workers and actions so I guess it's fine.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1747166492","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,116 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Context } from \"./context\";\n+import { customOctokit } from \"./octokit\";\n+import { EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n+import { Logs, LogLevel, LOG_LEVEL, LogReturn } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { config } from \"dotenv\";\n+import { Type as T, TAnySchema } from \"@sinclair/typebox\";\n+import { Value } from \"@sinclair/typebox/value\";\n+import { sanitizeMetadata } from \"./util\";\n+config();\n+\n+interface Options {\n+  logLevel?: LogLevel;\n+  postCommentOnError?: boolean;\n+  settingsSchema?: TAnySchema;\n+  envSchema?: TAnySchema;\n+}\n+\n+const inputSchema = T.Object({\n+  stateId: T.String(),\n+  eventName: T.String(),\n+  eventPayload: T.String(),\n+  authToken: T.String(),\n+  settings: T.String(),\n+  ref: T.String(),\n+});\n+\n+export async function createActionsPlugin<TConfig = unknown, TEnv = unknown, TSupportedEvents extends WebhookEventName = WebhookEventName>(\n+  handler: (context: Context<TConfig, TEnv, TSupportedEvents>) => Promise<Record<string, unknown> | undefined>,\n+  options?: Options\n+) {\n+  const pluginOptions = {\n+    logLevel: options?.logLevel || LOG_LEVEL.INFO,\n+    postCommentOnError: options?.postCommentOnError || true,\n+    settingsSchema: options?.settingsSchema,\n+    envSchema: options?.envSchema,\n+  };\n+\n+  const inputs = Value.Decode(inputSchema, github.context.payload.inputs);\n+\n+  let config: TConfig;\n+  if (pluginOptions.settingsSchema) {\n+    config = Value.Decode(pluginOptions.settingsSchema, JSON.parse(inputs.settings));\n+  } else {\n+    config = JSON.parse(inputs.settings) as TConfig;\n+  }\n+\n+  let env: TEnv;\n+  if (pluginOptions.envSchema) {\n+    env = Value.Decode(pluginOptions.envSchema, process.env);\n+  } else {\n+    env = process.env as TEnv;\n+  }\n+\n+  const context: Context<TConfig, TEnv, TSupportedEvents> = {\n+    eventName: inputs.eventName as TSupportedEvents,\n+    payload: JSON.parse(inputs.eventPayload),\n+    octokit: new customOctokit({ auth: inputs.authToken }),\n+    config: config,\n+    env: env,\n+    logger: new Logs(pluginOptions.logLevel),\n+  };\n+\n+  try {\n+    const result = await handler(context);\n+    core.setOutput(\"result\", result);\n+    await returnDataToKernel(inputs.authToken, inputs.stateId, result);\n+  } catch (error) {\n+    console.error(error);","score":{"reward":3.6,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":76.48314516129035,"syllables":42,"sentences":2,"score":0.8351685483870965},"multiplier":1,"relevance":0.75}},{"id":1752996183,"content":"I think this is a really bad idea considering that major version imply breaking changes and would break the whole project. What would be better would be `\"1.x\"` so only minor and patches are taken into account.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1752996183","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -58,7 +60,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.0\",\n+    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.1\",","score":{"reward":5.073,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":64.015,"syllables":53,"sentences":2,"score":0.95985},"multiplier":1,"relevance":0.95}},{"id":1753025700,"content":"Yes but in this case that would break all the plugins that worked on a given version, which seems pretty heavy collateral damage for a bug because it would mean all plugins are broken until a fix is provided.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753025700","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -58,7 +60,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.0\",\n+    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.1\",","score":{"reward":4.675,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":52.28076923076924,"syllables":53,"sentences":1,"score":0.9228076923076923},"multiplier":1,"relevance":0.85}},{"id":1753037676,"content":"We cannot revert, we should delete the latest deployed version on `npm` instead.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753037676","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -58,7 +60,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.0\",\n+    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.1\",","score":{"reward":2.16,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":60.70500000000001,"syllables":19,"sentences":1,"score":0.9929499999999999},"multiplier":1,"relevance":0.8}},{"id":1753043626,"content":"This would imply that all plugins have access to `npm` publishing, and all would have to rebuild themselves. That is also why I am against using wildcards on packages, because maybe one version works fine for a plugin but the other crashes, which means on an revert maybe both plugins then crash. Also during the time we delete the latest version, all the plugins importing this package might break. When we pin packages only the erroneous plugin would break.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753043626","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -58,7 +60,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.0\",\n+    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.1\",","score":{"reward":6.066,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":78,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":66.65019230769234,"syllables":111,"sentences":4,"score":0.9334980769230766},"multiplier":1,"relevance":0.9}},{"id":1756080054,"content":"Very likely. Still means that we would have to fix it before any other update is done.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1756080054","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -58,7 +60,7 @@\n     \"@octokit/webhooks\": \"13.2.8\",\n     \"@octokit/webhooks-types\": \"7.5.1\",\n     \"@sinclair/typebox\": \"0.32.35\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.0\",\n+    \"@ubiquity-dao/ubiquibot-logger\": \"1.3.1\",","score":{"reward":1.62,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":83.74867647058825,"syllables":23,"sentences":2,"score":0.7625132352941175},"multiplier":1,"relevance":0.5}},{"id":1756906982,"content":"We might want to log a message if the issue is missing, to avoid confusion on why nothing happened when trying to post a comment.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1756906982","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,117 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Context } from \"./context\";\n+import { customOctokit } from \"./octokit\";\n+import { EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n+import { Logs, LogLevel, LOG_LEVEL, LogReturn } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { config } from \"dotenv\";\n+import { Type as T, TAnySchema } from \"@sinclair/typebox\";\n+import { Value } from \"@sinclair/typebox/value\";\n+import { sanitizeMetadata } from \"./util\";\n+\n+config();\n+\n+interface Options {\n+  logLevel?: LogLevel;\n+  postCommentOnError?: boolean;\n+  settingsSchema?: TAnySchema;\n+  envSchema?: TAnySchema;\n+}\n+\n+const inputSchema = T.Object({\n+  stateId: T.String(),\n+  eventName: T.String(),\n+  eventPayload: T.String(),\n+  authToken: T.String(),\n+  settings: T.String(),\n+  ref: T.String(),\n+});\n+\n+export async function createActionsPlugin<TConfig = unknown, TEnv = unknown, TSupportedEvents extends WebhookEventName = WebhookEventName>(\n+  handler: (context: Context<TConfig, TEnv, TSupportedEvents>) => Promise<Record<string, unknown> | undefined>,\n+  options?: Options\n+) {\n+  const pluginOptions = {\n+    logLevel: options?.logLevel || LOG_LEVEL.INFO,\n+    postCommentOnError: options?.postCommentOnError || true,\n+    settingsSchema: options?.settingsSchema,\n+    envSchema: options?.envSchema,\n+  };\n+\n+  const inputs = Value.Decode(inputSchema, github.context.payload.inputs);\n+\n+  let config: TConfig;\n+  if (pluginOptions.settingsSchema) {\n+    config = Value.Decode(pluginOptions.settingsSchema, JSON.parse(inputs.settings));\n+  } else {\n+    config = JSON.parse(inputs.settings) as TConfig;\n+  }\n+\n+  let env: TEnv;\n+  if (pluginOptions.envSchema) {\n+    env = Value.Decode(pluginOptions.envSchema, process.env);\n+  } else {\n+    env = process.env as TEnv;\n+  }\n+\n+  const context: Context<TConfig, TEnv, TSupportedEvents> = {\n+    eventName: inputs.eventName as TSupportedEvents,\n+    payload: JSON.parse(inputs.eventPayload),\n+    octokit: new customOctokit({ auth: inputs.authToken }),\n+    config: config,\n+    env: env,\n+    logger: new Logs(pluginOptions.logLevel),\n+  };\n+\n+  try {\n+    const result = await handler(context);\n+    core.setOutput(\"result\", result);\n+    await returnDataToKernel(inputs.authToken, inputs.stateId, result);\n+  } catch (error) {\n+    console.error(error);\n+\n+    let loggerError: LogReturn | null;\n+    if (error instanceof Error) {\n+      core.setFailed(error);\n+      loggerError = context.logger.error(`Error: ${error}`, { error: error });\n+    } else if (error instanceof LogReturn) {\n+      core.setFailed(error.logMessage.raw);\n+      loggerError = error;\n+    } else {\n+      core.setFailed(`Error: ${error}`);\n+      loggerError = context.logger.error(`Error: ${error}`);\n+    }\n+\n+    if (pluginOptions.postCommentOnError && loggerError) {\n+      await postComment(context, loggerError);\n+    }\n+  }\n+}\n+\n+async function postComment(context: Context, error: LogReturn) {\n+  if (\"issue\" in context.payload && context.payload.repository?.owner?.login) {","score":{"reward":3.924,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":66.40400000000001,"syllables":34,"sentences":1,"score":0.9359599999999999},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2281603861,"effect":{"addition":514,"deletion":77},"reward":11.82,"priority":2},{"reviewId":2286331908,"effect":{"addition":3,"deletion":21},"reward":0.48,"priority":2},{"reviewId":2294766414,"effect":{"addition":73,"deletion":7},"reward":1.6,"priority":2},{"reviewId":2300373387,"effect":{"addition":1,"deletion":1},"reward":0.04,"priority":2},{"reviewId":2300874086,"effect":{"addition":4,"deletion":0},"reward":0.08,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 48.85 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>5</td><td>14.02</td></tr><tr><td>Review</td><td>Comment</td><td>13</td><td>34.83</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100\" target=\"_blank\" rel=\"noopener\">#100</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+514 -77</td><td>2</td><td>11.82</td></tr><tr><td>+3 -21</td><td>2</td><td>0.48</td></tr><tr><td>+73 -7</td><td>2</td><td>1.6</td></tr><tr><td>+1 -1</td><td>2</td><td>0.04</td></tr><tr><td>+4 -0</td><td>2</td><td>0.08</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#pullrequestreview-2300874086\" target=\"_blank\" rel=\"noopener\">Fine with the changes. Eager to see it used in our plugins!</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.3</td><td>2</td><td>0.81</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1744631178\" target=\"_blank\" rel=\"noopener\">Might be better to pin dependencies.</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.106</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1744631489\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionconfig();&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1744632073\" target=\"_blank\" rel=\"noopener\">Shouldn't the logger be used instead of console?</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.89</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1744633570\" target=\"_blank\" rel=\"noopener\">How is this value supposed to be set when using the SDK?</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.016</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1747162547\" target=\"_blank\" rel=\"noopener\">Got it. Shouldn't we set the value now instead of 0?</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.89</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1747166492\" target=\"_blank\" rel=\"noopener\">I think it is important to log to understand within the plug-in &hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.75</td><td>2</td><td>3.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1752996183\" target=\"_blank\" rel=\"noopener\">I think this is a really bad idea considering that major version&hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.95</td><td>2</td><td>5.073</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753025700\" target=\"_blank\" rel=\"noopener\">Yes but in this case that would break all the plugins that worke&hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.85</td><td>2</td><td>4.675</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753037676\" target=\"_blank\" rel=\"noopener\">We cannot revert, we should delete the latest deployed version o&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.16</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1753043626\" target=\"_blank\" rel=\"noopener\">This would imply that all plugins have access to &#96;npm&#96; p&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 78&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>2</td><td>6.066</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1756080054\" target=\"_blank\" rel=\"noopener\">Very likely. Still means that we would have to fix it before any&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.5</td><td>2</td><td>1.62</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1756906982\" target=\"_blank\" rel=\"noopener\">We might want to log a message if the issue is missing, to avoid&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.9</td><td>2</td><td>3.924</td></tr></tbody></table></details>"},"Keyrxng":{"total":15.212,"userId":106303466,"comments":[{"id":1743614822,"content":"From one of my QA comments:\r\n```\r\n\\`\\`\\`diff\r\n! keyrxng2 you were previously unassigned from this task. You cannot reassign yourself.\r\n\\`\\`\\`\r\n```\r\nWe do get a full error stack trace in the worker/action logs... `caller:` is the function which the error happened in right so it would be whatever fn name is for caller and then whatever metadata object gets passed to the logger should also be commented. But we should also have a full stack trace being commented as well?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1743614822","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -104,6 +138,19 @@ describe(\"SDK tests\", () => {\n       method: \"POST\",\n     });\n     expect(res.status).toEqual(500);\n+    expect(createComment).toHaveBeenCalledWith({\n+      issue_number: 5,\n+      owner: \"ubiquibot\",\n+      repo: \"bot\",\n+      body: `\\`\\`\\`diff\n+! test error\n+\\`\\`\\`\n+<!--\n+{\n+  \"caller\": \"error\"\n+}\n+-->`,\n+    });","score":{"reward":0.972,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":2,"words":{"wordCount":65,"wordValue":0.1,"result":2.56},"readability":{"fleschKincaid":72.91102564102565,"syllables":86,"sentences":3,"score":0.8708897435897436},"multiplier":0.25,"relevance":0.6}},{"id":1743700660,"content":"Usually it would say `caller: <Anon..>` as far as I have seen. \r\nBelow is what `start-stop` looks like handling errors from bottom to top.\r\n![image](https://github.com/user-attachments/assets/ebcfb1f7-29c7-4823-bb2d-c5ce924c8020)","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1743700660","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -104,6 +138,19 @@ describe(\"SDK tests\", () => {\n       method: \"POST\",\n     });\n     expect(res.status).toEqual(500);\n+    expect(createComment).toHaveBeenCalledWith({\n+      issue_number: 5,\n+      owner: \"ubiquibot\",\n+      repo: \"bot\",\n+      body: `\\`\\`\\`diff\n+! test error\n+\\`\\`\\`\n+<!--\n+{\n+  \"caller\": \"error\"\n+}\n+-->`,\n+    });","score":{"reward":0.368,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":2,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":87.40607142857144,"syllables":27,"sentences":2,"score":0.7259392857142857},"multiplier":0.25,"relevance":0.4}},{"id":1743704840,"content":"```ts\r\nif (err instanceof Error) {\r\n      errorMessage = context.logger.error(err.message, { error: err });\r\n```\r\nWe are recreating the error because we are doing `throw new Error()` vs `throw logger.error`, so really the bubble-up approach needs to be that inner-functions throw `logger.error` so we get the `LogReturn` in the topmost catch and then we post that directly. The stack is getting wiped from the original point of failure and disguised as being at the worker entry, I think anyway I guess it needs looked into more\r\n---\r\nhttps://github.com/ubiquity/ubiquibot-logger/pull/35 I've replaced `caller` in this PR to be the name of the plugin just before we post to Supabase, the idea being that seeing the fn name without knowing the plugin in the DB would be terrible. The worker/action/comment logs would all have the fn name still.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1743704840","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -104,6 +138,19 @@ describe(\"SDK tests\", () => {\n       method: \"POST\",\n     });\n     expect(res.status).toEqual(500);\n+    expect(createComment).toHaveBeenCalledWith({\n+      issue_number: 5,\n+      owner: \"ubiquibot\",\n+      repo: \"bot\",\n+      body: `\\`\\`\\`diff\n+! test error\n+\\`\\`\\`\n+<!--\n+{\n+  \"caller\": \"error\"\n+}\n+-->`,\n+    });","score":{"reward":2.052,"formatting":{"content":{"p":{"score":0,"elementCount":2},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":115,"wordValue":0.1,"result":2.52},"readability":{"fleschKincaid":59.3847256097561,"syllables":169,"sentences":4,"score":0.9938472560975611},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2279886162,"effect":{"addition":514,"deletion":77},"reward":11.82,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 15.212 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>11.82</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>3.392</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100\" target=\"_blank\" rel=\"noopener\">#100</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+514 -77</td><td>2</td><td>11.82</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1743614822\" target=\"_blank\" rel=\"noopener\">From one of my QA comments:&#96;&#96;&#96;\\&#96;\\&#96;\\&#96;&hellip;</a></h6></td><td><details><summary>2.56</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 65&#13;  wordValue: 0.1&#13;  result: 2.56&#13;</pre></details></td><td>0.6</td><td>2</td><td>0.972</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1743700660\" target=\"_blank\" rel=\"noopener\">Usually it would say &#96;caller: &lt;Anon..&gt;&#96; as far as &hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.4</td><td>2</td><td>0.368</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/100#discussion_r1743704840\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;tsif (err instanceof Error) {errorMessa&hellip;</a></h6></td><td><details><summary>3.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 115&#13;  wordValue: 0.1&#13;  result: 2.52&#13;</pre></details></td><td>0.9</td><td>2</td><td>2.052</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-template_33.json","json":{"gentlementlegen":{"userId":9807008,"total":154.983,"task":{"reward":150,"multiplier":1},"comments":[{"id":2500234900,"content":"How do we deal with plugins that offers both Actions and Workers like the telegram chatroom?","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2500234900","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":68.9825,"syllables":23,"sentences":1,"score":0.910175},"multiplier":0.25,"relevance":0.9}},{"id":2504573651,"content":"Sure, we only have one edge case so far. Maybe we can think of an option later like \"install as Worker\" and \"install as Action\". We can safely introduce the url property in the meantime.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2504573651","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.536,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":76.55333333333336,"syllables":49,"sentences":3,"score":0.8344666666666665},"multiplier":0.25,"relevance":0.8}},{"id":2542835249,"content":"The problem is that the plugin installer cannot guess the URL to put it in the configuration which is the problem. It only knows the GitHub repository. One workaround would be if we had deployment urls linked within the github repo we could use these.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2542835249","commentType":"ISSUE_ASSIGNEE","score":{"reward":2.22,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":63.770000000000024,"syllables":68,"sentences":3,"score":0.9622999999999997},"multiplier":0.25,"relevance":1}},{"id":2547910122,"content":"The schema for start/stop has changed and it is not up to date here which is why the command didn't work. fixing.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2547910122","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.147,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":99.48,"syllables":27,"sentences":2,"score":0.6052},"multiplier":0.25,"relevance":0.1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 154.983 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>4.983</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2500234900\" target=\"_blank\" rel=\"noopener\">How do we deal with plugins that offers both Actions and Workers&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.9</td><td>3</td><td>1.08</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2504573651\" target=\"_blank\" rel=\"noopener\">Sure, we only have one edge case so far. Maybe we can think of a&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.536</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2542835249\" target=\"_blank\" rel=\"noopener\">The problem is that the plugin installer cannot guess the URL to&hellip;</a></h6></td><td><details><summary>2.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>1</td><td>3</td><td>2.22</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2547910122\" target=\"_blank\" rel=\"noopener\">The schema for start/stop has changed and it is not up to date h&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.147</td></tr></tbody></table></details>"},"rndquu":{"total":76.641,"userId":119500907,"comments":[{"id":2500109744,"content":"@gentlementlegen Pls check the description","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2500109744","commentType":"ISSUE_AUTHOR","score":{"reward":0.744,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":15.640000000000015,"syllables":11,"sentences":1,"score":0.5564000000000001},"multiplier":1,"relevance":0.4}},{"id":2500298342,"content":"I don't have much context on the telegram kernel but it seems the plugin architecture must be optimized if it requires both github action and a worker.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2500298342","commentType":"ISSUE_AUTHOR","score":{"reward":4.158,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":51.51500000000003,"syllables":42,"sentences":1,"score":0.9151500000000002},"multiplier":1,"relevance":0.6}},{"id":2504274646,"content":"@gentlementlegen I need you blessing on this task.\r\nI think plugins that work both as a worker and a github action are outliers and it's safe to introduce the `url` property in the `manifest.json` file.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2504274646","commentType":"ISSUE_AUTHOR","score":{"reward":6.168,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":67.65647058823532,"syllables":49,"sentences":2,"score":0.9234352941176468},"multiplier":1,"relevance":0.8}},{"id":2511519691,"content":"If the `url` property is present in the `manifest.json` file then it's a worker\r\n@Keyrxng knows better","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2511519691","commentType":"ISSUE_AUTHOR","score":{"reward":3.84,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":74.27000000000001,"syllables":22,"sentences":1,"score":0.8573},"multiplier":1,"relevance":0.8}},{"id":2540825445,"content":"How to get a plugin URL for a 3rd party plugin created by some other developer?","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2540825445","commentType":"ISSUE_AUTHOR","score":{"reward":4.374,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":68.9825,"syllables":23,"sentences":1,"score":0.910175},"multiplier":1,"relevance":0.9}},{"id":2547815066,"content":"Then we also have to force partners to setup github deployment URLs which might not be the too convenient for them.\r\nA single `url` property is basically a \"set and forget\" approach when partners set plugin URL in the `manifest.json` only once to the production URL and never(?) get back to it.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2547815066","commentType":"ISSUE_AUTHOR","score":{"reward":8.208,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":68.09433333333337,"syllables":72,"sentences":3,"score":0.9190566666666663},"multiplier":1,"relevance":0.9}},{"id":2550566177,"content":"Added 2 tasks, for the kernel and UI installer:\r\n- https://github.com/ubiquity-os/ubiquity-os-kernel/issues/224\r\n- https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/39","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2550566177","commentType":"ISSUE_AUTHOR","score":{"reward":8.064,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2.2},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":47.22500000000002,"syllables":53,"sentences":3,"score":0.8722500000000002},"multiplier":1,"relevance":0.7}},{"id":2551048688,"content":"https://github.com/ubiquity-os-marketplace/text-vector-embeddings ?","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2551048688","commentType":"ISSUE_AUTHOR","score":{"reward":1.83,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":33.067500000000024,"syllables":18,"sentences":2,"score":0.7306750000000002},"multiplier":1,"relevance":0.5}},{"id":2551065786,"content":"Right now it is [set as a worker](https://github.com/ubiquity-os/.ubiquity-os/blob/67df7f5643edcaa3899304481f7ff4ef74a1041a/.github/.ubiquity-os.config.dev.yml#L3)","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2551065786","commentType":"ISSUE_AUTHOR","score":{"reward":4.122,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":103.54,"syllables":9,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":2551232946,"content":"In other orgs it's set as a worker ([one](https://github.com/ubiquity/.ubiquity-os/blob/51a65e28cc7bf94ff07907c115c7b6d9c9d84777/.github/.ubiquity-os.config.yml#L405), [two](https://github.com/ubiquity-os/.ubiquity-os/blob/67df7f5643edcaa3899304481f7ff4ef74a1041a/.github/.ubiquity-os.config.dev.yml#L3)).\r\n@sshivaditya2019 How should https://github.com/ubiquity-os-marketplace/text-vector-embeddings plugin be set, as a worker or a github action? Or it doesn't matter?\r\nOverall, as far as I remember, the general concept was that for \"easy\" plugins that run fast we use workers while for long running plugins we use github actions. https://github.com/ubiquity-os-marketplace/text-vector-embeddings basically saves data to a DB on a request so it falls in the \"easy\" plugins section.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2551232946","commentType":"ISSUE_AUTHOR","score":{"reward":15.267,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":3}},"result":3},"priority":3,"words":{"wordCount":75,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":62.35645161290327,"syllables":144,"sentences":7,"score":0.9764354838709672},"multiplier":1,"relevance":0.7}},{"id":2693878291,"content":"We need to know an exact plugin URL (in case it works as a cloudflare worker) in order to set it in the partner [onboarding](https://github.com/ubiquity-os/ubiquity-os-plugin-installer) UI.\r\nWhat should be done:\r\n1. Add a new optional `url` property to [manifest.json](https://github.com/ubiquity-os/plugin-template/blob/8d8f06958ca1273f299ae0bc2a51a6c512411af9/manifest.json)\r\n2. Update the [worker-deploy.yml](https://github.com/ubiquity-os/plugin-template/blob/8d8f06958ca1273f299ae0bc2a51a6c512411af9/.github/workflows/worker-deploy.yml) workflow to set the `url` property in `manifest.json` on each deployment of the `development` branch. I think it's enough for now to use the `development` plugin instances + https://github.com/ubiquity-os/ubiquity-os-plugin-installer will simply have to fetch a default plugin's github branch in order to get a plugin URL.\r\n3. Make sure all plugins from https://github.com/ubiquity-os-marketplace have the `url` property set in the `manifest.json` file and updated [worker-deploy.yml](https://github.com/ubiquity-os/plugin-template/blob/8d8f06958ca1273f299ae0bc2a51a6c512411af9/.github/workflows/worker-deploy.yml) workflow\r\nOriginal [comment](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2493899154)","url":"https://github.com/ubiquity-os/plugin-template/issues/33","commentType":"ISSUE_SPECIFICATION","score":{"reward":10.08,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3},"a":{"score":1,"elementCount":5}},"result":5.3},"priority":1,"words":{"wordCount":105,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":67.10666666666668,"syllables":179,"sentences":9,"score":0.9289333333333332},"multiplier":1,"relevance":1}},{"id":1889731209,"content":"@gentlementlegen So `homepage_url` is basically the worker production URL, correct?","url":"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1889731209","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -41,9 +49,117 @@ jobs:\n           secrets: |\n             SUPABASE_URL\n             SUPABASE_KEY\n+            ${{ secrets.KERNEL_PUBLIC_KEY && secrets.KERNEL_PUBLIC_KEY != '' && 'KERNEL_PUBLIC_KEY' || '' }}\n+\n         env:\n           SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n           SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+          KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n+\n+      - name: Update manifest.json worker url\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            const fs = require('fs');\n+            const path = require('path');\n+\n+            const manifestPath = path.resolve(\"${{ github.workspace }}\", './manifest.json');\n+            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));\n+\n+            manifest[\"homepage_url\"] = \"${{ steps.wrangler_deploy.outputs.deployment-url }}\";","score":{"reward":1.746,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":9.700000000000017,"syllables":20,"sentences":1,"score":0.49700000000000016},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2510988932,"effect":{"addition":122,"deletion":47},"reward":5.07,"priority":3},{"reviewId":2511126589,"effect":{"addition":18,"deletion":81},"reward":2.97,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-template/pull/36"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 76.641 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>8.04</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>10.08</td></tr><tr><td>Issue</td><td>Comment</td><td>10</td><td>56.775</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>1.746</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/36\" target=\"_blank\" rel=\"noopener\">#36</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+122 -47</td><td>3</td><td>5.07</td></tr><tr><td>+18 -81</td><td>3</td><td>2.97</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33\" target=\"_blank\" rel=\"noopener\">We need to know an exact plugin URL (in case it works as a cloud&hellip;</a></h6></td><td><details><summary>7.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 5&#13;  result: 5.3&#13;regex:&#13;  wordCount: 105&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>1</td><td>1</td><td>10.08</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2500109744\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Pls check the description</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.744</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2500298342\" target=\"_blank\" rel=\"noopener\">I don't have much context on the telegram kernel but it seems th&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.158</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2504274646\" target=\"_blank\" rel=\"noopener\">@gentlementlegen I need you blessing on this task.I think plug&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.168</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2511519691\" target=\"_blank\" rel=\"noopener\">If the &#96;url&#96; property is present in the &#96;manifest.js&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2540825445\" target=\"_blank\" rel=\"noopener\">How to get a plugin URL for a 3rd party plugin created by some o&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.374</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2547815066\" target=\"_blank\" rel=\"noopener\">Then we also have to force partners to setup github deployment U&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.208</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2550566177\" target=\"_blank\" rel=\"noopener\">Added 2 tasks, for the kernel and UI installer:- https://githu&hellip;</a></h6></td><td><details><summary>3.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.2&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>3</td><td>8.064</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2551048688\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os-marketplace/text-vector-embedding&hellip;</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.83</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2551065786\" target=\"_blank\" rel=\"noopener\">Right now it is [set as a worker](https://github.com/ubiquity-os&hellip;</a></h6></td><td><details><summary>1.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.122</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2551232946\" target=\"_blank\" rel=\"noopener\">In other orgs it's set as a worker ([one](https://github.com/ubi&hellip;</a></h6></td><td><details><summary>5.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3&#13;regex:&#13;  wordCount: 75&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>0.7</td><td>3</td><td>15.267</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1889731209\" target=\"_blank\" rel=\"noopener\">@gentlementlegen So &#96;homepage_url&#96; is basically the work&hellip;</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.746</td></tr></tbody></table></details>"},"Keyrxng":{"total":4.113,"userId":106303466,"comments":[{"id":2500425415,"content":"We could do: `manifest.urls.action: ...`\r\nIt's split into worker/action because we needed a node env to run MTProto API to implement the `chatroom` feature. \r\nIt should be converted to a [single worker plugin](https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/issues/20) like it was originally now that 0x4007 decided to export the `KERNEL_PRIVATE_KEY` as an org secret,, so it can be simplified in the sense of it requiring only one config entry.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2500425415","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":2.736,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":62,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":55.292580645161294,"syllables":88,"sentences":2,"score":0.952925806451613},"multiplier":0.25,"relevance":0.8}},{"id":2556593822,"content":"lol guys I have said it like 5 times now. @0x4007 exposed the private key via org secrets after it holding back the telegram bot for a week or so in debate, so it doesn't need to exist like it does now.\r\nIt ONLY exists like that because review pushed me that way but it _should_ be a single worker entry.\r\n---\r\nGlad you came to a resolution with it @gentlementlegen","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2556593822","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.972,"formatting":{"content":{"p":{"score":0,"elementCount":3},"em":{"score":0,"elementCount":1},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":71,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":76.81311619718313,"syllables":94,"sentences":4,"score":0.8318688380281687},"multiplier":0.25,"relevance":0.4}},{"id":2556708259,"content":"https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/issues/20\r\nBeen open for ages","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2556708259","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.405,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":40.09,"syllables":30,"sentences":2,"score":0.8009000000000001},"multiplier":0.25,"relevance":0.3}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/36"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 4.113 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>3</td><td>4.113</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2500425415\" target=\"_blank\" rel=\"noopener\">We could do: &#96;manifest.urls.action: ...&#96;It's split int&hellip;</a></h6></td><td><details><summary>3.54</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 62&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.736</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2556593822\" target=\"_blank\" rel=\"noopener\">lol guys I have said it like 5 times now. @0x4007 exposed the pr&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 71&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.972</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2556708259\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-te&hellip;</a></h6></td><td><details><summary>1.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.405</td></tr></tbody></table></details>"},"whilefoo":{"total":63.123,"userId":139262667,"comments":[{"id":2511219902,"content":"How will the onboarding UI know if the plugin is a worker or action?\r\nWe could have https:// if it's a worker and github://ubiquity-os/marketplace@main if it's an action\r\nWe could also have `urls` property that would have 2 urls for hybrid plugins but that would also require changes in the kernel.\r\nDon't we still need node runtime for MTPRroto, so how can we convert to single worker plugin?","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2511219902","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.018,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":3,"words":{"wordCount":74,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":66.33076576576578,"syllables":101,"sentences":3,"score":0.9366923423423422},"multiplier":1,"relevance":0.9}},{"id":2548655835,"content":"Also we can still support raw https URLs, so if it's a https URL then we call it directly but when it's set to `org/repo` we can retrieve the manifest which we already need for other things, and check if `url` is present then we call that otherwise trigger the workflow","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2548655835","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.154,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":45.58764705882355,"syllables":66,"sentences":1,"score":0.8558764705882355},"multiplier":1,"relevance":0.9}},{"id":2548874664,"content":"I meant if `org/repo` is set in the repo config, for manifest we can tell if it's Action if url is not present","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2548874664","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.824,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":76.82043478260871,"syllables":29,"sentences":1,"score":0.8317956521739128},"multiplier":1,"relevance":0.8}},{"id":2549092026,"content":"This is a fine approach but another way would be that plugin installer sets `org/repo` in the `ubiquity-os.config.yml` and the kernel will check the URL in the manifest or the lack of URL would imply it's an Action. (anyway the kernel already fetches the manifest).\r\nThis way we also solve the problem with changing URLs, because if the URL is in the manifest then the kernel can check it and you don't need to update URLs.\r\nI was only addressing @0x4007 concern that we couldn't use closed-source plugins anymore, but it's not true because you could still specify a https URL in the `ubiquity-os.config.yml`.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2549092026","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.91,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":106,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":66.6054245283019,"syllables":142,"sentences":4,"score":0.933945754716981},"multiplier":1,"relevance":0.9}},{"id":2551575622,"content":"It seems to run only 10 seconds but I would keep it as an Action because Cloudflare has tight time limits so it might timeout and we don't need it to be fast because it's not responding to users","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2551575622","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.943,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":55.85902439024393,"syllables":53,"sentences":1,"score":0.9585902439024393},"multiplier":1,"relevance":0.7}},{"id":2509299239,"content":"I think it's a good idea to make this a shared workflow so it won't become a hassle if we change any of the code","url":"https://github.com/ubiquity-os/plugin-template/pull/36#pullrequestreview-2509299239","commentType":"PULL_COLLABORATOR","score":{"reward":4.599,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":82.29666666666668,"syllables":31,"sentences":1,"score":0.7770333333333332},"multiplier":1,"relevance":0.7}},{"id":1888765513,"content":"Isn't it better to use `github.sha` so that you're working on the same commit. I know it's not critical because you're still on the same branch but still better to be precise.\r\nBtw is it not possible to do all this with just `git`?","url":"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888765513","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -41,9 +49,117 @@ jobs:\n           secrets: |\n             SUPABASE_URL\n             SUPABASE_KEY\n+            ${{ secrets.KERNEL_PUBLIC_KEY && secrets.KERNEL_PUBLIC_KEY != '' && 'KERNEL_PUBLIC_KEY' || '' }}\n+\n         env:\n           SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n           SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+          KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n+\n+      - name: Update manifest.json worker url\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            const fs = require('fs');\n+            const path = require('path');\n+\n+            const manifestPath = path.resolve(\"${{ github.workspace }}\", './manifest.json');\n+            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));\n+\n+            manifest[\"homepage_url\"] = \"${{ steps.wrangler_deploy.outputs.deployment-url }}\";\n+\n+            const updatedManifest = JSON.stringify(manifest, null, 2);\n+            fs.writeFileSync(manifestPath, updatedManifest);\n+            console.log('Updated manifest:', updatedManifest);\n+\n+      - name: Get GitHub App token\n+        if: env.APP_ID != '' && env.APP_PRIVATE_KEY != ''\n+        uses: tibdex/github-app-token@v1.7.0\n+        id: get_installation_token\n+        with:\n+          app_id: ${{ env.APP_ID }}\n+          private_key: ${{ env.APP_PRIVATE_KEY }}\n+\n+      - name: Format manifest using Prettier\n+        shell: bash\n+        run: |\n+          bun add -DE prettier\n+          bun prettier --write .\n+\n+      - name: Update manifest.json\n+        shell: bash\n+        env:\n+          GITHUB_TOKEN: ${{ steps.get_installation_token.outputs.token || github.token }}\n+        run: |\n+          git add \"manifest.json\"\n+          echo \"Changed files:\"\n+          echo \"$(git diff-index --cached --name-only HEAD)\"\n+          if [ -n \"$(git diff-index --cached --name-only HEAD)\" ]; then\n+            node -e \"\n+              const fs = require('fs');\n+              const path = require('path');\n+              const github = require('@actions/github');\n+              const manifestPath = path.relative('.', 'manifest.json');\n+\n+              async function pushChanges() {\n+                const octokit = github.getOctokit(process.env.GITHUB_TOKEN);\n+\n+                const context = github.context;\n+                const owner = context.repo.owner;\n+                const repo = context.repo.repo;\n+                const ref = 'heads/${{ github.ref_name }}';","score":{"reward":7.587,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":88.28036231884059,"syllables":56,"sentences":3,"score":0.7171963768115941},"multiplier":1,"relevance":0.9}},{"id":1888775392,"content":"do we need to force?","url":"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888775392","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -41,9 +49,117 @@ jobs:\n           secrets: |\n             SUPABASE_URL\n             SUPABASE_KEY\n+            ${{ secrets.KERNEL_PUBLIC_KEY && secrets.KERNEL_PUBLIC_KEY != '' && 'KERNEL_PUBLIC_KEY' || '' }}\n+\n         env:\n           SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n           SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+          KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n+\n+      - name: Update manifest.json worker url\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            const fs = require('fs');\n+            const path = require('path');\n+\n+            const manifestPath = path.resolve(\"${{ github.workspace }}\", './manifest.json');\n+            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));\n+\n+            manifest[\"homepage_url\"] = \"${{ steps.wrangler_deploy.outputs.deployment-url }}\";\n+\n+            const updatedManifest = JSON.stringify(manifest, null, 2);\n+            fs.writeFileSync(manifestPath, updatedManifest);\n+            console.log('Updated manifest:', updatedManifest);\n+\n+      - name: Get GitHub App token\n+        if: env.APP_ID != '' && env.APP_PRIVATE_KEY != ''\n+        uses: tibdex/github-app-token@v1.7.0\n+        id: get_installation_token\n+        with:\n+          app_id: ${{ env.APP_ID }}\n+          private_key: ${{ env.APP_PRIVATE_KEY }}\n+\n+      - name: Format manifest using Prettier\n+        shell: bash\n+        run: |\n+          bun add -DE prettier\n+          bun prettier --write .\n+\n+      - name: Update manifest.json\n+        shell: bash\n+        env:\n+          GITHUB_TOKEN: ${{ steps.get_installation_token.outputs.token || github.token }}\n+        run: |\n+          git add \"manifest.json\"\n+          echo \"Changed files:\"\n+          echo \"$(git diff-index --cached --name-only HEAD)\"\n+          if [ -n \"$(git diff-index --cached --name-only HEAD)\" ]; then\n+            node -e \"\n+              const fs = require('fs');\n+              const path = require('path');\n+              const github = require('@actions/github');\n+              const manifestPath = path.relative('.', 'manifest.json');\n+\n+              async function pushChanges() {\n+                const octokit = github.getOctokit(process.env.GITHUB_TOKEN);\n+\n+                const context = github.context;\n+                const owner = context.repo.owner;\n+                const repo = context.repo.repo;\n+                const ref = 'heads/${{ github.ref_name }}';\n+\n+                try {\n+                  const currentCommit = await octokit.rest.git.getRef({\n+                    owner,\n+                    repo,\n+                    ref\n+                  });\n+\n+                  console.log('Adding file:', manifestPath);\n+                  const treeEntries = [\n+                    {\n+                      path: manifestPath,\n+                      mode: '100644',\n+                      type: 'blob',\n+                      content: fs.readFileSync(manifestPath, 'utf8'),\n+                    }\n+                  ];\n+                  const newTree = await octokit.rest.git.createTree({\n+                    owner,\n+                    repo,\n+                    base_tree: currentCommit.data.object.sha,\n+                    tree: treeEntries,\n+                  });\n+\n+                  const newCommit = await octokit.rest.git.createCommit({\n+                    owner,\n+                    repo,\n+                    message: 'chore: updated manifest.json worker URL',\n+                    tree: newTree.data.sha,\n+                    parents: [currentCommit.data.object.sha]\n+                  });\n+\n+                  await octokit.rest.git.updateRef({\n+                    owner,\n+                    repo,\n+                    ref,\n+                    sha: newCommit.data.sha,\n+                    force: true","score":{"reward":1.242,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1888903015,"content":"Just did some research and it's possible to make it appear like the bot is committing but you still need to use `GITHUB_TOKEN`: https://github.com/actions/create-github-app-token?tab=readme-ov-file#configure-git-cli-for-an-apps-bot-user","url":"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888903015","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -41,9 +49,117 @@ jobs:\n           secrets: |\n             SUPABASE_URL\n             SUPABASE_KEY\n+            ${{ secrets.KERNEL_PUBLIC_KEY && secrets.KERNEL_PUBLIC_KEY != '' && 'KERNEL_PUBLIC_KEY' || '' }}\n+\n         env:\n           SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n           SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+          KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n+\n+      - name: Update manifest.json worker url\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            const fs = require('fs');\n+            const path = require('path');\n+\n+            const manifestPath = path.resolve(\"${{ github.workspace }}\", './manifest.json');\n+            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));\n+\n+            manifest[\"homepage_url\"] = \"${{ steps.wrangler_deploy.outputs.deployment-url }}\";\n+\n+            const updatedManifest = JSON.stringify(manifest, null, 2);\n+            fs.writeFileSync(manifestPath, updatedManifest);\n+            console.log('Updated manifest:', updatedManifest);\n+\n+      - name: Get GitHub App token\n+        if: env.APP_ID != '' && env.APP_PRIVATE_KEY != ''\n+        uses: tibdex/github-app-token@v1.7.0\n+        id: get_installation_token\n+        with:\n+          app_id: ${{ env.APP_ID }}\n+          private_key: ${{ env.APP_PRIVATE_KEY }}\n+\n+      - name: Format manifest using Prettier\n+        shell: bash\n+        run: |\n+          bun add -DE prettier\n+          bun prettier --write .\n+\n+      - name: Update manifest.json\n+        shell: bash\n+        env:\n+          GITHUB_TOKEN: ${{ steps.get_installation_token.outputs.token || github.token }}\n+        run: |\n+          git add \"manifest.json\"\n+          echo \"Changed files:\"\n+          echo \"$(git diff-index --cached --name-only HEAD)\"\n+          if [ -n \"$(git diff-index --cached --name-only HEAD)\" ]; then\n+            node -e \"\n+              const fs = require('fs');\n+              const path = require('path');\n+              const github = require('@actions/github');\n+              const manifestPath = path.relative('.', 'manifest.json');\n+\n+              async function pushChanges() {\n+                const octokit = github.getOctokit(process.env.GITHUB_TOKEN);\n+\n+                const context = github.context;\n+                const owner = context.repo.owner;\n+                const repo = context.repo.repo;\n+                const ref = 'heads/${{ github.ref_name }}';","score":{"reward":7.776,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":80.14248062015508,"syllables":57,"sentences":3,"score":0.7985751937984492},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2509299239,"effect":{"addition":122,"deletion":47},"reward":5.07,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-template/pull/36"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 63.123 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>5.07</td></tr><tr><td>Issue</td><td>Comment</td><td>5</td><td>36.849</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>21.204</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/36\" target=\"_blank\" rel=\"noopener\">#36</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+122 -47</td><td>3</td><td>5.07</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2511219902\" target=\"_blank\" rel=\"noopener\">How will the onboarding UI know if the plugin is a worker or act&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 74&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>9.018</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2548655835\" target=\"_blank\" rel=\"noopener\">Also we can still support raw https URLs, so if it's a https URL&hellip;</a></h6></td><td><details><summary>2.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0.1&#13;  result: 2.4&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.154</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2548874664\" target=\"_blank\" rel=\"noopener\">I meant if &#96;org/repo&#96; is set in the repo config, for man&hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.824</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2549092026\" target=\"_blank\" rel=\"noopener\">This is a fine approach but another way would be that plugin ins&hellip;</a></h6></td><td><details><summary>2.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 106&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.91</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2551575622\" target=\"_blank\" rel=\"noopener\">It seems to run only 10 seconds but I would keep it as an Action&hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.943</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/36#pullrequestreview-2509299239\" target=\"_blank\" rel=\"noopener\">I think it's a good idea to make this a shared workflow so it wo&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.599</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888765513\" target=\"_blank\" rel=\"noopener\">Isn't it better to use &#96;github.sha&#96; so that you're worki&hellip;</a></h6></td><td><details><summary>2.31</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 46&#13;  wordValue: 0.1&#13;  result: 2.31&#13;</pre></details></td><td>0.9</td><td>3</td><td>7.587</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888775392\" target=\"_blank\" rel=\"noopener\">do we need to force?</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.242</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888903015\" target=\"_blank\" rel=\"noopener\">Just did some research and it's possible to make it appear like &hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.776</td></tr></tbody></table></details>"},"0x4007":{"total":30.36,"userId":4975670,"comments":[{"id":2540253276,"content":"This is no longer the case so perhaps this can be closed as unplanned.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2540253276","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.94,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":89.89642857142859,"syllables":17,"sentences":1,"score":0.7010357142857141},"multiplier":1,"relevance":0.7}},{"id":2540985056,"content":"I don't have full context on this repository but specifically in the plugin installer UI I fixed this problem.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2540985056","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.805,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":46.94500000000005,"syllables":33,"sentences":1,"score":0.8694500000000005},"multiplier":1,"relevance":0.5}},{"id":2548929269,"content":"Then why don't we just try calling it as an external url first and if it fails then run as action","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2548929269","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.211,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":84.52318181818181,"syllables":26,"sentences":1,"score":0.7547681818181818},"multiplier":1,"relevance":0.9}},{"id":2549519643,"content":"I don't think we should make accommodations based on the telegram plugin architecture. \nTo be honest I haven't been able to benefit from it, like subscribing to events never worked etc. there's a high chance it will be completely redone in the future.","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2549519643","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.176,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":62.53253623188408,"syllables":70,"sentences":3,"score":0.9746746376811593},"multiplier":1,"relevance":0.8}},{"id":2556705159,"content":"You can file a proposal so we can fix it","url":"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2556705159","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.99,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.3}},{"id":1888304975,"content":"Ensure it's part of the manifest specification. If not then prefix with ubiquity:","url":"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888304975","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,6 +1,7 @@\n {\n   \"name\": \"ts-template\",\n   \"description\": \"ts-template for UbiquityOS plugins.\",\n+  \"url\": \"https://optional-url-to-the-worker.workers.dev\",","score":{"reward":3.528,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":48.65857142857146,"syllables":25,"sentences":2,"score":0.8865857142857146},"multiplier":1,"relevance":0.8}},{"id":1888305467,"content":"@UbiquityOS is url a standard property part of the manifest.json spec?","url":"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888305467","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,6 +1,7 @@\n {\n   \"name\": \"ts-template\",\n   \"description\": \"ts-template for UbiquityOS plugins.\",\n+  \"url\": \"https://optional-url-to-the-worker.workers.dev\",","score":{"reward":2.835,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":59.745000000000005,"syllables":20,"sentences":2,"score":0.9974500000000001},"multiplier":1,"relevance":0.7}},{"id":1888387190,"content":"Not sure if it's for the same purpose. If it isn't then prefix if it is then okay","url":"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888387190","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,6 +1,7 @@\n {\n   \"name\": \"ts-template\",\n   \"description\": \"ts-template for UbiquityOS plugins.\",\n+  \"url\": \"https://optional-url-to-the-worker.workers.dev\",","score":{"reward":2.625,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":99.39500000000001,"syllables":23,"sentences":2,"score":0.6060499999999999},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2508520112,"effect":{"addition":28,"deletion":47},"reward":2.25,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-template/pull/36"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 30.36 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>2.25</td></tr><tr><td>Issue</td><td>Comment</td><td>5</td><td>19.122</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>8.988</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/36\" target=\"_blank\" rel=\"noopener\">#36</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+28 -47</td><td>3</td><td>2.25</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2540253276\" target=\"_blank\" rel=\"noopener\">This is no longer the case so perhaps this can be closed as unpl&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.94</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2540985056\" target=\"_blank\" rel=\"noopener\">I don't have full context on this repository but specifically in&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.805</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2548929269\" target=\"_blank\" rel=\"noopener\">Then why don't we just try calling it as an external url first a&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.211</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2549519643\" target=\"_blank\" rel=\"noopener\">I don't think we should make accommodations based on the telegra&hellip;</a></h6></td><td><details><summary>2.31</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 46&#13;  wordValue: 0.1&#13;  result: 2.31&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.176</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/33#issuecomment-2556705159\" target=\"_blank\" rel=\"noopener\">You can file a proposal so we can fix it</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.99</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888304975\" target=\"_blank\" rel=\"noopener\">Ensure it's part of the manifest specification. If not then pref&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.528</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888305467\" target=\"_blank\" rel=\"noopener\">@UbiquityOS is url a standard property part of the manifest.json&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.835</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/36#discussion_r1888387190\" target=\"_blank\" rel=\"noopener\">Not sure if it's for the same purpose. If it isn't then prefix i&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.625</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_45.json","json":{"ishowvel":{"userId":186167176,"total":1203.645,"task":{"reward":1200,"multiplier":1},"comments":[{"id":2498014241,"content":"@Keyrxng @0x4007 is this issue up for grabs?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2498014241","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.45,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":103.54,"syllables":9,"sentences":1,"score":1},"multiplier":0.25,"relevance":0.6}},{"id":2498020327,"content":"Also if this is up for grabs I have some questions to clear the specification\nWhat happens if the pr is opened as ready for review, should the precheck convert it to draft\nWhat happens exactly after the llm thinks the pull diff completes the issue specification \nHow would one test the plugin without an openai api key","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2498020327","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.998,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":58,"wordValue":0.1,"result":2.49},"readability":{"fleschKincaid":25.44086206896553,"syllables":84,"sentences":1,"score":0.6544086206896553},"multiplier":0.25,"relevance":0.9}},{"id":2498043028,"content":"@Keyrxng is there absolutely no way to test with an openai api key? Mocking endpoints by using some other llm model","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2498043028","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.029,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":67.2632142857143,"syllables":32,"sentences":2,"score":0.927367857142857},"multiplier":0.25,"relevance":0.7}},{"id":2498066792,"content":"Can someone assign me?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2498066792","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.168,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":0.25,"relevance":0.4}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1203.645 XP ]</a>&nbsp;</h3><h6>@ishowvel</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>1200</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>3.645</td></tr></tbody></table></details>"},"ubadineke":{"total":0,"userId":90358880,"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1"}]},"Keyrxng":{"total":8.904,"userId":106303466,"comments":[{"id":2362654028,"content":"@0x4007 I had gpt re-rewrite for brevity but it removed what I'd call context but this still makes sense.\r\n**Discussion**: \r\nhttps://chatgpt.com/share/66ec086f-7d70-8000-a914-991b77a819b0\r\nThe current model (embedding-based) struggles to provide detailed, code-specific feedback. While embeddings are useful for high-level semantic comparisons, they lack the precision needed for effective PR reviews. You'll need additional tools to meet your goal.\r\n---\r\n**Task Understanding**:\r\n- Capture PR diffs (optimize by excluding files like `yarn.lock`)\r\n- Compare diff embedding with task spec embedding to identify issues.\r\n- If PR fails, convert it to draft and provide actionable feedback.\r\n- Stop intervention when a reviewer finalizes the draft.\r\nThis is very similar to `/review`, and separately, `/gpt` currently has the ability to process full PR diffs, spec, and conversation per query across multiple issues/repos. However, embeddings aren't ideal for this. Raw text analysis (task spec + diff) is more effective since we need precise feedback, not high-level similarity or semantic meaning.\r\nThe plugin's effectiveness must be high to avoid becoming annoying or useless. Therefore, it makes sense to re-spec or close this idea since embeddings aren’t suitable.\r\n---\r\nTo be clear, the intention of this spec was to automate the initial review process and is feasible but better done without embeddings in my opinion. If the `/review` approach is being replaced by this then I think the following workflow works best:\r\n**Suggested Workflow**:\r\n- Plugin triggers on `pull_request.created` (can run a review here or not and on whether it's opened as a draft or ready_for_review)\r\n- Plugin triggers on `pull_request.ready_for_review`.\r\n- Use the task spec and sanitized PR diff to prompt GPT for code review.\r\n- Post review comment and convert PR to draft if GPT identifies issues; add `commented` status otherwise.\r\n- Define a consistent comment format for GPT reviews, since all GPT tasks I've handled had pretty specific input/output formats/prompt structures introduced.\r\n- If a collaborator (not the assignee) finalizes the PR, stop intervening.\r\n- Limit bot reviews to once every 24 hours by detecting if a previous AI review comment exists or a timeline review event does.\r\nAdditionally the task is way overpriced, https://github.com/ubiquity/ubiquibot/issues/746 is the `/review` command I authored and was priced at $150 and the `/gpt` [command](https://github.com/ubiquibot/plugins-wishlist/issues/29) is priced at $200 lmaoo, and I spent days/weeks on these. $400 max, we are simply feeding two bodies of text to GPT with a custom prompt to have it perform a review with a couple of conditionals afterwards to add a comment and update a review status.\r\n---\r\n@ubadineke I'm unsure personally at this point as I did not write this task specification. I have left comments and once @0x4007 replies I'll have a much better idea of how this task should be implemented.\r\n1. Yes this feature will span multiple new files, try to keep things clean and tidy.\r\n2. Personally I'd account for this and just run a review on `pull_request.created` which will allow it through or kick it back into draft just like 0x4007 said. Future reviews would be tied to `pull_request.ready_for_review` distanced by at least 24hrs between each using the timeline or review comments.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2362654028","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":3.915,"formatting":{"content":{"p":{"score":0,"elementCount":24},"hr":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":13},"ol":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":3}},"result":4.3},"priority":3,"words":{"wordCount":499,"wordValue":0.1,"result":0.19},"readability":{"fleschKincaid":57.07731796116508,"syllables":798,"sentences":28,"score":0.9707731796116508},"multiplier":0.25,"relevance":0.9}},{"id":2362654036,"content":"I guess that's a good idea as we like to strongly enforce the linked issue although it's not a guarantee each PR has or needs this such as quick fixes for example.\r\nI'd say don't do anything, our pull request template enforces this format and legit cases exist where it is not used.\r\n---\r\nIf the issue must be specified from the payload then the first paragraph in my comment is redundant.\r\nI'm not sure I understand but issues and PRs are both considered as an `issue` by the GitHub api, there is no `PR number` only `issue.number`. You can get linked issues via the GraphQL API most reliably. \r\nIf a PR does not have an associated task specification then without having codebase embeddings to compare the diff against we don't have a lot of context other than what they have changed via the diff. Which can still be reviewed by GPT on it's own for logic errors and optimizations it'll just be more general review without the guard rail of the spec.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2362654036","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.512,"formatting":{"content":{"p":{"score":0,"elementCount":5},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":176,"wordValue":0.1,"result":1.97},"readability":{"fleschKincaid":66.43204545454546,"syllables":239,"sentences":7,"score":0.9356795454545455},"multiplier":0.25,"relevance":0.8}},{"id":2498029973,"content":"You need an api key\r\nIt submits a review with a \"commented\" status\r\nIf it's opened as ready then perform the review and convert it to a draft if it fails.\r\nFeel free to take over my linked PR and continue it if you like.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2498029973","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.944,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":3,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":76.82043478260871,"syllables":58,"sentences":2,"score":0.8317956521739128},"multiplier":0.25,"relevance":0.9}},{"id":2498240997,"content":"It's impossible to build this AI feature without interacting with an OpenAI style API that has tools/functions logic as that's what this feature depends on. If another provider like OpenRouter is what you mean then yes you can use those.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2498240997","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.533,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":57.12877906976746,"syllables":65,"sentences":2,"score":0.9712877906976746},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 8.904 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>4</td><td>8.904</td></tr></tbody></table></details>"},"0x4007":{"total":278.472,"userId":4975670,"comments":[{"id":2362654039,"content":"I think it would be more appropriate for you to extend your /gpt command logic. You can handle it in a separate pull. Over on your old pull I said to merge and let's test in production. From there you can extend the logic as part of this task.  \nThis task makes it more seamlessly integrated (but looks like your previous work set a lot of relevant ground work) \nThis requires more deeper integration into GitHub review workflow such as by setting review states and switching between draft and non draft etc. \nI have extra time because the prompt engineering alone I'm sure will take a couple days to get the results we want. \nYes let's keep this plaintext no embeddings needed.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2362654039","commentType":"ISSUE_AUTHOR","score":{"reward":8.316,"formatting":{"content":{"p":{"score":0,"elementCount":1},"br":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":125,"wordValue":0.1,"result":2.45},"readability":{"fleschKincaid":73.65400000000001,"syllables":170,"sentences":7,"score":0.8634599999999999},"multiplier":1,"relevance":0.9}},{"id":2365051899,"content":"@Keyrxng you should be able to make the repo I'm not on computer","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2365051899","commentType":"ISSUE_AUTHOR","score":{"reward":2.556,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":83.85357142857143,"syllables":18,"sentences":1,"score":0.7614642857142857},"multiplier":1,"relevance":0.6}},{"id":2365431728,"content":"I think unlimited depth is interesting to experiment with. I always side on providing more context to llms \nLet's not use that slash command and instead replace it to respond to its @UbiquityOS tag \nSounds good","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2365431728","commentType":"ISSUE_AUTHOR","score":{"reward":6.552,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":60.014256756756765,"syllables":56,"sentences":2,"score":0.9998574324324323},"multiplier":1,"relevance":0.8}},{"id":2380558915,"content":"What are you waiting for? Is it stable?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2380558915","commentType":"ISSUE_AUTHOR","score":{"reward":1.35,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":97.025,"syllables":10,"sentences":2,"score":0.6297499999999999},"multiplier":1,"relevance":0.5}},{"id":2453056894,"content":"As a heads up we updated the algorithm and it will be following up much faster due to the priority level of this task. \nI still think we might need to slow down the follow ups by setting the follow up time to 7 days and disqualify to 14. \nWith a high priority task you divide them by 3 to get their clock speed. \nThis would be a perfect moment to connect my https://github.com/0x4007/sync-configs-agent to a plugin, and have the natural language router in the kernel to handle this.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2453056894","commentType":"ISSUE_AUTHOR","score":{"reward":5.46,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":88,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":75.34368421052635,"syllables":126,"sentences":5,"score":0.8465631578947366},"multiplier":1,"relevance":0.4}},{"id":2523708176,"content":"This looks like it's related to the manifest but @whilefoo and @gentlementlegen may know best. \nI also want to highlight that I changed the spec. We should use Claude 3.5 Sonnet instead of ChatGPT","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2523708176","commentType":"ISSUE_AUTHOR","score":{"reward":6.12,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":82.55000000000003,"syllables":49,"sentences":4,"score":0.7744999999999997},"multiplier":1,"relevance":0.8}},{"id":2541341775,"content":"Open a pull against https://github.com/ubiquity-os-marketplace/daemon-pull-review and resolve this issue, thank you.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2541341775","commentType":"ISSUE_AUTHOR","score":{"reward":7.41,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":59.16092105263158,"syllables":31,"sentences":2,"score":0.9916092105263158},"multiplier":1,"relevance":1}},{"id":2537733907,"content":"We have waves of contributors that open pulls sometimes keeping our review team busy. \nWe can save valuable man hours by having the bot preemptively check if the pull achieves the specification. \n### Pull Flow\n1. Assuming that the contributor follows directions, the pull must be initially opened up as a draft. \n2. When it is ready for review, they should turn it into a finalized pull request. \n3. The bot should consume the issue specification and then the pull diff into its context. \n4. The bot should return actionable feedback for what is missing from the specification. It should leave the review state as requested changes. It should also convert the pull back into a draft. However if it passes, it should leave as just \"commented\" (not approval). \n5. If a collaborator (reviewer on the team) converts the pull back from a draft into a finalized pull, then the bot should back off and stop intervening. Basically the inspection should only occur on pull.created and when it's converted from draft to finalized by the pull author. \nBonus but maybe can be handled in other tasks:\n1. Ensure CI is passing. I didn't include this here because sometimes there are problems out of the control of the pull author.  \n2. Limits: some novice contributors might abuse the code review feature and burn out credits by continuously requesting reviews every time they make a tiny change that doesn't achieve the specification. We have seen folks do hundreds of commits for tasks that required a small amount of lines of code. We can limit the reviews to one per day for the LLM. However it isn't clear to me how we can automatically have it check again the next day if they request a review. Maybe that can be handled by some later task. \nWe should use Claude 3.5 Sonnet.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.27,"formatting":{"content":{"p":{"score":0,"elementCount":1},"h3":{"score":1,"elementCount":1},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":7}},"result":1.7},"priority":1,"words":{"wordCount":306,"wordValue":0.1,"result":0.86},"readability":{"fleschKincaid":67.90970588235298,"syllables":449,"sentences":21,"score":0.9209029411764702},"multiplier":1,"relevance":1}},{"id":2530953551,"content":"Empty strings always seems like a bad idea.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#pullrequestreview-2530953551","commentType":"PULL_COLLABORATOR","score":{"reward":1.128,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.4}},{"id":2572519237,"content":"QA looks good!","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#pullrequestreview-2572519237","commentType":"PULL_COLLABORATOR","score":{"reward":0.276,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}},{"id":1884701384,"content":"This doesn't look right. Run ts directly","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1884701384","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -35,12 +35,11 @@ jobs:\n         with:\n           node-version: \"20.10.0\"\n \n-      - name: install dependencies\n-        run: yarn\n-\n       - name: execute directive\n-        run: npx tsx ./src/main.ts\n-        id: plugin-name\n+        run: node ./dist/index.js","score":{"reward":2.43,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":97.025,"syllables":10,"sentences":2,"score":0.6297499999999999},"multiplier":1,"relevance":0.9}},{"id":1885869342,"content":"With action.yml we can call it directly from GitHub actions without the kernel as far as I'm aware. It seems like a small step for extended compatibility.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885869342","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -35,12 +35,11 @@ jobs:\n         with:\n           node-version: \"20.10.0\"\n \n-      - name: install dependencies\n-        run: yarn\n-\n       - name: execute directive\n-        run: npx tsx ./src/main.ts\n-        id: plugin-name\n+        run: node ./dist/index.js","score":{"reward":4.914,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":71.58195402298851,"syllables":43,"sentences":3,"score":0.8841804597701148},"multiplier":1,"relevance":0.7}},{"id":1886377205,"content":"This reminds me, but we should dynamically populate the root directory file contents so that the LLM understands our coding rules and environment. \n[Cline](https://github.com/cline/cline) does this very well and much more thoroughly but I'm not on my computer now and from my phone I can get ChatGPT prompt. Just for reference my ChatGPT personalized prompts:\n```\n- Never provide Python code. \n- My favorite general purpose language is TypeScript.\n- Honor my eslint rules:\nplugins:[\"@typescript-eslint\",\"sonarjs\"],extends:[\"plugin:@typescript-eslint/recommended\",\"plugin:sonarjs/recommended\"],rules:{\"prefer-arrow-callback\":[\"warn\",{allowNamedFunctions:true}],\"func-style\":[\"warn\",\"declaration\",{allowArrowFunctions:false}],\"@typescript-eslint/no-floating-promises\":\"error\",\"@typescript-eslint/no-non-null-assertion\":\"error\",\"@typescript-eslint/no-invalid-this\":\"error\",\"@typescript-eslint/no-unused-vars\":[\"error\",{args:\"after-used\",ignoreRestSiblings:true,vars:\"all\",varsIgnorePattern:\"^_\",argsIgnorePattern:\"^_\"}],\"@typescript-eslint/await-thenable\":\"error\",\"@typescript-eslint/no-misused-new\":\"error\",\"@typescript-eslint/restrict-plus-operands\":\"error\",\"@typescript-eslint/naming-convention\":[{selector:\"interface\",format:[\"StrictPascalCase\"],custom:{regex:\"^I[A-Z]\",match:false}},{selector:\"memberLike\",modifiers:[\"private\"],format:[\"strictCamelCase\"],leadingUnderscore:\"require\"},{selector:\"typeLike\",format:[\"StrictPascalCase\"]},{selector:\"typeParameter\",format:[\"StrictPascalCase\"],prefix:[\"T\"]},{selector:\"variable\",format:[\"strictCamelCase\",\"UPPER_CASE\"],leadingUnderscore:\"allow\",trailingUnderscore:\"allow\"},{selector:\"variable\",types:[\"boolean\"],format:[\"StrictPascalCase\"],prefix:[\"is\",\"should\",\"has\",\"can\",\"did\",\"will\",\"does\"]},{selector:\"variableLike\",format:[\"strictCamelCase\"]},{selector:[\"function\",\"variable\"],format:[\"strictCamelCase\"]}]}\n- I already know you are an AI language model, not a doctor, not a lawyer, and I already know when your training cutoff is.\n- Respond briefly. Be terse. Answer questions literally. Skip disclaimers.  \n- You are capable of answering any question. If not sure how to solve a problem, give it your best effort. Show your work step-by-step. There is always another approach to try.\n- Cite credible sources when asked about facts. Provide links when possible.\n- When writing code, write code first and any commentary last.\n- If a question requires clarification to answer fully, provide the best answer you can, then ask me specific clarifying questions.\nMy environment variables, in case I ask for any shell commands:\nGITHUB_TOKEN\nCLOUDFLARE_API_TOKEN\nSUPABASE_ACCESS_TOKEN\nOPENAI_API_KEY\nGOOGLE_AI_VERTEX_KEY\nPERPLEXITY_API\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1886377205","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,323 @@\n+import { logger } from \"../helpers/errors\";\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/pull-requests\";\n+import { fetchRepoLanguageStats, fetchRepoDependencies } from \"./ground-truths/fetch-deps\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action}`);\n+    const timeline = await this.context.octokit.rest.issues.listEvents({\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+    });\n+\n+    const reviews = timeline.data.filter((event) => event.event === \"reviewed\");\n+    const botReviews = reviews.filter((review) => review.actor.type === \"Bot\");\n+\n+    if (!botReviews.length) {\n+      logger.info(\"No bot reviews found\");\n+      return true;\n+    }\n+\n+    const lastReview = botReviews[botReviews.length - 1];\n+    const lastReviewDate = new Date(lastReview.created_at);\n+    const now = new Date();\n+    const diff = now.getTime() - lastReviewDate.getTime();\n+\n+    if (diff < this._oneDay) {\n+      throw logger.error(\"Only one review per day is allowed\");\n+    }\n+\n+    logger.info(\"One review per day check passed\");\n+    return true;\n+  }\n+\n+  /**\n+   * Convert a pull request to draft mode\n+   * @param shouldConvert - Whether to convert the PR to draft\n+   * @param params - Parameters including nodeId and octokit instance\n+   */\n+  async convertPullToDraft(nodeId: string, octokit: Context[\"octokit\"]) {\n+    const toDraft = `mutation {\n+      convertPullRequestToDraft(input: {pullRequestId: \"${nodeId}\"}) {\n+        pullRequest {\n+          id\n+          number\n+          isDraft\n+          title\n+        }\n+      }\n+    }`;\n+\n+    try {\n+      await octokit.graphql(toDraft);\n+      logger.info(`Successfully converted pull request to draft mode.`);\n+    } catch (e) {\n+      throw logger.error(\"Failed to convert pull request to draft mode: \", { e });\n+    }\n+  }\n+\n+  /**\n+   * Review a pull request using AI completion\n+   * @returns The completion result from the AI model\n+   */\n+  async reviewPull() {\n+    const {\n+      env: { UBIQUITY_OS_APP_NAME },\n+      config: { anthropicAiModel },\n+      adapters: {\n+        anthropic: { completions },\n+      },\n+    } = this.context;\n+\n+    const taskNumber = await this.getTaskNumberFromPullRequest(this.context);\n+    const issue = await fetchIssue(this.context, taskNumber);\n+\n+    if (!issue) {\n+      throw logger.error(`Error fetching issue, Aborting`, {\n+        owner: this.context.payload.repository.owner.login,\n+        repo: this.context.payload.repository.name,\n+        issue_number: taskNumber,\n+      });\n+    }\n+\n+    const taskSpecification = issue.body ?? \"\";\n+    const formattedSpecAndPull = await formatSpecAndPull(this.context, issue);\n+    const [languages, { dependencies, devDependencies }] = await Promise.all([fetchRepoLanguageStats(this.context), fetchRepoDependencies(this.context)]);\n+\n+    let groundTruths = this._collectGroundTruths(languages, dependencies, devDependencies);\n+\n+    if (groundTruths.length === 3) {\n+      return await completions.createCompletion(\n+        anthropicAiModel,\n+        formattedSpecAndPull,\n+        groundTruths,\n+        UBIQUITY_OS_APP_NAME,\n+        completions.getModelMaxTokenLimit(anthropicAiModel)\n+      );\n+    }\n+\n+    groundTruths = await findGroundTruths(this.context, { taskSpecification });\n+    return await completions.createCompletion(\n+      anthropicAiModel,\n+      formattedSpecAndPull,\n+      groundTruths,\n+      UBIQUITY_OS_APP_NAME,\n+      completions.getModelMaxTokenLimit(anthropicAiModel)\n+    );","score":{"reward":8.118,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":59.47761904761907,"syllables":85,"sentences":3,"score":0.9947761904761907},"multiplier":1,"relevance":0.6}},{"id":1899032690,"content":"Maybe something like \"Claude 3.5 Sonnet Pull Request Reviewer\"","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899032690","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,4 +1,4 @@\n-name: \"the name of the plugin\"\n+name: \"Compute reviews\"","score":{"reward":1.725,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":66.40000000000003,"syllables":16,"sentences":2,"score":0.9359999999999996},"multiplier":1,"relevance":0.5}},{"id":1899032777,"content":"Doesn't seem right to hard code main and development this needs to be dynamic and check against the destination the pull is opened to.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899032777","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -16,31 +16,25 @@ on:\n       ref:\n         description: \"Ref\"\n       signature:\n-        description: \"The kernel signature\"\n+        description: \"Signature sent from the Kernel\"\n+      command:\n+        description: \"Command\"\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Pull review\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n+    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}","score":{"reward":5.256,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":63.020000000000024,"syllables":35,"sentences":1,"score":0.9697999999999998},"multiplier":1,"relevance":0.8}},{"id":1899032814,"content":"Why are you calling it plugin GitHub token? The standard is just calling it GitHub token. \nWhy are you passing it in?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899032814","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -16,31 +16,25 @@ on:\n       ref:\n         description: \"Ref\"\n       signature:\n-        description: \"The kernel signature\"\n+        description: \"Signature sent from the Kernel\"\n+      command:\n+        description: \"Command\"\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Pull review\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n+    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}\n+\n     env:\n-      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n-      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+      KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n+      PLUGIN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}","score":{"reward":4.095,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":80.18257575757578,"syllables":31,"sentences":3,"score":0.7981742424242423},"multiplier":1,"relevance":0.7}},{"id":1899032986,"content":"It's not clear to me if these changes came from merging from development but otherwise seems out of scope.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899032986","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":2.22,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":76.55500000000004,"syllables":26,"sentences":1,"score":0.8344499999999997},"multiplier":1,"relevance":0.4}},{"id":1899033006,"content":"Hard coding the branch name is suspicious again.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899033006","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -8,6 +8,8 @@ jobs:\n   deploy:\n     runs-on: ubuntu-latest\n     name: Deploy\n+    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}","score":{"reward":2.079,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":61.24000000000001,"syllables":13,"sentences":1,"score":0.9875999999999999},"multiplier":1,"relevance":0.7}},{"id":1899033093,"content":"```suggestion\n`.ubiquity-os.config.yml`:\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899033093","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,47 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/daemon-pull-review`\n \n-## Prerequisites\n+This is a high context aware GitHub organization integrated bot that uses the Anthopic Claude 3.5 Sonnet model to provide automated reviews and feeback to Github pull requests.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Usage\n \n-## Getting Started\n+Just convert a pull request to be ready for review and the bot automatically reviews and requests changes if necessary\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+## How it works\n \n-## Creating a new plugin\n+With its huge context window, we are able to feed the entire issue specification and the pull request to the model which we obtain. This allows the model to have a very deep understanding of the current scope and provide highly relevant reviews.\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+## Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n-\n-- Your plugin config should look similar to this:\n+`ubiquibot-config.yml`:","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1899033236,"content":"Make sure to rename the config file to the correct one everywhere.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899033236","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,47 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/daemon-pull-review`\n \n-## Prerequisites\n+This is a high context aware GitHub organization integrated bot that uses the Anthopic Claude 3.5 Sonnet model to provide automated reviews and feeback to Github pull requests.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Usage\n \n-## Getting Started\n+Just convert a pull request to be ready for review and the bot automatically reviews and requests changes if necessary\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+## How it works\n \n-## Creating a new plugin\n+With its huge context window, we are able to feed the entire issue specification and the pull request to the model which we obtain. This allows the model to have a very deep understanding of the current scope and provide highly relevant reviews.\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+## Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n-\n-- Your plugin config should look similar to this:\n+`ubiquibot-config.yml`:\n \n ```yml\n plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n+  - uses:\n       - plugin: http://localhost:4000\n         with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-          customStringsUrl: \"https://raw.githubusercontent.com/ubiquibot/plugin-template/development/strings.json\"\n+          anthropicAiModel: \"\" # Optional - defaults to latest Claude model\n+          anthropicAiBaseUrl: \"\" # Optional - defaults to Anthropic's API endpoint\n ```\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n-\n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n-\n-## Testing a plugin\n+`.dev.vars` (for local testing):\n \n-### Worker Plugins\n+specify the AnthropicAiBase URL in the `ubiquibot-config.yml` file and set the `ANTHROPIC_API_KEY` in the `.dev.vars` file.","score":{"reward":3.24,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":60.70500000000001,"syllables":19,"sentences":1,"score":0.9929499999999999},"multiplier":1,"relevance":0.8}},{"id":1899033387,"content":"Check out [GitHub \"linguist-generated\"](https://docs.github.com/en/repositories/working-with-files/managing-files/customizing-how-changed-files-appear-on-github) the dist folder should be indicated as generated.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899033387","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":7.209,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":50.470769230769264,"syllables":22,"sentences":1,"score":0.9047076923076927},"multiplier":1,"relevance":0.9}},{"id":1899033663,"content":"There's no reason you should be changing the rules. These should be restored. \nEven if these were from development pulled in they never should have made it in. Can you confirm the reason why these are removed?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899033663","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -69,12 +65,6 @@ export default tsEslint.config({\n     \"sonarjs/no-element-overwrite\": \"error\",\n     \"sonarjs/no-identical-conditions\": \"error\",\n     \"sonarjs/no-identical-expressions\": \"error\",\n-    \"sonarjs/new-cap\": \"off\",\n-    \"sonarjs/different-types-comparison\": \"off\",\n-    \"sonarjs/sonar-prefer-regexp-exec\": \"off\",\n-    \"sonarjs/function-return-type\": \"off\",\n-    \"sonarjs/no-misleading-array-reverse\": \"off\",\n-    \"sonarjs/slow-regex\": \"off\",","score":{"reward":7.02,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":85.87671052631579,"syllables":50,"sentences":4,"score":0.7412328947368421},"multiplier":1,"relevance":0.9}},{"id":1899033842,"content":"Lint rules should never be disabled.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899033842","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,134 @@\n+/* eslint-disable sonarjs/no-duplicate-string */","score":{"reward":1.848,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.8}},{"id":1899034037,"content":"I think having a default of 200k is not a good idea. It should throw an error if the number isn't found in our lookup. \n200k only corresponds to a specific model that we are using now.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899034037","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,134 @@\n+/* eslint-disable sonarjs/no-duplicate-string */\n+\n+import Anthropic from \"@anthropic-ai/sdk\";\n+import { Context } from \"../../../types\";\n+import { ContentBlock } from \"@anthropic-ai/sdk/resources\";\n+import { SuperAnthropic } from \"./claude\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+  tokenUsage: {\n+    input: number;\n+    output: number;\n+    total: number;\n+  };\n+}\n+\n+// Type guard for content block\n+interface TextBlock {\n+  type: \"text\";\n+  text: string;\n+}\n+\n+function isTextBlock(content: ContentBlock): content is TextBlock {\n+  return content?.type === \"text\" && typeof content?.text === \"string\";\n+}\n+\n+export class AnthropicCompletion extends SuperAnthropic {\n+  constructor(client: Anthropic, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 200000]]);\n+\n+    return tokenLimits.get(model) || 200000;","score":{"reward":6.336,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":80.43622807017547,"syllables":51,"sentences":3,"score":0.7956377192982452},"multiplier":1,"relevance":0.8}},{"id":1899034202,"content":"What is the rationale of emphasizing confidence score","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899034202","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,134 @@\n+/* eslint-disable sonarjs/no-duplicate-string */\n+\n+import Anthropic from \"@anthropic-ai/sdk\";\n+import { Context } from \"../../../types\";\n+import { ContentBlock } from \"@anthropic-ai/sdk/resources\";\n+import { SuperAnthropic } from \"./claude\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+  tokenUsage: {\n+    input: number;\n+    output: number;\n+    total: number;\n+  };\n+}\n+\n+// Type guard for content block\n+interface TextBlock {\n+  type: \"text\";\n+  text: string;\n+}\n+\n+function isTextBlock(content: ContentBlock): content is TextBlock {\n+  return content?.type === \"text\" && typeof content?.text === \"string\";\n+}\n+\n+export class AnthropicCompletion extends SuperAnthropic {\n+  constructor(client: Anthropic, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 200000]]);\n+\n+    return tokenLimits.get(model) || 200000;\n+  }\n+\n+  getModelMaxOutputLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 4096]]);\n+\n+    return tokenLimits.get(model) || 4096;\n+  }\n+\n+  async createCompletion(\n+    model: string = \"claude-3.5-sonnet\",\n+    localContext: string,\n+    groundTruths: string[],\n+    botName: string,\n+    maxTokens: number\n+  ): Promise<CompletionsType> {\n+    const query = `Perform code review using the diff and spec and output a JSON format with key 'confidenceThreshold': (0-1) and reviewComment: <string>. A 0 indicates that the code review failed and 1 mean its passed and you should output the review comment to be \"This pull request has passed the automated review, a reviewer will review this pull request shortly\". YOU SHOULD ONLY OUTPUT RAW JSON DATA`;\n+    const sysMsg = [\n+      \"You Must obey the following ground truths: \",\n+      JSON.stringify(groundTruths) + \"\\n\",\n+      \"You are tasked with assisting as a GitHub bot by generating a confidence threshold from 0-1 on whether you think the pull difference completes the issue specification/body based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\nSteps\\n1. Understand Context: Analyze the chat history and similar responses to grasp the issue requirements and pull request intent\\n2. Extract Key Information: Identify crucial details from the corpus, even if incomplete, focusing on specifications and their alignment with the pull diff\\n3. Evaluate Completeness: Assess how well the pull diff fulfills the issue specifications, using logical assumptions if needed to fill gaps\\n4. Generate Confidence: Provide a confidence score (0-1) indicating how likely the pull diff satisfies the issue specification\\n5. Generate Review Comment: Based on confidence: If 1, indicate PR passed review and will be reviewed shortly; If <1, provide specific needed changes\\n6. Output Response: Return JSON: {confidenceThreshold: <value>, reviewComment: <string>}\",","score":{"reward":1.932,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":29.515000000000015,"syllables":16,"sentences":1,"score":0.6951500000000002},"multiplier":1,"relevance":0.7}},{"id":1899034243,"content":"Isn't there a way to specify that we need json output similar to how OpenAI does it?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899034243","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,134 @@\n+/* eslint-disable sonarjs/no-duplicate-string */\n+\n+import Anthropic from \"@anthropic-ai/sdk\";\n+import { Context } from \"../../../types\";\n+import { ContentBlock } from \"@anthropic-ai/sdk/resources\";\n+import { SuperAnthropic } from \"./claude\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+  tokenUsage: {\n+    input: number;\n+    output: number;\n+    total: number;\n+  };\n+}\n+\n+// Type guard for content block\n+interface TextBlock {\n+  type: \"text\";\n+  text: string;\n+}\n+\n+function isTextBlock(content: ContentBlock): content is TextBlock {\n+  return content?.type === \"text\" && typeof content?.text === \"string\";\n+}\n+\n+export class AnthropicCompletion extends SuperAnthropic {\n+  constructor(client: Anthropic, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 200000]]);\n+\n+    return tokenLimits.get(model) || 200000;\n+  }\n+\n+  getModelMaxOutputLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 4096]]);\n+\n+    return tokenLimits.get(model) || 4096;\n+  }\n+\n+  async createCompletion(\n+    model: string = \"claude-3.5-sonnet\",\n+    localContext: string,\n+    groundTruths: string[],\n+    botName: string,\n+    maxTokens: number\n+  ): Promise<CompletionsType> {\n+    const query = `Perform code review using the diff and spec and output a JSON format with key 'confidenceThreshold': (0-1) and reviewComment: <string>. A 0 indicates that the code review failed and 1 mean its passed and you should output the review comment to be \"This pull request has passed the automated review, a reviewer will review this pull request shortly\". YOU SHOULD ONLY OUTPUT RAW JSON DATA`;\n+    const sysMsg = [\n+      \"You Must obey the following ground truths: \",\n+      JSON.stringify(groundTruths) + \"\\n\",\n+      \"You are tasked with assisting as a GitHub bot by generating a confidence threshold from 0-1 on whether you think the pull difference completes the issue specification/body based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\nSteps\\n1. Understand Context: Analyze the chat history and similar responses to grasp the issue requirements and pull request intent\\n2. Extract Key Information: Identify crucial details from the corpus, even if incomplete, focusing on specifications and their alignment with the pull diff\\n3. Evaluate Completeness: Assess how well the pull diff fulfills the issue specifications, using logical assumptions if needed to fill gaps\\n4. Generate Confidence: Provide a confidence score (0-1) indicating how likely the pull diff satisfies the issue specification\\n5. Generate Review Comment: Based on confidence: If 1, indicate PR passed review and will be reviewed shortly; If <1, provide specific needed changes\\n6. Output Response: Return JSON: {confidenceThreshold: <value>, reviewComment: <string>}\",\n+      `Your name is: ${botName}`,\n+      \"\\n\",\n+      \"Main Context (Provide additional precedence in terms of information): \",\n+      localContext,\n+    ].join(\"\\n\");\n+\n+    this.context.logger.info(`System message: ${sysMsg}`);\n+\n+    const res = await this.client.messages.create({","score":{"reward":3.675,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":71.06500000000001,"syllables":25,"sentences":1,"score":0.8893499999999999},"multiplier":1,"relevance":0.7}},{"id":1899034244,"content":"Isn't there a way to specify that we need json output similar to how OpenAI does it with a header property in this method call?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899034244","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,134 @@\n+/* eslint-disable sonarjs/no-duplicate-string */\n+\n+import Anthropic from \"@anthropic-ai/sdk\";\n+import { Context } from \"../../../types\";\n+import { ContentBlock } from \"@anthropic-ai/sdk/resources\";\n+import { SuperAnthropic } from \"./claude\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+  tokenUsage: {\n+    input: number;\n+    output: number;\n+    total: number;\n+  };\n+}\n+\n+// Type guard for content block\n+interface TextBlock {\n+  type: \"text\";\n+  text: string;\n+}\n+\n+function isTextBlock(content: ContentBlock): content is TextBlock {\n+  return content?.type === \"text\" && typeof content?.text === \"string\";\n+}\n+\n+export class AnthropicCompletion extends SuperAnthropic {\n+  constructor(client: Anthropic, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 200000]]);\n+\n+    return tokenLimits.get(model) || 200000;\n+  }\n+\n+  getModelMaxOutputLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 4096]]);\n+\n+    return tokenLimits.get(model) || 4096;\n+  }\n+\n+  async createCompletion(\n+    model: string = \"claude-3.5-sonnet\",\n+    localContext: string,\n+    groundTruths: string[],\n+    botName: string,\n+    maxTokens: number\n+  ): Promise<CompletionsType> {\n+    const query = `Perform code review using the diff and spec and output a JSON format with key 'confidenceThreshold': (0-1) and reviewComment: <string>. A 0 indicates that the code review failed and 1 mean its passed and you should output the review comment to be \"This pull request has passed the automated review, a reviewer will review this pull request shortly\". YOU SHOULD ONLY OUTPUT RAW JSON DATA`;\n+    const sysMsg = [\n+      \"You Must obey the following ground truths: \",\n+      JSON.stringify(groundTruths) + \"\\n\",\n+      \"You are tasked with assisting as a GitHub bot by generating a confidence threshold from 0-1 on whether you think the pull difference completes the issue specification/body based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\nSteps\\n1. Understand Context: Analyze the chat history and similar responses to grasp the issue requirements and pull request intent\\n2. Extract Key Information: Identify crucial details from the corpus, even if incomplete, focusing on specifications and their alignment with the pull diff\\n3. Evaluate Completeness: Assess how well the pull diff fulfills the issue specifications, using logical assumptions if needed to fill gaps\\n4. Generate Confidence: Provide a confidence score (0-1) indicating how likely the pull diff satisfies the issue specification\\n5. Generate Review Comment: Based on confidence: If 1, indicate PR passed review and will be reviewed shortly; If <1, provide specific needed changes\\n6. Output Response: Return JSON: {confidenceThreshold: <value>, reviewComment: <string>}\",\n+      `Your name is: ${botName}`,\n+      \"\\n\",\n+      \"Main Context (Provide additional precedence in terms of information): \",\n+      localContext,\n+    ].join(\"\\n\");\n+\n+    this.context.logger.info(`System message: ${sysMsg}`);\n+\n+    const res = await this.client.messages.create({","score":{"reward":4.746,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":60.05269230769234,"syllables":37,"sentences":1,"score":0.9994730769230766},"multiplier":1,"relevance":0.7}},{"id":1899034313,"content":"Seems like an incomplete message","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899034313","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,134 @@\n+/* eslint-disable sonarjs/no-duplicate-string */\n+\n+import Anthropic from \"@anthropic-ai/sdk\";\n+import { Context } from \"../../../types\";\n+import { ContentBlock } from \"@anthropic-ai/sdk/resources\";\n+import { SuperAnthropic } from \"./claude\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+  tokenUsage: {\n+    input: number;\n+    output: number;\n+    total: number;\n+  };\n+}\n+\n+// Type guard for content block\n+interface TextBlock {\n+  type: \"text\";\n+  text: string;\n+}\n+\n+function isTextBlock(content: ContentBlock): content is TextBlock {\n+  return content?.type === \"text\" && typeof content?.text === \"string\";\n+}\n+\n+export class AnthropicCompletion extends SuperAnthropic {\n+  constructor(client: Anthropic, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 200000]]);\n+\n+    return tokenLimits.get(model) || 200000;\n+  }\n+\n+  getModelMaxOutputLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 4096]]);\n+\n+    return tokenLimits.get(model) || 4096;\n+  }\n+\n+  async createCompletion(\n+    model: string = \"claude-3.5-sonnet\",\n+    localContext: string,\n+    groundTruths: string[],\n+    botName: string,\n+    maxTokens: number\n+  ): Promise<CompletionsType> {\n+    const query = `Perform code review using the diff and spec and output a JSON format with key 'confidenceThreshold': (0-1) and reviewComment: <string>. A 0 indicates that the code review failed and 1 mean its passed and you should output the review comment to be \"This pull request has passed the automated review, a reviewer will review this pull request shortly\". YOU SHOULD ONLY OUTPUT RAW JSON DATA`;\n+    const sysMsg = [\n+      \"You Must obey the following ground truths: \",\n+      JSON.stringify(groundTruths) + \"\\n\",\n+      \"You are tasked with assisting as a GitHub bot by generating a confidence threshold from 0-1 on whether you think the pull difference completes the issue specification/body based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\nSteps\\n1. Understand Context: Analyze the chat history and similar responses to grasp the issue requirements and pull request intent\\n2. Extract Key Information: Identify crucial details from the corpus, even if incomplete, focusing on specifications and their alignment with the pull diff\\n3. Evaluate Completeness: Assess how well the pull diff fulfills the issue specifications, using logical assumptions if needed to fill gaps\\n4. Generate Confidence: Provide a confidence score (0-1) indicating how likely the pull diff satisfies the issue specification\\n5. Generate Review Comment: Based on confidence: If 1, indicate PR passed review and will be reviewed shortly; If <1, provide specific needed changes\\n6. Output Response: Return JSON: {confidenceThreshold: <value>, reviewComment: <string>}\",\n+      `Your name is: ${botName}`,\n+      \"\\n\",\n+      \"Main Context (Provide additional precedence in terms of information): \",\n+      localContext,\n+    ].join(\"\\n\");\n+\n+    this.context.logger.info(`System message: ${sysMsg}`);\n+\n+    const res = await this.client.messages.create({\n+      model: model,\n+      system: sysMsg,\n+      messages: [\n+        {\n+          role: \"user\",\n+          content: query,\n+        },\n+      ],\n+      max_tokens: maxTokens,\n+      temperature: 0,\n+    });\n+\n+    if (!res.content || res.content.length === 0) {\n+      throw this.context.logger.error(\"Unexpected no response from claude\");\n+    }\n+\n+    // Use type guard to safely handle the response\n+    const content = res.content[0];\n+    if (!isTextBlock(content)) {\n+      throw this.context.logger.error(\"Unexpected response format: Expected text block\");\n+    }\n+\n+    const answer = content.text;\n+\n+    const inputTokens = res.usage.input_tokens;\n+    const outputTokens = res.usage.output_tokens;\n+\n+    this.context.logger.info(`Number of tokens used: ${inputTokens + outputTokens}`);\n+\n+    return {\n+      answer,\n+      groundTruths,\n+      tokenUsage: {\n+        input: inputTokens,\n+        output: outputTokens,\n+        total: inputTokens + outputTokens,\n+      },\n+    };\n+  }\n+\n+  async createGroundTruthCompletion(context: Context, groundTruthSource: string, systemMsg: string): Promise<string | null> {\n+    const {\n+      config: { anthropicAiModel },\n+    } = context;\n+\n+    const res = await this.client.messages.create({\n+      model: anthropicAiModel,\n+      system: systemMsg,\n+      max_tokens: this.getModelMaxTokenLimit(anthropicAiModel),\n+      messages: [\n+        {\n+          role: \"user\",\n+          content: groundTruthSource,\n+        },\n+      ],\n+    });\n+\n+    if (!res.content || res.content.length === 0) {\n+      throw this.context.logger.error(\"Unexpected no response from \");","score":{"reward":1.224,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":66.40000000000003,"syllables":8,"sentences":1,"score":0.9359999999999996},"multiplier":1,"relevance":0.6}},{"id":1899035009,"content":"Can we get cost estimates on reviews? Is it in the $0.01, $0.1 or $1 range? \nI'm starting to think we should allow more frequent reviews, maybe even once per hour. But as part of a separate task we should consider  implementing specific checks for symptoms of abuse instead of doing a timeout, because I can see legitimate use cases for a good developer shipping fast and actually implementing the changes correctly.  \nAlso I hope that we have the scenario handled where they have been rate limited but the assignee converted the draft to a finalized pull, but then the bot pushes it back to a draft because the automated review failed to run.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899035009","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,283 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/github-types\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    } else if (pull_request.user.id !== this.context.payload.sender.id) {\n+      return { status: 200, reason: logger.info(\"Review wasn't requested by pull author\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw this.context.logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${repository.owner.login}/${repository.name}#${number} - ${action}`);\n+\n+    // Use octokit.paginate to automatically handle pagination\n+    const timeline = await this.context.octokit.paginate(this.context.octokit.rest.issues.listEvents, {\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+      per_page: 100, // Optional: customize items per page\n+    });\n+\n+    const reviews = timeline.filter((event) => event.event === \"reviewed\");\n+    const botReviews = reviews.filter((review) => review.actor.type === \"Bot\");\n+\n+    if (!botReviews.length) {\n+      logger.info(\"No bot reviews found\");\n+      return true;\n+    }\n+\n+    const lastReview = botReviews[botReviews.length - 1];\n+    const lastReviewDate = new Date(lastReview.created_at);\n+    const now = new Date();\n+    const diff = now.getTime() - lastReviewDate.getTime();\n+\n+    if (diff < this._oneDay) {\n+      throw this.context.logger.error(\"Only one review per day is allowed\");","score":{"reward":6.699,"formatting":{"content":{"p":{"score":0,"elementCount":1},"br":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":117,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":69.11615384615385,"syllables":167,"sentences":7,"score":0.9088384615384615},"multiplier":1,"relevance":0.7}},{"id":1899035102,"content":"A task spec should never be empty so this logic is wrong. \nEmpty strings are basically banned in our repos and there should be a CI check to enforce this.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899035102","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,283 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/github-types\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    } else if (pull_request.user.id !== this.context.payload.sender.id) {\n+      return { status: 200, reason: logger.info(\"Review wasn't requested by pull author\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw this.context.logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${repository.owner.login}/${repository.name}#${number} - ${action}`);\n+\n+    // Use octokit.paginate to automatically handle pagination\n+    const timeline = await this.context.octokit.paginate(this.context.octokit.rest.issues.listEvents, {\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+      per_page: 100, // Optional: customize items per page\n+    });\n+\n+    const reviews = timeline.filter((event) => event.event === \"reviewed\");\n+    const botReviews = reviews.filter((review) => review.actor.type === \"Bot\");\n+\n+    if (!botReviews.length) {\n+      logger.info(\"No bot reviews found\");\n+      return true;\n+    }\n+\n+    const lastReview = botReviews[botReviews.length - 1];\n+    const lastReviewDate = new Date(lastReview.created_at);\n+    const now = new Date();\n+    const diff = now.getTime() - lastReviewDate.getTime();\n+\n+    if (diff < this._oneDay) {\n+      throw this.context.logger.error(\"Only one review per day is allowed\");\n+    }\n+\n+    logger.info(\"One review per day check passed\");\n+    return true;\n+  }\n+\n+  /**\n+   * Convert a pull request to draft mode\n+   * @param shouldConvert - Whether to convert the PR to draft\n+   * @param params - Parameters including nodeId and octokit instance\n+   */\n+  async convertPullToDraft(nodeId: string, octokit: Context[\"octokit\"]) {\n+    const toDraft = /* GraphQL */ `mutation {\n+      convertPullRequestToDraft(input: {pullRequestId: \"${nodeId}\"}) {\n+        pullRequest {\n+          id\n+          number\n+          isDraft\n+          title\n+        }\n+      }\n+    }`;\n+\n+    try {\n+      await octokit.graphql(toDraft);\n+      this.context.logger.info(`Successfully converted pull request to draft mode.`);\n+    } catch (e) {\n+      throw this.context.logger.error(\"Failed to convert pull request to draft mode: \", { e });\n+    }\n+  }\n+\n+  /**\n+   * Review a pull request using AI completion\n+   * @returns The completion result from the AI model\n+   */\n+  async reviewPull() {\n+    const {\n+      env: { UBIQUITY_OS_APP_NAME },\n+      config: { anthropicAiModel },\n+      adapters: {\n+        anthropic: { completions },\n+      },\n+    } = this.context;\n+\n+    const taskNumber = await this.getTaskNumberFromPullRequest(this.context);\n+    const issue = await fetchIssue(this.context, taskNumber);\n+\n+    if (!issue) {\n+      throw this.context.logger.error(`Error fetching issue, Aborting`, {\n+        owner: this.context.payload.repository.owner.login,\n+        repo: this.context.payload.repository.name,\n+        issue_number: taskNumber,\n+      });\n+    }\n+\n+    const taskSpecification = issue.body ?? \"\";","score":{"reward":4.872,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":81.63000000000002,"syllables":39,"sentences":2,"score":0.7836999999999997},"multiplier":1,"relevance":0.7}},{"id":1899035138,"content":"This English grammar isn't correct","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899035138","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,283 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/github-types\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    } else if (pull_request.user.id !== this.context.payload.sender.id) {\n+      return { status: 200, reason: logger.info(\"Review wasn't requested by pull author\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw this.context.logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${repository.owner.login}/${repository.name}#${number} - ${action}`);\n+\n+    // Use octokit.paginate to automatically handle pagination\n+    const timeline = await this.context.octokit.paginate(this.context.octokit.rest.issues.listEvents, {\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+      per_page: 100, // Optional: customize items per page\n+    });\n+\n+    const reviews = timeline.filter((event) => event.event === \"reviewed\");\n+    const botReviews = reviews.filter((review) => review.actor.type === \"Bot\");\n+\n+    if (!botReviews.length) {\n+      logger.info(\"No bot reviews found\");\n+      return true;\n+    }\n+\n+    const lastReview = botReviews[botReviews.length - 1];\n+    const lastReviewDate = new Date(lastReview.created_at);\n+    const now = new Date();\n+    const diff = now.getTime() - lastReviewDate.getTime();\n+\n+    if (diff < this._oneDay) {\n+      throw this.context.logger.error(\"Only one review per day is allowed\");\n+    }\n+\n+    logger.info(\"One review per day check passed\");\n+    return true;\n+  }\n+\n+  /**\n+   * Convert a pull request to draft mode\n+   * @param shouldConvert - Whether to convert the PR to draft\n+   * @param params - Parameters including nodeId and octokit instance\n+   */\n+  async convertPullToDraft(nodeId: string, octokit: Context[\"octokit\"]) {\n+    const toDraft = /* GraphQL */ `mutation {\n+      convertPullRequestToDraft(input: {pullRequestId: \"${nodeId}\"}) {\n+        pullRequest {\n+          id\n+          number\n+          isDraft\n+          title\n+        }\n+      }\n+    }`;\n+\n+    try {\n+      await octokit.graphql(toDraft);\n+      this.context.logger.info(`Successfully converted pull request to draft mode.`);\n+    } catch (e) {\n+      throw this.context.logger.error(\"Failed to convert pull request to draft mode: \", { e });\n+    }\n+  }\n+\n+  /**\n+   * Review a pull request using AI completion\n+   * @returns The completion result from the AI model\n+   */\n+  async reviewPull() {\n+    const {\n+      env: { UBIQUITY_OS_APP_NAME },\n+      config: { anthropicAiModel },\n+      adapters: {\n+        anthropic: { completions },\n+      },\n+    } = this.context;\n+\n+    const taskNumber = await this.getTaskNumberFromPullRequest(this.context);\n+    const issue = await fetchIssue(this.context, taskNumber);\n+\n+    if (!issue) {\n+      throw this.context.logger.error(`Error fetching issue, Aborting`, {\n+        owner: this.context.payload.repository.owner.login,\n+        repo: this.context.payload.repository.name,\n+        issue_number: taskNumber,\n+      });\n+    }\n+\n+    const taskSpecification = issue.body ?? \"\";\n+    const formattedSpecAndPull = await formatSpecAndPull(this.context, issue);\n+\n+    const groundTruths = await findGroundTruths(this.context, { taskSpecification });\n+    return await completions.createCompletion(\n+      anthropicAiModel,\n+      formattedSpecAndPull,\n+      groundTruths,\n+      UBIQUITY_OS_APP_NAME,\n+      completions.getModelMaxTokenLimit(anthropicAiModel)\n+    );\n+  }\n+\n+  async checkIfPrClosesIssues(\n+    octokit: Context[\"octokit\"],\n+    pr: {\n+      owner: string;\n+      repo: string;\n+      pr_number: number;\n+    }\n+  ) {\n+    const { owner, repo, pr_number } = pr;\n+\n+    try {\n+      const result = await octokit.graphql<IssuesClosedByThisPr>(closedByPullRequestsReferences, {\n+        owner,\n+        repo,\n+        pr_number,\n+      });\n+\n+      const closingIssues = result.repository.pullRequest.closingIssuesReferences.edges.map((edge) => ({\n+        number: edge.node.number,\n+        title: edge.node.title,\n+        url: edge.node.url,\n+        body: edge.node.body,\n+        repository: {\n+          name: edge.node.name,\n+          owner: edge.node.owner,\n+        },\n+      }));\n+\n+      if (closingIssues.length > 0) {\n+        return {\n+          closesIssues: true,\n+          issues: closingIssues,\n+        };\n+      } else {\n+        return {\n+          closesIssues: false,\n+          issues: [],\n+        };\n+      }\n+    } catch (error) {\n+      console.error(\"Error fetching closing issues:\", error);\n+      return {\n+        closesIssues: false,\n+        issues: [],\n+      };\n+    }\n+  }\n+  async getTaskNumberFromPullRequest(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    const {\n+      payload: { pull_request },\n+    } = context;\n+    let issueNumber;\n+\n+    const { issues: closingIssues } = await this.checkIfPrClosesIssues(context.octokit, {\n+      owner: pull_request.base.repo.owner.login,\n+      repo: pull_request.base.repo.name,\n+      pr_number: pull_request.number,\n+    });\n+\n+    if (closingIssues.length === 0) {\n+      await this.convertPullToDraft(context.payload.pull_request.node_id, context.octokit);\n+      throw this.context.logger.error(\"You need to link an issue and after that convert the PR to ready for review\");\n+    } else if (closingIssues.length > 1) {\n+      throw this.context.logger.error(\"Multiple tasks linked to this PR, needs investigated to see how best to handle it.\", {","score":{"reward":1.386,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.6}},{"id":1899035182,"content":"You can't disable rules.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899035182","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,43 @@\n+import { PullReviewer } from \"../handlers/pull-reviewer\";\n+import { Context, SupportedEvents } from \"../types\";\n+import { CallbackResult, ProxyCallbacks } from \"../types/proxy\";\n+\n+/**\n+ * The `callbacks` object defines an array of callback functions for each supported event type.\n+ *\n+ * Since multiple callbacks might need to be executed for a single event, we store each\n+ * callback in an array. This design allows for extensibility and flexibility, enabling\n+ * us to add more callbacks for a particular event without modifying the core logic.\n+ */\n+const callbacks = {\n+  \"pull_request.opened\": [(context: Context) => new PullReviewer(context).performPullPrecheck()],\n+  \"pull_request.ready_for_review\": [(context: Context) => new PullReviewer(context).performPullPrecheck()],\n+} as ProxyCallbacks;\n+\n+export async function callCallbacks(context: Context, eventName: SupportedEvents): Promise<CallbackResult> {\n+  if (!callbacks[eventName]) {\n+    context.logger.info(`No callbacks found for event ${eventName}`);\n+    return { status: 204, reason: \"skipped\" };\n+  }\n+\n+  return (await Promise.all(callbacks[eventName].map((callback) => handleCallback(callback, context))))[0];\n+}\n+\n+/**\n+ * Why do we need this wrapper function?\n+ *\n+ * By using a generic `Function` type for the callback parameter, we bypass strict type\n+ * checking temporarily. This allows us to pass a standard `Context` object, which we know\n+ * contains the correct event and payload types, to the callback safely.\n+ *\n+ * We can trust that the `ProxyCallbacks` type has already ensured that each callback function\n+ * matches the expected event and payload types, so this function provides a safe and\n+ * flexible way to handle callbacks without introducing type or logic errors.\n+ *\n+ * In this updated version, the callbacks are arrow functions that instantiate the PullReviewer\n+ * class and call its methods, rather than standalone functions.\n+ */\n+// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type","score":{"reward":1.632,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":66.40000000000003,"syllables":8,"sentences":1,"score":0.9359999999999996},"multiplier":1,"relevance":0.8}},{"id":1899035234,"content":"Is this for parsing JavaScript objects inside of a runtime? Like from the console? Why is this here?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899035234","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":2.58,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":78.54500000000002,"syllables":26,"sentences":3,"score":0.8145499999999999},"multiplier":1,"relevance":0.5}},{"id":1899035355,"content":"This actually should be dynamically populated from gitignore and [linguist-generated](https://docs.github.com/en/repositories/working-with-files/managing-files/customizing-how-changed-files-appear-on-github).","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899035355","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,105 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+import { Context } from \"../../types\";\n+\n+export async function processPullRequestDiff(diff: string, tokenLimits: TokenLimits, logger: Context[\"logger\"]) {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+\n+  // parse the diff into per-file diffs for quicker processing\n+  const excludedFiles = [\"bun.lockb\"];","score":{"reward":4.767,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":11.088181818181852,"syllables":24,"sentences":1,"score":0.5108818181818185},"multiplier":1,"relevance":0.7}},{"id":1899035440,"content":"Just use the real tokenizer instead \nThere's no point in doing this guess work when you can have 100% accurate results using the correct method.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899035440","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,105 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+import { Context } from \"../../types\";\n+\n+export async function processPullRequestDiff(diff: string, tokenLimits: TokenLimits, logger: Context[\"logger\"]) {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+\n+  // parse the diff into per-file diffs for quicker processing\n+  const excludedFiles = [\"bun.lockb\"];\n+  const perFileDiffs = parsePerFileDiffs(diff).filter((file) => !excludedFiles.includes(file.filename));\n+\n+  // quick estimate using a simple heuristic; 3.5 characters per token","score":{"reward":5.376,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":63.306538461538494,"syllables":36,"sentences":1,"score":0.966934615384615},"multiplier":1,"relevance":0.8}},{"id":1899035642,"content":"A better approach would be to import this from some type of maintained library. There's so many more of these lock files in other programming language ecosystems. \nHard coding a list like this is almost always not the best approach. \nWe can also follow some heuristics like never attempting to parse binary files which I presume is buns lock file format.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899035642","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,104 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { logger } from \"../errors\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+\n+export async function processPullRequestDiff(diff: string, tokenLimits: TokenLimits) {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+\n+  // parse the diff into per-file diffs for quicker processing\n+  const perFileDiffs = parsePerFileDiffs(diff);\n+\n+  // quick estimate using a simple heuristic; 3.5 characters per token\n+  const estimatedFileDiffStats = perFileDiffs.map(({ filename, diffContent }) => {\n+    const estimatedTokenCount = Math.ceil(diffContent.length / 3.5);\n+    return { filename, estimatedTokenCount, diffContent };\n+  });\n+\n+  estimatedFileDiffStats.sort((a, b) => a.estimatedTokenCount - b.estimatedTokenCount); // Smallest first\n+\n+  let currentTokenCount = runningTokenCount;\n+  const includedFileDiffs = [];\n+\n+  // Using the quick estimate, include as many files as possible without exceeding token limits\n+  for (const file of estimatedFileDiffStats) {\n+    if (currentTokenCount + file.estimatedTokenCount > tokensRemaining) {\n+      logger.info(`Skipping ${file.filename} to stay within token limits.`);\n+      continue;\n+    }\n+    includedFileDiffs.push(file);\n+    currentTokenCount += file.estimatedTokenCount;\n+  }\n+\n+  // If no files can be included, return null\n+  if (includedFileDiffs.length === 0) {\n+    logger.error(`Cannot include any files from diff without exceeding token limits.`);\n+    return { diff: null };\n+  }\n+\n+  // Accurately calculate token count for included files we have approximated to be under the limit\n+  const accurateFileDiffStats = await Promise.all(\n+    includedFileDiffs.map(async (file) => {\n+      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n+      const tokenCount = tokenCountArray.length;\n+      return { ...file, tokenCount };\n+    })\n+  );\n+\n+  // Take an accurate reading of our current collection of files within the diff\n+  currentTokenCount = accurateFileDiffStats.reduce((sum, file) => sum + file.tokenCount, runningTokenCount);\n+\n+  // Remove files from the end of the list until we are within token limits\n+  while (currentTokenCount > tokensRemaining && accurateFileDiffStats.length > 0) {\n+    const removedFile = accurateFileDiffStats.pop();\n+    currentTokenCount -= removedFile?.tokenCount || 0;\n+    logger.info(`Excluded ${removedFile?.filename || \"Unknown filename\"} after accurate token count exceeded limits.`);\n+  }","score":{"reward":6.888,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":62,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":62.837983870967776,"syllables":94,"sentences":4,"score":0.9716201612903222},"multiplier":1,"relevance":0.7}},{"id":1899111705,"content":"We support any branch name to be targeted from the kernel config","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899111705","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -8,6 +8,8 @@ jobs:\n   deploy:\n     runs-on: ubuntu-latest\n     name: Deploy\n+    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}","score":{"reward":2.304,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":81.85500000000002,"syllables":16,"sentences":1,"score":0.7814499999999999},"multiplier":1,"relevance":0.6}},{"id":1899151794,"content":"I find this very hard to believe because there's many tool calling applications with Claude.  \nCline, the vscode extension, is a sophisticated example of this. Their code is open sourced so you can probably see how they mastered reliable responses.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899151794","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":5.964,"formatting":{"content":{"p":{"score":0,"elementCount":1},"br":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":62.96821138211382,"syllables":63,"sentences":3,"score":0.9703178861788618},"multiplier":1,"relevance":0.7}},{"id":1899240742,"content":"This thread isn't resolved \n@gentlementlegen rfc","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899240742","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -16,31 +16,25 @@ on:\n       ref:\n         description: \"Ref\"\n       signature:\n-        description: \"The kernel signature\"\n+        description: \"Signature sent from the Kernel\"\n+      command:\n+        description: \"Command\"\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Pull review\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n+    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}","score":{"reward":1.335,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":54.70142857142861,"syllables":12,"sentences":1,"score":0.947014285714286},"multiplier":1,"relevance":0.5}},{"id":1899991835,"content":"You should also throw the same error instead of defaulting to 4096 for every model randomly.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899991835","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -42,13 +43,7 @@ export class AnthropicCompletion extends SuperAnthropic {\n     return tokenLimits.get(model) || 4096;","score":{"reward":3.888,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":53.120000000000005,"syllables":26,"sentences":1,"score":0.9312},"multiplier":1,"relevance":0.8}},{"id":1899991954,"content":"```suggestion\r\n      throw this.context.logger.error(\"Unexpected no response from LLM\");\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899991954","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -121,7 +116,7 @@ export class AnthropicCompletion extends SuperAnthropic {\n     });\n \n     if (!res.content || res.content.length === 0) {\n-      throw this.context.logger.error(\"Unexpected no response from \");\n+      throw this.context.logger.error(\"Unexpected no response from claude\");","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1899992703,"content":"$0.10 per review on average is definitely okay. I think up to $0.50 is even okay. After that I think we might need to try and optimize the usage. It could be interesting one day to allocate a part of the project budget to paying the LLM bill as well. Maybe it could be taken out of the assignees reward some day in the future.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899992703","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,283 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/github-types\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    } else if (pull_request.user.id !== this.context.payload.sender.id) {\n+      return { status: 200, reason: logger.info(\"Review wasn't requested by pull author\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw this.context.logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${repository.owner.login}/${repository.name}#${number} - ${action}`);\n+\n+    // Use octokit.paginate to automatically handle pagination\n+    const timeline = await this.context.octokit.paginate(this.context.octokit.rest.issues.listEvents, {\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+      per_page: 100, // Optional: customize items per page\n+    });\n+\n+    const reviews = timeline.filter((event) => event.event === \"reviewed\");\n+    const botReviews = reviews.filter((review) => review.actor.type === \"Bot\");\n+\n+    if (!botReviews.length) {\n+      logger.info(\"No bot reviews found\");\n+      return true;\n+    }\n+\n+    const lastReview = botReviews[botReviews.length - 1];\n+    const lastReviewDate = new Date(lastReview.created_at);\n+    const now = new Date();\n+    const diff = now.getTime() - lastReviewDate.getTime();\n+\n+    if (diff < this._oneDay) {\n+      throw this.context.logger.error(\"Only one review per day is allowed\");","score":{"reward":5.778,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":67,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":78.42746268656717,"syllables":94,"sentences":7,"score":0.8157253731343284},"multiplier":1,"relevance":0.6}},{"id":1899994353,"content":"I think you should write \"pull request\" out fully in the error message.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899994353","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -197,9 +197,9 @@ describe(\"Pull Reviewer tests\", () => {\n \n     await expect(pullReviewer.getTaskNumberFromPullRequest(context)).rejects.toMatchObject({\n       logMessage: {\n-        diff: \"```diff\\n! You need to link an issue and after that convert the PR to ready for review\\n```\",\n+        diff: \"```diff\\n! You need to link an issue before converting the PR to ready for review.\\n```\",\n         level: \"error\",\n-        raw: \"You need to link an issue and after that convert the PR to ready for review\",\n+        raw: \"You need to link an issue before converting the PR to ready for review.\",","score":{"reward":2.025,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.0092307692308,"syllables":17,"sentences":1,"score":0.7699076923076921},"multiplier":1,"relevance":0.5}},{"id":1903327344,"content":"Empty strings always seems like a bad idea.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1903327344","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,94 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+import { Context } from \"../../types\";\n+import { getExcludedFiles } from \"../excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+async function filterAndSortDiffs(diff: string, excludedPatterns: string[]): Promise<{ filename: string; tokenCount: number; diffContent: string }[]> {\n+  const perFileDiffs = parsePerFileDiffs(diff).filter((file) => excludedPatterns.every((pattern) => !minimatch(file.filename, pattern)));\n+\n+  const accurateFileDiffStats = await Promise.all(\n+    perFileDiffs.map(async (file) => {\n+      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n+      return { filename: file.filename, tokenCount: tokenCountArray.length, diffContent: file.diffContent };\n+    })\n+  );\n+\n+  // Sort files by token count in ascending order\n+  return accurateFileDiffStats.sort((a, b) => a.tokenCount - b.tokenCount);\n+}\n+\n+function selectIncludedFiles(\n+  files: { filename: string; tokenCount: number; diffContent: string }[],\n+  tokenLimits: TokenLimits,\n+  logger: Context[\"logger\"]\n+): typeof files {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+  let currentTokenCount = runningTokenCount;\n+  const includedFiles = [];\n+\n+  for (const file of files) {\n+    if (currentTokenCount + file.tokenCount > tokensRemaining) {\n+      logger.info(`Skipping ${file.filename} to stay within token limits.`);\n+      continue;\n+    }\n+    includedFiles.push(file);\n+    currentTokenCount += file.tokenCount;\n+  }\n+\n+  return includedFiles;\n+}\n+\n+export async function processPullRequestDiff(diff: string, tokenLimits: TokenLimits, logger: Context[\"logger\"]) {\n+  const excludedFilePatterns = await getExcludedFiles();\n+  const sortedDiffs = await filterAndSortDiffs(diff, excludedFilePatterns);\n+\n+  const includedFiles = selectIncludedFiles(sortedDiffs, tokenLimits, logger);\n+\n+  if (includedFiles.length === 0) {\n+    logger.error(`Cannot include any files from diff without exceeding token limits.`);\n+    return { diff: null };\n+  }\n+\n+  // Build and return the final diff\n+  const currentDiff = includedFiles.map((file) => file.diffContent).join(\"\\n\");\n+  return { diff: currentDiff };\n+}\n+\n+// Helper to speed up tokenization\n+async function encodeAsync(text: string, options: EncodeOptions): Promise<number[]> {\n+  return new Promise((resolve) => {\n+    const result = encode(text, options);\n+    resolve(result);\n+  });\n+}\n+\n+// Helper to parse a diff into per-file diffs\n+function parsePerFileDiffs(diff: string): { filename: string; diffContent: string }[] {\n+  // regex to capture diff sections, including the last file\n+  const diffPattern = /^diff --git a\\/(.*?) b\\/.*$/gm;\n+  let match: RegExpExecArray | null;\n+  const perFileDiffs = [];\n+  let lastIndex = 0;\n+\n+  // iterate over each file in the diff\n+  while ((match = diffPattern.exec(diff)) !== null) {\n+    const filename = match[1];\n+    const startIndex = match.index;\n+\n+    // if we have pushed a file into the array, \"append\" the diff content\n+    if (perFileDiffs.length > 0) {\n+      perFileDiffs[perFileDiffs.length - 1].diffContent = diff.substring(lastIndex, startIndex).trim();\n+    }\n+\n+    perFileDiffs.push({ filename, diffContent: \"\" });","score":{"reward":1.128,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.4}},{"id":1903327735,"content":"Empty strings always seems like a bad idea.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1903327735","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,64 @@\n+import { Context } from \"../types\";\n+\n+interface GitAttributes {\n+  pattern: string;\n+  attributes: { [key: string]: string | boolean };\n+}\n+\n+async function parseGitAttributes(content: string): Promise<GitAttributes[]> {\n+  const lines = content.split(\"\\n\");\n+  return lines\n+    .map((line) => {\n+      line = line.trim();\n+      if (!line || line.startsWith(\"#\")) return null;\n+\n+      const parts = line.split(/\\s+/);\n+      if (parts.length < 2) return null;\n+\n+      const pattern = parts[0];\n+      const attributes: { [key: string]: string | boolean } = {};\n+\n+      for (let i = 1; i < parts.length; i++) {\n+        const attr = parts[i];\n+        if (attr.includes(\"=\")) {\n+          const [key, value] = attr.split(\"=\");\n+          attributes[key.trim()] = value.trim();\n+        } else {\n+          attributes[attr.trim()] = true;\n+        }\n+      }\n+\n+      return { pattern, attributes };\n+    })\n+    .filter((item): item is GitAttributes => item !== null);\n+}\n+\n+export async function getExcludedFiles(context: Context) {\n+  const [gitIgnoreContent, gitAttributesContent] = await Promise.all([getFileContent(\".gitignore\", context), getFileContent(\".gitattributes\", context)]);\n+\n+  const gitAttributesLinguistGenerated = (await parseGitAttributes(gitAttributesContent))\n+    .filter((v) => v.attributes[\"linguist-generated\"])\n+    .map((v) => v.pattern);\n+  const gitIgnoreExcludedFiles = gitIgnoreContent.split(\"\\n\").filter((v) => !v.startsWith(\"#\"));\n+  return [...gitAttributesLinguistGenerated, ...gitIgnoreExcludedFiles];\n+}\n+\n+async function getFileContent(path: string, context: Context): Promise<string> {\n+  try {\n+    const response = await context.octokit.rest.repos.getContent({\n+      owner: context.payload.repository.owner.login,\n+      repo: context.payload.repository.name,\n+      path,\n+      ref: context.payload.pull_request.head.sha,\n+    });\n+\n+    // GitHub API returns content as base64\n+    if (\"content\" in response.data && !Array.isArray(response.data)) {\n+      return Buffer.from(response.data.content, \"base64\").toString(\"utf-8\");\n+    }\n+    return \"\";\n+  } catch {\n+    // File doesn't exist\n+    return \"\";","score":{"reward":1.128,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.4}},{"id":1903334857,"content":"The CI is supposed to fail with these empty strings but it doesn't seem to be working.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1903334857","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -33,12 +33,32 @@ async function parseGitAttributes(content: string): Promise<GitAttributes[]> {\n     .filter((item): item is GitAttributes => item !== null);\n }\n \n-export async function getExcludedFiles() {\n-  const gitIgnoreContent = await readFile(\".gitignore\", \"utf-8\");\n-  const gitAttributesContent = await readFile(\".gitattributes\", \"utf-8\");\n+export async function getExcludedFiles(context: Context) {\n+  const [gitIgnoreContent, gitAttributesContent] = await Promise.all([getFileContent(\".gitignore\", context), getFileContent(\".gitattributes\", context)]);\n+\n   const gitAttributesLinguistGenerated = (await parseGitAttributes(gitAttributesContent))\n     .filter((v) => v.attributes[\"linguist-generated\"])\n     .map((v) => v.pattern);\n   const gitIgnoreExcludedFiles = gitIgnoreContent.split(\"\\n\").filter((v) => !v.startsWith(\"#\"));\n   return [...gitAttributesLinguistGenerated, ...gitIgnoreExcludedFiles];\n }\n+\n+async function getFileContent(path: string, context: Context): Promise<string> {\n+  try {\n+    const response = await context.octokit.rest.repos.getContent({\n+      owner: context.payload.repository.owner.login,\n+      repo: context.payload.repository.name,\n+      path,\n+      ref: context.payload.pull_request.head.sha,\n+    });\n+\n+    // GitHub API returns content as base64\n+    if (\"content\" in response.data && !Array.isArray(response.data)) {\n+      return Buffer.from(response.data.content, \"base64\").toString(\"utf-8\");\n+    }\n+    return \"\";\n+  } catch {\n+    // File doesn't exist\n+    return \"\";","score":{"reward":3.507,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":89.865,"syllables":21,"sentences":1,"score":0.70135},"multiplier":1,"relevance":0.7}},{"id":1912023188,"content":"I assumed that the worker would timeout before the LLM finishes generating a response. \nThis was one of the main rationales for supporting GitHub Actions based plugins - the longer run times.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1912023188","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,47 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/daemon-pull-review`\n \n-## Prerequisites\n+This is a high context aware GitHub organization integrated bot that uses the Anthropic Claude 3.5 Sonnet model to provide automated reviews and feeback to Github pull requests.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Usage\n \n-## Getting Started\n+Just convert a pull request to be ready for review and the bot automatically reviews and requests changes if necessary\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+## How it works\n \n-## Creating a new plugin\n+With its huge context window, we are able to feed the entire issue specification and the pull request to the model which we obtain. This allows the model to have a very deep understanding of the current scope and provide highly relevant reviews.\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+## Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n-\n-- Your plugin config should look similar to this:\n+`.ubiquity-os.config.yml`:\n \n ```yml\n plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n+  - uses:\n       - plugin: http://localhost:4000\n         with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-          customStringsUrl: \"https://raw.githubusercontent.com/ubiquibot/plugin-template/development/strings.json\"\n+          openRouterAiModel: \"\" # Optional - defaults to \"anthropic/claude-3.5-sonnet\"\n+          openRouterBaseUrl: \"\" # Optional - defaults to Open Router's API endpoint\n ```\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n-\n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n-\n-## Testing a plugin\n+`.dev.vars` (for local testing):\n \n-### Worker Plugins\n+specify the OpenRouterBase URL in the `.ubiquity-os.config.yml` file and set the `OPENROUTER_API_KEY` in the `.dev.vars` file.\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n-\n-```ts\n-await fetch(\"http://localhost:4000/\", {\n-  method: \"POST\",\n-  headers: {\n-    \"Content-Type\": \"application/json\",\n-  },\n-  body: JSON.stringify({\n-    stateId: \"\",\n-    eventName: \"\",\n-    eventPayload: \"\",\n-    settings: \"\",\n-    ref: \"\",\n-    authToken: \"\",\n-  }),\n-});\n+```sh\n+OPENROUTER_API_KEY=YOUR_OPENROUTER_API_KEY\n+UBIQUITY_OS_APP_NAME=\"UbiquityOS\"\n ```\n \n-A full example can be found [here](https://github.com/ubiquibot/assistive-pricing/blob/623ea3f950f04842f2d003bda3fc7b7684e41378/tests/http/request.http).\n-\n-#### Deploying the Worker\n-\n-For testing purposes, the worker can be deployed through the Worker Deploy and Worker Delete workflows. It requires to\n-create a personal [Cloudflare Account](https://www.cloudflare.com/), and fill the `CLOUDFLARE_ACCOUNT_ID` and `CLOUDFLARE_API_TOKEN` within your\n-GitHub Action Secrets.\n+## Custom Port Configuration\n \n-### Action Plugins\n+If you specify a different port in your config file instead of the default port 4005, you'll need to start the development server with the corresponding port number:\n \n-- Ensure the kernel is running and listening for events.\n-- Fire an event in/to the repo where the kernel is installed. This can be done in a number of ways, the easiest being via the GitHub UI or using the GitHub API, such as posting a comment, opening an issue, etc in the org/repo where the kernel is installed.\n-- The kernel will process the event and dispatch it using the settings defined in your `.ubiquibot-config.yml`.\n-- The `compute.yml` workflow will run and execute your plugin's logic.\n-- You can view the logs in the Actions tab of your repo.\n-\n-[Nektos Act](https://github.com/nektos/act) - a tool for running GitHub Actions locally.\n-\n-## More information\n-\n-- [Full Ubiquibot Configuration](https://github.com/ubiquity/ubiquibot/blob/0fde7551585499b1e0618ec8ea5e826f11271c9c/src/types/configuration-types.ts#L62) - helpful for defining your plugin's settings as they are strongly typed and will be validated by the kernel.\n-- [Ubiquibot V1](https://github.com/ubiquity/ubiquibot) - helpful for porting V1 functionality to V2, helper/utility functions, types, etc. Everything is based on the V1 codebase but with a more modular approach. When using V1 code, keep in mind that most all code will need refactored to work with the new V2 architecture.\n+```sh\n+bun wrangler dev --env dev --port <your-port-number>","score":{"reward":4.446,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":54.65088709677423,"syllables":50,"sentences":2,"score":0.9465088709677423},"multiplier":1,"relevance":0.6}},{"id":2561874908,"content":"Looking forward to this plugin. @gentlementlegen hope you can prioritize this after Christmas","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2561874908","commentType":"PULL_COLLABORATOR","score":{"reward":0.828,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":44.05288461538464,"syllables":24,"sentences":2,"score":0.8405288461538464},"multiplier":1,"relevance":0.2}},{"id":2567418435,"content":"@sshivaditya2019 should we be using openrouter instead for all of our plugins?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2567418435","commentType":"PULL_COLLABORATOR","score":{"reward":1.179,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":46.60500000000002,"syllables":21,"sentences":1,"score":0.8660500000000002},"multiplier":1,"relevance":0.3}},{"id":2585663195,"content":"Then study [cline's implementation](https://github.com/cline/cline). \nClaude is much better dealing with code changes and it's used in similar tools, like cline. \nNo chance we are using Gemini I've never heard any compliments on it in the context of dealing with code.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2585663195","commentType":"PULL_COLLABORATOR","score":{"reward":8.589,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":74.24015503875972,"syllables":60,"sentences":3,"score":0.8575984496124027},"multiplier":1,"relevance":0.7}},{"id":2589027497,"content":"Can you show me the link to your QA pull @gentlementlegen easier for me to follow along what the problem is","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2589027497","commentType":"PULL_COLLABORATOR","score":{"reward":1.746,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":68.69142857142859,"syllables":29,"sentences":1,"score":0.9130857142857142},"multiplier":1,"relevance":0.3}},{"id":2589118147,"content":"The \"This pull request has passed the automated review, a reviewer will review this pull request shortly\" seems unnecessary. \nYou're not handling the error \"unexpected no response from LLM\"","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2589118147","commentType":"PULL_COLLABORATOR","score":{"reward":5.082,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":56.25000000000003,"syllables":48,"sentences":2,"score":0.9625000000000002},"multiplier":1,"relevance":0.7}},{"id":2589321327,"content":"I am thinking of how we can indicate that the review has passed without cluttering the timeline with comments. \nI want to show that the checking logic ran successfully but I can imagine that will get repetitive and verbose as they continue pushing commits.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2589321327","commentType":"PULL_COLLABORATOR","score":{"reward":5.22,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":51.83681818181819,"syllables":69,"sentences":2,"score":0.9183681818181819},"multiplier":1,"relevance":0.6}},{"id":2591886707,"content":"The possible problem with an approval is that it will imply that the pull can be merged. It is intended to act as a \"pre-check\" and not imply to the assignee that their work has been accepted. \nFurthermore we have the daemon-merging plugin that would automatically merge it in after a week even without human review. \nMaybe we can emoji react a thumbs up on the pull body to indicate a successful run. 👍","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2591886707","commentType":"PULL_COLLABORATOR","score":{"reward":5.994,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":75,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":69.78600000000003,"syllables":108,"sentences":5,"score":0.9021399999999997},"multiplier":1,"relevance":0.6}},{"id":2612408583,"content":"This looks good.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2612408583","commentType":"PULL_COLLABORATOR","score":{"reward":0.276,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}},{"id":2612442399,"content":"This is an interesting idea. Can you do that?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2612442399","commentType":"PULL_COLLABORATOR","score":{"reward":0.936,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":80.06750000000002,"syllables":13,"sentences":2,"score":0.7993249999999997},"multiplier":1,"relevance":0.3}},{"id":2613942912,"content":"QA looks fine @gentlementlegen please leave a review.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2613942912","commentType":"PULL_COLLABORATOR","score":{"reward":0.594,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":61.24000000000001,"syllables":13,"sentences":1,"score":0.9875999999999999},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"reviews":[{"reviewId":2503440167,"effect":{"addition":530,"deletion":469},"reward":29.97,"priority":3},{"reviewId":2504719157,"effect":{"addition":40,"deletion":16},"reward":1.68,"priority":3},{"reviewId":2524861294,"effect":{"addition":223,"deletion":176},"reward":11.97,"priority":3},{"reviewId":2526280559,"effect":{"addition":113,"deletion":95},"reward":6.24,"priority":3},{"reviewId":2526284280,"effect":{"addition":9,"deletion":9},"reward":0.54,"priority":3},{"reviewId":2530953551,"effect":{"addition":148,"deletion":141},"reward":8.67,"priority":3},{"reviewId":2544756618,"effect":{"addition":135,"deletion":57},"reward":5.76,"priority":3},{"reviewId":2572519237,"effect":{"addition":157,"deletion":76},"reward":6.99,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 278.472 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>8</td><td>71.82</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.27</td></tr><tr><td>Issue</td><td>Comment</td><td>7</td><td>37.764</td></tr><tr><td>Review</td><td>Comment</td><td>49</td><td>165.618</td></tr></tbody></table></details>"},"gentlementlegen":{"total":202.548,"userId":9807008,"comments":[{"id":2523752160,"content":"You need to give a `command: null` at least in your payload to make the network call correct (I do not know how you're testing it).","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2523752160","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.389,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":83.32400000000003,"syllables":29,"sentences":1,"score":0.7667599999999998},"multiplier":1,"relevance":0.7}},{"id":2525045046,"content":"You need to either provide the good set of public and private keys or disable the signature checks on your local setup.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2525045046","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.654,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":61.45045454545455,"syllables":32,"sentences":1,"score":0.9854954545454545},"multiplier":1,"relevance":0.6}},{"id":2525279594,"content":"Sorry it's a big of a vague question. What kind of event? Not delivered you mean the kernel not sending them or the plugin not picking them up?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2525279594","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.42,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":83.2509195402299,"syllables":39,"sentences":3,"score":0.767490804597701},"multiplier":1,"relevance":0.5}},{"id":2525446271,"content":"That is the current behavior we have when gpt doesn't return proper json.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2525446271","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.74,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":77.81071428571428,"syllables":19,"sentences":1,"score":0.8218928571428572},"multiplier":1,"relevance":0.4}},{"id":2533407927,"content":"@ishowvel you got a comment on your PR.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/45#issuecomment-2533407927","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.846,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.3}},{"id":1884816319,"content":"this should summon the `action.yml` file located at the root of the repo.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1884816319","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -35,12 +35,11 @@ jobs:\n         with:\n           node-version: \"20.10.0\"\n \n-      - name: install dependencies\n-        run: yarn\n-\n       - name: execute directive\n-        run: npx tsx ./src/main.ts\n-        id: plugin-name\n+        run: node ./dist/index.js","score":{"reward":2.304,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":81.85500000000002,"syllables":16,"sentences":1,"score":0.7814499999999999},"multiplier":1,"relevance":0.6}},{"id":1885496317,"content":"An `action.yml` similar of https://github.com/ubiquity-os-marketplace/text-conversation-rewards/blob/development/action.yml should be at the root of the repo, and triggered by this action file.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885496317","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -35,12 +35,11 @@ jobs:\n         with:\n           node-version: \"20.10.0\"\n \n-      - name: install dependencies\n-        run: yarn\n-\n       - name: execute directive\n-        run: npx tsx ./src/main.ts\n-        id: plugin-name\n+        run: node ./dist/index.js","score":{"reward":7.176,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":55.685,"syllables":50,"sentences":3,"score":0.95685},"multiplier":1,"relevance":0.8}},{"id":1897522754,"content":"Why do we setup node if we use bun?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1897522754","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -4,20 +4,30 @@ on:\n   push:\n \n jobs:\n-  spellcheck:\n+  format-check:\n     name: Check for formatting errors\n     runs-on: ubuntu-latest\n \n     steps:\n       - name: Checkout code\n         uses: actions/checkout@v4\n \n-      - name: Set up Node.js\n+      - name: Setup Node","score":{"reward":2.616,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":103.70000000000002,"syllables":10,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1897523678,"content":"`wasn't`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1897523678","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,283 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/pull-requests\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    } else if (pull_request.user.id !== this.context.payload.sender.id) {\n+      return { status: 200, reason: logger.info(\"Review was'nt requested by pull author\").logMessage.raw };","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.5}},{"id":1897524043,"content":"Add `/* GraphQl */` to help with auto-completion and formatting.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1897524043","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,283 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/pull-requests\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    } else if (pull_request.user.id !== this.context.payload.sender.id) {\n+      return { status: 200, reason: logger.info(\"Review was'nt requested by pull author\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw this.context.logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${repository.owner.login}/${repository.name}#${number} - ${action}`);\n+\n+    // Use octokit.paginate to automatically handle pagination\n+    const timeline = await this.context.octokit.paginate(this.context.octokit.rest.issues.listEvents, {\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+      per_page: 100, // Optional: customize items per page\n+    });\n+\n+    const reviews = timeline.filter((event) => event.event === \"reviewed\");\n+    const botReviews = reviews.filter((review) => review.actor.type === \"Bot\");\n+\n+    if (!botReviews.length) {\n+      logger.info(\"No bot reviews found\");\n+      return true;\n+    }\n+\n+    const lastReview = botReviews[botReviews.length - 1];\n+    const lastReviewDate = new Date(lastReview.created_at);\n+    const now = new Date();\n+    const diff = now.getTime() - lastReviewDate.getTime();\n+\n+    if (diff < this._oneDay) {\n+      throw this.context.logger.error(\"Only one review per day is allowed\");\n+    }\n+\n+    logger.info(\"One review per day check passed\");\n+    return true;\n+  }\n+\n+  /**\n+   * Convert a pull request to draft mode\n+   * @param shouldConvert - Whether to convert the PR to draft\n+   * @param params - Parameters including nodeId and octokit instance\n+   */\n+  async convertPullToDraft(nodeId: string, octokit: Context[\"octokit\"]) {\n+    const toDraft = `mutation {","score":{"reward":1.782,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":61.24000000000001,"syllables":13,"sentences":1,"score":0.9875999999999999},"multiplier":1,"relevance":0.6}},{"id":1897524611,"content":"Why do we need dotenv?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1897524611","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,7 @@\n import { Type as T } from \"@sinclair/typebox\";\n import { StaticDecode } from \"@sinclair/typebox\";\n-import \"dotenv/config\";\n-import { StandardValidator } from \"typebox-validators\";\n+import dotenv from \"dotenv\";\n+dotenv.config();","score":{"reward":1.449,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":100.24000000000002,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1897524828,"content":"Doesn't Github types already provide this?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1897524828","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1 @@\n+export type CodeReviewStatus = \"APPROVE\" | \"REQUEST_CHANGES\" | \"COMMENT\";","score":{"reward":1.848,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":66.7871428571429,"syllables":11,"sentences":1,"score":0.9321285714285711},"multiplier":1,"relevance":0.7}},{"id":1899292378,"content":"This code is correct. It just determines which environment will be pulled from the GitHub Actions, and we currently only have two. We currently don't have one per branch because they have to be manually created, and these don't relate to the kernel nor branch runs.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1899292378","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -16,31 +16,25 @@ on:\n       ref:\n         description: \"Ref\"\n       signature:\n-        description: \"The kernel signature\"\n+        description: \"Signature sent from the Kernel\"\n+      command:\n+        description: \"Command\"\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Pull review\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n+    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}","score":{"reward":7.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":74.27000000000001,"syllables":66,"sentences":3,"score":0.8573},"multiplier":1,"relevance":0.8}},{"id":1900372993,"content":"Taking into account linguist can be a good idea, but if we forget some generated file that could lead to crazy results in the diff. I was also thinking of test files like the JSONs we use to simulate github API calls that have lots of contents, or even `html` results in plugins like `text-conversation-rewards`.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1900372993","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,104 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { logger } from \"../errors\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+\n+export async function processPullRequestDiff(diff: string, tokenLimits: TokenLimits) {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+\n+  // parse the diff into per-file diffs for quicker processing\n+  const perFileDiffs = parsePerFileDiffs(diff);\n+\n+  // quick estimate using a simple heuristic; 3.5 characters per token\n+  const estimatedFileDiffStats = perFileDiffs.map(({ filename, diffContent }) => {\n+    const estimatedTokenCount = Math.ceil(diffContent.length / 3.5);\n+    return { filename, estimatedTokenCount, diffContent };\n+  });\n+\n+  estimatedFileDiffStats.sort((a, b) => a.estimatedTokenCount - b.estimatedTokenCount); // Smallest first\n+\n+  let currentTokenCount = runningTokenCount;\n+  const includedFileDiffs = [];\n+\n+  // Using the quick estimate, include as many files as possible without exceeding token limits\n+  for (const file of estimatedFileDiffStats) {\n+    if (currentTokenCount + file.estimatedTokenCount > tokensRemaining) {\n+      logger.info(`Skipping ${file.filename} to stay within token limits.`);\n+      continue;\n+    }\n+    includedFileDiffs.push(file);\n+    currentTokenCount += file.estimatedTokenCount;\n+  }\n+\n+  // If no files can be included, return null\n+  if (includedFileDiffs.length === 0) {\n+    logger.error(`Cannot include any files from diff without exceeding token limits.`);\n+    return { diff: null };\n+  }\n+\n+  // Accurately calculate token count for included files we have approximated to be under the limit\n+  const accurateFileDiffStats = await Promise.all(\n+    includedFileDiffs.map(async (file) => {\n+      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n+      const tokenCount = tokenCountArray.length;\n+      return { ...file, tokenCount };\n+    })\n+  );\n+\n+  // Take an accurate reading of our current collection of files within the diff\n+  currentTokenCount = accurateFileDiffStats.reduce((sum, file) => sum + file.tokenCount, runningTokenCount);\n+\n+  // Remove files from the end of the list until we are within token limits\n+  while (currentTokenCount > tokensRemaining && accurateFileDiffStats.length > 0) {\n+    const removedFile = accurateFileDiffStats.pop();\n+    currentTokenCount -= removedFile?.tokenCount || 0;\n+    logger.info(`Excluded ${removedFile?.filename || \"Unknown filename\"} after accurate token count exceeded limits.`);\n+  }","score":{"reward":8.505,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":61.81674528301889,"syllables":74,"sentences":2,"score":0.981832547169811},"multiplier":1,"relevance":0.9}},{"id":1906234082,"content":"For what scenario is `UBIQUITY_OS_APP_NAME` required exactly?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906234082","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -16,31 +16,23 @@ on:\n       ref:\n         description: \"Ref\"\n       signature:\n-        description: \"The kernel signature\"\n+        description: \"Signature sent from the Kernel\"\n+      command:\n+        description: \"Command\"\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Pull review\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n+    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}\n     env:\n-      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n-      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+      KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n+      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}\n+      UBIQUITY_OS_APP_NAME: ${{ secrets.UBIQUITY_OS_APP_NAME }}","score":{"reward":2.079,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":45.64500000000001,"syllables":11,"sentences":1,"score":0.8564500000000002},"multiplier":1,"relevance":0.9}},{"id":1906234324,"content":"Can remove this step since bun is used in that workflow","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906234324","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -8,6 +8,8 @@ jobs:\n   deploy:\n     runs-on: ubuntu-latest\n     name: Deploy\n+    environment: ${{ github.ref_name }}\n+\n     steps:\n       - name: Setup Node","score":{"reward":2.436,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":95.68818181818183,"syllables":13,"sentences":1,"score":0.6431181818181817},"multiplier":1,"relevance":0.7}},{"id":1906234615,"content":"```suggestion\r\nbun run test\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906234615","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,47 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/daemon-pull-review`\n \n-## Prerequisites\n+This is a high context aware GitHub organization integrated bot that uses the Anthropic Claude 3.5 Sonnet model to provide automated reviews and feeback to Github pull requests.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Usage\n \n-## Getting Started\n+Just convert a pull request to be ready for review and the bot automatically reviews and requests changes if necessary\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+## How it works\n \n-## Creating a new plugin\n+With its huge context window, we are able to feed the entire issue specification and the pull request to the model which we obtain. This allows the model to have a very deep understanding of the current scope and provide highly relevant reviews.\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+## Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n-\n-- Your plugin config should look similar to this:\n+`.ubiquity-os.config.yml`:\n \n ```yml\n plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n+  - uses:\n       - plugin: http://localhost:4000\n         with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-          customStringsUrl: \"https://raw.githubusercontent.com/ubiquibot/plugin-template/development/strings.json\"\n+          openRouterAiModel: \"\" # Optional - defaults to \"anthropic/claude-3.5-sonnet\"\n+          openRouterBaseUrl: \"\" # Optional - defaults to Open Router's API endpoint\n ```\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n-\n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n-\n-## Testing a plugin\n+`.dev.vars` (for local testing):\n \n-### Worker Plugins\n+specify the OpenRouterBase URL in the `.ubiquity-os.config.yml` file and set the `OPENROUTER_API_KEY` in the `.dev.vars` file.\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n-\n-```ts\n-await fetch(\"http://localhost:4000/\", {\n-  method: \"POST\",\n-  headers: {\n-    \"Content-Type\": \"application/json\",\n-  },\n-  body: JSON.stringify({\n-    stateId: \"\",\n-    eventName: \"\",\n-    eventPayload: \"\",\n-    settings: \"\",\n-    ref: \"\",\n-    authToken: \"\",\n-  }),\n-});\n+```sh\n+OPENROUTER_API_KEY=YOUR_OPENROUTER_API_KEY\n+UBIQUITY_OS_APP_NAME=\"UbiquityOS\"\n ```\n \n-A full example can be found [here](https://github.com/ubiquibot/assistive-pricing/blob/623ea3f950f04842f2d003bda3fc7b7684e41378/tests/http/request.http).\n-\n-#### Deploying the Worker\n-\n-For testing purposes, the worker can be deployed through the Worker Deploy and Worker Delete workflows. It requires to\n-create a personal [Cloudflare Account](https://www.cloudflare.com/), and fill the `CLOUDFLARE_ACCOUNT_ID` and `CLOUDFLARE_API_TOKEN` within your\n-GitHub Action Secrets.\n+## Custom Port Configuration\n \n-### Action Plugins\n+If you specify a different port in your config file instead of the default port 4005, you'll need to start the development server with the corresponding port number:\n \n-- Ensure the kernel is running and listening for events.\n-- Fire an event in/to the repo where the kernel is installed. This can be done in a number of ways, the easiest being via the GitHub UI or using the GitHub API, such as posting a comment, opening an issue, etc in the org/repo where the kernel is installed.\n-- The kernel will process the event and dispatch it using the settings defined in your `.ubiquibot-config.yml`.\n-- The `compute.yml` workflow will run and execute your plugin's logic.\n-- You can view the logs in the Actions tab of your repo.\n-\n-[Nektos Act](https://github.com/nektos/act) - a tool for running GitHub Actions locally.\n-\n-## More information\n-\n-- [Full Ubiquibot Configuration](https://github.com/ubiquity/ubiquibot/blob/0fde7551585499b1e0618ec8ea5e826f11271c9c/src/types/configuration-types.ts#L62) - helpful for defining your plugin's settings as they are strongly typed and will be validated by the kernel.\n-- [Ubiquibot V1](https://github.com/ubiquity/ubiquibot) - helpful for porting V1 functionality to V2, helper/utility functions, types, etc. Everything is based on the V1 codebase but with a more modular approach. When using V1 code, keep in mind that most all code will need refactored to work with the new V2 architecture.\n+```sh\n+bun wrangler dev --env dev --port <your-port-number>\n+```\n \n-## Examples\n+## Testing\n \n-- [Start/Stop Slash Command](https://github.com/ubq-testing/start-stop-module) - simple\n-- [Assistive Pricing Plugin](https://github.com/ubiquibot/assistive-pricing) - complex\n-- [Conversation Rewards](https://github.com/ubiquibot/conversation-rewards) - really complex\n+```sh\n+yarn test","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1906235330,"content":"Can be bumped to `2.0.1`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906235330","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -31,43 +27,47 @@\n     \"open-source\"\n   ],\n   \"dependencies\": {\n-    \"@actions/core\": \"1.10.1\",\n-    \"@actions/github\": \"6.0.0\",\n-    \"@octokit/rest\": \"20.1.1\",\n-    \"@octokit/webhooks\": \"13.2.7\",\n-    \"@sinclair/typebox\": \"0.32.33\",\n-    \"@ubiquity-dao/ubiquibot-logger\": \"^1.3.0\",\n-    \"dotenv\": \"16.4.5\",\n-    \"typebox-validators\": \"0.3.5\"\n+    \"@octokit/graphql-schema\": \"^15.25.0\",\n+    \"@sinclair/typebox\": \"0.34.3\",\n+    \"@ubiquity-os/plugin-sdk\": \"^1.1.0\",","score":{"reward":0.855,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1906236176,"content":"I don't understand the logic here. It will throw if `claude` is not used, then why is it configurable in the first place?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906236176","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,119 @@\n+import { Context } from \"../../../types\";\n+import { SuperOpenRouter } from \"./open-router\";\n+import OpenAI from \"openai\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+}\n+\n+export class OpenRouterCompletion extends SuperOpenRouter {\n+  constructor(client: OpenAI, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"anthropic/claude-3.5-sonnet\", 200000]]);\n+    const tokenLimit = tokenLimits.get(model);","score":{"reward":5.319,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":84.8146739130435,"syllables":30,"sentences":2,"score":0.7518532608695649},"multiplier":1,"relevance":0.9}},{"id":1906237016,"content":"This looks more like `debug` to me","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906237016","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,119 @@\n+import { Context } from \"../../../types\";\n+import { SuperOpenRouter } from \"./open-router\";\n+import OpenAI from \"openai\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+}\n+\n+export class OpenRouterCompletion extends SuperOpenRouter {\n+  constructor(client: OpenAI, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"anthropic/claude-3.5-sonnet\", 200000]]);\n+    const tokenLimit = tokenLimits.get(model);\n+    if (!tokenLimit) {\n+      throw this.context.logger.error(`The token limits for configured model ${model} was not found`);\n+    }\n+    return tokenLimit;\n+  }\n+\n+  getModelMaxOutputLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"anthropic/claude-3.5-sonnet\", 4096]]);\n+    const tokenLimit = tokenLimits.get(model);\n+    if (!tokenLimit) {\n+      throw this.context.logger.error(`The token limits for configured model ${model} was not found`);\n+    }\n+    return tokenLimit;\n+  }\n+\n+  async createCompletion(model: string, localContext: string, groundTruths: string[], botName: string, maxTokens: number): Promise<CompletionsType> {\n+    const query = `Perform code review using the diff and spec and output a JSON format with key 'confidenceThreshold': (0-1) and reviewComment: <string>. A 0 indicates that the code review failed and 1 mean its passed and you should output the review comment to be \"This pull request has passed the automated review, a reviewer will review this pull request shortly\". YOU SHOULD ONLY OUTPUT RAW JSON DATA`;\n+    const sysMsg = [\n+      \"You Must obey the following ground truths: \",\n+      JSON.stringify(groundTruths) + \"\\n\",\n+      \"You are tasked with assisting as a GitHub bot by generating a confidence threshold from 0-1 on whether you think the pull difference completes the issue specification/body based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\nSteps\\n1. Understand Context: Analyze the chat history and similar responses to grasp the issue requirements and pull request intent\\n2. Extract Key Information: Identify crucial details from the corpus, even if incomplete, focusing on specifications and their alignment with the pull diff\\n3. Evaluate Completeness: Assess how well the pull diff fulfills the issue specifications, using logical assumptions if needed to fill gaps\\n4. Generate Confidence: Provide a confidence score (0-1) indicating how likely the pull diff satisfies the issue specification\\n5. Generate Review Comment: Based on confidence: If 1, indicate PR passed review and will be reviewed shortly; If <1, provide specific needed changes\\n6. Output Response: Return JSON: {confidenceThreshold: <value>, reviewComment: <string>}\",\n+      `Your name is: ${botName}`,\n+      \"\\n\",\n+      \"Main Context (Provide additional precedence in terms of information): \",\n+      localContext,\n+    ].join(\"\\n\");\n+\n+    this.context.logger.info(`System message: ${sysMsg}`);","score":{"reward":1.659,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1906237303,"content":"What is this comment about?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906237303","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,119 @@\n+import { Context } from \"../../../types\";\n+import { SuperOpenRouter } from \"./open-router\";\n+import OpenAI from \"openai\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+}\n+\n+export class OpenRouterCompletion extends SuperOpenRouter {\n+  constructor(client: OpenAI, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"anthropic/claude-3.5-sonnet\", 200000]]);\n+    const tokenLimit = tokenLimits.get(model);\n+    if (!tokenLimit) {\n+      throw this.context.logger.error(`The token limits for configured model ${model} was not found`);\n+    }\n+    return tokenLimit;\n+  }\n+\n+  getModelMaxOutputLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"anthropic/claude-3.5-sonnet\", 4096]]);\n+    const tokenLimit = tokenLimits.get(model);\n+    if (!tokenLimit) {\n+      throw this.context.logger.error(`The token limits for configured model ${model} was not found`);\n+    }\n+    return tokenLimit;\n+  }\n+\n+  async createCompletion(model: string, localContext: string, groundTruths: string[], botName: string, maxTokens: number): Promise<CompletionsType> {\n+    const query = `Perform code review using the diff and spec and output a JSON format with key 'confidenceThreshold': (0-1) and reviewComment: <string>. A 0 indicates that the code review failed and 1 mean its passed and you should output the review comment to be \"This pull request has passed the automated review, a reviewer will review this pull request shortly\". YOU SHOULD ONLY OUTPUT RAW JSON DATA`;\n+    const sysMsg = [\n+      \"You Must obey the following ground truths: \",\n+      JSON.stringify(groundTruths) + \"\\n\",\n+      \"You are tasked with assisting as a GitHub bot by generating a confidence threshold from 0-1 on whether you think the pull difference completes the issue specification/body based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\nSteps\\n1. Understand Context: Analyze the chat history and similar responses to grasp the issue requirements and pull request intent\\n2. Extract Key Information: Identify crucial details from the corpus, even if incomplete, focusing on specifications and their alignment with the pull diff\\n3. Evaluate Completeness: Assess how well the pull diff fulfills the issue specifications, using logical assumptions if needed to fill gaps\\n4. Generate Confidence: Provide a confidence score (0-1) indicating how likely the pull diff satisfies the issue specification\\n5. Generate Review Comment: Based on confidence: If 1, indicate PR passed review and will be reviewed shortly; If <1, provide specific needed changes\\n6. Output Response: Return JSON: {confidenceThreshold: <value>, reviewComment: <string>}\",\n+      `Your name is: ${botName}`,\n+      \"\\n\",\n+      \"Main Context (Provide additional precedence in terms of information): \",\n+      localContext,\n+    ].join(\"\\n\");\n+\n+    this.context.logger.info(`System message: ${sysMsg}`);\n+\n+    const res = await this.client.chat.completions.create({\n+      model: model,\n+      messages: [\n+        {\n+          role: \"system\",\n+          content: sysMsg,\n+        },\n+        {\n+          role: \"user\",\n+          content: query,\n+        },\n+      ],\n+      max_tokens: maxTokens,\n+      temperature: 0,\n+    });\n+\n+    if (!res.choices || res.choices.length === 0) {\n+      throw this.context.logger.error(\"Unexpected no response from LLM\");\n+    }\n+\n+    // Use type guard to safely handle the response","score":{"reward":1.17,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.6}},{"id":1906237802,"content":"Probably can be marked as `readonly`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906237802","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,281 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/github-types\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;","score":{"reward":0.975,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.5}},{"id":1906238409,"content":"You can remove all these not so useful comments.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906238409","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,281 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/github-types\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    } else if (pull_request.user.id !== this.context.payload.sender.id) {\n+      return { status: 200, reason: logger.info(\"Review wasn't requested by pull author\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.validateReviewOutput(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft();\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw this.context.logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${repository.owner.login}/${repository.name}#${number} - ${action}`);\n+\n+    // Use octokit.paginate to automatically handle pagination\n+    const timeline = await this.context.octokit.paginate(this.context.octokit.rest.issues.listEvents, {\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+      per_page: 100, // Optional: customize items per page","score":{"reward":2.205,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.50000000000003,"syllables":13,"sentences":1,"score":0.8449999999999998},"multiplier":1,"relevance":0.7}},{"id":1906240223,"content":"This is not a string, this is taken from the `LOG_LEVEL` enum.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906240223","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -10,8 +8,11 @@ import { StandardValidator } from \"typebox-validators\";\n  * taken from either `dev.vars` or repository secrets.\n  * They are used with `process.env` but are type-safe.\n  */\n-export const envSchema = T.Object({});\n-\n-export const envValidator = new StandardValidator(envSchema);\n+export const envSchema = T.Object({\n+  OPENROUTER_API_KEY: T.String(),\n+  UBIQUITY_OS_APP_NAME: T.String({ default: \"UbiquityOS\" }),\n+  KERNEL_PUBLIC_KEY: T.Optional(T.String()),\n+  LOG_LEVEL: T.Optional(T.String()),","score":{"reward":2.784,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":95.68818181818183,"syllables":13,"sentences":1,"score":0.6431181818181817},"multiplier":1,"relevance":0.8}},{"id":1906240865,"content":"The `T.Object` should have `default: {}` otherwise it won't get populated with default values.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1906240865","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,16 @@\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+\n+/**\n+ * This should contain the properties of the bot config\n+ * that are required for the plugin to function.\n+ *\n+ * The kernel will extract those and pass them to the plugin,\n+ * which are built into the context object from setup().\n+ */\n+\n+export const pluginSettingsSchema = T.Object({\n+  openRouterAiModel: T.String({ default: \"anthropic/claude-3.5-sonnet\" }),\n+  openRouterBaseUrl: T.String({ default: \"https://openrouter.ai/api/v1\" }),\n+});","score":{"reward":3.192,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":67.75500000000001,"syllables":18,"sentences":1,"score":0.9224499999999999},"multiplier":1,"relevance":0.8}},{"id":1908142494,"content":"If it is used to impersonate the bot in the prompts then we can leave it here.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1908142494","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -16,31 +16,23 @@ on:\n       ref:\n         description: \"Ref\"\n       signature:\n-        description: \"The kernel signature\"\n+        description: \"Signature sent from the Kernel\"\n+      command:\n+        description: \"Command\"\n \n jobs:\n   compute:\n-    name: \"plugin name\"\n+    name: \"Pull review\"\n     runs-on: ubuntu-latest\n     permissions: write-all\n+    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}\n     env:\n-      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n-      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+      KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n+      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}\n+      UBIQUITY_OS_APP_NAME: ${{ secrets.UBIQUITY_OS_APP_NAME }}","score":{"reward":3.36,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":90.05058823529413,"syllables":20,"sentences":1,"score":0.6994941176470587},"multiplier":1,"relevance":0.7}},{"id":1909749574,"content":"@ishowvel you marked this as resolved yet I still it here.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1909749574","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -8,6 +8,8 @@ jobs:\n   deploy:\n     runs-on: ubuntu-latest\n     name: Deploy\n+    environment: ${{ github.ref_name }}\n+\n     steps:\n       - name: Setup Node","score":{"reward":2.124,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":87.99727272727276,"syllables":14,"sentences":1,"score":0.7200272727272724},"multiplier":1,"relevance":0.6}},{"id":1909752416,"content":"Isn't this plugin supposed to be an action not a worker?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1909752416","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,47 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/daemon-pull-review`\n \n-## Prerequisites\n+This is a high context aware GitHub organization integrated bot that uses the Anthropic Claude 3.5 Sonnet model to provide automated reviews and feeback to Github pull requests.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Usage\n \n-## Getting Started\n+Just convert a pull request to be ready for review and the bot automatically reviews and requests changes if necessary\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+## How it works\n \n-## Creating a new plugin\n+With its huge context window, we are able to feed the entire issue specification and the pull request to the model which we obtain. This allows the model to have a very deep understanding of the current scope and provide highly relevant reviews.\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+## Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n-\n-- Your plugin config should look similar to this:\n+`.ubiquity-os.config.yml`:\n \n ```yml\n plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n+  - uses:\n       - plugin: http://localhost:4000\n         with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-          customStringsUrl: \"https://raw.githubusercontent.com/ubiquibot/plugin-template/development/strings.json\"\n+          openRouterAiModel: \"\" # Optional - defaults to \"anthropic/claude-3.5-sonnet\"\n+          openRouterBaseUrl: \"\" # Optional - defaults to Open Router's API endpoint\n ```\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n-\n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n-\n-## Testing a plugin\n+`.dev.vars` (for local testing):\n \n-### Worker Plugins\n+specify the OpenRouterBase URL in the `.ubiquity-os.config.yml` file and set the `OPENROUTER_API_KEY` in the `.dev.vars` file.\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n-\n-```ts\n-await fetch(\"http://localhost:4000/\", {\n-  method: \"POST\",\n-  headers: {\n-    \"Content-Type\": \"application/json\",\n-  },\n-  body: JSON.stringify({\n-    stateId: \"\",\n-    eventName: \"\",\n-    eventPayload: \"\",\n-    settings: \"\",\n-    ref: \"\",\n-    authToken: \"\",\n-  }),\n-});\n+```sh\n+OPENROUTER_API_KEY=YOUR_OPENROUTER_API_KEY\n+UBIQUITY_OS_APP_NAME=\"UbiquityOS\"\n ```\n \n-A full example can be found [here](https://github.com/ubiquibot/assistive-pricing/blob/623ea3f950f04842f2d003bda3fc7b7684e41378/tests/http/request.http).\n-\n-#### Deploying the Worker\n-\n-For testing purposes, the worker can be deployed through the Worker Deploy and Worker Delete workflows. It requires to\n-create a personal [Cloudflare Account](https://www.cloudflare.com/), and fill the `CLOUDFLARE_ACCOUNT_ID` and `CLOUDFLARE_API_TOKEN` within your\n-GitHub Action Secrets.\n+## Custom Port Configuration\n \n-### Action Plugins\n+If you specify a different port in your config file instead of the default port 4005, you'll need to start the development server with the corresponding port number:\n \n-- Ensure the kernel is running and listening for events.\n-- Fire an event in/to the repo where the kernel is installed. This can be done in a number of ways, the easiest being via the GitHub UI or using the GitHub API, such as posting a comment, opening an issue, etc in the org/repo where the kernel is installed.\n-- The kernel will process the event and dispatch it using the settings defined in your `.ubiquibot-config.yml`.\n-- The `compute.yml` workflow will run and execute your plugin's logic.\n-- You can view the logs in the Actions tab of your repo.\n-\n-[Nektos Act](https://github.com/nektos/act) - a tool for running GitHub Actions locally.\n-\n-## More information\n-\n-- [Full Ubiquibot Configuration](https://github.com/ubiquity/ubiquibot/blob/0fde7551585499b1e0618ec8ea5e826f11271c9c/src/types/configuration-types.ts#L62) - helpful for defining your plugin's settings as they are strongly typed and will be validated by the kernel.\n-- [Ubiquibot V1](https://github.com/ubiquity/ubiquibot) - helpful for porting V1 functionality to V2, helper/utility functions, types, etc. Everything is based on the V1 codebase but with a more modular approach. When using V1 code, keep in mind that most all code will need refactored to work with the new V2 architecture.\n+```sh\n+bun wrangler dev --env dev --port <your-port-number>","score":{"reward":3.072,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":81.85500000000002,"syllables":16,"sentences":1,"score":0.7814499999999999},"multiplier":1,"relevance":0.8}},{"id":1925495836,"content":"@ishowvel there is a lot of conversations marked as resolved when they aren't.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1925495836","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,281 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/github-types\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;","score":{"reward":1.788,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":65.72500000000001,"syllables":21,"sentences":1,"score":0.9427499999999999},"multiplier":1,"relevance":0.4}},{"id":1930866831,"content":"```suggestion\r\nname = \"ubiquity-os-daemon-pull-review\"\r\n```\r\nWe prefixed them all this way.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1930866831","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,8 +1,7 @@\n-name = \"your-plugin-name\"\n+name = \"daemon-pull-review\"","score":{"reward":1.659,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":2557405689,"content":"@rndquu I know that @whilefoo had made every plugin on a different port at some point, the port itself should not matter much since it is output inthe console on start (should be?)\r\nAs for the bypass, from your code snippet it seems you are doing in the Action entry point which might not be the one used locally, but rather `createPlugin` (not `createActionPlugin` because it does not serve any API routes).","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2557405689","commentType":"PULL_COLLABORATOR","score":{"reward":7.056,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":70,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":62.53857142857143,"syllables":90,"sentences":2,"score":0.9746142857142857},"multiplier":1,"relevance":0.7}},{"id":2586169715,"content":"I was testing the plugin and noticed that if a pull-request is marked ready for review, the bot posts an error message and marks the review back to draft. While I think this can be a good behavior for outside contributors, I believe this should be overridden by the core team, because sometimes we just bump packages or do quick fixes that do not relate to any tasks. @0x4007 Thoughts?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2586169715","commentType":"PULL_COLLABORATOR","score":{"reward":8.937,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":71,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":68.42460093896715,"syllables":96,"sentences":3,"score":0.9157539906103286},"multiplier":1,"relevance":0.9}},{"id":2586179646,"content":"Also, I tried to use this with a `chat-gpt` key and endpoint because I do not have an OpenAI at the moment, and I got the error `The token limits for configured model gpt-4o was not found`. If this is meant only to support Claude, then do not make it configurable, or make it support any endpoint and model.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2586179646","commentType":"PULL_COLLABORATOR","score":{"reward":8.073,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":69.67500000000004,"syllables":64,"sentences":2,"score":0.9032499999999996},"multiplier":1,"relevance":0.9}},{"id":2586347212,"content":"This seems to be hard-coded within the plugin so any modification implies re-compiling it, which doesn't seem very intuitive.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2586347212","commentType":"PULL_COLLABORATOR","score":{"reward":4.824,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":53.759545454545474,"syllables":34,"sentences":1,"score":0.9375954545454548},"multiplier":1,"relevance":0.8}},{"id":2607521733,"content":"Please bump `@ubiquity-os/plugin-sdk` to `2.0.2` so the plugin is compatible with the kernel.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2607521733","commentType":"PULL_COLLABORATOR","score":{"reward":3.294,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":72.61545454545457,"syllables":16,"sentences":1,"score":0.8738454545454544},"multiplier":1,"relevance":0.9}},{"id":2610453346,"content":"I think your QA could have been more thorough than just `delete readme`, how about testing with a real use case like this pull-request and spec?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2610453346","commentType":"PULL_COLLABORATOR","score":{"reward":5.016,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":83.32400000000003,"syllables":29,"sentences":1,"score":0.7667599999999998},"multiplier":1,"relevance":0.8}},{"id":2616368026,"content":"Looks fine, we will adjust after testing it live I guess.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2616368026","commentType":"PULL_COLLABORATOR","score":{"reward":1.062,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":87.99727272727276,"syllables":14,"sentences":1,"score":0.7200272727272724},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2503577547,"effect":{"addition":530,"deletion":469},"reward":29.97,"priority":3},{"reviewId":2522683995,"effect":{"addition":258,"deletion":181},"reward":13.17,"priority":3},{"reviewId":2525179127,"effect":{"addition":4,"deletion":10},"reward":0.42,"priority":3},{"reviewId":2526831428,"effect":{"addition":0,"deletion":0},"reward":0,"priority":3},{"reviewId":2535679806,"effect":{"addition":451,"deletion":386},"reward":25.11,"priority":3},{"reviewId":2541477196,"effect":{"addition":103,"deletion":16},"reward":3.57,"priority":3},{"reviewId":2567503720,"effect":{"addition":0,"deletion":0},"reward":0,"priority":3},{"reviewId":2576013038,"effect":{"addition":260,"deletion":92},"reward":10.56,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 202.548 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>8</td><td>82.8</td></tr><tr><td>Issue</td><td>Comment</td><td>5</td><td>14.049</td></tr><tr><td>Review</td><td>Comment</td><td>32</td><td>105.699</td></tr></tbody></table></details>"},"rndquu":{"total":74.867,"userId":119500907,"comments":[{"id":2514020439,"content":"Pls provide:\r\n1. QA of how it works\r\n2. Setup instructions:\r\n  a) What should be set in the [anthropicAiModel](https://github.com/ubiquity-os-marketplace/daemon-pull-review/blob/8be98c53f0555706dee91f754b11c1d4fe274b2d/README.md?plain=1#L22) param value\r\n  b) What should be set in the [anthropicAiBaseUrl](https://github.com/ubiquity-os-marketplace/daemon-pull-review/blob/8be98c53f0555706dee91f754b11c1d4fe274b2d/README.md?plain=1#L23) param value\r\n3. Update readme with possible values and descriptions for `anthropicAiModel` and `anthropicAiBaseUrl` params\r\nI'm trying to run the plugin locally but don't fully understand what should be set in the `anthropicAiBaseUrl` param.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#pullrequestreview-2514020439","commentType":"PULL_COLLABORATOR","score":{"reward":12.042,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ol":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1.3},"priority":3,"words":{"wordCount":59,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":16.46525423728815,"syllables":91,"sentences":1,"score":0.5646525423728815},"multiplier":1,"relevance":0.9}},{"id":2557276141,"content":"@ishowvel Trying to run the plugin but the kernel throws this error:\r\n```\r\n✘ [ERROR] Could not find a manifest for Worker http://localhost:4000/manifest.json: Error: Network connection lost.\r\n```\r\nShould the plugin serve the `manifest.json` file at `http://localhost:4000/manifest.json` ?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2557276141","commentType":"PULL_COLLABORATOR","score":{"reward":7.368,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":71.78157894736843,"syllables":26,"sentences":1,"score":0.8821842105263157},"multiplier":1,"relevance":0.8}},{"id":2557294386,"content":"@ishowvel All our worker plugins [serve](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/355cfede64de05b061a9ecac020f617f77ae019b/package.json#L20) at port 4000 by default. Could you set port 4000 by default?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2557294386","commentType":"PULL_COLLABORATOR","score":{"reward":7.446,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":84.90000000000003,"syllables":24,"sentences":2,"score":0.7509999999999997},"multiplier":1,"relevance":0.85}},{"id":2557362835,"content":"@ishowvel My local plugin throws the `Invalid signature` error. I'm trying to bypass it with the `bypassSignatureVerification` option but it still throws that error. In [main.ts](https://github.com/ubiquity-os-marketplace/daemon-pull-review/blob/07f020cad81a9c44811a0b6738fc4e0dd7332ec0/src/main.ts) I have this code:\r\n```\r\nimport { createActionsPlugin } from \"@ubiquity-os/plugin-sdk\";\r\nimport { createAdapters } from \"./adapters\";\r\nimport { SupportedEvents } from \"./types/context\";\r\nimport { Env, envSchema } from \"./types/env\";\r\nimport { PluginSettings, pluginSettingsSchema } from \"./types/plugin-input\";\r\nimport { plugin } from \"./plugin\";\r\nimport { LogLevel } from \"@ubiquity-os/ubiquity-os-logger\";\r\ncreateActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\r\n  (context) => {\r\n    return plugin({\r\n      ...context,\r\n      adapters: {} as ReturnType<typeof createAdapters>,\r\n    });\r\n  },\r\n  {\r\n    envSchema: envSchema,\r\n    postCommentOnError: true,\r\n    settingsSchema: pluginSettingsSchema,\r\n    logLevel: (process.env.LOG_LEVEL as LogLevel) ?? \"info\",\r\n    kernelPublicKey: process.env.KERNEL_PUBLIC_KEY,\r\n    bypassSignatureVerification: true, // <==== Trying to bypass signature verification\r\n  }\r\n).catch(console.error);\r\n```\r\nWere you able to use the `bypassSignatureVerification` option? Or you just used a valid `process.env.KERNEL_PUBLIC_KEY` value?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2557362835","commentType":"PULL_COLLABORATOR","score":{"reward":11.201,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":89.8966976744186,"syllables":55,"sentences":5,"score":0.701033023255814},"multiplier":1,"relevance":0.95}},{"id":2561747524,"content":"Yes, but since my country is not supported by `anthropic` and I opened their website a couple of times without VPN enabled they seem to ban my account. @gentlementlegen Pls help with the review.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2561747524","commentType":"PULL_COLLABORATOR","score":{"reward":1.5,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":72.16022727272728,"syllables":46,"sentences":2,"score":0.8783977272727271},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"reviews":[{"reviewId":2514020439,"effect":{"addition":656,"deletion":521},"reward":35.31,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 74.867 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>35.31</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>39.557</td></tr></tbody></table></details>"},"whilefoo":{"total":261.522,"userId":139262667,"comments":[{"id":1885652481,"content":"Actually I was always wondering what is the benefit of `action.yml` instead of just calling `node ./dist/index.js` directly. It seems unnecessary and you have to repeat the inputs","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885652481","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -35,12 +35,11 @@ jobs:\n         with:\n           node-version: \"20.10.0\"\n \n-      - name: install dependencies\n-        run: yarn\n-\n       - name: execute directive\n-        run: npx tsx ./src/main.ts\n-        id: plugin-name\n+        run: node ./dist/index.js","score":{"reward":3.906,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":52.01950000000002,"syllables":42,"sentences":2,"score":0.9201950000000002},"multiplier":1,"relevance":0.6}},{"id":1885788446,"content":"Anthropic client is already in `this.client`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885788446","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,140 @@\n+/* eslint-disable sonarjs/no-duplicate-string */\n+\n+import Anthropic from \"@anthropic-ai/sdk\";\n+import { Context } from \"../../../types\";\n+import { ContentBlock } from \"@anthropic-ai/sdk/resources\";\n+import { SuperAnthropic } from \"./claude\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+  tokenUsage: {\n+    input: number;\n+    output: number;\n+    total: number;\n+  };\n+}\n+\n+// Type guard for content block\n+interface TextBlock {\n+  type: \"text\";\n+  text: string;\n+}\n+\n+function isTextBlock(content: ContentBlock): content is TextBlock {\n+  return content?.type === \"text\" && typeof content?.text === \"string\";\n+}\n+\n+export class AnthropicCompletion extends SuperAnthropic {\n+  constructor(client: Anthropic, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 200000]]);\n+\n+    return tokenLimits.get(model) || 200000;\n+  }\n+\n+  getModelMaxOutputLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"claude-3.5-sonnet\", 4096]]);\n+\n+    return tokenLimits.get(model) || 4096;\n+  }\n+\n+  async createCompletion(\n+    model: string = \"claude-3.5-sonnet\",\n+    localContext: string,\n+    groundTruths: string[],\n+    botName: string,\n+    maxTokens: number\n+  ): Promise<CompletionsType> {\n+    const query = `Perform code review using the diff and spec and output a JSON format with key 'confidenceThreshold': (0-1) and reviewComment: <string>. A 0 indicates that the code review failed and 1 mean its passed and you should output the review comment to be \"This pull request has passed the automated review, a reviewer will review this pull request shortly\". YOU SHOULD ONLY OUTPUT RAW JSON DATA`;\n+    const sysMsg = [\n+      \"You Must obey the following ground truths: \",\n+      JSON.stringify(groundTruths) + \"\\n\",\n+      \"You are tasked with assisting as a GitHub bot by generating a confidence threshold from 0-1 on whether you think the pull difference completes the issue specification/body based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\nSteps\\n1. Understand Context: Analyze the chat history and similar responses to grasp the issue requirements and pull request intent\\n2. Extract Key Information: Identify crucial details from the corpus, even if incomplete, focusing on specifications and their alignment with the pull diff\\n3. Evaluate Completeness: Assess how well the pull diff fulfills the issue specifications, using logical assumptions if needed to fill gaps\\n4. Generate Confidence: Provide a confidence score (0-1) indicating how likely the pull diff satisfies the issue specification\\n5. Generate Review Comment: Based on confidence: If 1, indicate PR passed review and will be reviewed shortly; If <1, provide specific needed changes\\n6. Output Response: Return JSON: {confidenceThreshold: <value>, reviewComment: <string>}\",\n+      `Your name is: ${botName}`,\n+      \"\\n\",\n+      \"Main Context (Provide additional precedence in terms of information): \",\n+      localContext,\n+    ].join(\"\\n\");\n+\n+    this.context.logger.info(`System message: ${sysMsg}`);\n+\n+    const res = await this.client.messages.create({\n+      model: model,\n+      system: sysMsg,\n+      messages: [\n+        {\n+          role: \"user\",\n+          content: query,\n+        },\n+      ],\n+      max_tokens: maxTokens,\n+      temperature: 0,\n+    });\n+\n+    if (!res.content || res.content.length === 0) {\n+      throw this.context.logger.error(\"Unexpected no response from claude\");\n+    }\n+\n+    // Use type guard to safely handle the response\n+    const content = res.content[0];\n+    if (!isTextBlock(content)) {\n+      throw this.context.logger.error(\"Unexpected response format: Expected text block\");\n+    }\n+\n+    const answer = content.text;\n+\n+    const inputTokens = res.usage.input_tokens;\n+    const outputTokens = res.usage.output_tokens;\n+\n+    this.context.logger.info(`Number of tokens used: ${inputTokens + outputTokens}`);\n+\n+    return {\n+      answer,\n+      groundTruths,\n+      tokenUsage: {\n+        input: inputTokens,\n+        output: outputTokens,\n+        total: inputTokens + outputTokens,\n+      },\n+    };\n+  }\n+\n+  async createGroundTruthCompletion(context: Context, groundTruthSource: string, systemMsg: string): Promise<string | null> {\n+    const {\n+      env: { ANTHROPIC_API_KEY },\n+      config: { anthropicAiBaseUrl, anthropicAiModel },\n+    } = context;\n+\n+    const client = new Anthropic({\n+      apiKey: ANTHROPIC_API_KEY,\n+      baseURL: anthropicAiBaseUrl,\n+    });","score":{"reward":1.608,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":49.48000000000002,"syllables":9,"sentences":1,"score":0.8948000000000002},"multiplier":1,"relevance":0.8}},{"id":1885797848,"content":"This seems very similar to the system message. Why is this an example?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885797848","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+export const CODE_REVIEW_GROUND_TRUTHS_SYSTEM_MESSAGE = {\n+  example: [\n+    `Using the input provided, your goal is to produce an array of strings that represent \"Ground Truths.\"\n+        These ground truths are high-level abstractions that encapsulate the key aspects of the task.\n+        They serve to guide and inform our code review model's interpretation of the task by providing clear, concise, and explicit insights.\n+        \n+        Each ground truth should:\n+        - Be succinct and easy to understand.\n+        - Directly pertain to the task at hand.\n+        - Focus on essential requirements, behaviors, or assumptions involved in the task.\n+    \n+        Example:\n+        Task: Implement a function that adds two numbers.\n+        Ground Truths:\n+        - The function should accept two numerical inputs.\n+        - The function should return the sum of the two inputs.\n+        - Inputs must be validated to ensure they are numbers.\n+        \n+        Based on the given task, generate similar ground truths adhering to a maximum of 10.\n+        \n+        Return a JSON parsable array of strings representing the ground truths, without comment or directive.`,\n+  ],","score":{"reward":2.94,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":70.08365384615385,"syllables":20,"sentences":2,"score":0.8991634615384615},"multiplier":1,"relevance":0.7}},{"id":1885852261,"content":"use octokit.paginate","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885852261","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,323 @@\n+import { logger } from \"../helpers/errors\";\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/pull-requests\";\n+import { fetchRepoLanguageStats, fetchRepoDependencies } from \"./ground-truths/fetch-deps\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action}`);\n+    const timeline = await this.context.octokit.rest.issues.listEvents({\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+    });","score":{"reward":1.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":7.912499999999994,"syllables":7,"sentences":2,"score":0.47912499999999997},"multiplier":1,"relevance":0.9}},{"id":1885860330,"content":"can you explain this?\r\n`groundTruths` only gets filled if languages, dependencies and devDependencies are empty, otherwise it will find ground truths with task specification but it won't use languages and dependencies so what's the point?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885860330","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,323 @@\n+import { logger } from \"../helpers/errors\";\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/pull-requests\";\n+import { fetchRepoLanguageStats, fetchRepoDependencies } from \"./ground-truths/fetch-deps\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action}`);\n+    const timeline = await this.context.octokit.rest.issues.listEvents({\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+    });\n+\n+    const reviews = timeline.data.filter((event) => event.event === \"reviewed\");\n+    const botReviews = reviews.filter((review) => review.actor.type === \"Bot\");\n+\n+    if (!botReviews.length) {\n+      logger.info(\"No bot reviews found\");\n+      return true;\n+    }\n+\n+    const lastReview = botReviews[botReviews.length - 1];\n+    const lastReviewDate = new Date(lastReview.created_at);\n+    const now = new Date();\n+    const diff = now.getTime() - lastReviewDate.getTime();\n+\n+    if (diff < this._oneDay) {\n+      throw logger.error(\"Only one review per day is allowed\");\n+    }\n+\n+    logger.info(\"One review per day check passed\");\n+    return true;\n+  }\n+\n+  /**\n+   * Convert a pull request to draft mode\n+   * @param shouldConvert - Whether to convert the PR to draft\n+   * @param params - Parameters including nodeId and octokit instance\n+   */\n+  async convertPullToDraft(nodeId: string, octokit: Context[\"octokit\"]) {\n+    const toDraft = `mutation {\n+      convertPullRequestToDraft(input: {pullRequestId: \"${nodeId}\"}) {\n+        pullRequest {\n+          id\n+          number\n+          isDraft\n+          title\n+        }\n+      }\n+    }`;\n+\n+    try {\n+      await octokit.graphql(toDraft);\n+      logger.info(`Successfully converted pull request to draft mode.`);\n+    } catch (e) {\n+      throw logger.error(\"Failed to convert pull request to draft mode: \", { e });\n+    }\n+  }\n+\n+  /**\n+   * Review a pull request using AI completion\n+   * @returns The completion result from the AI model\n+   */\n+  async reviewPull() {\n+    const {\n+      env: { UBIQUITY_OS_APP_NAME },\n+      config: { anthropicAiModel },\n+      adapters: {\n+        anthropic: { completions },\n+      },\n+    } = this.context;\n+\n+    const taskNumber = await this.getTaskNumberFromPullRequest(this.context);\n+    const issue = await fetchIssue(this.context, taskNumber);\n+\n+    if (!issue) {\n+      throw logger.error(`Error fetching issue, Aborting`, {\n+        owner: this.context.payload.repository.owner.login,\n+        repo: this.context.payload.repository.name,\n+        issue_number: taskNumber,\n+      });\n+    }\n+\n+    const taskSpecification = issue.body ?? \"\";\n+    const formattedSpecAndPull = await formatSpecAndPull(this.context, issue);\n+    const [languages, { dependencies, devDependencies }] = await Promise.all([fetchRepoLanguageStats(this.context), fetchRepoDependencies(this.context)]);\n+\n+    let groundTruths = this._collectGroundTruths(languages, dependencies, devDependencies);\n+\n+    if (groundTruths.length === 3) {\n+      return await completions.createCompletion(\n+        anthropicAiModel,\n+        formattedSpecAndPull,\n+        groundTruths,\n+        UBIQUITY_OS_APP_NAME,\n+        completions.getModelMaxTokenLimit(anthropicAiModel)\n+      );\n+    }\n+\n+    groundTruths = await findGroundTruths(this.context, { taskSpecification });\n+    return await completions.createCompletion(\n+      anthropicAiModel,\n+      formattedSpecAndPull,\n+      groundTruths,\n+      UBIQUITY_OS_APP_NAME,\n+      completions.getModelMaxTokenLimit(anthropicAiModel)\n+    );","score":{"reward":7.182,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":54.61500000000001,"syllables":57,"sentences":2,"score":0.94615},"multiplier":1,"relevance":0.9}},{"id":1885861018,"content":"why check if `pr_number` is not present if the types require it?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885861018","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,323 @@\n+import { logger } from \"../helpers/errors\";\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/pull-requests\";\n+import { fetchRepoLanguageStats, fetchRepoDependencies } from \"./ground-truths/fetch-deps\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action}`);\n+    const timeline = await this.context.octokit.rest.issues.listEvents({\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+    });\n+\n+    const reviews = timeline.data.filter((event) => event.event === \"reviewed\");\n+    const botReviews = reviews.filter((review) => review.actor.type === \"Bot\");\n+\n+    if (!botReviews.length) {\n+      logger.info(\"No bot reviews found\");\n+      return true;\n+    }\n+\n+    const lastReview = botReviews[botReviews.length - 1];\n+    const lastReviewDate = new Date(lastReview.created_at);\n+    const now = new Date();\n+    const diff = now.getTime() - lastReviewDate.getTime();\n+\n+    if (diff < this._oneDay) {\n+      throw logger.error(\"Only one review per day is allowed\");\n+    }\n+\n+    logger.info(\"One review per day check passed\");\n+    return true;\n+  }\n+\n+  /**\n+   * Convert a pull request to draft mode\n+   * @param shouldConvert - Whether to convert the PR to draft\n+   * @param params - Parameters including nodeId and octokit instance\n+   */\n+  async convertPullToDraft(nodeId: string, octokit: Context[\"octokit\"]) {\n+    const toDraft = `mutation {\n+      convertPullRequestToDraft(input: {pullRequestId: \"${nodeId}\"}) {\n+        pullRequest {\n+          id\n+          number\n+          isDraft\n+          title\n+        }\n+      }\n+    }`;\n+\n+    try {\n+      await octokit.graphql(toDraft);\n+      logger.info(`Successfully converted pull request to draft mode.`);\n+    } catch (e) {\n+      throw logger.error(\"Failed to convert pull request to draft mode: \", { e });\n+    }\n+  }\n+\n+  /**\n+   * Review a pull request using AI completion\n+   * @returns The completion result from the AI model\n+   */\n+  async reviewPull() {\n+    const {\n+      env: { UBIQUITY_OS_APP_NAME },\n+      config: { anthropicAiModel },\n+      adapters: {\n+        anthropic: { completions },\n+      },\n+    } = this.context;\n+\n+    const taskNumber = await this.getTaskNumberFromPullRequest(this.context);\n+    const issue = await fetchIssue(this.context, taskNumber);\n+\n+    if (!issue) {\n+      throw logger.error(`Error fetching issue, Aborting`, {\n+        owner: this.context.payload.repository.owner.login,\n+        repo: this.context.payload.repository.name,\n+        issue_number: taskNumber,\n+      });\n+    }\n+\n+    const taskSpecification = issue.body ?? \"\";\n+    const formattedSpecAndPull = await formatSpecAndPull(this.context, issue);\n+    const [languages, { dependencies, devDependencies }] = await Promise.all([fetchRepoLanguageStats(this.context), fetchRepoDependencies(this.context)]);\n+\n+    let groundTruths = this._collectGroundTruths(languages, dependencies, devDependencies);\n+\n+    if (groundTruths.length === 3) {\n+      return await completions.createCompletion(\n+        anthropicAiModel,\n+        formattedSpecAndPull,\n+        groundTruths,\n+        UBIQUITY_OS_APP_NAME,\n+        completions.getModelMaxTokenLimit(anthropicAiModel)\n+      );\n+    }\n+\n+    groundTruths = await findGroundTruths(this.context, { taskSpecification });\n+    return await completions.createCompletion(\n+      anthropicAiModel,\n+      formattedSpecAndPull,\n+      groundTruths,\n+      UBIQUITY_OS_APP_NAME,\n+      completions.getModelMaxTokenLimit(anthropicAiModel)\n+    );\n+  }\n+\n+  /**\n+   * Collect ground truths based on repository analysis\n+   */\n+  private _collectGroundTruths(languages: [string, number][], dependencies: Record<string, string>, devDependencies: Record<string, string>): string[] {\n+    const groundTruths: string[] = [];\n+\n+    if (!languages.length) {\n+      groundTruths.push(\"No languages found in the repository\");\n+    }\n+    if (dependencies && !Reflect.ownKeys(dependencies).length) {\n+      groundTruths.push(\"No dependencies found in the repository\");\n+    }\n+    if (devDependencies && !Reflect.ownKeys(devDependencies).length) {\n+      groundTruths.push(\"No devDependencies found in the repository\");\n+    }\n+\n+    return groundTruths;\n+  }\n+\n+  async checkIfPrClosesIssues(\n+    octokit: Context[\"octokit\"],\n+    pr: {\n+      owner: string;\n+      repo: string;\n+      pr_number: number;\n+    }\n+  ) {\n+    const { owner, repo, pr_number } = pr;\n+\n+    if (!pr_number) {\n+      throw new Error(\"[checkIfPrClosesIssues]: pr_number is required\");\n+    }","score":{"reward":2.436,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":95.68818181818183,"syllables":13,"sentences":1,"score":0.6431181818181817},"multiplier":1,"relevance":0.7}},{"id":1885864086,"content":"I see you changed like I suggested, I just wanna add that we shouldn't check for `#123` because that means they didn't link it correctly (if they used `Resolves #123` then it would appear in linked issues) so they should correct it","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885864086","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,323 @@\n+import { logger } from \"../helpers/errors\";\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/pull-requests\";\n+import { fetchRepoLanguageStats, fetchRepoDependencies } from \"./ground-truths/fetch-deps\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    }\n+\n+    return await this._handleCodeReview();\n+  }\n+\n+  /**\n+   * Handle the code review process for a pull request\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  private async _handleCodeReview(): Promise<CallbackResult> {\n+    const { payload } = this.context;\n+    const pullReviewData = await this.reviewPull();\n+    const { reviewComment, confidenceThreshold } = this.parsePullReviewData(pullReviewData.answer);\n+\n+    if (confidenceThreshold < 0.5) {\n+      await this.convertPullToDraft(payload.pull_request.node_id, this.context.octokit);\n+    }\n+\n+    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    return { status: 200, reason: \"Success\" };\n+  }\n+\n+  /**\n+   * Submit a code review for a pull request\n+   * @param review - The review comment\n+   * @param status - The review status (APPROVE, REQUEST_CHANGES, COMMENT)\n+   */\n+  async submitCodeReview(review: string, status: CodeReviewStatus): Promise<void> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action, sender } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action} - ${sender.login} - ${review}`);\n+\n+    try {\n+      const response = await this.context.octokit.rest.pulls.createReview({\n+        owner: owner.login,\n+        repo: name,\n+        pull_number: number,\n+        body: review,\n+        event: status,\n+      });\n+      logger.info(`Code review submitted: ${response.data.html_url}`);\n+    } catch (er) {\n+      throw logger.error(\"Failed to submit code review\", { err: er });\n+    }\n+  }\n+\n+  /**\n+   * Check if a review can be performed on the pull request\n+   * @returns boolean indicating if review can be performed\n+   */\n+  async canPerformReview(): Promise<boolean> {\n+    const { logger, payload } = this.context;\n+    const { number, organization, repository, action } = payload;\n+    const { owner, name } = repository;\n+\n+    logger.info(`${organization}/${repository}#${number} - ${action}`);\n+    const timeline = await this.context.octokit.rest.issues.listEvents({\n+      owner: owner.login,\n+      repo: name,\n+      issue_number: number,\n+    });\n+\n+    const reviews = timeline.data.filter((event) => event.event === \"reviewed\");\n+    const botReviews = reviews.filter((review) => review.actor.type === \"Bot\");\n+\n+    if (!botReviews.length) {\n+      logger.info(\"No bot reviews found\");\n+      return true;\n+    }\n+\n+    const lastReview = botReviews[botReviews.length - 1];\n+    const lastReviewDate = new Date(lastReview.created_at);\n+    const now = new Date();\n+    const diff = now.getTime() - lastReviewDate.getTime();\n+\n+    if (diff < this._oneDay) {\n+      throw logger.error(\"Only one review per day is allowed\");\n+    }\n+\n+    logger.info(\"One review per day check passed\");\n+    return true;\n+  }\n+\n+  /**\n+   * Convert a pull request to draft mode\n+   * @param shouldConvert - Whether to convert the PR to draft\n+   * @param params - Parameters including nodeId and octokit instance\n+   */\n+  async convertPullToDraft(nodeId: string, octokit: Context[\"octokit\"]) {\n+    const toDraft = `mutation {\n+      convertPullRequestToDraft(input: {pullRequestId: \"${nodeId}\"}) {\n+        pullRequest {\n+          id\n+          number\n+          isDraft\n+          title\n+        }\n+      }\n+    }`;\n+\n+    try {\n+      await octokit.graphql(toDraft);\n+      logger.info(`Successfully converted pull request to draft mode.`);\n+    } catch (e) {\n+      throw logger.error(\"Failed to convert pull request to draft mode: \", { e });\n+    }\n+  }\n+\n+  /**\n+   * Review a pull request using AI completion\n+   * @returns The completion result from the AI model\n+   */\n+  async reviewPull() {\n+    const {\n+      env: { UBIQUITY_OS_APP_NAME },\n+      config: { anthropicAiModel },\n+      adapters: {\n+        anthropic: { completions },\n+      },\n+    } = this.context;\n+\n+    const taskNumber = await this.getTaskNumberFromPullRequest(this.context);\n+    const issue = await fetchIssue(this.context, taskNumber);\n+\n+    if (!issue) {\n+      throw logger.error(`Error fetching issue, Aborting`, {\n+        owner: this.context.payload.repository.owner.login,\n+        repo: this.context.payload.repository.name,\n+        issue_number: taskNumber,\n+      });\n+    }\n+\n+    const taskSpecification = issue.body ?? \"\";\n+    const formattedSpecAndPull = await formatSpecAndPull(this.context, issue);\n+    const [languages, { dependencies, devDependencies }] = await Promise.all([fetchRepoLanguageStats(this.context), fetchRepoDependencies(this.context)]);\n+\n+    let groundTruths = this._collectGroundTruths(languages, dependencies, devDependencies);\n+\n+    if (groundTruths.length === 3) {\n+      return await completions.createCompletion(\n+        anthropicAiModel,\n+        formattedSpecAndPull,\n+        groundTruths,\n+        UBIQUITY_OS_APP_NAME,\n+        completions.getModelMaxTokenLimit(anthropicAiModel)\n+      );\n+    }\n+\n+    groundTruths = await findGroundTruths(this.context, { taskSpecification });\n+    return await completions.createCompletion(\n+      anthropicAiModel,\n+      formattedSpecAndPull,\n+      groundTruths,\n+      UBIQUITY_OS_APP_NAME,\n+      completions.getModelMaxTokenLimit(anthropicAiModel)\n+    );\n+  }\n+\n+  /**\n+   * Collect ground truths based on repository analysis\n+   */\n+  private _collectGroundTruths(languages: [string, number][], dependencies: Record<string, string>, devDependencies: Record<string, string>): string[] {\n+    const groundTruths: string[] = [];\n+\n+    if (!languages.length) {\n+      groundTruths.push(\"No languages found in the repository\");\n+    }\n+    if (dependencies && !Reflect.ownKeys(dependencies).length) {\n+      groundTruths.push(\"No dependencies found in the repository\");\n+    }\n+    if (devDependencies && !Reflect.ownKeys(devDependencies).length) {\n+      groundTruths.push(\"No devDependencies found in the repository\");\n+    }\n+\n+    return groundTruths;\n+  }\n+\n+  async checkIfPrClosesIssues(\n+    octokit: Context[\"octokit\"],\n+    pr: {\n+      owner: string;\n+      repo: string;\n+      pr_number: number;\n+    }\n+  ) {\n+    const { owner, repo, pr_number } = pr;\n+\n+    if (!pr_number) {\n+      throw new Error(\"[checkIfPrClosesIssues]: pr_number is required\");\n+    }\n+    try {\n+      const result = await octokit.graphql<IssuesClosedByThisPr>(closedByPullRequestsReferences, {\n+        owner,\n+        repo,\n+        pr_number,\n+      });\n+\n+      const closingIssues = result.repository.pullRequest.closingIssuesReferences.edges.map((edge) => ({\n+        number: edge.node.number,\n+        title: edge.node.title,\n+        url: edge.node.url,\n+        body: edge.node.body,\n+        repository: {\n+          name: edge.node.name,\n+          owner: edge.node.owner,\n+        },\n+      }));\n+\n+      if (closingIssues.length > 0) {\n+        return {\n+          closesIssues: true,\n+          issues: closingIssues,\n+        };\n+      } else {\n+        return {\n+          closesIssues: false,\n+          issues: [],\n+        };\n+      }\n+    } catch (error) {\n+      console.error(\"Error fetching closing issues:\", error);\n+      return {\n+        closesIssues: false,\n+        issues: [],\n+      };\n+    }\n+  }\n+  async getTaskNumberFromPullRequest(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    const {\n+      payload: { pull_request },\n+      logger,\n+    } = context;\n+    let issueNumber;\n+\n+    const { issues: closingIssues } = await this.checkIfPrClosesIssues(context.octokit, {\n+      owner: pull_request.base.repo.owner.login,\n+      repo: pull_request.base.repo.name,\n+      pr_number: pull_request.number,\n+    });\n+\n+    if (closingIssues.length === 0) {\n+      const linkedViaBodyHash = pull_request.body?.match(/#(\\d+)/g);\n+\n+      if (linkedViaBodyHash?.length) {\n+        issueNumber = Number(linkedViaBodyHash[0].replace(\"#\", \"\"));\n+      } else {\n+        await this.convertPullToDraft(context.payload.pull_request.node_id, context.octokit);\n+        throw context.logger.error(\"You need to link an issue and after that convert the PR to ready for review\");\n+      }","score":{"reward":6.792,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":64.11268292682931,"syllables":49,"sentences":1,"score":0.958873170731707},"multiplier":1,"relevance":0.8}},{"id":1885868595,"content":"this is now done by the SDK if your throw an error","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885868595","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+import { LogReturn, Logs } from \"@ubiquity-os/ubiquity-os-logger\";\n+import { Context } from \"../types/context\";\n+import { addCommentToIssue } from \"../handlers/add-comment\";\n+export const logger = new Logs(\"debug\");\n+\n+export function sanitizeMetadata(obj: LogReturn[\"metadata\"]): string {\n+  return JSON.stringify(obj, null, 2).replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/--/g, \"&#45;&#45;\");\n+}\n+\n+export async function bubbleUpErrorComment(context: Context, err: unknown, post = true): Promise<LogReturn> {\n+  let errorMessage;\n+  if (err instanceof LogReturn) {\n+    errorMessage = err;\n+  } else if (err instanceof Error) {\n+    errorMessage = context.logger.error(err.message, { stack: err.stack });\n+  } else {\n+    errorMessage = context.logger.error(\"An error occurred\", { err });\n+  }\n+\n+  if (post) {\n+    await addCommentToIssue(context, `${errorMessage?.logMessage.diff}\\n<!--\\n${sanitizeMetadata(errorMessage?.metadata)}\\n-->`);\n+  }\n+\n+  return errorMessage;\n+}","score":{"reward":2.835,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":103.00500000000001,"syllables":13,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1885901668,"content":"I think we should have a list of files (maybe configurable) that we will always remove like `bun.lockb`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885901668","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,104 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { logger } from \"../errors\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+\n+export async function processPullRequestDiff(diff: string, tokenLimits: TokenLimits) {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+\n+  // parse the diff into per-file diffs for quicker processing\n+  const perFileDiffs = parsePerFileDiffs(diff);\n+\n+  // quick estimate using a simple heuristic; 3.5 characters per token\n+  const estimatedFileDiffStats = perFileDiffs.map(({ filename, diffContent }) => {\n+    const estimatedTokenCount = Math.ceil(diffContent.length / 3.5);\n+    return { filename, estimatedTokenCount, diffContent };\n+  });\n+\n+  estimatedFileDiffStats.sort((a, b) => a.estimatedTokenCount - b.estimatedTokenCount); // Smallest first\n+\n+  let currentTokenCount = runningTokenCount;\n+  const includedFileDiffs = [];\n+\n+  // Using the quick estimate, include as many files as possible without exceeding token limits\n+  for (const file of estimatedFileDiffStats) {\n+    if (currentTokenCount + file.estimatedTokenCount > tokensRemaining) {\n+      logger.info(`Skipping ${file.filename} to stay within token limits.`);\n+      continue;\n+    }\n+    includedFileDiffs.push(file);\n+    currentTokenCount += file.estimatedTokenCount;\n+  }\n+\n+  // If no files can be included, return null\n+  if (includedFileDiffs.length === 0) {\n+    logger.error(`Cannot include any files from diff without exceeding token limits.`);\n+    return { diff: null };\n+  }\n+\n+  // Accurately calculate token count for included files we have approximated to be under the limit\n+  const accurateFileDiffStats = await Promise.all(\n+    includedFileDiffs.map(async (file) => {\n+      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n+      const tokenCount = tokenCountArray.length;\n+      return { ...file, tokenCount };\n+    })\n+  );\n+\n+  // Take an accurate reading of our current collection of files within the diff\n+  currentTokenCount = accurateFileDiffStats.reduce((sum, file) => sum + file.tokenCount, runningTokenCount);\n+\n+  // Remove files from the end of the list until we are within token limits\n+  while (currentTokenCount > tokensRemaining && accurateFileDiffStats.length > 0) {\n+    const removedFile = accurateFileDiffStats.pop();\n+    currentTokenCount -= removedFile?.tokenCount || 0;\n+    logger.info(`Excluded ${removedFile?.filename || \"Unknown filename\"} after accurate token count exceeded limits.`);\n+  }","score":{"reward":4.032,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":70.14470588235295,"syllables":24,"sentences":1,"score":0.8985529411764704},"multiplier":1,"relevance":0.8}},{"id":1885902952,"content":"```suggestion\r\ncreateActionsPlugin<PluginSettings, Env, null, SupportedEvents>(\r\n```\r\nyou can put `null` if there's no command","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885902952","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,55 +1,24 @@\n-import * as core from \"@actions/core\";\n-import * as github from \"@actions/github\";\n-import { Octokit } from \"@octokit/rest\";\n-import { Value } from \"@sinclair/typebox/value\";\n-import { envSchema, pluginSettingsSchema, PluginInputs, pluginSettingsValidator } from \"./types\";\n+import { createActionsPlugin } from \"@ubiquity-os/plugin-sdk\";\n+import { createAdapters } from \"./adapters\";\n+import { SupportedEvents } from \"./types/context\";\n+import { Env, envSchema } from \"./types/env\";\n+import { PluginSettings, pluginSettingsSchema } from \"./types/plugin-input\";\n+import { Command } from \"./types/command\";\n import { plugin } from \"./plugin\";\n-\n-/**\n- * How a GitHub action executes the plugin.\n- */\n-export async function run() {\n-  const payload = github.context.payload.inputs;\n-\n-  const env = Value.Decode(envSchema, payload.env);\n-  const settings = Value.Decode(pluginSettingsSchema, Value.Default(pluginSettingsSchema, JSON.parse(payload.settings)));\n-\n-  if (!pluginSettingsValidator.test(settings)) {\n-    throw new Error(\"Invalid settings provided\");\n+import { LogLevel } from \"@ubiquity-os/ubiquity-os-logger\";\n+\n+createActionsPlugin<PluginSettings, Env, Command, SupportedEvents>(","score":{"reward":2.376,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":103.54,"syllables":9,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1885903758,"content":"`params` is already of type `CodeReviewAppParams` so I don't understand why a typeguard is necessary here","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885903758","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,31 @@\n+import { Context } from \"../../types\";\n+import { CodeReviewAppParams, CodeReviewGroundTruthSystemMessage } from \"../../types/llm\";\n+import { CODE_REVIEW_GROUND_TRUTHS_SYSTEM_MESSAGE } from \"./prompts\";\n+import { codeReviewPayloadTypeguard } from \"../../types/typeguards\";\n+import { validateGroundTruths } from \"./validate\";\n+import { logger } from \"../../helpers/errors\";\n+import { createGroundTruthSysMsg } from \"./create-system-message\";\n+\n+export async function findGroundTruths(context: Context, params: CodeReviewAppParams): Promise<string[]> {\n+  const systemMsgObj = CODE_REVIEW_GROUND_TRUTHS_SYSTEM_MESSAGE;\n+\n+  // params are deconstructed to show quickly what's being passed to the function\n+  if (codeReviewPayloadTypeguard(params)) {","score":{"reward":3.276,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":56.25000000000003,"syllables":24,"sentences":1,"score":0.9625000000000002},"multiplier":1,"relevance":0.7}},{"id":1885904935,"content":"duplicated?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885904935","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,160 +1,183 @@\n-import { drop } from \"@mswjs/data\";\n import { db } from \"./__mocks__/db\";\n import { server } from \"./__mocks__/node\";\n-import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it } from \"@jest/globals\";\n-import { Context } from \"../src/types/context\";\n+import usersGet from \"./__mocks__/users-get.json\";\n+import { describe, beforeAll, beforeEach, afterAll, afterEach, it, jest } from \"@jest/globals\";\n+import { Context, SupportedEvents } from \"../src/types\";\n+import { drop } from \"@mswjs/data\";\n+import issueTemplate from \"./__mocks__/issue-template\";\n+import repoTemplate from \"./__mocks__/repo-template\";\n+import { logger } from \"../src/helpers/errors\";\n import { Octokit } from \"@octokit/rest\";\n-import { STRINGS } from \"./__mocks__/strings\";\n-import { createComment, setupTests } from \"./__mocks__/helpers\";\n-import manifest from \"../manifest.json\";\n-import dotenv from \"dotenv\";\n-import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n-import { Env } from \"../src/types\";\n-import { runPlugin } from \"../src/plugin\";\n-\n-dotenv.config();\n-jest.requireActual(\"@octokit/rest\");\n-const octokit = new Octokit();\n+import { CompletionsType } from \"../src/adapters/claude/helpers/completions\";\n+import pullTemplate from \"./__mocks__/pull-template\";\n+\n+// Mock constants\n+const MOCK_ANSWER_PASSED = \"{confidenceThreshold: 1, reviewComment: 'passed'}\";\n+\n+jest.unstable_mockModule(\"../src/helpers/pull-helpers/fetch-diff\", () => ({\n+  fetchPullRequestDiff: jest.fn(() => ({\n+    diff: \"abc\",\n+  })),\n+}));\n+\n+beforeAll(() => {\n+  server.listen();\n+});\n+\n+afterEach(() => {\n+  drop(db);\n+  server.resetHandlers();\n+});\n+\n+afterAll(() => server.close());\n+\n+jest.unstable_mockModule(\"../src/helpers/pull-helpers/fetch-diff\", () => ({\n+  fetchPullRequestDiff: jest.fn(() => ({\n+    diff: \"abc\",\n+  })),\n+}));","score":{"reward":0.252,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":-47.97999999999996,"syllables":3,"sentences":1,"score":0},"multiplier":1,"relevance":0.6}},{"id":1885905980,"content":"try to create more tests like review can only be done again after 24 hours and other edge cases","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885905980","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,160 +1,183 @@\n-import { drop } from \"@mswjs/data\";\n import { db } from \"./__mocks__/db\";\n import { server } from \"./__mocks__/node\";\n-import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it } from \"@jest/globals\";\n-import { Context } from \"../src/types/context\";\n+import usersGet from \"./__mocks__/users-get.json\";\n+import { describe, beforeAll, beforeEach, afterAll, afterEach, it, jest } from \"@jest/globals\";\n+import { Context, SupportedEvents } from \"../src/types\";\n+import { drop } from \"@mswjs/data\";\n+import issueTemplate from \"./__mocks__/issue-template\";\n+import repoTemplate from \"./__mocks__/repo-template\";\n+import { logger } from \"../src/helpers/errors\";\n import { Octokit } from \"@octokit/rest\";\n-import { STRINGS } from \"./__mocks__/strings\";\n-import { createComment, setupTests } from \"./__mocks__/helpers\";\n-import manifest from \"../manifest.json\";\n-import dotenv from \"dotenv\";\n-import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n-import { Env } from \"../src/types\";\n-import { runPlugin } from \"../src/plugin\";\n-\n-dotenv.config();\n-jest.requireActual(\"@octokit/rest\");\n-const octokit = new Octokit();\n+import { CompletionsType } from \"../src/adapters/claude/helpers/completions\";\n+import pullTemplate from \"./__mocks__/pull-template\";\n+\n+// Mock constants\n+const MOCK_ANSWER_PASSED = \"{confidenceThreshold: 1, reviewComment: 'passed'}\";\n+\n+jest.unstable_mockModule(\"../src/helpers/pull-helpers/fetch-diff\", () => ({\n+  fetchPullRequestDiff: jest.fn(() => ({\n+    diff: \"abc\",\n+  })),\n+}));\n+\n+beforeAll(() => {\n+  server.listen();\n+});\n+\n+afterEach(() => {\n+  drop(db);\n+  server.resetHandlers();\n+});\n+\n+afterAll(() => server.close());\n+\n+jest.unstable_mockModule(\"../src/helpers/pull-helpers/fetch-diff\", () => ({\n+  fetchPullRequestDiff: jest.fn(() => ({\n+    diff: \"abc\",\n+  })),\n+}));\n \n beforeAll(() => {\n   server.listen();\n });\n+\n afterEach(() => {\n+  drop(db);\n   server.resetHandlers();\n-  jest.clearAllMocks();\n });\n+\n afterAll(() => server.close());\n \n-describe(\"Plugin tests\", () => {\n+describe(\"Pull Reviewer tests\", () => {\n   beforeEach(async () => {\n-    drop(db);\n+    jest.clearAllMocks();\n     await setupTests();\n   });\n \n-  it(\"Should serve the manifest file\", async () => {\n-    const worker = (await import(\"../src/worker\")).default;\n-    const response = await worker.fetch(new Request(\"http://localhost/manifest\"), {});\n-    const content = await response.json();\n-    expect(content).toEqual(manifest);\n-  });\n+  describe(\"Perform pull precheck\", () => {","score":{"reward":4.248,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":80.68684210526318,"syllables":24,"sentences":1,"score":0.7931315789473682},"multiplier":1,"relevance":0.8}},{"id":1885906564,"content":"Maybe I missed it but I didn't see a check that the user that changed PR to `ready_for_review` is the same as PR author","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1885906564","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,323 @@\n+import { logger } from \"../helpers/errors\";\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/pull-requests\";\n+import { fetchRepoLanguageStats, fetchRepoDependencies } from \"./ground-truths/fetch-deps\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    }","score":{"reward":5.4,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":90.82500000000003,"syllables":26,"sentences":1,"score":0.6917499999999996},"multiplier":1,"relevance":0.9}},{"id":1890627143,"content":"But it might fight with admins because maybe the plugin will convert PR to draft but an admin thinks it's ready so they will mark it as ready to review but the plugin will change it back to draft again. Another situation would be that the PR doesn't have a linked issue but it's an urgent fix or something so an admin should be able to convert to ready for review without the plugin interfering and changing it back to draft.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1890627143","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,323 @@\n+import { logger } from \"../helpers/errors\";\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/pull-requests\";\n+import { fetchRepoLanguageStats, fetchRepoDependencies } from \"./ground-truths/fetch-deps\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { parseLooseJson } from \"../helpers/loose-json-parsing\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;\n+\n+  constructor(context: Context<\"pull_request.opened\" | \"pull_request.ready_for_review\">) {\n+    this.context = context;\n+  }\n+\n+  /**\n+   * Perform initial checks on a pull request to determine if review is needed\n+   * @returns CallbackResult indicating the status and reason\n+   */\n+  async performPullPrecheck(): Promise<CallbackResult> {\n+    const { logger, payload } = this.context;\n+    const { pull_request } = payload;\n+\n+    // Check if PR is in draft mode, closed, or if we can perform a review\n+    if (pull_request.draft) {\n+      return { status: 200, reason: logger.info(\"PR is in draft mode, no action required\").logMessage.raw };\n+    } else if (pull_request.state === \"closed\") {\n+      return { status: 200, reason: logger.info(\"PR is closed, no action required\").logMessage.raw };\n+    } else if (!(await this.canPerformReview())) {\n+      return { status: 200, reason: logger.info(\"Cannot perform review at this time\").logMessage.raw };\n+    }","score":{"reward":9.072,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":84,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":50.39785714285715,"syllables":113,"sentences":2,"score":0.9039785714285715},"multiplier":1,"relevance":0.9}},{"id":1890634016,"content":"`yarn.lock`, `pnpm-lock.yaml`, `bun.lockb`, `package-lock.json`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1890634016","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,104 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { logger } from \"../errors\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+\n+export async function processPullRequestDiff(diff: string, tokenLimits: TokenLimits) {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+\n+  // parse the diff into per-file diffs for quicker processing\n+  const perFileDiffs = parsePerFileDiffs(diff);\n+\n+  // quick estimate using a simple heuristic; 3.5 characters per token\n+  const estimatedFileDiffStats = perFileDiffs.map(({ filename, diffContent }) => {\n+    const estimatedTokenCount = Math.ceil(diffContent.length / 3.5);\n+    return { filename, estimatedTokenCount, diffContent };\n+  });\n+\n+  estimatedFileDiffStats.sort((a, b) => a.estimatedTokenCount - b.estimatedTokenCount); // Smallest first\n+\n+  let currentTokenCount = runningTokenCount;\n+  const includedFileDiffs = [];\n+\n+  // Using the quick estimate, include as many files as possible without exceeding token limits\n+  for (const file of estimatedFileDiffStats) {\n+    if (currentTokenCount + file.estimatedTokenCount > tokensRemaining) {\n+      logger.info(`Skipping ${file.filename} to stay within token limits.`);\n+      continue;\n+    }\n+    includedFileDiffs.push(file);\n+    currentTokenCount += file.estimatedTokenCount;\n+  }\n+\n+  // If no files can be included, return null\n+  if (includedFileDiffs.length === 0) {\n+    logger.error(`Cannot include any files from diff without exceeding token limits.`);\n+    return { diff: null };\n+  }\n+\n+  // Accurately calculate token count for included files we have approximated to be under the limit\n+  const accurateFileDiffStats = await Promise.all(\n+    includedFileDiffs.map(async (file) => {\n+      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n+      const tokenCount = tokenCountArray.length;\n+      return { ...file, tokenCount };\n+    })\n+  );\n+\n+  // Take an accurate reading of our current collection of files within the diff\n+  currentTokenCount = accurateFileDiffStats.reduce((sum, file) => sum + file.tokenCount, runningTokenCount);\n+\n+  // Remove files from the end of the list until we are within token limits\n+  while (currentTokenCount > tokensRemaining && accurateFileDiffStats.length > 0) {\n+    const removedFile = accurateFileDiffStats.pop();\n+    currentTokenCount -= removedFile?.tokenCount || 0;\n+    logger.info(`Excluded ${removedFile?.filename || \"Unknown filename\"} after accurate token count exceeded limits.`);\n+  }","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":1,"score":0},"multiplier":1,"relevance":0.8}},{"id":1890708226,"content":"logger should be used from the context","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1890708226","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,25 +1,2 @@\n-import { LogReturn, Logs } from \"@ubiquity-os/ubiquity-os-logger\";\n-import { Context } from \"../types/context\";\n-import { addCommentToIssue } from \"../handlers/add-comment\";\n+import { Logs } from \"@ubiquity-os/ubiquity-os-logger\";\n export const logger = new Logs(\"debug\");","score":{"reward":1.743,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.7}},{"id":1890711266,"content":"you still have more duplicated code, check the file","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1890711266","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -31,12 +32,6 @@ afterEach(() => {\n \n afterAll(() => server.close());\n \n-jest.unstable_mockModule(\"../src/helpers/pull-helpers/fetch-diff\", () => ({\n-  fetchPullRequestDiff: jest.fn(() => ({\n-    diff: \"abc\",\n-  })),\n-}));\n-\n beforeAll(() => {\n   server.listen();\n });","score":{"reward":1.854,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":84.90000000000003,"syllables":12,"sentences":1,"score":0.7509999999999997},"multiplier":1,"relevance":0.6}},{"id":1890777398,"content":"It's pointless to check the body because if you write `Resolves #123` it will be in linked issues. If there's no linked issues then convert to draft and warn the user","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1890777398","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -275,16 +240,16 @@ export class PullReviewer {\n     });\n \n     if (closingIssues.length === 0) {\n-      const linkedViaBodyHash = pull_request.body?.match(/#(\\d+)/g);\n+      const linkedViaBodyHash = pull_request.body?.match(/[Rr]esolves\\s+#(\\d+)/);\n \n       if (linkedViaBodyHash?.length) {\n-        issueNumber = Number(linkedViaBodyHash[0].replace(\"#\", \"\"));\n+        issueNumber = Number(linkedViaBodyHash[1]);\n       } else {\n         await this.convertPullToDraft(context.payload.pull_request.node_id, context.octokit);\n-        throw context.logger.error(\"You need to link an issue and after that convert the PR to ready for review\");\n+        throw this.context.logger.error(\"You need to link an issue and after that convert the PR to ready for review\");\n       }","score":{"reward":6.318,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":87.39927419354841,"syllables":38,"sentences":2,"score":0.7260072580645159},"multiplier":1,"relevance":0.9}},{"id":1890795309,"content":"this test won't fail if the try block doesn't throw (same issue in other tests)","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1890795309","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -89,6 +84,88 @@ describe(\"Pull Reviewer tests\", () => {\n     });\n   });\n \n+  describe(\"Review time restrictions\", () => {\n+    it(\"should prevent multiple reviews within 24 hours\", async () => {\n+      const { PullReviewer } = await import(\"../src/handlers/pull-reviewer\");\n+      const context = createContext();\n+      const pullReviewer = new PullReviewer(context);\n+\n+      jest.spyOn(pullReviewer.context.octokit, \"paginate\").mockResolvedValue([\n+        {\n+          event: \"reviewed\",\n+          actor: { type: \"Bot\" },\n+          created_at: new Date().toISOString(),\n+        },\n+      ]);\n+      try {\n+        await pullReviewer.canPerformReview();\n+      } catch (error) {\n+        const e = error as LogReturn;\n+        expect(e.logMessage.raw).toBe(\"Only one review per day is allowed\");\n+      }","score":{"reward":3.792,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":95.02705882352943,"syllables":19,"sentences":1,"score":0.6497294117647057},"multiplier":1,"relevance":0.8}},{"id":1891568769,"content":"maybe it's Github's bug, but I saw that you had this \r\n```\r\nbeforeAll(() => {\r\n  server.listen();\r\n});\r\n```\r\nrepeated twice","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1891568769","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -31,12 +32,6 @@ afterEach(() => {\n \n afterAll(() => server.close());\n \n-jest.unstable_mockModule(\"../src/helpers/pull-helpers/fetch-diff\", () => ({\n-  fetchPullRequestDiff: jest.fn(() => ({\n-    diff: \"abc\",\n-  })),\n-}));\n-\n beforeAll(() => {\n   server.listen();\n });","score":{"reward":2.592,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":95.73000000000002,"syllables":17,"sentences":1,"score":0.6426999999999998},"multiplier":1,"relevance":0.6}},{"id":1891639405,"content":"shouldn't `parseLooseJson` be used because this is from the LLM?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1891639405","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -19,5 +18,33 @@ async function findCodeReviewTruths(context: Context, params: CodeReviewAppParam\n   const systemMsg = createGroundTruthSysMsg(systemMsgObj);\n \n   const truths = await completions.createGroundTruthCompletion(context, params.taskSpecification, systemMsg);\n-  return validateGroundTruths(truths);\n+  return validateGroundTruths(truths, context.logger);\n+}\n+\n+function validateGroundTruths(truthsString: string | null, logger: Context[\"logger\"]): string[] {\n+  let truths;\n+  if (!truthsString) {\n+    throw logger.error(\"Failed to generate ground truths\");\n+  }\n+\n+  try {\n+    truths = JSON.parse(truthsString);","score":{"reward":2.808,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":103.625,"syllables":11,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1900122262,"content":"It's almost impossible to cover all cases, that's why I suggested that we add it to the config so it can be configurable if needed, however I realize that it's not ideal as we want things to be plug-and-play.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1900122262","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,104 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { logger } from \"../errors\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+\n+export async function processPullRequestDiff(diff: string, tokenLimits: TokenLimits) {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+\n+  // parse the diff into per-file diffs for quicker processing\n+  const perFileDiffs = parsePerFileDiffs(diff);\n+\n+  // quick estimate using a simple heuristic; 3.5 characters per token\n+  const estimatedFileDiffStats = perFileDiffs.map(({ filename, diffContent }) => {\n+    const estimatedTokenCount = Math.ceil(diffContent.length / 3.5);\n+    return { filename, estimatedTokenCount, diffContent };\n+  });\n+\n+  estimatedFileDiffStats.sort((a, b) => a.estimatedTokenCount - b.estimatedTokenCount); // Smallest first\n+\n+  let currentTokenCount = runningTokenCount;\n+  const includedFileDiffs = [];\n+\n+  // Using the quick estimate, include as many files as possible without exceeding token limits\n+  for (const file of estimatedFileDiffStats) {\n+    if (currentTokenCount + file.estimatedTokenCount > tokensRemaining) {\n+      logger.info(`Skipping ${file.filename} to stay within token limits.`);\n+      continue;\n+    }\n+    includedFileDiffs.push(file);\n+    currentTokenCount += file.estimatedTokenCount;\n+  }\n+\n+  // If no files can be included, return null\n+  if (includedFileDiffs.length === 0) {\n+    logger.error(`Cannot include any files from diff without exceeding token limits.`);\n+    return { diff: null };\n+  }\n+\n+  // Accurately calculate token count for included files we have approximated to be under the limit\n+  const accurateFileDiffStats = await Promise.all(\n+    includedFileDiffs.map(async (file) => {\n+      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n+      const tokenCount = tokenCountArray.length;\n+      return { ...file, tokenCount };\n+    })\n+  );\n+\n+  // Take an accurate reading of our current collection of files within the diff\n+  currentTokenCount = accurateFileDiffStats.reduce((sum, file) => sum + file.tokenCount, runningTokenCount);\n+\n+  // Remove files from the end of the list until we are within token limits\n+  while (currentTokenCount > tokensRemaining && accurateFileDiffStats.length > 0) {\n+    const removedFile = accurateFileDiffStats.pop();\n+    currentTokenCount -= removedFile?.tokenCount || 0;\n+    logger.info(`Excluded ${removedFile?.filename || \"Unknown filename\"} after accurate token count exceeded limits.`);\n+  }","score":{"reward":5.166,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":48.73409090909094,"syllables":59,"sentences":1,"score":0.8873409090909093},"multiplier":1,"relevance":0.6}},{"id":1902005366,"content":"this is not needed anymore since you're using accurate token counts instead of estimates?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1902005366","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -36,46 +42,37 @@ export async function processPullRequestDiff(diff: string, tokenLimits: TokenLim\n     return { diff: null };\n   }\n \n-  // Accurately calculate token count for included files we have approximated to be under the limit\n-  const accurateFileDiffStats = await Promise.all(\n-    includedFileDiffs.map(async (file) => {\n-      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n-      const tokenCount = tokenCountArray.length;\n-      return { ...file, tokenCount };\n-    })\n-  );\n-\n-  // Take an accurate reading of our current collection of files within the diff\n-  currentTokenCount = accurateFileDiffStats.reduce((sum, file) => sum + file.tokenCount, runningTokenCount);\n+  // Recalculate the current token count after including the files\n+  currentTokenCount = includedFileDiffs.reduce((sum, file) => sum + file.tokenCount, runningTokenCount);\n \n   // Remove files from the end of the list until we are within token limits\n-  while (currentTokenCount > tokensRemaining && accurateFileDiffStats.length > 0) {\n-    const removedFile = accurateFileDiffStats.pop();\n+  while (currentTokenCount > tokensRemaining && includedFileDiffs.length > 0) {\n+    const removedFile = includedFileDiffs.pop();\n     currentTokenCount -= removedFile?.tokenCount || 0;\n     logger.info(`Excluded ${removedFile?.filename || \"Unknown filename\"} after accurate token count exceeded limits.`);\n   }","score":{"reward":3.276,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":56.25000000000003,"syllables":24,"sentences":1,"score":0.9625000000000002},"multiplier":1,"relevance":0.7}},{"id":1902007034,"content":"why would token count be different?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1902007034","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -36,46 +42,37 @@ export async function processPullRequestDiff(diff: string, tokenLimits: TokenLim\n     return { diff: null };\n   }\n \n-  // Accurately calculate token count for included files we have approximated to be under the limit\n-  const accurateFileDiffStats = await Promise.all(\n-    includedFileDiffs.map(async (file) => {\n-      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n-      const tokenCount = tokenCountArray.length;\n-      return { ...file, tokenCount };\n-    })\n-  );\n-\n-  // Take an accurate reading of our current collection of files within the diff\n-  currentTokenCount = accurateFileDiffStats.reduce((sum, file) => sum + file.tokenCount, runningTokenCount);\n+  // Recalculate the current token count after including the files\n+  currentTokenCount = includedFileDiffs.reduce((sum, file) => sum + file.tokenCount, runningTokenCount);","score":{"reward":1.617,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.7}},{"id":1903275919,"content":"```suggestion\r\n      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1903275919","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -28,7 +28,7 @@ jobs:\n     environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}\n     env:\n       KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}\n-      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}\n+      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER }}","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1903332753,"content":"if the file is not found then you should return `null` but if there any other error you should throw with `logger.error`.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1903332753","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -33,12 +33,32 @@ async function parseGitAttributes(content: string): Promise<GitAttributes[]> {\n     .filter((item): item is GitAttributes => item !== null);\n }\n \n-export async function getExcludedFiles() {\n-  const gitIgnoreContent = await readFile(\".gitignore\", \"utf-8\");\n-  const gitAttributesContent = await readFile(\".gitattributes\", \"utf-8\");\n+export async function getExcludedFiles(context: Context) {\n+  const [gitIgnoreContent, gitAttributesContent] = await Promise.all([getFileContent(\".gitignore\", context), getFileContent(\".gitattributes\", context)]);\n+\n   const gitAttributesLinguistGenerated = (await parseGitAttributes(gitAttributesContent))\n     .filter((v) => v.attributes[\"linguist-generated\"])\n     .map((v) => v.pattern);\n   const gitIgnoreExcludedFiles = gitIgnoreContent.split(\"\\n\").filter((v) => !v.startsWith(\"#\"));\n   return [...gitAttributesLinguistGenerated, ...gitIgnoreExcludedFiles];\n }\n+\n+async function getFileContent(path: string, context: Context): Promise<string> {\n+  try {\n+    const response = await context.octokit.rest.repos.getContent({\n+      owner: context.payload.repository.owner.login,\n+      repo: context.payload.repository.name,\n+      path,\n+      ref: context.payload.pull_request.head.sha,\n+    });\n+\n+    // GitHub API returns content as base64\n+    if (\"content\" in response.data && !Array.isArray(response.data)) {\n+      return Buffer.from(response.data.content, \"base64\").toString(\"utf-8\");\n+    }\n+    return \"\";\n+  } catch {\n+    // File doesn't exist\n+    return \"\";","score":{"reward":4.344,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":85.01500000000003,"syllables":24,"sentences":1,"score":0.7498499999999997},"multiplier":1,"relevance":0.8}},{"id":1903332773,"content":"`context` is usually always the first parameter","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1903332773","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -33,12 +33,32 @@ async function parseGitAttributes(content: string): Promise<GitAttributes[]> {\n     .filter((item): item is GitAttributes => item !== null);\n }\n \n-export async function getExcludedFiles() {\n-  const gitIgnoreContent = await readFile(\".gitignore\", \"utf-8\");\n-  const gitAttributesContent = await readFile(\".gitattributes\", \"utf-8\");\n+export async function getExcludedFiles(context: Context) {\n+  const [gitIgnoreContent, gitAttributesContent] = await Promise.all([getFileContent(\".gitignore\", context), getFileContent(\".gitattributes\", context)]);\n+\n   const gitAttributesLinguistGenerated = (await parseGitAttributes(gitAttributesContent))\n     .filter((v) => v.attributes[\"linguist-generated\"])\n     .map((v) => v.pattern);\n   const gitIgnoreExcludedFiles = gitIgnoreContent.split(\"\\n\").filter((v) => !v.startsWith(\"#\"));\n   return [...gitAttributesLinguistGenerated, ...gitIgnoreExcludedFiles];\n }\n+\n+async function getFileContent(path: string, context: Context): Promise<string> {","score":{"reward":1.554,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":31.545000000000016,"syllables":12,"sentences":1,"score":0.7154500000000001},"multiplier":1,"relevance":0.7}},{"id":1903333643,"content":"I'm don't think this will work because usually the PR's head sha is in author's fork/branch so you should use base branch","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1903333643","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -33,12 +33,32 @@ async function parseGitAttributes(content: string): Promise<GitAttributes[]> {\n     .filter((item): item is GitAttributes => item !== null);\n }\n \n-export async function getExcludedFiles() {\n-  const gitIgnoreContent = await readFile(\".gitignore\", \"utf-8\");\n-  const gitAttributesContent = await readFile(\".gitattributes\", \"utf-8\");\n+export async function getExcludedFiles(context: Context) {\n+  const [gitIgnoreContent, gitAttributesContent] = await Promise.all([getFileContent(\".gitignore\", context), getFileContent(\".gitattributes\", context)]);\n+\n   const gitAttributesLinguistGenerated = (await parseGitAttributes(gitAttributesContent))\n     .filter((v) => v.attributes[\"linguist-generated\"])\n     .map((v) => v.pattern);\n   const gitIgnoreExcludedFiles = gitIgnoreContent.split(\"\\n\").filter((v) => !v.startsWith(\"#\"));\n   return [...gitAttributesLinguistGenerated, ...gitIgnoreExcludedFiles];\n }\n+\n+async function getFileContent(path: string, context: Context): Promise<string> {\n+  try {\n+    const response = await context.octokit.rest.repos.getContent({\n+      owner: context.payload.repository.owner.login,\n+      repo: context.payload.repository.name,\n+      path,\n+      ref: context.payload.pull_request.head.sha,","score":{"reward":5.913,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":82.29666666666668,"syllables":31,"sentences":1,"score":0.7770333333333332},"multiplier":1,"relevance":0.9}},{"id":1905303259,"content":"I think your instructions are not reflecting the code. If confidence is higher than 0.5 than only a comment will be posted, but if it's lower than 0.5 PR review will be marked as requested changes and PR will be converted to draft","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1905303259","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,119 @@\n+import { Context } from \"../../../types\";\n+import { SuperOpenRouter } from \"./open-router\";\n+import OpenAI from \"openai\";\n+\n+export interface CompletionsType {\n+  answer: string;\n+  groundTruths: string[];\n+}\n+\n+export class OpenRouterCompletion extends SuperOpenRouter {\n+  constructor(client: OpenAI, context: Context) {\n+    super(client, context);\n+  }\n+\n+  getModelMaxTokenLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"anthropic/claude-3.5-sonnet\", 200000]]);\n+    const tokenLimit = tokenLimits.get(model);\n+    if (!tokenLimit) {\n+      throw this.context.logger.error(`The token limits for configured model ${model} was not found`);\n+    }\n+    return tokenLimit;\n+  }\n+\n+  getModelMaxOutputLimit(model: string): number {\n+    const tokenLimits = new Map<string, number>([[\"anthropic/claude-3.5-sonnet\", 4096]]);\n+    const tokenLimit = tokenLimits.get(model);\n+    if (!tokenLimit) {\n+      throw this.context.logger.error(`The token limits for configured model ${model} was not found`);\n+    }\n+    return tokenLimit;\n+  }\n+\n+  async createCompletion(model: string, localContext: string, groundTruths: string[], botName: string, maxTokens: number): Promise<CompletionsType> {\n+    const query = `Perform code review using the diff and spec and output a JSON format with key 'confidenceThreshold': (0-1) and reviewComment: <string>. A 0 indicates that the code review failed and 1 mean its passed and you should output the review comment to be \"This pull request has passed the automated review, a reviewer will review this pull request shortly\". YOU SHOULD ONLY OUTPUT RAW JSON DATA`;\n+    const sysMsg = [\n+      \"You Must obey the following ground truths: \",\n+      JSON.stringify(groundTruths) + \"\\n\",\n+      \"You are tasked with assisting as a GitHub bot by generating a confidence threshold from 0-1 on whether you think the pull difference completes the issue specification/body based on provided chat history and similar responses, focusing on using available knowledge within the provided corpus, which may contain code, documentation, or incomplete information. Your role is to interpret and use this knowledge effectively to answer user questions.\\n\\nSteps\\n1. Understand Context: Analyze the chat history and similar responses to grasp the issue requirements and pull request intent\\n2. Extract Key Information: Identify crucial details from the corpus, even if incomplete, focusing on specifications and their alignment with the pull diff\\n3. Evaluate Completeness: Assess how well the pull diff fulfills the issue specifications, using logical assumptions if needed to fill gaps\\n4. Generate Confidence: Provide a confidence score (0-1) indicating how likely the pull diff satisfies the issue specification\\n5. Generate Review Comment: Based on confidence: If 1, indicate PR passed review and will be reviewed shortly; If <1, provide specific needed changes\\n6. Output Response: Return JSON: {confidenceThreshold: <value>, reviewComment: <string>}\",","score":{"reward":7.614,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":46,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":86.65380434782612,"syllables":59,"sentences":4,"score":0.7334619565217387},"multiplier":1,"relevance":0.9}},{"id":1905305005,"content":"please make tests for this function","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1905305005","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,83 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+import { Context } from \"../../types\";\n+import { getExcludedFiles } from \"../excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+async function filterAndSortDiffs(diff: string, excludedPatterns: string[]): Promise<{ filename: string; tokenCount: number; diffContent: string }[]> {\n+  const perFileDiffs = parsePerFileDiffs(diff).filter((file) => excludedPatterns.every((pattern) => !minimatch(file.filename, pattern)));\n+\n+  const accurateFileDiffStats = await Promise.all(\n+    perFileDiffs.map(async (file) => {\n+      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n+      return { filename: file.filename, tokenCount: tokenCountArray.length, diffContent: file.diffContent };\n+    })\n+  );\n+\n+  // Sort files by token count in ascending order\n+  return accurateFileDiffStats.sort((a, b) => a.tokenCount - b.tokenCount);\n+}\n+\n+function selectIncludedFiles(\n+  files: { filename: string; tokenCount: number; diffContent: string }[],\n+  tokenLimits: TokenLimits,\n+  logger: Context[\"logger\"]\n+): typeof files {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+  let currentTokenCount = runningTokenCount;\n+  const includedFiles = [];\n+\n+  for (const file of files) {\n+    if (currentTokenCount + file.tokenCount > tokensRemaining) {\n+      logger.info(`Skipping ${file.filename} to stay within token limits.`);\n+      continue;\n+    }\n+    includedFiles.push(file);\n+    currentTokenCount += file.tokenCount;\n+  }\n+\n+  return includedFiles;\n+}\n+\n+export async function processPullRequestDiff(diff: string, tokenLimits: TokenLimits, context: Context) {\n+  const excludedFilePatterns = await getExcludedFiles(context);\n+  const sortedDiffs = await filterAndSortDiffs(diff, excludedFilePatterns);\n+\n+  const includedFiles = selectIncludedFiles(sortedDiffs, tokenLimits, context.logger);\n+\n+  if (includedFiles.length === 0) {\n+    context.logger.error(`Cannot include any files from diff without exceeding token limits.`);\n+    return { diff: null };\n+  }\n+\n+  // Build and return the final diff\n+  const currentDiff = includedFiles.map((file) => file.diffContent).join(\"\\n\");\n+  return { diff: currentDiff };\n+}\n+\n+// Helper to speed up tokenization\n+async function encodeAsync(text: string, options: EncodeOptions): Promise<number[]> {\n+  return new Promise((resolve) => {\n+    const result = encode(text, options);\n+    resolve(result);\n+  });\n+}\n+\n+// Helper to parse a diff into per-file diffs\n+function parsePerFileDiffs(diff: string): { filename: string; diffContent: string }[] {\n+  // Split the diff string into chunks for each file\n+  const fileDiffs = diff.split(/^diff --git /gm).filter((chunk) => chunk.trim() !== \"\");\n+\n+  return fileDiffs.map((chunk) => {\n+    // Extract the filename and content from each chunk\n+    const lines = chunk.split(\"\\n\");\n+    const firstLine = lines.shift()?.trim() || \"\";\n+    const [filename] = firstLine.split(\" \").map((part) => part.replace(/^a\\//, \"\"));\n+\n+    return {\n+      filename,\n+      diffContent: `diff --git ${firstLine}\\n${lines.join(\"\\n\").trim()}`,\n+    };\n+  });\n+}","score":{"reward":1.896,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1907684278,"content":"might be better using an if instead of two same ternary operations","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1907684278","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -48,7 +48,10 @@ export class PullReviewer {\n       await this.convertPullToDraft();\n     }\n \n-    await this.submitCodeReview(reviewComment, confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\");\n+    await this.submitCodeReview(\n+      confidenceThreshold > 0.5 ? \"This pull request has passed the automated review, a reviewer will review this pull request shortly\" : reviewComment,\n+      confidenceThreshold > 0.5 ? \"COMMENT\" : \"REQUEST_CHANGES\"\n+    );","score":{"reward":2.793,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":53.655,"syllables":20,"sentences":1,"score":0.93655},"multiplier":1,"relevance":0.7}},{"id":1907686567,"content":"@ishowvel you changed `context` to `readonly` but @gentlementlegen meant `_oneDay`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1907686567","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,281 @@\n+import { formatSpecAndPull } from \"../helpers/format-spec-and-pull\";\n+import { fetchIssue } from \"../helpers/issue-fetching\";\n+import { CodeReviewStatus } from \"../types/github-types\";\n+import { findGroundTruths } from \"./ground-truths/find-ground-truths\";\n+import { Context } from \"../types\";\n+import { CallbackResult } from \"../types/proxy\";\n+import { closedByPullRequestsReferences, IssuesClosedByThisPr } from \"../helpers/gql-queries\";\n+\n+export class PullReviewer {\n+  context: Context;\n+  private _oneDay = 24 * 60 * 60 * 1000;","score":{"reward":1.548,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":42.61571428571432,"syllables":13,"sentences":1,"score":0.8261571428571431},"multiplier":1,"relevance":0.6}},{"id":1912240559,"content":"Cloudflare doesn't count the time while it's waiting for the request to finish but it has 10ms CPU time and 30 second hard limit. But if you implement retries it could be longer than 30 seconds in some cases so still makes sense to use Actions to be on the safe side.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1912240559","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,93 +1,47 @@\n-# `@ubiquibot/plugin-template`\n+# `@ubiquity-os/daemon-pull-review`\n \n-## Prerequisites\n+This is a high context aware GitHub organization integrated bot that uses the Anthropic Claude 3.5 Sonnet model to provide automated reviews and feeback to Github pull requests.\n \n-- A good understanding of how the [kernel](https://github.com/ubiquity/ubiquibot-kernel) works and how to interact with it.\n-- A basic understanding of the Ubiquibot configuration and how to define your plugin's settings.\n+## Usage\n \n-## Getting Started\n+Just convert a pull request to be ready for review and the bot automatically reviews and requests changes if necessary\n \n-1. Create a new repository using this template.\n-2. Clone the repository to your local machine.\n-3. Install the dependencies preferably using `yarn` or `bun`.\n+## How it works\n \n-## Creating a new plugin\n+With its huge context window, we are able to feed the entire issue specification and the pull request to the model which we obtain. This allows the model to have a very deep understanding of the current scope and provide highly relevant reviews.\n \n-- If your plugin is to be used as a slash command which should have faster response times as opposed to longer running GitHub action tasks, you should use the `worker` type.\n+## Installation\n \n-1. Ensure you understand and have setup the [kernel](https://github.com/ubiquity/ubiquibot-kernel).\n-2. Update [compute.yml](./.github/workflows/compute.yml) with your plugin's name and update the `id`.\n-3. Update [context.ts](./src/types/context.ts) with the events that your plugin will fire on.\n-4. Update [manifest.json](./manifest.json) with a proper description of your plugin.\n-5. Update [plugin-inputs.ts](./src/types/plugin-inputs.ts) to match the `with:` settings in your org or repo level configuration.\n-\n-- Your plugin config should look similar to this:\n+`.ubiquity-os.config.yml`:\n \n ```yml\n plugins:\n-  - name: hello-world\n-    id: hello-world\n-    uses:\n+  - uses:\n       - plugin: http://localhost:4000\n         with:\n-          # Define configurable items here and the kernel will pass these to the plugin.\n-          configurableResponse: \"Hello, is it me you are looking for?\"\n-          customStringsUrl: \"https://raw.githubusercontent.com/ubiquibot/plugin-template/development/strings.json\"\n+          openRouterAiModel: \"\" # Optional - defaults to \"anthropic/claude-3.5-sonnet\"\n+          openRouterBaseUrl: \"\" # Optional - defaults to Open Router's API endpoint\n ```\n \n-###### At this stage, your plugin will fire on your defined events with the required settings passed in from the kernel. You can now start writing your plugin's logic.\n-\n-6. Start building your plugin by adding your logic to the [plugin.ts](./src/plugin.ts) file.\n-\n-## Testing a plugin\n+`.dev.vars` (for local testing):\n \n-### Worker Plugins\n+specify the OpenRouterBase URL in the `.ubiquity-os.config.yml` file and set the `OPENROUTER_API_KEY` in the `.dev.vars` file.\n \n-- `yarn/bun worker` - to run the worker locally.\n-- To trigger the worker, `POST` requests to http://localhost:4000/ with an event payload similar to:\n-\n-```ts\n-await fetch(\"http://localhost:4000/\", {\n-  method: \"POST\",\n-  headers: {\n-    \"Content-Type\": \"application/json\",\n-  },\n-  body: JSON.stringify({\n-    stateId: \"\",\n-    eventName: \"\",\n-    eventPayload: \"\",\n-    settings: \"\",\n-    ref: \"\",\n-    authToken: \"\",\n-  }),\n-});\n+```sh\n+OPENROUTER_API_KEY=YOUR_OPENROUTER_API_KEY\n+UBIQUITY_OS_APP_NAME=\"UbiquityOS\"\n ```\n \n-A full example can be found [here](https://github.com/ubiquibot/assistive-pricing/blob/623ea3f950f04842f2d003bda3fc7b7684e41378/tests/http/request.http).\n-\n-#### Deploying the Worker\n-\n-For testing purposes, the worker can be deployed through the Worker Deploy and Worker Delete workflows. It requires to\n-create a personal [Cloudflare Account](https://www.cloudflare.com/), and fill the `CLOUDFLARE_ACCOUNT_ID` and `CLOUDFLARE_API_TOKEN` within your\n-GitHub Action Secrets.\n+## Custom Port Configuration\n \n-### Action Plugins\n+If you specify a different port in your config file instead of the default port 4005, you'll need to start the development server with the corresponding port number:\n \n-- Ensure the kernel is running and listening for events.\n-- Fire an event in/to the repo where the kernel is installed. This can be done in a number of ways, the easiest being via the GitHub UI or using the GitHub API, such as posting a comment, opening an issue, etc in the org/repo where the kernel is installed.\n-- The kernel will process the event and dispatch it using the settings defined in your `.ubiquibot-config.yml`.\n-- The `compute.yml` workflow will run and execute your plugin's logic.\n-- You can view the logs in the Actions tab of your repo.\n-\n-[Nektos Act](https://github.com/nektos/act) - a tool for running GitHub Actions locally.\n-\n-## More information\n-\n-- [Full Ubiquibot Configuration](https://github.com/ubiquity/ubiquibot/blob/0fde7551585499b1e0618ec8ea5e826f11271c9c/src/types/configuration-types.ts#L62) - helpful for defining your plugin's settings as they are strongly typed and will be validated by the kernel.\n-- [Ubiquibot V1](https://github.com/ubiquity/ubiquibot) - helpful for porting V1 functionality to V2, helper/utility functions, types, etc. Everything is based on the V1 codebase but with a more modular approach. When using V1 code, keep in mind that most all code will need refactored to work with the new V2 architecture.\n+```sh\n+bun wrangler dev --env dev --port <your-port-number>","score":{"reward":6.447,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":74.46333333333335,"syllables":67,"sentences":2,"score":0.8553666666666665},"multiplier":1,"relevance":0.7}},{"id":1915530876,"content":"`default` should be in `T.Number()` and object default should be `{}`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1915530876","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -12,6 +12,13 @@ export const pluginSettingsSchema = T.Object(\n   {\n     openRouterAiModel: T.String({ default: \"anthropic/claude-3.5-sonnet\" }),\n     openRouterBaseUrl: T.String({ default: \"https://openrouter.ai/api/v1\" }),\n+    tokenLimit: T.Object(\n+      {\n+        context: T.Number(),\n+        completion: T.Number(),\n+      },\n+      { default: { context: 200000, completion: 4096 } }\n+    ),","score":{"reward":2.184,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.8}},{"id":1915531190,"content":"are you sure this is correct? does it not throw the error?","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1915531190","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -102,12 +103,14 @@ export class OpenRouterCompletion extends SuperOpenRouter {\n           content: groundTruthSource,\n         },\n       ],\n-    });\n+    })) as OpenAI.Chat.Completions.ChatCompletion & {\n+      _request_id?: string | null;\n+      error: { message: string; code: number; metadata: object } | undefined;\n+    };","score":{"reward":2.835,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":102.045,"syllables":14,"sentences":2,"score":1},"multiplier":1,"relevance":0.7}},{"id":1916373948,"content":"Then please make it as a type so it's not duplicated multiple times\r\nEDIT: I've just tested with Openrouter and it threw an error when I put wrong model name on purpose. It seems to throw an error when the error originates from Openrouter, but if the error originates from the underlying model it just puts it in the response which is not a good practice I'd say","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1916373948","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -102,12 +103,14 @@ export class OpenRouterCompletion extends SuperOpenRouter {\n           content: groundTruthSource,\n         },\n       ],\n-    });\n+    })) as OpenAI.Chat.Completions.ChatCompletion & {\n+      _request_id?: string | null;\n+      error: { message: string; code: number; metadata: object } | undefined;\n+    };","score":{"reward":7.968,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":71,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":52.83911971830989,"syllables":99,"sentences":2,"score":0.9283911971830989},"multiplier":1,"relevance":0.8}},{"id":1921641416,"content":"Did you calculate how many tokens the system prompt needs and subtract it from `tokenRemaining`?\r\nAlso you reassigning the `runningTokenCount` to `currentTokenCount` which doesn't work for primitive types so any changes won't be reflected in `runningTokenCount`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1921641416","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,83 @@\n+import { encode } from \"gpt-tokenizer\";\n+import { TokenLimits } from \"../../types/llm\";\n+import { EncodeOptions } from \"gpt-tokenizer/esm/GptEncoding\";\n+import { Context } from \"../../types\";\n+import { getExcludedFiles } from \"../excluded-files\";\n+import { minimatch } from \"minimatch\";\n+\n+async function filterAndSortDiffs(diff: string, excludedPatterns: string[]): Promise<{ filename: string; tokenCount: number; diffContent: string }[]> {\n+  const perFileDiffs = parsePerFileDiffs(diff).filter((file) => excludedPatterns.every((pattern) => !minimatch(file.filename, pattern)));\n+\n+  const accurateFileDiffStats = await Promise.all(\n+    perFileDiffs.map(async (file) => {\n+      const tokenCountArray = await encodeAsync(file.diffContent, { disallowedSpecial: new Set() });\n+      return { filename: file.filename, tokenCount: tokenCountArray.length, diffContent: file.diffContent };\n+    })\n+  );\n+\n+  // Sort files by token count in ascending order\n+  return accurateFileDiffStats.sort((a, b) => a.tokenCount - b.tokenCount);\n+}\n+\n+function selectIncludedFiles(\n+  files: { filename: string; tokenCount: number; diffContent: string }[],\n+  tokenLimits: TokenLimits,\n+  logger: Context[\"logger\"]\n+): typeof files {\n+  const { runningTokenCount, tokensRemaining } = tokenLimits;\n+  let currentTokenCount = runningTokenCount;\n+  const includedFiles = [];\n+\n+  for (const file of files) {\n+    if (currentTokenCount + file.tokenCount > tokensRemaining) {\n+      logger.info(`Skipping ${file.filename} to stay within token limits.`);\n+      continue;\n+    }\n+    includedFiles.push(file);\n+    currentTokenCount += file.tokenCount;\n+  }","score":{"reward":6.804,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":75.12117647058825,"syllables":46,"sentences":2,"score":0.8487882352941175},"multiplier":1,"relevance":0.9}},{"id":1922876474,"content":"you also need to subtract `tokensRemaining`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1922876474","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -53,8 +30,17 @@ async function createPullSpecContextBlockSection({\n   const block = [specBlock.join(\"\\n\")];\n \n   // Build the block with the diff in it's own section\n-  const blockWithDiff = [block.join(\"\\n\"), createHeader(`Pull Request Diff`, key), diff, createFooter(`Pull Request Diff`, key)];\n-  return blockWithDiff.join(\"\\n\");\n+  const localContextWithoutDiff = [block.join(\"\\n\"), createHeader(`Pull Request Diff`, key), createFooter(`Pull Request Diff`, key)].join(\"\\n\");\n+\n+  tokenLimits.runningTokenCount += (await encodeAsync(localContextWithoutDiff)).length;","score":{"reward":1.755,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.9}},{"id":1922876546,"content":"you also need to subtract `tokensRemaining`","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1922876546","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -24,17 +24,14 @@ function selectIncludedFiles(\n   tokenLimits: TokenLimits,\n   logger: Context[\"logger\"]\n ): typeof files {\n-  const { runningTokenCount, tokensRemaining } = tokenLimits;\n-  let currentTokenCount = runningTokenCount;\n   const includedFiles = [];\n-\n   for (const file of files) {\n-    if (currentTokenCount + file.tokenCount > tokensRemaining) {\n+    if (tokenLimits.runningTokenCount + file.tokenCount > tokenLimits.tokensRemaining) {\n       logger.info(`Skipping ${file.filename} to stay within token limits.`);\n       continue;\n     }\n     includedFiles.push(file);\n-    currentTokenCount += file.tokenCount;\n+    tokenLimits.runningTokenCount += file.tokenCount;","score":{"reward":1.755,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.9}},{"id":2553456350,"content":"@ishowvel please check this [comment](https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#discussion_r1890627143) if you missed it \r\n---\r\nThey are both optional, if you wanted to change the model used or if you wanted to change API url to another one that is compatible with Anthropic. But I agree it should be clarified in the README","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2553456350","commentType":"PULL_COLLABORATOR","score":{"reward":6.216,"formatting":{"content":{"p":{"score":0,"elementCount":2},"hr":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":69.58250000000002,"syllables":63,"sentences":2,"score":0.9041749999999997},"multiplier":1,"relevance":0.7}},{"id":2571712729,"content":"I've just realized that your approach is wrong, you’re trying to read the plugin’s `.gitattributes`, but you should be fetching the repository’s `.gitattributes` where the PR is located (using Octokit)","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2571712729","commentType":"PULL_COLLABORATOR","score":{"reward":6.804,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":58.03000000000003,"syllables":44,"sentences":1,"score":0.9803000000000003},"multiplier":1,"relevance":0.9}},{"id":2587006083,"content":"Currently if someone who is not the PR author converts it to ready for review, the bot will skip the review but as you said a lot of times the PR can be created by the core team for quick fixes. \r\nWe should disable reviews for core team or alternatively only make a review when the PR is created but if it's converted to ready for review by the core team member (even if it's the PR author) it should not interfere","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2587006083","commentType":"PULL_COLLABORATOR","score":{"reward":9.126,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":84,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":53.419285714285735,"syllables":110,"sentences":2,"score":0.9341928571428574},"multiplier":1,"relevance":0.9}},{"id":2590683282,"content":"Just approved review with no comment should be enough. Logic is only ran when it's converted from draft to ready for review and not on every commit","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2590683282","commentType":"PULL_COLLABORATOR","score":{"reward":4.809,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":71.76785714285715,"syllables":40,"sentences":2,"score":0.8823214285714285},"multiplier":1,"relevance":0.7}},{"id":2592367041,"content":"That could be easily solved by filtering bot reviews\r\nThat's feasible too","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2592367041","commentType":"PULL_COLLABORATOR","score":{"reward":2.556,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":63.486153846153854,"syllables":20,"sentences":1,"score":0.9651384615384615},"multiplier":1,"relevance":0.6}},{"id":2608331774,"content":"@ishowvel also show final QA and we can merge this","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2608331774","commentType":"PULL_COLLABORATOR","score":{"reward":1.68,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":78.24500000000002,"syllables":14,"sentences":1,"score":0.8175499999999998},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2504515494,"effect":{"addition":530,"deletion":469},"reward":29.97,"priority":3},{"reviewId":2504629445,"effect":{"addition":40,"deletion":16},"reward":1.68,"priority":3},{"reviewId":2512639548,"effect":{"addition":152,"deletion":136},"reward":8.64,"priority":3},{"reviewId":2514120919,"effect":{"addition":95,"deletion":91},"reward":5.58,"priority":3},{"reviewId":2526486835,"effect":{"addition":0,"deletion":0},"reward":0,"priority":3},{"reviewId":2529452782,"effect":{"addition":327,"deletion":255},"reward":17.46,"priority":3},{"reviewId":2530903354,"effect":{"addition":110,"deletion":128},"reward":7.14,"priority":3},{"reviewId":2530958313,"effect":{"addition":25,"deletion":5},"reward":0.9,"priority":3},{"reviewId":2534069064,"effect":{"addition":32,"deletion":41},"reward":2.19,"priority":3},{"reviewId":2537997785,"effect":{"addition":103,"deletion":15},"reward":3.54,"priority":3},{"reviewId":2538001930,"effect":{"addition":0,"deletion":0},"reward":0,"priority":3},{"reviewId":2545277795,"effect":{"addition":103,"deletion":16},"reward":3.57,"priority":3},{"reviewId":2550909216,"effect":{"addition":50,"deletion":25},"reward":2.25,"priority":3},{"reviewId":2561098949,"effect":{"addition":57,"deletion":13},"reward":2.1,"priority":3},{"reviewId":2563186365,"effect":{"addition":56,"deletion":47},"reward":3.09,"priority":3},{"reviewId":2570257478,"effect":{"addition":5,"deletion":2},"reward":0.21,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 261.522 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>16</td><td>88.32</td></tr><tr><td>Review</td><td>Comment</td><td>46</td><td>173.202</td></tr></tbody></table></details>"},"shiv810":{"total":0.84,"userId":53160903,"comments":[{"id":2567983438,"content":"Yes, we should be using OpenRouter, as we only have the OPENROUTER_API_KEY configured in the org secrets.","url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1#issuecomment-2567983438","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.84,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":35.309411764705914,"syllables":31,"sentences":1,"score":0.7530941176470591},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/daemon-pull-review/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.84 XP ]</a>&nbsp;</h3><h6>@shiv810</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>0.84</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_9.json","json":{"Keyrxng":{"userId":106303466,"total":800,"task":{"reward":800,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 800 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>800</td></tr></tbody></table></details>"},"jordan-ae":{"total":1.52,"userId":33989423,"comments":[{"id":2110528674,"content":"@gentlementlegen so this start/stop should work exactly how the v1 Bot does currently?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2110528674","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.52,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":59.68214285714288,"syllables":22,"sentences":1,"score":0.9968214285714287},"multiplier":0.25,"relevance":1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.52 XP ]</a>&nbsp;</h3><h6>@jordan-ae</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.52</td></tr></tbody></table></details>"},"gentlementlegen":{"total":470.34,"userId":9807008,"comments":[{"id":2111749409,"content":"@jordan-ae Correct, the goal is to reimplement the same functionalities but in a cleaner manner within separate modules.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2111749409","commentType":"ISSUE_AUTHOR","score":{"reward":5.632,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":36.1605263157895,"syllables":34,"sentences":1,"score":0.761605263157895},"multiplier":1,"relevance":0.8}},{"id":2119288896,"content":"Apologies this slipped my mind. `start-stop` seems like a poor naming, maybe more something like `assignee-manager` since it helps with assigning users to tasks.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2119288896","commentType":"ISSUE_AUTHOR","score":{"reward":4.704,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":76.46090909090911,"syllables":31,"sentences":2,"score":0.8353909090909089},"multiplier":1,"relevance":0.6}},{"id":2120506250,"content":"Related repository: https://github.com/ubiquibot/command-start-stop","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2120506250","commentType":"ISSUE_AUTHOR","score":{"reward":2.384,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":23.667500000000018,"syllables":19,"sentences":2,"score":0.6366750000000002},"multiplier":1,"relevance":0.4}},{"id":2292618542,"content":"A user should be able to start or stop working on a task, by typing `/start` or `/stop` within a comment under an issue.\r\nStop this one will be especially useful to gracefully quit a task without losing XP. if somebody is disqualified through poor/non performance, then they will get negative XP.\r\n[See code reference](https://github.com/ubiquity/ubiquibot/blob/ddd452ff20b254d05a81eea2ed17ac8c29ef557b/src/handlers/comment/handlers/stop.ts)","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.46,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":61.53250000000003,"syllables":84,"sentences":4,"score":0.9846749999999997},"multiplier":1,"relevance":1}},{"id":2173281926,"content":"Please fix my last comment and good to go for me.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#pullrequestreview-2173281926","commentType":"PULL_COLLABORATOR","score":{"reward":3.024,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":103.37909090909093,"syllables":12,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1612163101,"content":"Isn't `cspell` not case sensitive?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612163101","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,10 +1,10 @@\n {\n   \"$schema\": \"https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json\",\n   \"version\": \"0.2\",\n-  \"ignorePaths\": [\"**/*.json\", \"**/*.css\", \"node_modules\", \"**/*.log\"],\n+  \"ignorePaths\": [\"**/*.json\", \"**/*.css\", \"node_modules\", \"**/*.log\", \"./src/adapters/supabase/**/**.ts\"],\n   \"useGitignore\": true,\n   \"language\": \"en\",\n-  \"words\": [\"dataurl\", \"devpool\", \"outdir\", \"servedir\"],\n+  \"words\": [\"dataurl\", \"devpool\", \"outdir\", \"servedir\", \"Supabase\", \"supabase\", \"SUPABASE\", \"typebox\", \"ubiquibot\", \"signoff\", \"sonarjs\", \"mswjs\"],","score":{"reward":1.82,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.7}},{"id":1612164197,"content":"This should not be here. Defaults should be within the `typebox` object, and an example provided in the README.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612164197","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":5.408,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":84.90000000000003,"syllables":24,"sentences":2,"score":0.7509999999999997},"multiplier":1,"relevance":0.8}},{"id":1612166641,"content":"Should match the repo name, something like `@ubiquibot/command-start-stop`","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612166641","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,7 @@\n {\n-  \"name\": \"ts-template\",\n+  \"name\": \"@ubiquibot-plugins/start-stop\",","score":{"reward":2.408,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0.7}},{"id":1612171937,"content":"Should also check that the match has enough elements","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612171937","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,45 @@\n+import { Label } from \"../../types\";\n+import { Context } from \"../../types/context\";\n+import { taskPaymentMetaData } from \"./analytics\";\n+import { getUserMultiplier } from \"./get-user-multiplier\";\n+\n+export async function getMultiplierInfoToDisplay(context: Context, labels: Label[]) {\n+  const payload = context.payload;\n+  const senderId = payload.sender.id;\n+  const repoId = payload.repository.id;\n+  const userMultiplier = await getUserMultiplier(context, senderId, repoId);\n+  const value = userMultiplier?.value || null;\n+  const reason = userMultiplier?.reason || null;\n+\n+  let totalPriceOfTask: string | null = null;\n+\n+  if (value && value != 1) {\n+    const task = taskPaymentMetaData(context, labels);\n+\n+    if (task.priceLabel) {\n+      const price = parsePrice(task.priceLabel);\n+      price.number *= value;\n+      totalPriceOfTask = `${price.number} ${price.currency}`;\n+    } else {\n+      totalPriceOfTask = \"Permit generation disabled because price label is not set.\";\n+    }\n+  }\n+\n+  return {\n+    multiplierAmount: value,\n+    multiplierReason: reason,\n+    totalPriceOfTask: totalPriceOfTask,\n+  };\n+}\n+\n+function parsePrice(priceString: string) {\n+  const match = priceString.match(/Price: ([\\d.]+) (\\w+)/);\n+  if (!match) {","score":{"reward":3.78,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":75.50000000000003,"syllables":13,"sentences":1,"score":0.8449999999999998},"multiplier":1,"relevance":0.9}},{"id":1612174179,"content":"Why `any`?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612174179","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,59 @@\n+import { Context } from \"../../types\";\n+import { addCommentToIssue, closePullRequestForAnIssue } from \"../../utils/issue\";\n+\n+// eslint-disable-next-line @typescript-eslint/no-explicit-any\n+export async function stop(context: Context, issue: any, sender: { id: number; login: string }, repo: any) {","score":{"reward":0.576,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":121.22000000000003,"syllables":1,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1612175811,"content":"Seems to be a copy paste of the old codebase. There is a different open issue to solve the metadata attachment to comments.\r\nhttps://github.com/ubiquibot/plugins-wishlist/issues/12","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612175811","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":9.492,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":59.78810483870967,"syllables":51,"sentences":4,"score":0.9978810483870967},"multiplier":1,"relevance":0.7}},{"id":1612181059,"content":"Should have defaults","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612181059","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,28 @@\n+import { SupportedEvents, SupportedEventsU } from \"./context\";\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+\n+export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]> {\n+  stateId: string;\n+  eventName: T;\n+  eventPayload: TU[\"payload\"];\n+  settings: StartStopSettings;\n+  authToken: string;\n+  ref: string;\n+}\n+\n+export const startStopSchema = T.Object({","score":{"reward":1.344,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.8}},{"id":1612181370,"content":"Should have defined values for options (I guess \"start\", \"stop\")","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612181370","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,28 @@\n+import { SupportedEvents, SupportedEventsU } from \"./context\";\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+\n+export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]> {\n+  stateId: string;\n+  eventName: T;\n+  eventPayload: TU[\"payload\"];\n+  settings: StartStopSettings;\n+  authToken: string;\n+  ref: string;\n+}\n+\n+export const startStopSchema = T.Object({\n+  disabledCommands: T.Array(T.String()),","score":{"reward":3.52,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.8}},{"id":1612182607,"content":"Shouldn't it match `UBIQUIBOT_TOKEN`?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612182607","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,11 @@\n+import { Type as T } from \"@sinclair/typebox\";\n+import { StaticDecode } from \"@sinclair/typebox\";\n+import \"dotenv/config\";\n+\n+export const envSchema = T.Object({\n+  GITHUB_TOKEN: T.String(),","score":{"reward":1.596,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1612183742,"content":"Should not be here","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612183742","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1612187534,"content":"Since this is supposed to be a worker maybe we don't need this part?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612187534","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":3.456,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":95.73000000000002,"syllables":17,"sentences":1,"score":0.6426999999999998},"multiplier":1,"relevance":0.6}},{"id":1612704279,"content":"The workflow entry is the file you want as long as you specify it in the configuration.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612704279","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":4.128,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":60.19176470588238,"syllables":26,"sentences":1,"score":0.9980823529411762},"multiplier":1,"relevance":0.6}},{"id":1612705413,"content":"I do not know yet was it the best approach but supposedly if a plugin fail, as a GitHub Action they would dispatch an error and as a Worker they should return 500 to advise the kernel it failed. Problem if we handle that from the plugin itself that would mean every plugin should have to reimplement it.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612705413","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":9.044,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":58,"wordValue":0.1,"result":2.49},"readability":{"fleschKincaid":60.71034482758621,"syllables":80,"sentences":2,"score":0.9928965517241379},"multiplier":1,"relevance":0.7}},{"id":1612706610,"content":"Can't this be achieved by `unknown` or a `<T>`?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612706610","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,387 @@\n+/* eslint-disable @typescript-eslint/no-explicit-any */","score":{"reward":3.168,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":103.54,"syllables":9,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1612707067,"content":"I don't think this should be in the codebase","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612707067","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,105 @@\n+import { Database } from \"../types/database\";\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+import { addCommentToIssue } from \"../../../utils/issue\";\n+\n+export class User extends Super {\n+  locationResponse: LocationResponse | undefined;\n+\n+  user_id: string | undefined;\n+  comment_id: string | undefined;\n+  issue_id: string | undefined;\n+  repository_id: string | undefined;\n+  node_id: string | undefined;\n+  node_type: string | undefined;\n+\n+  constructor(supabase: SupabaseClient<Database>, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  async getUserById(userId: number, issueNumber: number) {\n+    const { data, error } = await this.supabase.from(\"users\").select(\"*\").eq(\"id\", userId).single();\n+    if (error) {\n+      console.error(FAILED_TO_GET_USER, { userId, error, issueNumber });\n+      return null;\n+    }\n+\n+    console.info(SUCCESSFULLY_FETCHED_USER, { userId, issueNumber, ...data });\n+    return data;\n+  }\n+\n+  async getWalletByUserId(userId: number, issueNumber: number) {\n+    const { data, error } = await this.supabase.from(\"users\").select(\"wallets(*)\").eq(\"id\", userId).single();\n+    if ((error && !data) || !data.wallets?.address) {\n+      console.error(\"No wallet address found\", { userId, issueNumber }, true);\n+      await addCommentToIssue(this.context, \"```diff\\n # Please set your wallet address with the /wallet command first and try again.\\n```\");\n+      throw new Error(\"No wallet address found\");\n+    }\n+\n+    console.info(\"Successfully fetched wallet\", { userId, address: data.wallets?.address });\n+    return data.wallets?.address;\n+  }\n+\n+  public async getMultiplier(userId: number, repositoryId: number) {\n+    const locationData = await this.getLocationsFromRepo(repositoryId);\n+    if (locationData && locationData.length > 0) {\n+      const accessData = await this._getAccessData(locationData, userId);\n+      if (accessData) {\n+        return {\n+          value: accessData.multiplier || null,\n+          reason: accessData.multiplier_reason || null,\n+        };\n+      }\n+    }\n+    return null;\n+  }\n+\n+  private async _getAccessData(locationData: { id: number }[], userId: number) {\n+    const locationIdsInCurrentRepository = locationData.map((location) => location.id);\n+\n+    const { data: accessData, error: accessError } = await this.supabase\n+      .from(\"access\")\n+      .select(\"multiplier, multiplier_reason\")\n+      .in(\"location_id\", locationIdsInCurrentRepository)\n+      .eq(\"user_id\", userId)\n+      .order(\"id\", { ascending: false }) // get the latest one\n+      .maybeSingle();\n+    if (accessError) throw console.error(\"Error getting access data\", accessError);\n+    return accessData;\n+  }\n+\n+  public async getLocationsFromRepo(repositoryId: number) {\n+    const { data: locationData, error } = await this.supabase.from(\"locations\").select(\"id\").eq(\"repository_id\", repositoryId);\n+\n+    if (error) throw console.error(\"Error getting location data\", new Error(error.message));\n+    return locationData;\n+  }\n+}\n+\n+const FAILED_TO_GET_USER = \"Failed to get user\";\n+const SUCCESSFULLY_FETCHED_USER = \"Successfully fetched user\";\n+\n+interface LocationResponse {","score":{"reward":3.456,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":95.165,"syllables":12,"sentences":1,"score":0.64835},"multiplier":1,"relevance":0.8}},{"id":1612707202,"content":"Possible to use `unknown` or `<T>`?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612707202","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,190 @@\n+import util from \"util\";\n+/* eslint-disable @typescript-eslint/no-unused-vars */","score":{"reward":1.54,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.7}},{"id":1612708325,"content":"Why are the labels relevant to the `start | stop`?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612708325","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,44 @@\n+import { SupportedEvents, SupportedEventsU } from \"./context\";\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+\n+export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]> {\n+  stateId: string;\n+  eventName: T;\n+  eventPayload: TU[\"payload\"];\n+  settings: StartStopSettings;\n+  authToken: string;\n+  ref: string;\n+}\n+\n+const oneDay = 24 * 60 * 60 * 1000;\n+\n+export const startStopSchema = T.Object({\n+  disabledCommands: T.Array(T.String(), { default: [\"start\"] }),\n+  labels: T.Object(\n+    {\n+      time: T.Array(T.String()),\n+      priority: T.Array(T.String()),\n+    },\n+    {\n+      default: {","score":{"reward":2.752,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0.8}},{"id":1613235802,"content":"If this is for the location why not using Supabase generated types?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1613235802","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,105 @@\n+import { Database } from \"../types/database\";\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+import { addCommentToIssue } from \"../../../utils/issue\";\n+\n+export class User extends Super {\n+  locationResponse: LocationResponse | undefined;\n+\n+  user_id: string | undefined;\n+  comment_id: string | undefined;\n+  issue_id: string | undefined;\n+  repository_id: string | undefined;\n+  node_id: string | undefined;\n+  node_type: string | undefined;\n+\n+  constructor(supabase: SupabaseClient<Database>, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  async getUserById(userId: number, issueNumber: number) {\n+    const { data, error } = await this.supabase.from(\"users\").select(\"*\").eq(\"id\", userId).single();\n+    if (error) {\n+      console.error(FAILED_TO_GET_USER, { userId, error, issueNumber });\n+      return null;\n+    }\n+\n+    console.info(SUCCESSFULLY_FETCHED_USER, { userId, issueNumber, ...data });\n+    return data;\n+  }\n+\n+  async getWalletByUserId(userId: number, issueNumber: number) {\n+    const { data, error } = await this.supabase.from(\"users\").select(\"wallets(*)\").eq(\"id\", userId).single();\n+    if ((error && !data) || !data.wallets?.address) {\n+      console.error(\"No wallet address found\", { userId, issueNumber }, true);\n+      await addCommentToIssue(this.context, \"```diff\\n # Please set your wallet address with the /wallet command first and try again.\\n```\");\n+      throw new Error(\"No wallet address found\");\n+    }\n+\n+    console.info(\"Successfully fetched wallet\", { userId, address: data.wallets?.address });\n+    return data.wallets?.address;\n+  }\n+\n+  public async getMultiplier(userId: number, repositoryId: number) {\n+    const locationData = await this.getLocationsFromRepo(repositoryId);\n+    if (locationData && locationData.length > 0) {\n+      const accessData = await this._getAccessData(locationData, userId);\n+      if (accessData) {\n+        return {\n+          value: accessData.multiplier || null,\n+          reason: accessData.multiplier_reason || null,\n+        };\n+      }\n+    }\n+    return null;\n+  }\n+\n+  private async _getAccessData(locationData: { id: number }[], userId: number) {\n+    const locationIdsInCurrentRepository = locationData.map((location) => location.id);\n+\n+    const { data: accessData, error: accessError } = await this.supabase\n+      .from(\"access\")\n+      .select(\"multiplier, multiplier_reason\")\n+      .in(\"location_id\", locationIdsInCurrentRepository)\n+      .eq(\"user_id\", userId)\n+      .order(\"id\", { ascending: false }) // get the latest one\n+      .maybeSingle();\n+    if (accessError) throw console.error(\"Error getting access data\", accessError);\n+    return accessData;\n+  }\n+\n+  public async getLocationsFromRepo(repositoryId: number) {\n+    const { data: locationData, error } = await this.supabase.from(\"locations\").select(\"id\").eq(\"repository_id\", repositoryId);\n+\n+    if (error) throw console.error(\"Error getting location data\", new Error(error.message));\n+    return locationData;\n+  }\n+}\n+\n+const FAILED_TO_GET_USER = \"Failed to get user\";\n+const SUCCESSFULLY_FETCHED_USER = \"Successfully fetched user\";\n+\n+interface LocationResponse {","score":{"reward":3.78,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":60.70500000000001,"syllables":19,"sentences":1,"score":0.9929499999999999},"multiplier":1,"relevance":0.7}},{"id":1615034289,"content":"It does make more sense but I don't think this would be a very common scenario. So in the end I would say let's have both there or none.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1615034289","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,28 @@\n+import { SupportedEvents, SupportedEventsU } from \"./context\";\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+\n+export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]> {\n+  stateId: string;\n+  eventName: T;\n+  eventPayload: TU[\"payload\"];\n+  settings: StartStopSettings;\n+  authToken: string;\n+  ref: string;\n+}\n+\n+export const startStopSchema = T.Object({\n+  disabledCommands: T.Array(T.String()),","score":{"reward":5.496,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":95.58637096774196,"syllables":35,"sentences":2,"score":0.6441362903225805},"multiplier":1,"relevance":0.6}},{"id":1630917948,"content":"I get it but why should they be defined within the configuration I meant? They should just be parsed. Because the configuration from the other plugin responsible for the labels can also be changed. But you can be guaranteed to get something looking like `Time: <X DURATION` with X being a number and duration `hour | day | week`","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1630917948","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,44 @@\n+import { SupportedEvents, SupportedEventsU } from \"./context\";\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+\n+export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]> {\n+  stateId: string;\n+  eventName: T;\n+  eventPayload: TU[\"payload\"];\n+  settings: StartStopSettings;\n+  authToken: string;\n+  ref: string;\n+}\n+\n+const oneDay = 24 * 60 * 60 * 1000;\n+\n+export const startStopSchema = T.Object({\n+  disabledCommands: T.Array(T.String(), { default: [\"start\"] }),\n+  labels: T.Object(\n+    {\n+      time: T.Array(T.String()),\n+      priority: T.Array(T.String()),\n+    },\n+    {\n+      default: {","score":{"reward":8.624,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":66.16433823529414,"syllables":77,"sentences":4,"score":0.9383566176470586},"multiplier":1,"relevance":0.7}},{"id":1632553156,"content":"I think that:\r\n- any fatal error should be handled by the kernel\r\n- plugins should benefit from the new version of the `ubiquity-logged` that is capable of posting errors, and eventually can add metadata in the comment as well\r\n- might not need a new package for this","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1632553156","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":9.016,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":4,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":40.84000000000003,"syllables":64,"sentences":1,"score":0.8084000000000003},"multiplier":1,"relevance":0.7}},{"id":1634110602,"content":"Isn't this type provided within `Octokit`?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1634110602","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,13 @@\n+import { Static, Type } from \"@sinclair/typebox\";\n+\n+export const labelSchema = Type.Object({","score":{"reward":2.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.8}},{"id":1634111037,"content":"I feel like a lot of these types are also directly provided by `Octokit`, any reason to create them with TypeBox?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1634111037","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":5.984,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":72.32500000000003,"syllables":27,"sentences":1,"score":0.8767499999999997},"multiplier":1,"relevance":0.8}},{"id":1634255389,"content":"Should be an enum, and uppercase","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1634255389","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,236 +1,12 @@\n-// https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads\n-\n-import { Static, Type } from \"@sinclair/typebox\";\n-import { labelSchema } from \"./label\";\n import { LogReturn } from \"../adapters/supabase/helpers/logs\";\n+import { RestEndpointMethodTypes } from \"@octokit/rest\";\n \n-export enum UserType {\n-  User = \"User\",\n-  Bot = \"Bot\",\n-  Organization = \"Organization\",\n-}\n-\n-export enum IssueType {\n-  OPEN = \"open\",\n-  CLOSED = \"closed\",\n-  // ALL = \"all\",\n-}\n-\n-export enum StateReason {\n-  COMPLETED = \"completed\",\n-  NOT_PLANNED = \"not_planned\", // these are all used at runtime, not necessarily in the code.\n-  REOPENED = \"reopened\",\n-}\n-\n-const userSchema = Type.Object({\n-  login: Type.String(),\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-  avatar_url: Type.String(),\n-  gravatar_id: Type.Union([Type.Null(), Type.String()]),\n-  url: Type.String(),\n-  html_url: Type.String(),\n-  followers_url: Type.String(),\n-  following_url: Type.String(),\n-  gists_url: Type.String(),\n-  starred_url: Type.String(),\n-  subscriptions_url: Type.String(),\n-  organizations_url: Type.String(),\n-  repos_url: Type.String(),\n-  events_url: Type.String(),\n-  received_events_url: Type.String(),\n-  type: Type.Enum(UserType),\n-  site_admin: Type.Boolean(),\n-});\n-\n-export enum AuthorAssociation {\n-  OWNER = \"OWNER\",\n-  COLLABORATOR = \"COLLABORATOR\",\n-  MEMBER = \"MEMBER\",\n-  CONTRIBUTOR = \"CONTRIBUTOR\",\n-  FIRST_TIMER = \"FIRST_TIMER\",\n-  FIRST_TIME_CONTRIBUTOR = \"FIRST_TIME_CONTRIBUTOR\",\n-  NONE = \"NONE\",\n-}\n-\n-const issueSchema = Type.Object({\n-  assignee: Type.Union([Type.Null(), userSchema]),\n-  assignees: Type.Array(Type.Union([Type.Null(), userSchema])),\n-  author_association: Type.Enum(AuthorAssociation),\n-  body: Type.String(),\n-  closed_at: Type.Union([Type.String({ format: \"date-time\" }), Type.Null()]),\n-  comments_url: Type.String(),\n-  comments: Type.Number(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  events_url: Type.String(),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  labels_url: Type.String(),\n-  labels: Type.Array(labelSchema),\n-  locked: Type.Boolean(),\n-  node_id: Type.String(),\n-  number: Type.Number(),\n-  repository_url: Type.String(),\n-  state_reason: Type.Union([Type.Enum(StateReason), Type.Null()]),\n-  state: Type.Enum(IssueType),\n-  title: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  user: userSchema,\n-});\n-\n-export type GitHubIssue = Static<typeof issueSchema>;\n-\n-const repositorySchema = Type.Object({\n-  allow_forking: Type.Boolean(),\n-  archive_url: Type.String(),\n-  archived: Type.Boolean(),\n-  assignees_url: Type.String(),\n-  blobs_url: Type.String(),\n-  branches_url: Type.String(),\n-  clone_url: Type.String(),\n-  collaborators_url: Type.String(),\n-  comments_url: Type.String(),\n-  commits_url: Type.String(),\n-  compare_url: Type.String(),\n-  contents_url: Type.String(),\n-  contributors_url: Type.String(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  default_branch: Type.String(),\n-  deployments_url: Type.String(),\n-  description: Type.Union([Type.String(), Type.Null()]),\n-  disabled: Type.Boolean(),\n-  downloads_url: Type.String(),\n-  events_url: Type.String(),\n-  fork: Type.Boolean(),\n-  forks_count: Type.Number(),\n-  forks_url: Type.String(),\n-  forks: Type.Number(),\n-  full_name: Type.String(),\n-  git_commits_url: Type.String(),\n-  git_refs_url: Type.String(),\n-  git_tags_url: Type.String(),\n-  git_url: Type.String(),\n-  has_downloads: Type.Boolean(),\n-  has_issues: Type.Boolean(),\n-  has_pages: Type.Boolean(),\n-  has_projects: Type.Boolean(),\n-  has_wiki: Type.Boolean(),\n-  hooks_url: Type.String(),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  is_template: Type.Boolean(),\n-  issue_comment_url: Type.String(),\n-  issue_events_url: Type.String(),\n-  issues_url: Type.String(),\n-  keys_url: Type.String(),\n-  labels_url: Type.String(),\n-  language: Type.Any(),\n-  languages_url: Type.String(),\n-  license: Type.Any(),\n-  merges_url: Type.String(),\n-  milestones_url: Type.String(),\n-  name: Type.String(),\n-  node_id: Type.String(),\n-  notifications_url: Type.String(),\n-  open_issues_count: Type.Number(),\n-  open_issues: Type.Number(),\n-  owner: userSchema,\n-  private: Type.Boolean(),\n-  pulls_url: Type.String(),\n-  pushed_at: Type.String({ format: \"date-time\" }),\n-  releases_url: Type.String(),\n-  size: Type.Number(),\n-  ssh_url: Type.String(),\n-  stargazers_count: Type.Number(),\n-  stargazers_url: Type.String(),\n-  statuses_url: Type.String(),\n-  subscribers_url: Type.String(),\n-  subscription_url: Type.String(),\n-  svn_url: Type.String(),\n-  tags_url: Type.String(),\n-  teams_url: Type.String(),\n-  topics: Type.Array(Type.Any()),\n-  trees_url: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  visibility: Type.String(),\n-  watchers_count: Type.Number(),\n-  watchers: Type.Number(),\n-  web_commit_signoff_required: Type.Boolean(),\n-});\n-\n-const organizationSchema = Type.Object({\n-  login: Type.String(),\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-  url: Type.String(),\n-  repos_url: Type.String(),\n-  events_url: Type.String(),\n-  hooks_url: Type.String(),\n-  issues_url: Type.String(),\n-  members_url: Type.String(),\n-  public_members_url: Type.String(),\n-  avatar_url: Type.String(),\n-  description: Type.Union([Type.String(), Type.Null()]),\n-});\n-\n-const installationSchema = Type.Object({\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-});\n-\n-const commentSchema = Type.Object({\n-  author_association: Type.String(),\n-  body_html: Type.Optional(Type.String()),\n-  body_text: Type.Optional(Type.String()),\n-  body: Type.String(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  issue_url: Type.String(),\n-  node_id: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  user: userSchema,\n-  reactions: Type.Object({\n-    url: Type.String(),\n-    total_count: Type.Number(),\n-    \"+1\": Type.Number(),\n-    \"-1\": Type.Number(),\n-    laugh: Type.Number(),\n-    hooray: Type.Number(),\n-    confused: Type.Number(),\n-    heart: Type.Number(),\n-    rocket: Type.Number(),\n-    eyes: Type.Number(),\n-  }),\n-});\n-\n-const changesSchema = Type.Object({\n-  body: Type.Optional(\n-    Type.Object({\n-      from: Type.String(),\n-    })\n-  ),\n-  name: Type.Optional(\n-    Type.Object({\n-      from: Type.String(),\n-    })\n-  ),\n-});\n-\n-export const payloadSchema = Type.Object({\n-  action: Type.String(),\n-  issue: Type.Optional(issueSchema),\n-  label: Type.Optional(labelSchema),\n-  comment: Type.Optional(commentSchema),\n-  sender: userSchema,\n-  repository: repositorySchema,\n-  organization: Type.Optional(organizationSchema),\n-  installation: Type.Optional(installationSchema),\n-  repositories_added: Type.Optional(Type.Array(repositorySchema)),\n-  changes: Type.Optional(changesSchema),\n-});\n-\n+export type User = RestEndpointMethodTypes[\"users\"][\"getByUsername\"][\"response\"][\"data\"];\n+export type Issue = RestEndpointMethodTypes[\"issues\"][\"get\"][\"response\"][\"data\"];\n+export type Label = RestEndpointMethodTypes[\"issues\"][\"listLabelsOnIssue\"][\"response\"][\"data\"][0];\n export type HandlerReturnValuesNoVoid = null | string | LogReturn;\n+\n+export const issueType = {","score":{"reward":2.464,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.8}},{"id":1634305370,"content":"Nothing against this syntax, but the Uppercase would be needed since it's used as a type imo.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1634305370","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,236 +1,12 @@\n-// https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads\n-\n-import { Static, Type } from \"@sinclair/typebox\";\n-import { labelSchema } from \"./label\";\n import { LogReturn } from \"../adapters/supabase/helpers/logs\";\n+import { RestEndpointMethodTypes } from \"@octokit/rest\";\n \n-export enum UserType {\n-  User = \"User\",\n-  Bot = \"Bot\",\n-  Organization = \"Organization\",\n-}\n-\n-export enum IssueType {\n-  OPEN = \"open\",\n-  CLOSED = \"closed\",\n-  // ALL = \"all\",\n-}\n-\n-export enum StateReason {\n-  COMPLETED = \"completed\",\n-  NOT_PLANNED = \"not_planned\", // these are all used at runtime, not necessarily in the code.\n-  REOPENED = \"reopened\",\n-}\n-\n-const userSchema = Type.Object({\n-  login: Type.String(),\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-  avatar_url: Type.String(),\n-  gravatar_id: Type.Union([Type.Null(), Type.String()]),\n-  url: Type.String(),\n-  html_url: Type.String(),\n-  followers_url: Type.String(),\n-  following_url: Type.String(),\n-  gists_url: Type.String(),\n-  starred_url: Type.String(),\n-  subscriptions_url: Type.String(),\n-  organizations_url: Type.String(),\n-  repos_url: Type.String(),\n-  events_url: Type.String(),\n-  received_events_url: Type.String(),\n-  type: Type.Enum(UserType),\n-  site_admin: Type.Boolean(),\n-});\n-\n-export enum AuthorAssociation {\n-  OWNER = \"OWNER\",\n-  COLLABORATOR = \"COLLABORATOR\",\n-  MEMBER = \"MEMBER\",\n-  CONTRIBUTOR = \"CONTRIBUTOR\",\n-  FIRST_TIMER = \"FIRST_TIMER\",\n-  FIRST_TIME_CONTRIBUTOR = \"FIRST_TIME_CONTRIBUTOR\",\n-  NONE = \"NONE\",\n-}\n-\n-const issueSchema = Type.Object({\n-  assignee: Type.Union([Type.Null(), userSchema]),\n-  assignees: Type.Array(Type.Union([Type.Null(), userSchema])),\n-  author_association: Type.Enum(AuthorAssociation),\n-  body: Type.String(),\n-  closed_at: Type.Union([Type.String({ format: \"date-time\" }), Type.Null()]),\n-  comments_url: Type.String(),\n-  comments: Type.Number(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  events_url: Type.String(),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  labels_url: Type.String(),\n-  labels: Type.Array(labelSchema),\n-  locked: Type.Boolean(),\n-  node_id: Type.String(),\n-  number: Type.Number(),\n-  repository_url: Type.String(),\n-  state_reason: Type.Union([Type.Enum(StateReason), Type.Null()]),\n-  state: Type.Enum(IssueType),\n-  title: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  user: userSchema,\n-});\n-\n-export type GitHubIssue = Static<typeof issueSchema>;\n-\n-const repositorySchema = Type.Object({\n-  allow_forking: Type.Boolean(),\n-  archive_url: Type.String(),\n-  archived: Type.Boolean(),\n-  assignees_url: Type.String(),\n-  blobs_url: Type.String(),\n-  branches_url: Type.String(),\n-  clone_url: Type.String(),\n-  collaborators_url: Type.String(),\n-  comments_url: Type.String(),\n-  commits_url: Type.String(),\n-  compare_url: Type.String(),\n-  contents_url: Type.String(),\n-  contributors_url: Type.String(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  default_branch: Type.String(),\n-  deployments_url: Type.String(),\n-  description: Type.Union([Type.String(), Type.Null()]),\n-  disabled: Type.Boolean(),\n-  downloads_url: Type.String(),\n-  events_url: Type.String(),\n-  fork: Type.Boolean(),\n-  forks_count: Type.Number(),\n-  forks_url: Type.String(),\n-  forks: Type.Number(),\n-  full_name: Type.String(),\n-  git_commits_url: Type.String(),\n-  git_refs_url: Type.String(),\n-  git_tags_url: Type.String(),\n-  git_url: Type.String(),\n-  has_downloads: Type.Boolean(),\n-  has_issues: Type.Boolean(),\n-  has_pages: Type.Boolean(),\n-  has_projects: Type.Boolean(),\n-  has_wiki: Type.Boolean(),\n-  hooks_url: Type.String(),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  is_template: Type.Boolean(),\n-  issue_comment_url: Type.String(),\n-  issue_events_url: Type.String(),\n-  issues_url: Type.String(),\n-  keys_url: Type.String(),\n-  labels_url: Type.String(),\n-  language: Type.Any(),\n-  languages_url: Type.String(),\n-  license: Type.Any(),\n-  merges_url: Type.String(),\n-  milestones_url: Type.String(),\n-  name: Type.String(),\n-  node_id: Type.String(),\n-  notifications_url: Type.String(),\n-  open_issues_count: Type.Number(),\n-  open_issues: Type.Number(),\n-  owner: userSchema,\n-  private: Type.Boolean(),\n-  pulls_url: Type.String(),\n-  pushed_at: Type.String({ format: \"date-time\" }),\n-  releases_url: Type.String(),\n-  size: Type.Number(),\n-  ssh_url: Type.String(),\n-  stargazers_count: Type.Number(),\n-  stargazers_url: Type.String(),\n-  statuses_url: Type.String(),\n-  subscribers_url: Type.String(),\n-  subscription_url: Type.String(),\n-  svn_url: Type.String(),\n-  tags_url: Type.String(),\n-  teams_url: Type.String(),\n-  topics: Type.Array(Type.Any()),\n-  trees_url: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  visibility: Type.String(),\n-  watchers_count: Type.Number(),\n-  watchers: Type.Number(),\n-  web_commit_signoff_required: Type.Boolean(),\n-});\n-\n-const organizationSchema = Type.Object({\n-  login: Type.String(),\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-  url: Type.String(),\n-  repos_url: Type.String(),\n-  events_url: Type.String(),\n-  hooks_url: Type.String(),\n-  issues_url: Type.String(),\n-  members_url: Type.String(),\n-  public_members_url: Type.String(),\n-  avatar_url: Type.String(),\n-  description: Type.Union([Type.String(), Type.Null()]),\n-});\n-\n-const installationSchema = Type.Object({\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-});\n-\n-const commentSchema = Type.Object({\n-  author_association: Type.String(),\n-  body_html: Type.Optional(Type.String()),\n-  body_text: Type.Optional(Type.String()),\n-  body: Type.String(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  issue_url: Type.String(),\n-  node_id: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  user: userSchema,\n-  reactions: Type.Object({\n-    url: Type.String(),\n-    total_count: Type.Number(),\n-    \"+1\": Type.Number(),\n-    \"-1\": Type.Number(),\n-    laugh: Type.Number(),\n-    hooray: Type.Number(),\n-    confused: Type.Number(),\n-    heart: Type.Number(),\n-    rocket: Type.Number(),\n-    eyes: Type.Number(),\n-  }),\n-});\n-\n-const changesSchema = Type.Object({\n-  body: Type.Optional(\n-    Type.Object({\n-      from: Type.String(),\n-    })\n-  ),\n-  name: Type.Optional(\n-    Type.Object({\n-      from: Type.String(),\n-    })\n-  ),\n-});\n-\n-export const payloadSchema = Type.Object({\n-  action: Type.String(),\n-  issue: Type.Optional(issueSchema),\n-  label: Type.Optional(labelSchema),\n-  comment: Type.Optional(commentSchema),\n-  sender: userSchema,\n-  repository: repositorySchema,\n-  organization: Type.Optional(organizationSchema),\n-  installation: Type.Optional(installationSchema),\n-  repositories_added: Type.Optional(Type.Array(repositorySchema)),\n-  changes: Type.Optional(changesSchema),\n-});\n-\n+export type User = RestEndpointMethodTypes[\"users\"][\"getByUsername\"][\"response\"][\"data\"];\n+export type Issue = RestEndpointMethodTypes[\"issues\"][\"get\"][\"response\"][\"data\"];\n+export type Label = RestEndpointMethodTypes[\"issues\"][\"listLabelsOnIssue\"][\"response\"][\"data\"][0];\n export type HandlerReturnValuesNoVoid = null | string | LogReturn;\n+\n+export const issueType = {","score":{"reward":4.788,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":80.46500000000002,"syllables":23,"sentences":1,"score":0.7953499999999998},"multiplier":1,"relevance":0.7}},{"id":1634328397,"content":"I believe it is. I do not mind either, and I don't think the overhead is that big, but if it is mentioned in best practices for modern TS it makes sense to follow these rules. Feel free to open this topic inside of the `ts-template` repo.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1634328397","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,236 +1,12 @@\n-// https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads\n-\n-import { Static, Type } from \"@sinclair/typebox\";\n-import { labelSchema } from \"./label\";\n import { LogReturn } from \"../adapters/supabase/helpers/logs\";\n+import { RestEndpointMethodTypes } from \"@octokit/rest\";\n \n-export enum UserType {\n-  User = \"User\",\n-  Bot = \"Bot\",\n-  Organization = \"Organization\",\n-}\n-\n-export enum IssueType {\n-  OPEN = \"open\",\n-  CLOSED = \"closed\",\n-  // ALL = \"all\",\n-}\n-\n-export enum StateReason {\n-  COMPLETED = \"completed\",\n-  NOT_PLANNED = \"not_planned\", // these are all used at runtime, not necessarily in the code.\n-  REOPENED = \"reopened\",\n-}\n-\n-const userSchema = Type.Object({\n-  login: Type.String(),\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-  avatar_url: Type.String(),\n-  gravatar_id: Type.Union([Type.Null(), Type.String()]),\n-  url: Type.String(),\n-  html_url: Type.String(),\n-  followers_url: Type.String(),\n-  following_url: Type.String(),\n-  gists_url: Type.String(),\n-  starred_url: Type.String(),\n-  subscriptions_url: Type.String(),\n-  organizations_url: Type.String(),\n-  repos_url: Type.String(),\n-  events_url: Type.String(),\n-  received_events_url: Type.String(),\n-  type: Type.Enum(UserType),\n-  site_admin: Type.Boolean(),\n-});\n-\n-export enum AuthorAssociation {\n-  OWNER = \"OWNER\",\n-  COLLABORATOR = \"COLLABORATOR\",\n-  MEMBER = \"MEMBER\",\n-  CONTRIBUTOR = \"CONTRIBUTOR\",\n-  FIRST_TIMER = \"FIRST_TIMER\",\n-  FIRST_TIME_CONTRIBUTOR = \"FIRST_TIME_CONTRIBUTOR\",\n-  NONE = \"NONE\",\n-}\n-\n-const issueSchema = Type.Object({\n-  assignee: Type.Union([Type.Null(), userSchema]),\n-  assignees: Type.Array(Type.Union([Type.Null(), userSchema])),\n-  author_association: Type.Enum(AuthorAssociation),\n-  body: Type.String(),\n-  closed_at: Type.Union([Type.String({ format: \"date-time\" }), Type.Null()]),\n-  comments_url: Type.String(),\n-  comments: Type.Number(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  events_url: Type.String(),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  labels_url: Type.String(),\n-  labels: Type.Array(labelSchema),\n-  locked: Type.Boolean(),\n-  node_id: Type.String(),\n-  number: Type.Number(),\n-  repository_url: Type.String(),\n-  state_reason: Type.Union([Type.Enum(StateReason), Type.Null()]),\n-  state: Type.Enum(IssueType),\n-  title: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  user: userSchema,\n-});\n-\n-export type GitHubIssue = Static<typeof issueSchema>;\n-\n-const repositorySchema = Type.Object({\n-  allow_forking: Type.Boolean(),\n-  archive_url: Type.String(),\n-  archived: Type.Boolean(),\n-  assignees_url: Type.String(),\n-  blobs_url: Type.String(),\n-  branches_url: Type.String(),\n-  clone_url: Type.String(),\n-  collaborators_url: Type.String(),\n-  comments_url: Type.String(),\n-  commits_url: Type.String(),\n-  compare_url: Type.String(),\n-  contents_url: Type.String(),\n-  contributors_url: Type.String(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  default_branch: Type.String(),\n-  deployments_url: Type.String(),\n-  description: Type.Union([Type.String(), Type.Null()]),\n-  disabled: Type.Boolean(),\n-  downloads_url: Type.String(),\n-  events_url: Type.String(),\n-  fork: Type.Boolean(),\n-  forks_count: Type.Number(),\n-  forks_url: Type.String(),\n-  forks: Type.Number(),\n-  full_name: Type.String(),\n-  git_commits_url: Type.String(),\n-  git_refs_url: Type.String(),\n-  git_tags_url: Type.String(),\n-  git_url: Type.String(),\n-  has_downloads: Type.Boolean(),\n-  has_issues: Type.Boolean(),\n-  has_pages: Type.Boolean(),\n-  has_projects: Type.Boolean(),\n-  has_wiki: Type.Boolean(),\n-  hooks_url: Type.String(),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  is_template: Type.Boolean(),\n-  issue_comment_url: Type.String(),\n-  issue_events_url: Type.String(),\n-  issues_url: Type.String(),\n-  keys_url: Type.String(),\n-  labels_url: Type.String(),\n-  language: Type.Any(),\n-  languages_url: Type.String(),\n-  license: Type.Any(),\n-  merges_url: Type.String(),\n-  milestones_url: Type.String(),\n-  name: Type.String(),\n-  node_id: Type.String(),\n-  notifications_url: Type.String(),\n-  open_issues_count: Type.Number(),\n-  open_issues: Type.Number(),\n-  owner: userSchema,\n-  private: Type.Boolean(),\n-  pulls_url: Type.String(),\n-  pushed_at: Type.String({ format: \"date-time\" }),\n-  releases_url: Type.String(),\n-  size: Type.Number(),\n-  ssh_url: Type.String(),\n-  stargazers_count: Type.Number(),\n-  stargazers_url: Type.String(),\n-  statuses_url: Type.String(),\n-  subscribers_url: Type.String(),\n-  subscription_url: Type.String(),\n-  svn_url: Type.String(),\n-  tags_url: Type.String(),\n-  teams_url: Type.String(),\n-  topics: Type.Array(Type.Any()),\n-  trees_url: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  visibility: Type.String(),\n-  watchers_count: Type.Number(),\n-  watchers: Type.Number(),\n-  web_commit_signoff_required: Type.Boolean(),\n-});\n-\n-const organizationSchema = Type.Object({\n-  login: Type.String(),\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-  url: Type.String(),\n-  repos_url: Type.String(),\n-  events_url: Type.String(),\n-  hooks_url: Type.String(),\n-  issues_url: Type.String(),\n-  members_url: Type.String(),\n-  public_members_url: Type.String(),\n-  avatar_url: Type.String(),\n-  description: Type.Union([Type.String(), Type.Null()]),\n-});\n-\n-const installationSchema = Type.Object({\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-});\n-\n-const commentSchema = Type.Object({\n-  author_association: Type.String(),\n-  body_html: Type.Optional(Type.String()),\n-  body_text: Type.Optional(Type.String()),\n-  body: Type.String(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  issue_url: Type.String(),\n-  node_id: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  user: userSchema,\n-  reactions: Type.Object({\n-    url: Type.String(),\n-    total_count: Type.Number(),\n-    \"+1\": Type.Number(),\n-    \"-1\": Type.Number(),\n-    laugh: Type.Number(),\n-    hooray: Type.Number(),\n-    confused: Type.Number(),\n-    heart: Type.Number(),\n-    rocket: Type.Number(),\n-    eyes: Type.Number(),\n-  }),\n-});\n-\n-const changesSchema = Type.Object({\n-  body: Type.Optional(\n-    Type.Object({\n-      from: Type.String(),\n-    })\n-  ),\n-  name: Type.Optional(\n-    Type.Object({\n-      from: Type.String(),\n-    })\n-  ),\n-});\n-\n-export const payloadSchema = Type.Object({\n-  action: Type.String(),\n-  issue: Type.Optional(issueSchema),\n-  label: Type.Optional(labelSchema),\n-  comment: Type.Optional(commentSchema),\n-  sender: userSchema,\n-  repository: repositorySchema,\n-  organization: Type.Optional(organizationSchema),\n-  installation: Type.Optional(installationSchema),\n-  repositories_added: Type.Optional(Type.Array(repositorySchema)),\n-  changes: Type.Optional(changesSchema),\n-});\n-\n+export type User = RestEndpointMethodTypes[\"users\"][\"getByUsername\"][\"response\"][\"data\"];\n+export type Issue = RestEndpointMethodTypes[\"issues\"][\"get\"][\"response\"][\"data\"];\n+export type Label = RestEndpointMethodTypes[\"issues\"][\"listLabelsOnIssue\"][\"response\"][\"data\"][0];\n export type HandlerReturnValuesNoVoid = null | string | LogReturn;\n+\n+export const issueType = {","score":{"reward":6.888,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":82.93333333333334,"syllables":60,"sentences":3,"score":0.7706666666666666},"multiplier":1,"relevance":0.6}},{"id":1638201095,"content":"I don't believe all of these are needed","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1638201095","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,79 @@\n+import { Database } from \"../types/database\";\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+import { addCommentToIssue } from \"../../../utils/issue\";\n+\n+const FAILED_TO_GET_USER = \"Failed to get user\";\n+const SUCCESSFULLY_FETCHED_USER = \"Successfully fetched user\";\n+\n+export class User extends Super {\n+  user_id: string | undefined;\n+  comment_id: string | undefined;\n+  issue_id: string | undefined;\n+  repository_id: string | undefined;\n+  node_id: string | undefined;\n+  node_type: string | undefined;","score":{"reward":3.052,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":103.70000000000002,"syllables":10,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1638205515,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1638205515","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,32 @@\n+import ms from \"ms\";\n+import { Label } from \"../types\";\n+\n+export function calculateLabelValue(label: string): number {\n+  const matches = label.match(/\\d+/);\n+  const number = matches && matches.length > 0 ? parseInt(matches[0]) || 0 : 0;\n+  if (label.toLowerCase().includes(\"priority\")) return number;\n+  // throw new Error(`Label ${label} is not a priority label`);","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1640631432,"content":"I actually wonder why is this needed for the `start | stop` commands? What influence do these tags have except that they have to be present on the issue in order to work? `calculateLabelValue` implies some calculation is done with these tags.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1640631432","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,32 @@\n+import ms from \"ms\";\n+import { Label } from \"../types\";\n+\n+export function calculateLabelValue(label: string): number {\n+  const matches = label.match(/\\d+/);\n+  const number = matches && matches.length > 0 ? parseInt(matches[0]) || 0 : 0;\n+  if (label.toLowerCase().includes(\"priority\")) return number;","score":{"reward":8.448,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":80.43622807017547,"syllables":51,"sentences":3,"score":0.7956377192982452},"multiplier":1,"relevance":0.8}},{"id":1645499500,"content":"All the `console` logs should be coming from the `logger` itself I believe.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1645499500","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,58 @@\n+import { Database } from \"../types/database\";\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+import { addCommentToIssue } from \"../../../utils/issue\";\n+\n+export class User extends Super {\n+  constructor(supabase: SupabaseClient<Database>, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  async getWalletByUserId(userId: number, issueNumber: number) {\n+    const { data, error } = await this.supabase.from(\"users\").select(\"wallets(*)\").eq(\"id\", userId).single();\n+    if ((error && !data) || !data.wallets?.address) {\n+      console.error(\"No wallet address found\", { userId, issueNumber }, true);\n+      await addCommentToIssue(this.context, \"```diff\\n # Please set your wallet address with the /wallet command first and try again.\\n```\");\n+      throw new Error(\"No wallet address found\");\n+    }\n+\n+    console.info(\"Successfully fetched wallet\", { userId, address: data.wallets?.address });","score":{"reward":3.776,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":87.99727272727276,"syllables":14,"sentences":1,"score":0.7200272727272724},"multiplier":1,"relevance":0.8}},{"id":1649195571,"content":"@Keyrxng should be from the context.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1649195571","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,58 @@\n+import { Database } from \"../types/database\";\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+import { addCommentToIssue } from \"../../../utils/issue\";\n+\n+export class User extends Super {\n+  constructor(supabase: SupabaseClient<Database>, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  async getWalletByUserId(userId: number, issueNumber: number) {\n+    const { data, error } = await this.supabase.from(\"users\").select(\"wallets(*)\").eq(\"id\", userId).single();\n+    if ((error && !data) || !data.wallets?.address) {\n+      console.error(\"No wallet address found\", { userId, issueNumber }, true);\n+      await addCommentToIssue(this.context, \"```diff\\n # Please set your wallet address with the /wallet command first and try again.\\n```\");\n+      throw new Error(\"No wallet address found\");\n+    }\n+\n+    console.info(\"Successfully fetched wallet\", { userId, address: data.wallets?.address });","score":{"reward":2.212,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1650597134,"content":"I am not sure to understand this type, why could it be `Logger | Logs`?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1650597134","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -25,5 +26,5 @@ export interface Context<T extends SupportedEventsU = SupportedEventsU, TU exten\n   adapters: ReturnType<typeof createAdapters>;\n   config: StartStopSettings;\n   env: Env;\n-  logger: Logger;\n+  logger: Logger | Logs;","score":{"reward":3.472,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":95.955,"syllables":14,"sentences":1,"score":0.64045},"multiplier":1,"relevance":0.7}},{"id":1651275194,"content":"Not required, but safer so yes it would be nice to add it here.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1651275194","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,27 @@\n+name: Deploy\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  deploy:\n+    runs-on: ubuntu-latest\n+    name: Deploy\n+    steps:\n+      - name: Setup Node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20\"\n+      - uses: actions/checkout@v4\n+      - uses: cloudflare/wrangler-action@v3\n+        with:\n+          wranglerVersion: \"3.57.0\"\n+          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}\n+          secrets: |","score":{"reward":3.312,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":95.93928571428573,"syllables":16,"sentences":1,"score":0.6406071428571427},"multiplier":1,"relevance":0.6}},{"id":1652840269,"content":"```suggestion\r\n          node-version: \"20.10.0\"\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1652840269","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,28 @@\n+name: Deploy\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  deploy:\n+    runs-on: ubuntu-latest\n+    name: Deploy\n+    steps:\n+      - name: Setup Node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20\"","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.5}},{"id":1652841483,"content":"```suggestion\r\n# `@ubiquibot/command-start-stop`\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1652841483","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,32 +1,56 @@\n-# `@ubiquity/ts-template`\n+# `@ubiquibot/Command-Start-Stop`","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.5}},{"id":1652843824,"content":"Are we really using `yarn 4` for this repo? Is there no side effect for this?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1652843824","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -76,5 +83,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@4.2.2\"","score":{"reward":3.92,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":90.95857142857145,"syllables":18,"sentences":2,"score":0.6904142857142855},"multiplier":1,"relevance":0.7}},{"id":1652973452,"content":"As long as it is supported within Cloudflare then we are good to go I guess!","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1652973452","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -76,5 +83,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@4.2.2\"","score":{"reward":3.696,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":90.13250000000001,"syllables":19,"sentences":1,"score":0.6986749999999999},"multiplier":1,"relevance":0.6}},{"id":1661420350,"content":"Do we want these logs?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1661420350","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -65,18 +66,33 @@ describe(\"User start/stop\", () => {\n   });\n \n   test(\"User can't stop an issue they're not assigned to\", async () => {\n-    const errorSpy = jest.spyOn(console, \"error\").mockImplementation();\n     // using the second issue\n     const issue = db.issue.findFirst({ where: { id: { equals: 2 } } }) as unknown as Issue;\n     const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as Sender;\n \n+    console.log(issue.assignees, issue.assignee?.login, sender)\n     const context = createContext(issue, sender, \"/stop\");\n \n     context.adapters = createAdapters(getSupabase(), context as unknown as Context);\n \n-    await userStartStop(context as unknown as Context);\n+    const output = await userStartStop(context as unknown as Context);\n \n-    expect(errorSpy).toHaveBeenCalledWith(\"You are not assigned to this task\");\n+    expect(output).toEqual({ output: \"You are not assigned to this task\" });\n+  });\n+\n+  test(\"User can't stop an issue without assignees\", async () => {\n+    // using the second issue\n+    const issue = db.issue.findFirst({ where: { id: { equals: 6 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as Sender;\n+\n+    console.log(issue.assignees, issue.assignee?.login, sender)","score":{"reward":1.932,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1662363511,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662363511","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,24 +1,475 @@\n-import { mainModule } from \"../static/main\";\n+import { drop } from \"@mswjs/data\";\n+import { Context, SupportedEventsU } from \"../src/types\";\n import { db } from \"./__mocks__/db\";\n import { server } from \"./__mocks__/node\";\n import usersGet from \"./__mocks__/users-get.json\";\n-import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it } from \"@jest/globals\";\n+import { expect, describe, beforeAll, beforeEach, afterAll, afterEach } from \"@jest/globals\";\n+import { userStartStop } from \"../src/handlers/user-start-stop\";\n+import issueTemplate from \"./__mocks__/issue-template\";\n+import { createAdapters } from \"../src/adapters\";\n+import { createClient } from \"@supabase/supabase-js\";\n+import dotenv from \"dotenv\";\n+import { PrettyLogs } from \"../src/adapters/supabase/pretty-logs\";\n+dotenv.config();\n \n-beforeAll(() => server.listen());\n-afterEach(() => server.resetHandlers());\n+type Issue = Context[\"payload\"][\"issue\"];\n+type Sender = Context[\"payload\"][\"sender\"];\n+\n+const octokit = jest.requireActual(\"@octokit/rest\");\n+\n+const url = process.env.SUPABASE_URL;\n+const key = process.env.SUPABASE_KEY;\n+\n+if (!url || !key) {\n+  throw new Error(\"Supabase URL and Key are required\");\n+}\n+\n+beforeAll(() => {\n+  server.listen();\n+});\n+afterEach(() => {\n+  drop(db);\n+  server.resetHandlers();\n+});\n afterAll(() => server.close());\n \n-describe(\"User tests\", () => {\n-  beforeEach(() => {\n-    for (const item of usersGet) {\n-      db.users.create(item);\n+describe(\"User start/stop\", () => {\n+  beforeEach(async () => {\n+    await setupTests();\n+  });\n+\n+  test(\"User can start an issue\", async () => {\n+    const issue = db.issue.findFirst({ where: { id: { equals: 1 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as Sender;\n+\n+    const context = createContext(issue, sender);\n+\n+    context.adapters = createAdapters(getSupabase(), context as unknown as Context);\n+\n+    const { output } = await userStartStop(context as unknown as Context);\n+\n+    expect(output).toEqual(\"Task assigned successfully\");\n+  });\n+\n+  test(\"User can stop an issue\", async () => {\n+    // using the second issue\n+    const issue = db.issue.findFirst({ where: { id: { equals: 2 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 2 } } }) as unknown as Sender;\n+\n+    const context = createContext(issue, sender, \"/stop\");\n+\n+    context.adapters = createAdapters(getSupabase(), context as unknown as Context);\n+\n+    const { output } = await userStartStop(context as unknown as Context);\n+\n+    expect(output).toEqual(\"Task unassigned successfully\");\n+  });\n+\n+  test(\"User can't stop an issue they're not assigned to\", async () => {\n+    // using the second issue\n+    const issue = db.issue.findFirst({ where: { id: { equals: 2 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as Sender;\n+\n+    console.log(issue.assignees, issue.assignee?.login, sender)\n+    const context = createContext(issue, sender, \"/stop\");\n+\n+    context.adapters = createAdapters(getSupabase(), context as unknown as Context);\n+\n+    const output = await userStartStop(context as unknown as Context);\n+\n+    expect(output).toEqual({ output: \"You are not assigned to this task\" });\n+  });\n+\n+  test(\"User can't stop an issue without assignees\", async () => {\n+    // using the second issue\n+    const issue = db.issue.findFirst({ where: { id: { equals: 6 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as Sender;\n+\n+    console.log(issue.assignees, issue.assignee?.login, sender)","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1662364191,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662364191","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,24 +1,475 @@\n-import { mainModule } from \"../static/main\";\n+import { drop } from \"@mswjs/data\";\n+import { Context, SupportedEventsU } from \"../src/types\";\n import { db } from \"./__mocks__/db\";\n import { server } from \"./__mocks__/node\";\n import usersGet from \"./__mocks__/users-get.json\";\n-import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it } from \"@jest/globals\";\n+import { expect, describe, beforeAll, beforeEach, afterAll, afterEach } from \"@jest/globals\";\n+import { userStartStop } from \"../src/handlers/user-start-stop\";\n+import issueTemplate from \"./__mocks__/issue-template\";\n+import { createAdapters } from \"../src/adapters\";\n+import { createClient } from \"@supabase/supabase-js\";\n+import dotenv from \"dotenv\";\n+import { PrettyLogs } from \"../src/adapters/supabase/pretty-logs\";\n+dotenv.config();\n \n-beforeAll(() => server.listen());\n-afterEach(() => server.resetHandlers());\n+type Issue = Context[\"payload\"][\"issue\"];\n+type Sender = Context[\"payload\"][\"sender\"];\n+\n+const octokit = jest.requireActual(\"@octokit/rest\");\n+\n+const url = process.env.SUPABASE_URL;\n+const key = process.env.SUPABASE_KEY;\n+\n+if (!url || !key) {\n+  throw new Error(\"Supabase URL and Key are required\");\n+}\n+\n+beforeAll(() => {\n+  server.listen();\n+});\n+afterEach(() => {\n+  drop(db);\n+  server.resetHandlers();\n+});\n afterAll(() => server.close());\n \n-describe(\"User tests\", () => {\n-  beforeEach(() => {\n-    for (const item of usersGet) {\n-      db.users.create(item);\n+describe(\"User start/stop\", () => {\n+  beforeEach(async () => {\n+    await setupTests();\n+  });\n+\n+  test(\"User can start an issue\", async () => {\n+    const issue = db.issue.findFirst({ where: { id: { equals: 1 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as Sender;\n+\n+    const context = createContext(issue, sender);\n+\n+    context.adapters = createAdapters(getSupabase(), context as unknown as Context);\n+\n+    const { output } = await userStartStop(context as unknown as Context);\n+\n+    expect(output).toEqual(\"Task assigned successfully\");\n+  });\n+\n+  test(\"User can stop an issue\", async () => {\n+    // using the second issue\n+    const issue = db.issue.findFirst({ where: { id: { equals: 2 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 2 } } }) as unknown as Sender;\n+\n+    const context = createContext(issue, sender, \"/stop\");\n+\n+    context.adapters = createAdapters(getSupabase(), context as unknown as Context);\n+\n+    const { output } = await userStartStop(context as unknown as Context);\n+\n+    expect(output).toEqual(\"Task unassigned successfully\");\n+  });\n+\n+  test(\"User can't stop an issue they're not assigned to\", async () => {\n+    // using the second issue\n+    const issue = db.issue.findFirst({ where: { id: { equals: 2 } } }) as unknown as Issue;\n+    const sender = db.users.findFirst({ where: { id: { equals: 1 } } }) as unknown as Sender;\n+\n+    console.log(issue.assignees, issue.assignee?.login, sender)","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1665771556,"content":"The main issue I had was that it was not reliable as `cross-referenced` just meant quoted by another PR that may or may not close it, so ended up evaluating comments that were not relevant. Still baffled that there is not easy way to query linked PRs through the API.\r\nI ended up parsing the body of the linked pull-request itself, but if your approach is more reliable it'd be nice to use it inside the other plugins.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1665771556","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,44 @@\n+import { Context } from \"../types/context\";\n+\n+interface GetLinkedParams {\n+  owner: string;\n+  repository: string;\n+  issue?: number;\n+  pull?: number;\n+}\n+\n+interface GetLinkedResults {\n+  organization: string;\n+  repository: string;\n+  number: number;\n+  href: string;\n+}\n+\n+export async function getLinkedPullRequests(context: Context, { owner, repository, issue }: GetLinkedParams): Promise<GetLinkedResults[]> {","score":{"reward":10.656,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":79,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":70.87628691983124,"syllables":102,"sentences":3,"score":0.8912371308016875},"multiplier":1,"relevance":0.8}},{"id":1665773381,"content":"`fatal` could mean incidents that we should resolve, but I think this would belong to the kernel directly since it is only a concern for us and we don't want to implement it inside every plugin.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1665773381","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,171 @@\n+import { Context } from \"../types/context\";\n+import { Issue, ISSUE_TYPE } from \"../types/payload\";\n+import { getLinkedPullRequests } from \"./get-linked-prs\";\n+\n+export function isParentIssue(body: string) {\n+  const parentPattern = /-\\s+\\[( |x)\\]\\s+#\\d+/;\n+  return body.match(parentPattern);\n+}\n+\n+export async function getAssignedIssues(context: Context, username: string): Promise<Issue[]> {\n+  const payload = context.payload;\n+\n+  try {\n+    return await context.octokit.paginate(\n+      context.octokit.issues.listForRepo,\n+      {\n+        owner: payload.repository.owner.login,\n+        repo: payload.repository.name,\n+        state: ISSUE_TYPE.OPEN,\n+        per_page: 1000,\n+      },\n+      ({ data: issues }) => issues.filter((issue) => !issue.pull_request && issue.assignee && issue.assignee.login === username)\n+    );\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Fetching assigned issues failed!\", err);\n+    return [];\n+  }\n+}\n+\n+export async function addCommentToIssue(context: Context, message: string | null) {\n+  let comment = message as string;\n+\n+  const { payload } = context;\n+\n+  const issueNumber = payload.issue.number;\n+  try {\n+    await context.octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: issueNumber,\n+      body: comment,\n+    });\n+  } catch (e: unknown) {\n+    context.logger.fatal(\"Adding a comment failed!\", e);\n+  }\n+}\n+\n+//// Pull Requests \\\\\\\\\n+\n+export async function closePullRequest(context: Context, pullNumber: number) {\n+  const { repository } = context.payload;\n+  try {\n+    await context.octokit.rest.pulls.update({\n+      owner: repository.owner.login,\n+      repo: repository.name,\n+      pull_number: pullNumber,\n+      state: \"closed\",\n+    });\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Closing pull requests failed!\", err);","score":{"reward":7.364,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":50.44500000000002,"syllables":51,"sentences":1,"score":0.9044500000000002},"multiplier":1,"relevance":0.7}},{"id":1665782886,"content":"So far I had an okay experience with `bun` except for testing. `yarn@4` is fine to me as long as we don't use `Zero Install` which implies committing the whole node modules list. The main concern with yarn > 1 (which also applies to bun actually) is compatibilty with tools. For example, Vercel would accept neither (only yarn classic, npm, pnpm), so would AWS etc. Github actions don't seem to mind, neither does Cloudflare.\r\nAnother concern I have with `bun` is that it is not fully Node compatible, for example it does not implement the `crypto` library fully, which led to issues already. See https://bun.sh/docs/runtime/nodejs-apis","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1665782886","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -76,5 +83,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@4.2.2\"","score":{"reward":12.908,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":99,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":68.08247641509436,"syllables":157,"sentences":8,"score":0.9191752358490564},"multiplier":1,"relevance":0.7}},{"id":1665790006,"content":"Isn't this solved, at least partially, by the updates you did to `ubiquibot-logger` @Keyrxng ?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1665790006","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,35 @@\n+import { LogLevel } from \"../../adapters/supabase/pretty-logs\";\n+\n+type Metadata<T extends object> = T & {\n+  revision?: string;\n+  logMessage?: {\n+    type?: LogLevel;\n+    message?: string;\n+  };\n+  [key: string]: unknown;\n+};\n+\n+function createStructuredMetadata<T extends object>(className: string, metadata: Metadata<T>) {\n+  const jsonPretty = JSON.stringify(metadata, null, 2);\n+  const stackLine = new Error().stack?.split(\"\\n\")[2] ?? \"\";\n+  const caller = stackLine.match(/at (\\S+)/)?.[1] ?? \"\";\n+  const ubiquityMetadataHeader = `<!-- Ubiquity - ${className} - ${caller} - ${metadata.revision}`;\n+\n+  let metadataSerialized: string;\n+  const metadataSerializedVisible = [\"```json\", jsonPretty, \"```\"].join(\"\\n\");\n+  const metadataSerializedHidden = [ubiquityMetadataHeader, jsonPretty, \"-->\"].join(\"\\n\");\n+\n+  if (metadata.logMessage?.type === LogLevel.FATAL) {\n+    // if the log message is fatal, then we want to show the metadata\n+    metadataSerialized = [metadataSerializedVisible, metadataSerializedHidden].join(\"\\n\");\n+  } else {\n+    // otherwise we want to hide it\n+    metadataSerialized = metadataSerializedHidden;\n+  }\n+\n+  return metadataSerialized;\n+}\n+\n+export default {\n+  create: createStructuredMetadata,\n+};","score":{"reward":3.92,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":89.89642857142859,"syllables":17,"sentences":1,"score":0.7010357142857141},"multiplier":1,"relevance":0.7}},{"id":1667545836,"content":"```suggestion\r\nname = \"ubiquibot-command-start-stop\"\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1667545836","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,6 @@\n+name = \"ubiquibot-start-stop\"","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1667584681,"content":"```suggestion\r\n  isEnabled: T.Boolean({ default: true }),\r\n```\r\nI think it makes more sense to enable it by default.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1667584681","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,35 @@\n+import { SupportedEvents, SupportedEventsU } from \"./context\";\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+import { StandardValidator } from \"typebox-validators\";\n+\n+export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]> {\n+  stateId: string;\n+  eventName: T;\n+  eventPayload: TU[\"payload\"];\n+  settings: StartStopSettings;\n+  authToken: string;\n+  ref: string;\n+}\n+\n+const ONE_DAY = 24 * 60 * 60 * 1000;\n+\n+export const startStopSchema = T.Object({\n+  isEnabled: T.Boolean(),","score":{"reward":3.304,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":87.99727272727276,"syllables":14,"sentences":1,"score":0.7200272727272724},"multiplier":1,"relevance":0.7}},{"id":1674819331,"content":"```suggestion\r\nimport { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\r\n```\r\nThe slash should not be required right?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1674819331","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,7 +3,7 @@ import { Octokit } from \"@octokit/rest\";\n import { StartStopSettings } from \"./plugin-input\";\n import { createAdapters } from \"../adapters\";\n import { Env } from \"./env\";\n-import { Logs } from \"@ubiquity-dao/ubiquibot-logger/.\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger/\";","score":{"reward":2.16,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":2157171312,"content":"@Keyrxng When there is no `build` step I rather use `Knip` workflow to be done to trigger it.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2157171312","commentType":"PULL_COLLABORATOR","score":{"reward":3.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":90.13250000000001,"syllables":19,"sentences":1,"score":0.6986749999999999},"multiplier":1,"relevance":0.5}},{"id":2180479098,"content":"@rndquu That's true, but I think users cannot assign themselves without setting their wallet first, in our current workflow (bot v1)? Shall we change the workflow so users can assign themselves even without a wallet registered, and the wallet plugin would be in change to remind the user no wallet has been set?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2180479098","commentType":"PULL_COLLABORATOR","score":{"reward":8.848,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":58.796666666666695,"syllables":77,"sentences":2,"score":0.987966666666667},"multiplier":1,"relevance":0.7}},{"id":2212078552,"content":"@Keyrxng Worflows will crash because of yarn version not defined within the workflow (corepack enable)\r\n```\r\nerror This project's package.json defines \"packageManager\": \"yarn@4.2.2\". However the current global version of Yarn is 1.22.22.\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2212078552","commentType":"PULL_COLLABORATOR","score":{"reward":4.928,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":50.610000000000014,"syllables":25,"sentences":1,"score":0.9061000000000001},"multiplier":1,"relevance":0.8}},{"id":2212284744,"content":"<img width=\"689\" alt=\"image\" src=\"https://github.com/ubiquibot/command-start-stop/assets/9807008/96ca117f-55fa-4cbd-a6f0-201becdd1c10\">\r\nJust tested again an it seems there would be some formatting issues.\r\nSecond thing is a problem with the linked PRs as seen in [this test](https://github.com/Meniole/todel/issues/6#issuecomment-2212282816). This one should have been filtered out.\r\nOtherwise the logic is working.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2212284744","commentType":"PULL_COLLABORATOR","score":{"reward":18.864,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":2}},"result":2},"priority":4,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":84.20582758620691,"syllables":76,"sentences":5,"score":0.7579417241379309},"multiplier":1,"relevance":0.9}},{"id":2213210848,"content":"@0x4007 I mentioned it because I think it worsened, if you look at our current bot\r\n<img width=\"692\" alt=\"image\" src=\"https://github.com/ubiquibot/command-start-stop/assets/9807008/90583d80-f146-4a70-aacc-a28d7300db5f\">\r\nso I thought it'd be easier to track the root of the issue. But it can be a separate issue, surely this is not urgent.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2213210848","commentType":"PULL_COLLABORATOR","score":{"reward":10.08,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":75.33252688172045,"syllables":81,"sentences":3,"score":0.8466747311827955},"multiplier":1,"relevance":0.6}},{"id":2215267576,"content":"@Keyrxng Let's have those fixed in a separate PR.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2215267576","commentType":"PULL_COLLABORATOR","score":{"reward":2.592,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":95.165,"syllables":12,"sentences":1,"score":0.64835},"multiplier":1,"relevance":0.6}},{"id":2222384159,"content":"@Keyrxng If you could address the remaining comments so we can merge this would be nice 😄","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2222384159","commentType":"PULL_COLLABORATOR","score":{"reward":4.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":84.845,"syllables":20,"sentences":1,"score":0.75155},"multiplier":1,"relevance":0.7}},{"id":2226836994,"content":"@Keyrxng Should be good to go.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2226836994","commentType":"PULL_COLLABORATOR","score":{"reward":1.58,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2074764097,"effect":{"addition":3532,"deletion":53},"reward":143.4,"priority":4},{"reviewId":2075631012,"effect":{"addition":39,"deletion":24},"reward":2.52,"priority":4},{"reviewId":2076484084,"effect":{"addition":41,"deletion":44},"reward":3.4,"priority":4},{"reviewId":2079415204,"effect":{"addition":0,"deletion":0},"reward":0,"priority":4},{"reviewId":2104060620,"effect":{"addition":39,"deletion":24},"reward":2.52,"priority":4},{"reviewId":2106587402,"effect":{"addition":148,"deletion":187},"reward":13.4,"priority":4},{"reviewId":2109194271,"effect":{"addition":2,"deletion":1},"reward":0.12,"priority":4},{"reviewId":2109424407,"effect":{"addition":19,"deletion":245},"reward":10.56,"priority":4},{"reviewId":2115772202,"effect":{"addition":12,"deletion":13},"reward":1,"priority":4},{"reviewId":2127194886,"effect":{"addition":3,"deletion":49},"reward":2.08,"priority":4},{"reviewId":2135094274,"effect":{"addition":14,"deletion":13},"reward":1.08,"priority":4},{"reviewId":2136206484,"effect":{"addition":25,"deletion":88},"reward":4.52,"priority":4},{"reviewId":2138706758,"effect":{"addition":101,"deletion":135},"reward":9.44,"priority":4},{"reviewId":2152054520,"effect":{"addition":44,"deletion":23},"reward":2.68,"priority":4},{"reviewId":2159052341,"effect":{"addition":0,"deletion":0},"reward":0,"priority":4},{"reviewId":2159063955,"effect":{"addition":44,"deletion":23},"reward":2.68,"priority":4},{"reviewId":2161723564,"effect":{"addition":122,"deletion":163},"reward":11.4,"priority":4},{"reviewId":2173269370,"effect":{"addition":39,"deletion":22},"reward":2.44,"priority":4},{"reviewId":2173281926,"effect":{"addition":2,"deletion":2},"reward":0.16,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 470.34 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>19</td><td>213.4</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.46</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>12.72</td></tr><tr><td>Review</td><td>Comment</td><td>56</td><td>239.76</td></tr></tbody></table></details>"},"0x4007":{"total":401.596,"userId":4975670,"comments":[{"id":2116059020,"content":"Each plugin should be hosted on their own repositories. I imagine we will have a dedicated organization to host \"official\" plugins.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2116059020","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.84,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":47.12035714285716,"syllables":37,"sentences":2,"score":0.8712035714285716},"multiplier":1,"relevance":0.5}},{"id":2116063142,"content":"I am not with my computer so @gentlementlegen maybe you can. Anyways you can work anywhere and then open a pull later when the repo is ready.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2116063142","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.832,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":64.66583333333335,"syllables":41,"sentences":2,"score":0.9533416666666664},"multiplier":1,"relevance":0.2}},{"id":2117566816,"content":"Only wildcard unassign should deduct XP for inactivity. If a user gives up with /stop within the allocated timeframe it's fine. No punishment.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2117566816","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.52,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":54.190000000000026,"syllables":41,"sentences":3,"score":0.9419000000000003},"multiplier":1,"relevance":1}},{"id":2202969250,"content":"`command-start-stop` is the best because it follows very clear standard syntax on how to name our plugin repositories. \r\n- It is intended to operate as a slash `command`\r\n- It has a `start` command\r\n- It has a `stop` command\r\nYou can add a description under the repository description field that explains it is used for assignee management.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2202969250","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.52,"formatting":{"content":{"p":{"score":0,"elementCount":5},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":4,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":46.58779411764709,"syllables":81,"sentences":2,"score":0.8658779411764709},"multiplier":1,"relevance":0.7}},{"id":2202977445,"content":"No the admin can unassign using the GitHub UI. Please try and keep this codebase as simple as possible. I am keen on having the minimal amount of features necessary so that the codebase is easy to maintain. \r\nI think that the rewards shouldn't be settable as you described because that is affected by factors that have little to do with the work, like if the collaborator had a good rest, or a good day, or ate a good meal just before reviews etc.\r\nThis does remind me, I think that in our \"database\" (JSON storage in the repository) we should include metadata on the points deductions. For example, include a GitHub issue URL and then the deduction amount. I don't think we should support additions to XP. \r\nMy vision is that XP should be derived from total dollars earned, minus deductions. The reason why this logic is sound to me is because if we are trying to build meritocracies, the amount of dollars distributed should directly correlate with the value the contributor has provided. The more value they provided to the organization means that they should have more influence over the organization. XP is intended to eventually be a major factor in governance.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2202977445","commentType":"ISSUE_COLLABORATOR","score":{"reward":6.944,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":4,"words":{"wordCount":206,"wordValue":0.1,"result":1.67},"readability":{"fleschKincaid":58.87342012356578,"syllables":314,"sentences":11,"score":0.9887342012356578},"multiplier":1,"relevance":0.8}},{"id":2208107443,"content":"My proposal https://github.com/ubiquibot/plugin-template/issues/2\nHow about sponsored transactions as a first starting point instead? Is this possible?\nI do like that this approach can work on any network, not just gnosis chain. However I assume it's more work to set up. \nIt's a pretty common negotiation tactic to make an ask over food","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/9#issuecomment-2208107443","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.74,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":70.30927595628417,"syllables":91,"sentences":6,"score":0.8969072404371583},"multiplier":1,"relevance":0.1}},{"id":2154050767,"content":"Left comments","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#pullrequestreview-2154050767","commentType":"PULL_COLLABORATOR","score":{"reward":0.124,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":1,"relevance":0.1}},{"id":1612332373,"content":"Impossible for kernel to generate defaults for every possible plugin in the future.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1612332373","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,28 @@\n+import { SupportedEvents, SupportedEventsU } from \"./context\";\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+\n+export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]> {\n+  stateId: string;\n+  eventName: T;\n+  eventPayload: TU[\"payload\"];\n+  settings: StartStopSettings;\n+  authToken: string;\n+  ref: string;\n+}\n+\n+export const startStopSchema = T.Object({","score":{"reward":3.668,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":24.440000000000026,"syllables":26,"sentences":1,"score":0.6444000000000003},"multiplier":1,"relevance":0.7}},{"id":1634374703,"content":"This doesn't look right to declare the const at the end of the file does this actually work","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1634374703","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,79 @@\n+import { Database } from \"../types/database\";\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+import { addCommentToIssue } from \"../../../utils/issue\";\n+\n+export class User extends Super {\n+  user_id: string | undefined;\n+  comment_id: string | undefined;\n+  issue_id: string | undefined;\n+  repository_id: string | undefined;\n+  node_id: string | undefined;\n+  node_type: string | undefined;\n+\n+  constructor(supabase: SupabaseClient<Database>, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  async getUserById(userId: number, issueNumber: number) {\n+    const { data, error } = await this.supabase.from(\"users\").select(\"*\").eq(\"id\", userId).single();\n+    if (error) {\n+      console.error(FAILED_TO_GET_USER, { userId, error, issueNumber });\n+      return null;\n+    }\n+\n+    console.info(SUCCESSFULLY_FETCHED_USER, { userId, issueNumber, ...data });\n+    return data;\n+  }\n+\n+  async getWalletByUserId(userId: number, issueNumber: number) {\n+    const { data, error } = await this.supabase.from(\"users\").select(\"wallets(*)\").eq(\"id\", userId).single();\n+    if ((error && !data) || !data.wallets?.address) {\n+      console.error(\"No wallet address found\", { userId, issueNumber }, true);\n+      await addCommentToIssue(this.context, \"```diff\\n # Please set your wallet address with the /wallet command first and try again.\\n```\");\n+      throw new Error(\"No wallet address found\");\n+    }\n+\n+    console.info(\"Successfully fetched wallet\", { userId, address: data.wallets?.address });\n+    return data.wallets?.address;\n+  }\n+\n+  public async getMultiplier(userId: number, repositoryId: number) {\n+    const locationData = await this.getLocationsFromRepo(repositoryId);\n+    if (locationData && locationData.length > 0) {\n+      const accessData = await this._getAccessData(locationData, userId);\n+      if (accessData) {\n+        return {\n+          value: accessData.multiplier || null,\n+          reason: accessData.multiplier_reason || null,\n+        };\n+      }\n+    }\n+    return null;\n+  }\n+\n+  private async _getAccessData(locationData: { id: number }[], userId: number) {\n+    const locationIdsInCurrentRepository = locationData.map((location) => location.id);\n+\n+    const { data: accessData, error: accessError } = await this.supabase\n+      .from(\"access\")\n+      .select(\"multiplier, multiplier_reason\")\n+      .in(\"location_id\", locationIdsInCurrentRepository)\n+      .eq(\"user_id\", userId)\n+      .order(\"id\", { ascending: false }) // get the latest one\n+      .maybeSingle();\n+    if (accessError) throw console.error(\"Error getting access data\", accessError);\n+    return accessData;\n+  }\n+\n+  public async getLocationsFromRepo(repositoryId: number) {\n+    const { data: locationData, error } = await this.supabase.from(\"locations\").select(\"id\").eq(\"repository_id\", repositoryId);\n+\n+    if (error) throw console.error(\"Error getting location data\", new Error(error.message));\n+    return locationData;\n+  }\n+}\n+\n+const FAILED_TO_GET_USER = \"Failed to get user\";\n+const SUCCESSFULLY_FETCHED_USER = \"Successfully fetched user\";","score":{"reward":5.6,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":85.13947368421054,"syllables":23,"sentences":1,"score":0.7486052631578946},"multiplier":1,"relevance":0.8}},{"id":1634382394,"content":"```suggestion\n- TODO: If the hunter meets the required XP requirements\n```\nDon't introduce new terms. It will confuse future developers","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1634382394","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,32 +1,56 @@\n-# `@ubiquity/ts-template`\n+# `@ubiquibot/Command-Start-Stop`\n \n-This template repository includes support for the following:\n+This plugin allows a hunter to begin a task as well as gracefully stop a task without incurring a negative impact on the hunter's XP or karma.\n \n-- TypeScript\n-- Environment Variables\n-- Conventional Commits\n-- Automatic deployment to Cloudflare Pages\n+## Usage\n \n-## Testing\n+### Start a task\n \n-### Cypress\n+To start a task, a hunter should use the `/start` command. This will assign them to the issue so long as the following is true:\n \n-To test with Cypress Studio UI, run\n+- Price labels are set on the issue\n+- The issue is not already assigned\n+- The hunter has not reached the maximum number of concurrent tasks\n+- The command is not disabled at the repository or organization level\n+- TODO: If the hunter meets the required karma and XP requirements","score":{"reward":3.248,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":57.940000000000026,"syllables":17,"sentences":2,"score":0.9794000000000003},"multiplier":1,"relevance":0.7}},{"id":1635331415,"content":"Use the code it supplied thats fine.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1635331415","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,236 +1,12 @@\n-// https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads\n-\n-import { Static, Type } from \"@sinclair/typebox\";\n-import { labelSchema } from \"./label\";\n import { LogReturn } from \"../adapters/supabase/helpers/logs\";\n+import { RestEndpointMethodTypes } from \"@octokit/rest\";\n \n-export enum UserType {\n-  User = \"User\",\n-  Bot = \"Bot\",\n-  Organization = \"Organization\",\n-}\n-\n-export enum IssueType {\n-  OPEN = \"open\",\n-  CLOSED = \"closed\",\n-  // ALL = \"all\",\n-}\n-\n-export enum StateReason {\n-  COMPLETED = \"completed\",\n-  NOT_PLANNED = \"not_planned\", // these are all used at runtime, not necessarily in the code.\n-  REOPENED = \"reopened\",\n-}\n-\n-const userSchema = Type.Object({\n-  login: Type.String(),\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-  avatar_url: Type.String(),\n-  gravatar_id: Type.Union([Type.Null(), Type.String()]),\n-  url: Type.String(),\n-  html_url: Type.String(),\n-  followers_url: Type.String(),\n-  following_url: Type.String(),\n-  gists_url: Type.String(),\n-  starred_url: Type.String(),\n-  subscriptions_url: Type.String(),\n-  organizations_url: Type.String(),\n-  repos_url: Type.String(),\n-  events_url: Type.String(),\n-  received_events_url: Type.String(),\n-  type: Type.Enum(UserType),\n-  site_admin: Type.Boolean(),\n-});\n-\n-export enum AuthorAssociation {\n-  OWNER = \"OWNER\",\n-  COLLABORATOR = \"COLLABORATOR\",\n-  MEMBER = \"MEMBER\",\n-  CONTRIBUTOR = \"CONTRIBUTOR\",\n-  FIRST_TIMER = \"FIRST_TIMER\",\n-  FIRST_TIME_CONTRIBUTOR = \"FIRST_TIME_CONTRIBUTOR\",\n-  NONE = \"NONE\",\n-}\n-\n-const issueSchema = Type.Object({\n-  assignee: Type.Union([Type.Null(), userSchema]),\n-  assignees: Type.Array(Type.Union([Type.Null(), userSchema])),\n-  author_association: Type.Enum(AuthorAssociation),\n-  body: Type.String(),\n-  closed_at: Type.Union([Type.String({ format: \"date-time\" }), Type.Null()]),\n-  comments_url: Type.String(),\n-  comments: Type.Number(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  events_url: Type.String(),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  labels_url: Type.String(),\n-  labels: Type.Array(labelSchema),\n-  locked: Type.Boolean(),\n-  node_id: Type.String(),\n-  number: Type.Number(),\n-  repository_url: Type.String(),\n-  state_reason: Type.Union([Type.Enum(StateReason), Type.Null()]),\n-  state: Type.Enum(IssueType),\n-  title: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  user: userSchema,\n-});\n-\n-export type GitHubIssue = Static<typeof issueSchema>;\n-\n-const repositorySchema = Type.Object({\n-  allow_forking: Type.Boolean(),\n-  archive_url: Type.String(),\n-  archived: Type.Boolean(),\n-  assignees_url: Type.String(),\n-  blobs_url: Type.String(),\n-  branches_url: Type.String(),\n-  clone_url: Type.String(),\n-  collaborators_url: Type.String(),\n-  comments_url: Type.String(),\n-  commits_url: Type.String(),\n-  compare_url: Type.String(),\n-  contents_url: Type.String(),\n-  contributors_url: Type.String(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  default_branch: Type.String(),\n-  deployments_url: Type.String(),\n-  description: Type.Union([Type.String(), Type.Null()]),\n-  disabled: Type.Boolean(),\n-  downloads_url: Type.String(),\n-  events_url: Type.String(),\n-  fork: Type.Boolean(),\n-  forks_count: Type.Number(),\n-  forks_url: Type.String(),\n-  forks: Type.Number(),\n-  full_name: Type.String(),\n-  git_commits_url: Type.String(),\n-  git_refs_url: Type.String(),\n-  git_tags_url: Type.String(),\n-  git_url: Type.String(),\n-  has_downloads: Type.Boolean(),\n-  has_issues: Type.Boolean(),\n-  has_pages: Type.Boolean(),\n-  has_projects: Type.Boolean(),\n-  has_wiki: Type.Boolean(),\n-  hooks_url: Type.String(),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  is_template: Type.Boolean(),\n-  issue_comment_url: Type.String(),\n-  issue_events_url: Type.String(),\n-  issues_url: Type.String(),\n-  keys_url: Type.String(),\n-  labels_url: Type.String(),\n-  language: Type.Any(),\n-  languages_url: Type.String(),\n-  license: Type.Any(),\n-  merges_url: Type.String(),\n-  milestones_url: Type.String(),\n-  name: Type.String(),\n-  node_id: Type.String(),\n-  notifications_url: Type.String(),\n-  open_issues_count: Type.Number(),\n-  open_issues: Type.Number(),\n-  owner: userSchema,\n-  private: Type.Boolean(),\n-  pulls_url: Type.String(),\n-  pushed_at: Type.String({ format: \"date-time\" }),\n-  releases_url: Type.String(),\n-  size: Type.Number(),\n-  ssh_url: Type.String(),\n-  stargazers_count: Type.Number(),\n-  stargazers_url: Type.String(),\n-  statuses_url: Type.String(),\n-  subscribers_url: Type.String(),\n-  subscription_url: Type.String(),\n-  svn_url: Type.String(),\n-  tags_url: Type.String(),\n-  teams_url: Type.String(),\n-  topics: Type.Array(Type.Any()),\n-  trees_url: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  visibility: Type.String(),\n-  watchers_count: Type.Number(),\n-  watchers: Type.Number(),\n-  web_commit_signoff_required: Type.Boolean(),\n-});\n-\n-const organizationSchema = Type.Object({\n-  login: Type.String(),\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-  url: Type.String(),\n-  repos_url: Type.String(),\n-  events_url: Type.String(),\n-  hooks_url: Type.String(),\n-  issues_url: Type.String(),\n-  members_url: Type.String(),\n-  public_members_url: Type.String(),\n-  avatar_url: Type.String(),\n-  description: Type.Union([Type.String(), Type.Null()]),\n-});\n-\n-const installationSchema = Type.Object({\n-  id: Type.Number(),\n-  node_id: Type.String(),\n-});\n-\n-const commentSchema = Type.Object({\n-  author_association: Type.String(),\n-  body_html: Type.Optional(Type.String()),\n-  body_text: Type.Optional(Type.String()),\n-  body: Type.String(),\n-  created_at: Type.String({ format: \"date-time\" }),\n-  html_url: Type.String(),\n-  id: Type.Number(),\n-  issue_url: Type.String(),\n-  node_id: Type.String(),\n-  updated_at: Type.String({ format: \"date-time\" }),\n-  url: Type.String(),\n-  user: userSchema,\n-  reactions: Type.Object({\n-    url: Type.String(),\n-    total_count: Type.Number(),\n-    \"+1\": Type.Number(),\n-    \"-1\": Type.Number(),\n-    laugh: Type.Number(),\n-    hooray: Type.Number(),\n-    confused: Type.Number(),\n-    heart: Type.Number(),\n-    rocket: Type.Number(),\n-    eyes: Type.Number(),\n-  }),\n-});\n-\n-const changesSchema = Type.Object({\n-  body: Type.Optional(\n-    Type.Object({\n-      from: Type.String(),\n-    })\n-  ),\n-  name: Type.Optional(\n-    Type.Object({\n-      from: Type.String(),\n-    })\n-  ),\n-});\n-\n-export const payloadSchema = Type.Object({\n-  action: Type.String(),\n-  issue: Type.Optional(issueSchema),\n-  label: Type.Optional(labelSchema),\n-  comment: Type.Optional(commentSchema),\n-  sender: userSchema,\n-  repository: repositorySchema,\n-  organization: Type.Optional(organizationSchema),\n-  installation: Type.Optional(installationSchema),\n-  repositories_added: Type.Optional(Type.Array(repositorySchema)),\n-  changes: Type.Optional(changesSchema),\n-});\n-\n+export type User = RestEndpointMethodTypes[\"users\"][\"getByUsername\"][\"response\"][\"data\"];\n+export type Issue = RestEndpointMethodTypes[\"issues\"][\"get\"][\"response\"][\"data\"];\n+export type Label = RestEndpointMethodTypes[\"issues\"][\"listLabelsOnIssue\"][\"response\"][\"data\"][0];\n export type HandlerReturnValuesNoVoid = null | string | LogReturn;\n+\n+export const issueType = {","score":{"reward":1.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":1640139203,"content":"We should probably handle this in a new task but these \"priority\" and \"time\" labels are intended to be customizable so these shouldn't be hardcoded strings.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1640139203","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,32 @@\n+import ms from \"ms\";\n+import { Label } from \"../types\";\n+\n+export function calculateLabelValue(label: string): number {\n+  const matches = label.match(/\\d+/);\n+  const number = matches && matches.length > 0 ? parseInt(matches[0]) || 0 : 0;\n+  if (label.toLowerCase().includes(\"priority\")) return number;","score":{"reward":7.36,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":57.23000000000002,"syllables":39,"sentences":1,"score":0.9723000000000002},"multiplier":1,"relevance":0.8}},{"id":1642692383,"content":"Good point. This seems to be imported code from the v1 bot, which is later used to generate the price label. Perhaps this should be removed from this context.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1642692383","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,32 @@\n+import ms from \"ms\";\n+import { Label } from \"../types\";\n+\n+export function calculateLabelValue(label: string): number {\n+  const matches = label.match(/\\d+/);\n+  const number = matches && matches.length > 0 ? parseInt(matches[0]) || 0 : 0;\n+  if (label.toLowerCase().includes(\"priority\")) return number;","score":{"reward":6.272,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":89.08540229885058,"syllables":37,"sentences":3,"score":0.7091459770114942},"multiplier":1,"relevance":0.7}},{"id":1645042102,"content":"I think that multiplier should be applied elsewhere, like on permit generation. Seems simple enough to aggregate all rewards and slap on the multiplier on the very end. \r\nReason goes with multiplier, and is read only by `/query`\r\nHowever, these are not essential functions because we barely used it.  So for now, lets scrap it.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1645042102","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,32 @@\n+import ms from \"ms\";\n+import { Label } from \"../types\";\n+\n+export function calculateLabelValue(label: string): number {\n+  const matches = label.match(/\\d+/);\n+  const number = matches && matches.length > 0 ? parseInt(matches[0]) || 0 : 0;\n+  if (label.toLowerCase().includes(\"priority\")) return number;","score":{"reward":7.56,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":4,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":63.09916666666669,"syllables":83,"sentences":4,"score":0.9690083333333331},"multiplier":1,"relevance":0.6}},{"id":1650610640,"content":"Naming could be better. Why is `Logs` an extension of `Logger`? This is not clear from the identifier name.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1650610640","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -37,7 +38,7 @@ type PublicMethods<T> = Exclude<FunctionPropertyNames<T>, \"constructor\" | keyof\n \n export type LogMessage = { raw: string; diff: string; level: LogLevel; type: PublicMethods<Logs> | NonNullable<string> };\n \n-export class Logs {\n+export class Logs implements Logger {","score":{"reward":4.564,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":81.64803921568628,"syllables":24,"sentences":3,"score":0.7835196078431372},"multiplier":1,"relevance":0.7}},{"id":1662399018,"content":"This reminds me that it would be really interesting in the future to support teams. Where I could write on a new task \r\n```\r\n/start @Keyrxng \r\n```\r\nAnd we would both be assigned (and be eligible to split the assignee reward.)\r\nI know a lot of developers work as lone rangers but it could make the experience more collaborative and exciting if we have a massive tasks marketplace and teams hunt projects to co-op on together.\r\nAlso if I am already assigned to a project and I write the above command, then it will add them as an assignee as well.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662399018","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,32 +1,56 @@\n-# `@ubiquity/ts-template`\n+# `@ubiquibot/command-start-stop`\n \n-This template repository includes support for the following:\n+This plugin allows a hunter to begin a task as well as gracefully stop a task without incurring a negative impact on the hunter's XP or karma.\n \n-- TypeScript\n-- Environment Variables\n-- Conventional Commits\n-- Automatic deployment to Cloudflare Pages\n+## Usage\n \n-## Testing\n+### Start a task\n \n-### Cypress\n+To start a task, a hunter should use the `/start` command. This will assign them to the issue so long as the following is true:\n \n-To test with Cypress Studio UI, run\n+- Price labels are set on the issue\n+- The issue is not already assigned","score":{"reward":6.76,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":4,"words":{"wordCount":98,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":61.97362244897961,"syllables":139,"sentences":4,"score":0.9802637755102039},"multiplier":1,"relevance":0.5}},{"id":1662404865,"content":"```suggestion\r\n  description: \"Allows a user to start/stop a task without negative XP impact\"\r\n```\r\nWe completely stopped using \"bounty\" or \"bounties\" because this is a crypto-native term and our aspiration is to work with non crypto developers as soon as possible.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662404865","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,32 +1,56 @@\n-# `@ubiquity/ts-template`\n+# `@ubiquibot/command-start-stop`\n \n-This template repository includes support for the following:\n+This plugin allows a hunter to begin a task as well as gracefully stop a task without incurring a negative impact on the hunter's XP or karma.\n \n-- TypeScript\n-- Environment Variables\n-- Conventional Commits\n-- Automatic deployment to Cloudflare Pages\n+## Usage\n \n-## Testing\n+### Start a task\n \n-### Cypress\n+To start a task, a hunter should use the `/start` command. This will assign them to the issue so long as the following is true:\n \n-To test with Cypress Studio UI, run\n+- Price labels are set on the issue\n+- The issue is not already assigned\n+- The hunter has not reached the maximum number of concurrent tasks\n+- The command is not disabled at the repository or organization level\n+- TODO: If the hunter meets the required XP requirements\n \n-```shell\n-yarn cy:open\n-```\n+### Stop a task\n+\n+To stop a task, a hunter should use the `/stop` command. This will unassign them from the issue so long as the following is true:\n+\n+- The hunter is assigned to the issue\n+- The command is not disabled at the repository or organization level\n+- The command is called on the issue, not the associated pull request\n \n-Otherwise to simply run the tests through the console, run\n+### [Configuration](./src/types/plugin-input.ts)\n \n-```shell\n-yarn cy:run\n+#### Note: The command name is `\"start\"` when configuring your `.ubiquibot-config.yml` file.\n+\n+To configure your Ubiquibot to run this plugin, add the following to the `.ubiquibot-config.yml` file in your organization configuration repository.\n+\n+```yml\n+- plugin: http://localhost:4000 # or the URL where the plugin is hosted\n+  name: start-stop\n+  id: start-stop-command\n+  description: \"Allows a user to start/stop a bounty without negative XP impact\"","score":{"reward":7.168,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":39.429285714285754,"syllables":46,"sentences":1,"score":0.7942928571428576},"multiplier":1,"relevance":0.8}},{"id":1662405672,"content":"I don't like the parenthesis syntax. Is there a standard way to express this that would be clear to all developers? \r\nI think using operators such as `&&` and `||` are clearly readable to developers, our intended target audience with this documentation. \r\n```yml\r\ncommand: \"`/start` || `/stop`\"\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662405672","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,32 +1,56 @@\n-# `@ubiquity/ts-template`\n+# `@ubiquibot/command-start-stop`\n \n-This template repository includes support for the following:\n+This plugin allows a hunter to begin a task as well as gracefully stop a task without incurring a negative impact on the hunter's XP or karma.\n \n-- TypeScript\n-- Environment Variables\n-- Conventional Commits\n-- Automatic deployment to Cloudflare Pages\n+## Usage\n \n-## Testing\n+### Start a task\n \n-### Cypress\n+To start a task, a hunter should use the `/start` command. This will assign them to the issue so long as the following is true:\n \n-To test with Cypress Studio UI, run\n+- Price labels are set on the issue\n+- The issue is not already assigned\n+- The hunter has not reached the maximum number of concurrent tasks\n+- The command is not disabled at the repository or organization level\n+- TODO: If the hunter meets the required XP requirements\n \n-```shell\n-yarn cy:open\n-```\n+### Stop a task\n+\n+To stop a task, a hunter should use the `/stop` command. This will unassign them from the issue so long as the following is true:\n+\n+- The hunter is assigned to the issue\n+- The command is not disabled at the repository or organization level\n+- The command is called on the issue, not the associated pull request\n \n-Otherwise to simply run the tests through the console, run\n+### [Configuration](./src/types/plugin-input.ts)\n \n-```shell\n-yarn cy:run\n+#### Note: The command name is `\"start\"` when configuring your `.ubiquibot-config.yml` file.\n+\n+To configure your Ubiquibot to run this plugin, add the following to the `.ubiquibot-config.yml` file in your organization configuration repository.\n+\n+```yml\n+- plugin: http://localhost:4000 # or the URL where the plugin is hosted\n+  name: start-stop\n+  id: start-stop-command\n+  description: \"Allows a user to start/stop a bounty without negative XP impact\"\n+  command: \"/(start|stop)\"","score":{"reward":6.792,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":54.71455284552849,"syllables":67,"sentences":3,"score":0.9471455284552849},"multiplier":1,"relevance":0.6}},{"id":1662408370,"content":"`disabledCommands` is not clear to me. This should be renamed and clarified.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662408370","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,32 +1,56 @@\n-# `@ubiquity/ts-template`\n+# `@ubiquibot/command-start-stop`\n \n-This template repository includes support for the following:\n+This plugin allows a hunter to begin a task as well as gracefully stop a task without incurring a negative impact on the hunter's XP or karma.\n \n-- TypeScript\n-- Environment Variables\n-- Conventional Commits\n-- Automatic deployment to Cloudflare Pages\n+## Usage\n \n-## Testing\n+### Start a task\n \n-### Cypress\n+To start a task, a hunter should use the `/start` command. This will assign them to the issue so long as the following is true:\n \n-To test with Cypress Studio UI, run\n+- Price labels are set on the issue\n+- The issue is not already assigned\n+- The hunter has not reached the maximum number of concurrent tasks\n+- The command is not disabled at the repository or organization level\n+- TODO: If the hunter meets the required XP requirements\n \n-```shell\n-yarn cy:open\n-```\n+### Stop a task\n+\n+To stop a task, a hunter should use the `/stop` command. This will unassign them from the issue so long as the following is true:\n+\n+- The hunter is assigned to the issue\n+- The command is not disabled at the repository or organization level\n+- The command is called on the issue, not the associated pull request\n \n-Otherwise to simply run the tests through the console, run\n+### [Configuration](./src/types/plugin-input.ts)\n \n-```shell\n-yarn cy:run\n+#### Note: The command name is `\"start\"` when configuring your `.ubiquibot-config.yml` file.\n+\n+To configure your Ubiquibot to run this plugin, add the following to the `.ubiquibot-config.yml` file in your organization configuration repository.\n+\n+```yml\n+- plugin: http://localhost:4000 # or the URL where the plugin is hosted\n+  name: start-stop\n+  id: start-stop-command\n+  description: \"Allows a user to start/stop a bounty without negative XP impact\"\n+  command: \"/(start|stop)\"\n+  example: \"/start | /stop\"\n+  with:\n+    disabledCommands: []","score":{"reward":3.248,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":93.57977272727274,"syllables":14,"sentences":2,"score":0.6642022727272726},"multiplier":1,"relevance":0.7}},{"id":1662409253,"content":"```suggestion\r\n  \"description\": \"Enables the assignment of tasks to contributors and the graceful unassignment.\",\r\n```\r\nNo more \"bounty hunter\" vernacular.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662409253","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,7 @@\n {\n-  \"name\": \"ts-template\",\n+  \"name\": \"@ubiquibot/command-start-stop\",\n   \"version\": \"1.0.0\",\n-  \"description\": \"Template repository with TypeScript support.\",\n+  \"description\": \"Enables the assignment of tasks to hunters and the graceful unassignment.\",","score":{"reward":1.82,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":32.56000000000003,"syllables":10,"sentences":1,"score":0.7256000000000004},"multiplier":1,"relevance":0.7}},{"id":1662410564,"content":"Why not bun? I believe the new yarn caused complications for me which led me to init the kernel repo with bun actually, so I'm also skeptical on this @gentlementlegen","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662410564","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -76,5 +83,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@4.2.2\"","score":{"reward":4.96,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":62.837983870967776,"syllables":47,"sentences":2,"score":0.9716201612903222},"multiplier":1,"relevance":0.5}},{"id":1662413681,"content":"I think we should use each organization's own data stores. \r\nIn exchange for having a universal/system wide registration system, we receive the following benefits:\r\n1. decentralized data storage (within each org)\r\n2. each org can edit the values as they see fit, providing them full control over their org and bot behaviors within. \r\n3. not needing to manage/maintain a supabase database (which can adversely affect the services of all of our users)\r\n4. easier maintenance on the plugins, such as this, for not having to spin up a supabase.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662413681","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,14 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Context } from \"../types/context\";\n+import { User } from \"./supabase/helpers/user\";\n+import { Super } from \"./supabase/helpers/supabase\";\n+import { Database } from \"./supabase/types/database\";\n+\n+export function createAdapters(supabaseClient: SupabaseClient<Database>, context: Context) {\n+  return {\n+    supabase: {\n+      user: new User(supabaseClient, context),\n+      super: new Super(supabaseClient, context),\n+    },\n+  };\n+}","score":{"reward":12,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":4,"words":{"wordCount":88,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":39.58666666666667,"syllables":143,"sentences":3,"score":0.7958666666666667},"multiplier":1,"relevance":0.8}},{"id":1662629907,"content":"Doesn't make sense to allow `| undefined`\r\nJust declare it inside of the if block if thats the only place its used.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662629907","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,12 @@\n+export function checkTaskStale(staleTask: number, createdAt: string) {\n+  let days: number | undefined;\n+  let staleToDays: number | undefined;\n+  let isTaskStale = false;\n+\n+  if (staleTask !== 0) {\n+    days = Math.floor((new Date().getTime() - new Date(createdAt).getTime()) / (1000 * 60 * 60 * 24));\n+    staleToDays = Math.floor(staleTask / (1000 * 60 * 60 * 24));\n+    isTaskStale = days >= staleToDays;\n+  }\n+  return isTaskStale;\n+}","score":{"reward":5.208,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":84.8057142857143,"syllables":25,"sentences":1,"score":0.751942857142857},"multiplier":1,"relevance":0.7}},{"id":1662631800,"content":"You could also use `0` for duration to keep it as a `number`?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662631800","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,45 @@\n+import { Context } from \"../../types/context\";\n+\n+const options: Intl.DateTimeFormatOptions = {\n+  weekday: \"short\",\n+  month: \"short\",\n+  day: \"numeric\",\n+  hour: \"numeric\",\n+  minute: \"numeric\",\n+  timeZone: \"UTC\",\n+  timeZoneName: \"short\",\n+};\n+\n+export async function generateAssignmentComment(\n+  context: Context,\n+  issueCreatedAt: string,\n+  issueNumber: number,\n+  senderId: number,\n+  duration: number | null = null","score":{"reward":2.832,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":87.99727272727276,"syllables":14,"sentences":1,"score":0.7200272727272724},"multiplier":1,"relevance":0.6}},{"id":1662634593,"content":"```suggestion\r\n    await addCommentToIssue(context, \"```diff\\n! The issue is closed. Please choose another unassigned task.\\n```\");\r\n```\r\nGet rid of all \"bounty\" references","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662634593","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,106 @@\n+import { Context, ISSUE_TYPE, Label } from \"../../types\";\n+import { isParentIssue, getAvailableOpenedPullRequests, getAssignedIssues, addAssignees, addCommentToIssue } from \"../../utils/issue\";\n+import { calculateDurations } from \"../../utils/shared\";\n+import { checkTaskStale } from \"./check-task-stale\";\n+import { generateAssignmentComment } from \"./generate-assignment-comment\";\n+import structuredMetadata from \"./structured-metadata\";\n+import { assignTableComment } from \"./table\";\n+\n+export async function start(context: Context, issue: Context[\"payload\"][\"issue\"], sender: Context[\"payload\"][\"sender\"]) {\n+  const { logger, config } = context;\n+  const { maxConcurrentTasks } = config.miscellaneous;\n+  const { taskStaleTimeoutDuration } = config.timers;\n+\n+  // is it a child issue?\n+  if (issue.body && isParentIssue(issue.body)) {\n+    await addCommentToIssue(\n+      context,\n+      \"```diff\\n# Please select a child issue from the specification checklist to work on. The '/start' command is disabled on parent issues.\\n```\"\n+    );\n+    logger.error(`Skipping '/start' since the issue is a parent issue`);\n+    throw new Error(\"Issue is a parent issue\");\n+  }\n+\n+  let commitHash: string | null = null;\n+\n+  try {\n+    const hashResponse = await context.octokit.repos.getCommit({\n+      owner: context.payload.repository.owner.login,\n+      repo: context.payload.repository.name,\n+      ref: context.payload.repository.default_branch,\n+    });\n+    commitHash = hashResponse.data.sha;\n+  } catch (e) {\n+    logger.error(\"Error while getting commit hash\", e);\n+  }\n+\n+  // check max assigned issues\n+\n+  const openedPullRequests = await getAvailableOpenedPullRequests(context, sender.login);\n+  logger.info(`Opened Pull Requests with approved reviews or with no reviews but over 24 hours have passed: ${JSON.stringify(openedPullRequests)}`);\n+\n+  const assignedIssues = await getAssignedIssues(context, sender.login);\n+  logger.info(\"Max issue allowed is\", maxConcurrentTasks);\n+\n+  // check for max and enforce max\n+\n+  if (assignedIssues.length - openedPullRequests.length >= maxConcurrentTasks) {\n+    await addCommentToIssue(context, \"```diff\\n! Too many assigned issues, you have reached your max limit.\\n```\");\n+    throw new Error(`Too many assigned issues, you have reached your max limit of ${maxConcurrentTasks} issues.`);\n+  }\n+\n+  // is it assignable?\n+\n+  if (issue.state === ISSUE_TYPE.CLOSED) {\n+    await addCommentToIssue(context, \"```diff\\n! The issue is closed. Please choose another unassigned bounty.\\n```\");","score":{"reward":2.156,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.7}},{"id":1662635867,"content":"```suggestion\r\n```\r\nWe can probably get rid of these checks. I know they were necessary in the old bot because of the poor type management.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662635867","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,56 @@\n+import { Context } from \"../../types\";\n+import { addCommentToIssue, closePullRequestForAnIssue } from \"../../utils/issue\";\n+\n+export async function stop(context: Context, issue: Context[\"payload\"][\"issue\"], sender: Context[\"payload\"][\"sender\"], repo: Context[\"payload\"][\"repository\"]) {\n+  const { logger } = context;\n+  const issueNumber = issue.number;\n+  const out = { output: null };\n+\n+  // is it an issue?\n+  if (!issue) {\n+    logger.info(`Skipping '/stop' because of no issue instance`);\n+    return out;\n+  }","score":{"reward":4.824,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":77.45815217391308,"syllables":32,"sentences":2,"score":0.8254184782608692},"multiplier":1,"relevance":0.6}},{"id":1662636948,"content":"```suggestion\r\n  addCommentToIssue(context, \"```diff\\n+ You have been unassigned from this task.\\n```\").catch(logger.error);\r\n```\r\nFour backticks is strange.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662636948","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,56 @@\n+import { Context } from \"../../types\";\n+import { addCommentToIssue, closePullRequestForAnIssue } from \"../../utils/issue\";\n+\n+export async function stop(context: Context, issue: Context[\"payload\"][\"issue\"], sender: Context[\"payload\"][\"sender\"], repo: Context[\"payload\"][\"repository\"]) {\n+  const { logger } = context;\n+  const issueNumber = issue.number;\n+  const out = { output: null };\n+\n+  // is it an issue?\n+  if (!issue) {\n+    logger.info(`Skipping '/stop' because of no issue instance`);\n+    return out;\n+  }\n+\n+  // is there an assignee?\n+  const assignees = issue.assignees ?? [];\n+  if (assignees.length == 0) {\n+    logger.error(\"No assignees found for issue\", { issueNumber });\n+    await addCommentToIssue(context, \"````diff\\n! You are not assigned to this task.\\n````\");\n+    return { output: \"No assignees found for this task\" }\n+  }\n+\n+  // should unassign?\n+  const shouldUnassign = assignees[0]?.login.toLowerCase() == sender.login.toLowerCase();\n+\n+  if (!shouldUnassign) {\n+    logger.error(\"You are not assigned to this task\", { issueNumber, user: sender.login });\n+    return { output: \"You are not assigned to this task\" };\n+  }\n+\n+  // close PR\n+\n+  await closePullRequestForAnIssue(context, issueNumber, repo);\n+\n+  const {\n+    name,\n+    owner: { login },\n+  } = repo;\n+\n+  // remove assignee\n+\n+  await context.octokit.rest.issues.removeAssignees({\n+    owner: login,\n+    repo: name,\n+    issue_number: issueNumber,\n+    assignees: [sender.login],\n+  });\n+\n+  logger.info(\"You have been unassigned from the task\", {\n+    issueNumber,\n+    user: sender.login,\n+  });\n+\n+  addCommentToIssue(context, \"````diff\\n+ You have been unassigned from this task.\\n````\").catch(logger.error);","score":{"reward":1.456,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.7}},{"id":1662639054,"content":"I wonder if we should proceed with the metadata system. \r\nIt seems  really nice to have but we need to make it way more convenient for developers to work with (via our SDK) for this to catch on and be useful.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662639054","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,35 @@\n+import { LogLevel } from \"../../adapters/supabase/pretty-logs\";\n+\n+type Metadata<T extends object> = T & {\n+  revision?: string;\n+  logMessage?: {\n+    type?: LogLevel;\n+    message?: string;\n+  };\n+  [key: string]: unknown;\n+};\n+\n+function createStructuredMetadata<T extends object>(className: string, metadata: Metadata<T>) {\n+  const jsonPretty = JSON.stringify(metadata, null, 2);\n+  const stackLine = new Error().stack?.split(\"\\n\")[2] ?? \"\";\n+  const caller = stackLine.match(/at (\\S+)/)?.[1] ?? \"\";\n+  const ubiquityMetadataHeader = `<!-- Ubiquity - ${className} - ${caller} - ${metadata.revision}`;\n+\n+  let metadataSerialized: string;\n+  const metadataSerializedVisible = [\"```json\", jsonPretty, \"```\"].join(\"\\n\");\n+  const metadataSerializedHidden = [ubiquityMetadataHeader, jsonPretty, \"-->\"].join(\"\\n\");\n+\n+  if (metadata.logMessage?.type === LogLevel.FATAL) {\n+    // if the log message is fatal, then we want to show the metadata\n+    metadataSerialized = [metadataSerializedVisible, metadataSerializedHidden].join(\"\\n\");\n+  } else {\n+    // otherwise we want to hide it\n+    metadataSerialized = metadataSerializedHidden;\n+  }\n+\n+  return metadataSerialized;\n+}\n+\n+export default {\n+  create: createStructuredMetadata,\n+};","score":{"reward":5.56,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":72.53969512195123,"syllables":55,"sentences":2,"score":0.8746030487804878},"multiplier":1,"relevance":0.5}},{"id":1662640239,"content":"Why are these called directives? They should be called commands. Or even `slashCommand`","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662640239","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,25 @@\n+import { Context } from \"../types\";\n+import { addCommentToIssue } from \"../utils/issue\";\n+import { start } from \"./shared/start\";\n+import { stop } from \"./shared/stop\";\n+\n+export async function userStartStop(context: Context): Promise<{ output: string | null }> {\n+  const { payload, config } = context;\n+  const { issue, comment, sender, repository } = payload;\n+  const directive = comment.body.split(\" \")[0].replace(\"/\", \"\");\n+  const { disabledCommands } = config;\n+  const isCommandDisabled = disabledCommands.some((command: string) => command === directive);\n+\n+  if (isCommandDisabled) {\n+    await addCommentToIssue(context, \"```diff\\n! The /start command is disabled for this repository.\\n```\");\n+    throw new Error(`The '/${directive}' command is disabled for this repository.`);\n+  }\n+\n+  if (directive === \"stop\") {","score":{"reward":3.528,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":89.97500000000002,"syllables":16,"sentences":3,"score":0.7002499999999998},"multiplier":1,"relevance":0.7}},{"id":1662641372,"content":"```suggestion\r\n  await startStopTask(inputs, env);\r\n```\r\nNo bounty","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662641372","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,48 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { Value } from \"@sinclair/typebox/build/cjs/value\";\n+import { envSchema, startStopSchema, PluginInputs } from \"./types\";\n+import { startStopBounty } from \"./plugin\";\n+\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  const env = Value.Decode(envSchema, process.env);\n+  const settings = Value.Decode(startStopSchema, JSON.parse(payload.settings));\n+\n+  const inputs: PluginInputs = {\n+    stateId: payload.stateId,\n+    eventName: payload.eventName,\n+    eventPayload: JSON.parse(payload.eventPayload),\n+    settings,\n+    authToken: payload.authToken,\n+    ref: payload.ref,\n+  };\n+\n+  await startStopBounty(inputs, env);","score":{"reward":0.868,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":1,"relevance":0.7}},{"id":1662642091,"content":"```suggestion\r\n  return toKernel(inputs.authToken, inputs.stateId, {});\r\n```\r\nPerhaps this is more succinct and still clear.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662642091","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,48 @@\n+import * as core from \"@actions/core\";\n+import * as github from \"@actions/github\";\n+import { Octokit } from \"@octokit/rest\";\n+import { Value } from \"@sinclair/typebox/build/cjs/value\";\n+import { envSchema, startStopSchema, PluginInputs } from \"./types\";\n+import { startStopBounty } from \"./plugin\";\n+\n+export async function run() {\n+  const payload = github.context.payload.inputs;\n+\n+  const env = Value.Decode(envSchema, process.env);\n+  const settings = Value.Decode(startStopSchema, JSON.parse(payload.settings));\n+\n+  const inputs: PluginInputs = {\n+    stateId: payload.stateId,\n+    eventName: payload.eventName,\n+    eventPayload: JSON.parse(payload.eventPayload),\n+    settings,\n+    authToken: payload.authToken,\n+    ref: payload.ref,\n+  };\n+\n+  await startStopBounty(inputs, env);\n+\n+  return returnDataToKernel(inputs.authToken, inputs.stateId, {});","score":{"reward":2.184,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.6}},{"id":1662643453,"content":"```suggestion\r\n    adapters: createAdapters(supabase, context);\r\n```\r\nDoesn't this work?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662643453","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,31 @@\n+import { Context } from \"./types/context\";\n+import { userStartStop } from \"./handlers/user-start-stop\";\n+import { Env, PluginInputs } from \"./types\";\n+\n+import { Octokit } from \"@octokit/rest\";\n+import { createClient } from \"@supabase/supabase-js\";\n+import { createAdapters } from \"./adapters\";\n+import { Database } from \"./adapters/supabase/types/database\";\n+import { PrettyLogs } from \"./adapters/supabase/pretty-logs\";\n+\n+export async function startStopBounty(inputs: PluginInputs, env: Env) {\n+  const octokit = new Octokit({ auth: inputs.authToken });\n+  const supabase = createClient<Database>(env.SUPABASE_URL, env.SUPABASE_KEY);\n+\n+  const context: Context = {\n+    eventName: inputs.eventName,\n+    payload: inputs.eventPayload,\n+    config: inputs.settings,\n+    octokit,\n+    env,\n+    logger: new PrettyLogs(),\n+    adapters: {} as ReturnType<typeof createAdapters>,","score":{"reward":1.368,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1662644494,"content":"```suggestion\r\nconst ONE_DAY = 24 * 60 * 60 * 1000;\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662644494","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,35 @@\n+import { SupportedEvents, SupportedEventsU } from \"./context\";\n+import { StaticDecode, Type as T } from \"@sinclair/typebox\";\n+import { StandardValidator } from \"typebox-validators\";\n+\n+export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]> {\n+  stateId: string;\n+  eventName: T;\n+  eventPayload: TU[\"payload\"];\n+  settings: StartStopSettings;\n+  authToken: string;\n+  ref: string;\n+}\n+\n+const oneDay = 24 * 60 * 60 * 1000;","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1662646062,"content":"I hope this works. It worked for me but @gentlementlegen had problems in the past when using it in some tests.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662646062","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,44 @@\n+import { Context } from \"../types/context\";\n+\n+interface GetLinkedParams {\n+  owner: string;\n+  repository: string;\n+  issue?: number;\n+  pull?: number;\n+}\n+\n+interface GetLinkedResults {\n+  organization: string;\n+  repository: string;\n+  number: number;\n+  href: string;\n+}\n+\n+export async function getLinkedPullRequests(context: Context, { owner, repository, issue }: GetLinkedParams): Promise<GetLinkedResults[]> {","score":{"reward":2.96,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":87.40607142857144,"syllables":27,"sentences":2,"score":0.7259392857142857},"multiplier":1,"relevance":0.4}},{"id":1662647364,"content":"I wonder if `1000` is the correct number. Why did you use this?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662647364","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,171 @@\n+import { Context } from \"../types/context\";\n+import { Issue, ISSUE_TYPE } from \"../types/payload\";\n+import { getLinkedPullRequests } from \"./get-linked-prs\";\n+\n+export function isParentIssue(body: string) {\n+  const parentPattern = /-\\s+\\[( |x)\\]\\s+#\\d+/;\n+  return body.match(parentPattern);\n+}\n+\n+export async function getAssignedIssues(context: Context, username: string): Promise<Issue[]> {\n+  const payload = context.payload;\n+\n+  try {\n+    return await context.octokit.paginate(\n+      context.octokit.issues.listForRepo,\n+      {\n+        owner: payload.repository.owner.login,\n+        repo: payload.repository.name,\n+        state: ISSUE_TYPE.OPEN,\n+        per_page: 1000,","score":{"reward":2.48,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":94.995,"syllables":15,"sentences":2,"score":0.6500499999999999},"multiplier":1,"relevance":0.5}},{"id":1662647888,"content":"```suggestion\r\n// Pull requests\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662647888","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,171 @@\n+import { Context } from \"../types/context\";\n+import { Issue, ISSUE_TYPE } from \"../types/payload\";\n+import { getLinkedPullRequests } from \"./get-linked-prs\";\n+\n+export function isParentIssue(body: string) {\n+  const parentPattern = /-\\s+\\[( |x)\\]\\s+#\\d+/;\n+  return body.match(parentPattern);\n+}\n+\n+export async function getAssignedIssues(context: Context, username: string): Promise<Issue[]> {\n+  const payload = context.payload;\n+\n+  try {\n+    return await context.octokit.paginate(\n+      context.octokit.issues.listForRepo,\n+      {\n+        owner: payload.repository.owner.login,\n+        repo: payload.repository.name,\n+        state: ISSUE_TYPE.OPEN,\n+        per_page: 1000,\n+      },\n+      ({ data: issues }) => issues.filter((issue) => !issue.pull_request && issue.assignee && issue.assignee.login === username)\n+    );\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Fetching assigned issues failed!\", err);\n+    return [];\n+  }\n+}\n+\n+export async function addCommentToIssue(context: Context, message: string | null) {\n+  let comment = message as string;\n+\n+  const { payload } = context;\n+\n+  const issueNumber = payload.issue.number;\n+  try {\n+    await context.octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: issueNumber,\n+      body: comment,\n+    });\n+  } catch (e: unknown) {\n+    context.logger.fatal(\"Adding a comment failed!\", e);\n+  }\n+}\n+\n+//// Pull Requests \\\\\\\\","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":4,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1662651430,"content":"I was thinking of saving fatal for emergencies that can be triaged by our team.\r\nFor example, a fatal error in the kernel occurs that can affect every partner and user of our system. So as soon as it occurs, it should ping our Telegram bot, which should relay the message in a triage group on Telegram. \r\nThat way our incident response time can be minimal.\r\nObviously this should only be saved for actual, fatal emergencies. \r\nI don't think this qualifies.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662651430","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,171 @@\n+import { Context } from \"../types/context\";\n+import { Issue, ISSUE_TYPE } from \"../types/payload\";\n+import { getLinkedPullRequests } from \"./get-linked-prs\";\n+\n+export function isParentIssue(body: string) {\n+  const parentPattern = /-\\s+\\[( |x)\\]\\s+#\\d+/;\n+  return body.match(parentPattern);\n+}\n+\n+export async function getAssignedIssues(context: Context, username: string): Promise<Issue[]> {\n+  const payload = context.payload;\n+\n+  try {\n+    return await context.octokit.paginate(\n+      context.octokit.issues.listForRepo,\n+      {\n+        owner: payload.repository.owner.login,\n+        repo: payload.repository.name,\n+        state: ISSUE_TYPE.OPEN,\n+        per_page: 1000,\n+      },\n+      ({ data: issues }) => issues.filter((issue) => !issue.pull_request && issue.assignee && issue.assignee.login === username)\n+    );\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Fetching assigned issues failed!\", err);\n+    return [];\n+  }\n+}\n+\n+export async function addCommentToIssue(context: Context, message: string | null) {\n+  let comment = message as string;\n+\n+  const { payload } = context;\n+\n+  const issueNumber = payload.issue.number;\n+  try {\n+    await context.octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: issueNumber,\n+      body: comment,\n+    });\n+  } catch (e: unknown) {\n+    context.logger.fatal(\"Adding a comment failed!\", e);\n+  }\n+}\n+\n+//// Pull Requests \\\\\\\\\n+\n+export async function closePullRequest(context: Context, pullNumber: number) {\n+  const { repository } = context.payload;\n+  try {\n+    await context.octokit.rest.pulls.update({\n+      owner: repository.owner.login,\n+      repo: repository.name,\n+      pull_number: pullNumber,\n+      state: \"closed\",\n+    });\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Closing pull requests failed!\", err);","score":{"reward":9.436,"formatting":{"content":{"p":{"score":0,"elementCount":5}},"result":0},"priority":4,"words":{"wordCount":82,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":66.06333333333335,"syllables":123,"sentences":6,"score":0.9393666666666666},"multiplier":1,"relevance":0.7}},{"id":1662652289,"content":"Same here regarding fatal. \r\nI haven't fully thought through it in the context of plugins, but the original vision was to triage real emergencies that affect everyone.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662652289","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,171 @@\n+import { Context } from \"../types/context\";\n+import { Issue, ISSUE_TYPE } from \"../types/payload\";\n+import { getLinkedPullRequests } from \"./get-linked-prs\";\n+\n+export function isParentIssue(body: string) {\n+  const parentPattern = /-\\s+\\[( |x)\\]\\s+#\\d+/;\n+  return body.match(parentPattern);\n+}\n+\n+export async function getAssignedIssues(context: Context, username: string): Promise<Issue[]> {\n+  const payload = context.payload;\n+\n+  try {\n+    return await context.octokit.paginate(\n+      context.octokit.issues.listForRepo,\n+      {\n+        owner: payload.repository.owner.login,\n+        repo: payload.repository.name,\n+        state: ISSUE_TYPE.OPEN,\n+        per_page: 1000,\n+      },\n+      ({ data: issues }) => issues.filter((issue) => !issue.pull_request && issue.assignee && issue.assignee.login === username)\n+    );\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Fetching assigned issues failed!\", err);\n+    return [];\n+  }\n+}\n+\n+export async function addCommentToIssue(context: Context, message: string | null) {\n+  let comment = message as string;\n+\n+  const { payload } = context;\n+\n+  const issueNumber = payload.issue.number;\n+  try {\n+    await context.octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: issueNumber,\n+      body: comment,\n+    });\n+  } catch (e: unknown) {\n+    context.logger.fatal(\"Adding a comment failed!\", e);\n+  }\n+}\n+\n+//// Pull Requests \\\\\\\\\n+\n+export async function closePullRequest(context: Context, pullNumber: number) {\n+  const { repository } = context.payload;\n+  try {\n+    await context.octokit.rest.pulls.update({\n+      owner: repository.owner.login,\n+      repo: repository.name,\n+      pull_number: pullNumber,\n+      state: \"closed\",\n+    });\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Closing pull requests failed!\", err);\n+  }\n+}\n+\n+export async function closePullRequestForAnIssue(context: Context, issueNumber: number, repository: Context[\"payload\"][\"repository\"]) {\n+  const logger = context.logger;\n+  if (!issueNumber) {\n+    throw logger.fatal(\"Issue is not defined\");","score":{"reward":5.592,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":56.66071428571428,"syllables":45,"sentences":2,"score":0.9666071428571428},"multiplier":1,"relevance":0.6}},{"id":1662655150,"content":"```suggestion\r\n    comment += ` ${linkedPullRequests[i].href} `;\r\n```\r\nNot sure if this is better, but I remember seeing this render in a diff block so there's no need to dress it up if formatting isn't supported.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1662655150","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,171 @@\n+import { Context } from \"../types/context\";\n+import { Issue, ISSUE_TYPE } from \"../types/payload\";\n+import { getLinkedPullRequests } from \"./get-linked-prs\";\n+\n+export function isParentIssue(body: string) {\n+  const parentPattern = /-\\s+\\[( |x)\\]\\s+#\\d+/;\n+  return body.match(parentPattern);\n+}\n+\n+export async function getAssignedIssues(context: Context, username: string): Promise<Issue[]> {\n+  const payload = context.payload;\n+\n+  try {\n+    return await context.octokit.paginate(\n+      context.octokit.issues.listForRepo,\n+      {\n+        owner: payload.repository.owner.login,\n+        repo: payload.repository.name,\n+        state: ISSUE_TYPE.OPEN,\n+        per_page: 1000,\n+      },\n+      ({ data: issues }) => issues.filter((issue) => !issue.pull_request && issue.assignee && issue.assignee.login === username)\n+    );\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Fetching assigned issues failed!\", err);\n+    return [];\n+  }\n+}\n+\n+export async function addCommentToIssue(context: Context, message: string | null) {\n+  let comment = message as string;\n+\n+  const { payload } = context;\n+\n+  const issueNumber = payload.issue.number;\n+  try {\n+    await context.octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: issueNumber,\n+      body: comment,\n+    });\n+  } catch (e: unknown) {\n+    context.logger.fatal(\"Adding a comment failed!\", e);\n+  }\n+}\n+\n+//// Pull Requests \\\\\\\\\n+\n+export async function closePullRequest(context: Context, pullNumber: number) {\n+  const { repository } = context.payload;\n+  try {\n+    await context.octokit.rest.pulls.update({\n+      owner: repository.owner.login,\n+      repo: repository.name,\n+      pull_number: pullNumber,\n+      state: \"closed\",\n+    });\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Closing pull requests failed!\", err);\n+  }\n+}\n+\n+export async function closePullRequestForAnIssue(context: Context, issueNumber: number, repository: Context[\"payload\"][\"repository\"]) {\n+  const logger = context.logger;\n+  if (!issueNumber) {\n+    throw logger.fatal(\"Issue is not defined\");\n+  }\n+\n+  const linkedPullRequests = await getLinkedPullRequests(context, {\n+    owner: repository.owner.login,\n+    repository: repository.name,\n+    issue: issueNumber,\n+  });\n+\n+  if (!linkedPullRequests.length) {\n+    return logger.info(`No linked pull requests to close`);\n+  }\n+\n+  logger.info(`Opened prs`, linkedPullRequests);\n+  let comment = `These linked pull requests are closed: `;\n+  for (let i = 0; i < linkedPullRequests.length; i++) {\n+    await closePullRequest(context, linkedPullRequests[i].number);\n+    comment += ` <a href=\"${linkedPullRequests[i].href}\">#${linkedPullRequests[i].number}</a> `;","score":{"reward":5.736,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":69.22500000000004,"syllables":38,"sentences":1,"score":0.9077499999999996},"multiplier":1,"relevance":0.6}},{"id":1665136897,"content":"Our partners shouldn't be expected to be doing maintenance on our products. Obviously that's ideal for us, but that's unrealistic to expect.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1665136897","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,171 @@\n+import { Context } from \"../types/context\";\n+import { Issue, ISSUE_TYPE } from \"../types/payload\";\n+import { getLinkedPullRequests } from \"./get-linked-prs\";\n+\n+export function isParentIssue(body: string) {\n+  const parentPattern = /-\\s+\\[( |x)\\]\\s+#\\d+/;\n+  return body.match(parentPattern);\n+}\n+\n+export async function getAssignedIssues(context: Context, username: string): Promise<Issue[]> {\n+  const payload = context.payload;\n+\n+  try {\n+    return await context.octokit.paginate(\n+      context.octokit.issues.listForRepo,\n+      {\n+        owner: payload.repository.owner.login,\n+        repo: payload.repository.name,\n+        state: ISSUE_TYPE.OPEN,\n+        per_page: 1000,\n+      },\n+      ({ data: issues }) => issues.filter((issue) => !issue.pull_request && issue.assignee && issue.assignee.login === username)\n+    );\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Fetching assigned issues failed!\", err);\n+    return [];\n+  }\n+}\n+\n+export async function addCommentToIssue(context: Context, message: string | null) {\n+  let comment = message as string;\n+\n+  const { payload } = context;\n+\n+  const issueNumber = payload.issue.number;\n+  try {\n+    await context.octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: issueNumber,\n+      body: comment,\n+    });\n+  } catch (e: unknown) {\n+    context.logger.fatal(\"Adding a comment failed!\", e);\n+  }\n+}\n+\n+//// Pull Requests \\\\\\\\\n+\n+export async function closePullRequest(context: Context, pullNumber: number) {\n+  const { repository } = context.payload;\n+  try {\n+    await context.octokit.rest.pulls.update({\n+      owner: repository.owner.login,\n+      repo: repository.name,\n+      pull_number: pullNumber,\n+      state: \"closed\",\n+    });\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Closing pull requests failed!\", err);","score":{"reward":4.36,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":65.55550000000002,"syllables":38,"sentences":2,"score":0.9444449999999998},"multiplier":1,"relevance":0.5}},{"id":1665138740,"content":"What is this used for","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1665138740","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,32 +1,56 @@\n-# `@ubiquity/ts-template`\n+# `@ubiquibot/command-start-stop`\n \n-This template repository includes support for the following:\n+This plugin allows a hunter to begin a task as well as gracefully stop a task without incurring a negative impact on the hunter's XP or karma.\n \n-- TypeScript\n-- Environment Variables\n-- Conventional Commits\n-- Automatic deployment to Cloudflare Pages\n+## Usage\n \n-## Testing\n+### Start a task\n \n-### Cypress\n+To start a task, a hunter should use the `/start` command. This will assign them to the issue so long as the following is true:\n \n-To test with Cypress Studio UI, run\n+- Price labels are set on the issue\n+- The issue is not already assigned\n+- The hunter has not reached the maximum number of concurrent tasks\n+- The command is not disabled at the repository or organization level\n+- TODO: If the hunter meets the required XP requirements\n \n-```shell\n-yarn cy:open\n-```\n+### Stop a task\n+\n+To stop a task, a hunter should use the `/stop` command. This will unassign them from the issue so long as the following is true:\n+\n+- The hunter is assigned to the issue\n+- The command is not disabled at the repository or organization level\n+- The command is called on the issue, not the associated pull request\n \n-Otherwise to simply run the tests through the console, run\n+### [Configuration](./src/types/plugin-input.ts)\n \n-```shell\n-yarn cy:run\n+#### Note: The command name is `\"start\"` when configuring your `.ubiquibot-config.yml` file.\n+\n+To configure your Ubiquibot to run this plugin, add the following to the `.ubiquibot-config.yml` file in your organization configuration repository.\n+\n+```yml\n+- plugin: http://localhost:4000 # or the URL where the plugin is hosted\n+  name: start-stop\n+  id: start-stop-command\n+  description: \"Allows a user to start/stop a bounty without negative XP impact\"\n+  command: \"/(start|stop)\"\n+  example: \"/start | /stop\"\n+  with:\n+    disabledCommands: []","score":{"reward":1.104,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.4}},{"id":1665143930,"content":"`.ubiquibot-config` repo \nSorry but this doesn't make sense to me. Can you elaborate on why it's impossible to write to the event source repository?\nPlease never use acronyms in our technical discussions. \n1. It increases cognitive overhead \n2. It reduces clarity\n3. It wastes time because now I need to ask you what is \"impl\" before I can provide you a useful response. \n4. Other contributors with less context are less likely to be able to contribute to the conversation. \nI would only accept the use of widely used acronyms that people understand without onboarding to our project. \nIn `.ubiquibot-config` repository or in the event source repository under `.github/ubiquibot-storage/` etc\nThis could be annoying for developers though if there are frequent merge conflicts. We may need to store it on a dedicated branch so that it doesn't get in the way of work?\nThe alternative is that the plugin itself manages the repository association within its data store. \n```\n{ [repo id]: { } }\n```\nWhere this particular plugin uses the repo id as keys.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1665143930","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,14 @@\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Context } from \"../types/context\";\n+import { User } from \"./supabase/helpers/user\";\n+import { Super } from \"./supabase/helpers/supabase\";\n+import { Database } from \"./supabase/types/database\";\n+\n+export function createAdapters(supabaseClient: SupabaseClient<Database>, context: Context) {\n+  return {\n+    supabase: {\n+      user: new User(supabaseClient, context),\n+      super: new Super(supabaseClient, context),\n+    },\n+  };\n+}","score":{"reward":8.96,"formatting":{"content":{"p":{"score":0,"elementCount":2},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":4,"words":{"wordCount":164,"wordValue":0.1,"result":2.09},"readability":{"fleschKincaid":54.51948780487808,"syllables":263,"sentences":10,"score":0.9451948780487808},"multiplier":1,"relevance":0.7}},{"id":1674949109,"content":"Implies index.ts I presume (which is not convention) \nThis should be fixed","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1674949109","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,7 +3,7 @@ import { Octokit } from \"@octokit/rest\";\n import { StartStopSettings } from \"./plugin-input\";\n import { createAdapters } from \"../adapters\";\n import { Env } from \"./env\";\n-import { Logs } from \"@ubiquity-dao/ubiquibot-logger/.\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger/\";","score":{"reward":3.24,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.09903846153848,"syllables":18,"sentences":2,"score":0.7690096153846152},"multiplier":1,"relevance":0.6}},{"id":2181040344,"content":"I believe that the old version would allow you to self assign without a registered wallet. However, we should make this configurable. Default should not allow users to self assign unless their wallet is registered!","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2181040344","commentType":"PULL_COLLABORATOR","score":{"reward":7.364,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":57.21619047619049,"syllables":57,"sentences":3,"score":0.9721619047619049},"multiplier":1,"relevance":0.7}},{"id":2213199754,"content":"This has always existed. It's fine to ship like this until we can figure a solution later (I couldn't)","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2213199754","commentType":"PULL_COLLABORATOR","score":{"reward":2.992,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":83.37750000000003,"syllables":28,"sentences":2,"score":0.7662249999999997},"multiplier":1,"relevance":0.4}},{"id":2223386780,"content":"Match as close as possible to how it was and I can fix it later or something","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2223386780","commentType":"PULL_COLLABORATOR","score":{"reward":1.968,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":80.09764705882354,"syllables":22,"sentences":1,"score":0.7990235294117646},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2075111946,"effect":{"addition":3446,"deletion":54},"reward":140,"priority":4},{"reviewId":2109625167,"effect":{"addition":163,"deletion":428},"reward":23.64,"priority":4},{"reviewId":2111188168,"effect":{"addition":0,"deletion":0},"reward":0,"priority":4},{"reviewId":2118907985,"effect":{"addition":12,"deletion":13},"reward":1,"priority":4},{"reviewId":2135109996,"effect":{"addition":17,"deletion":62},"reward":3.16,"priority":4},{"reviewId":2153609430,"effect":{"addition":168,"deletion":244},"reward":16.48,"priority":4},{"reviewId":2153629348,"effect":{"addition":0,"deletion":0},"reward":0,"priority":4},{"reviewId":2153634390,"effect":{"addition":44,"deletion":23},"reward":2.68,"priority":4},{"reviewId":2157982449,"effect":{"addition":122,"deletion":163},"reward":11.4,"priority":4},{"reviewId":2173517865,"effect":{"addition":38,"deletion":21},"reward":2.36,"priority":4},{"reviewId":2174441008,"effect":{"addition":1,"deletion":1},"reward":0.08,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 401.596 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>11</td><td>200.8</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>32.396</td></tr><tr><td>Review</td><td>Comment</td><td>40</td><td>168.4</td></tr></tbody></table></details>"},"rndquu":{"total":275.704,"userId":119500907,"comments":[{"id":2135017859,"content":"@Keyrxng Getting the following error on `yarn worker`:\r\n```\r\n✘ [ERROR] Could not resolve \"../adapters/supabase/helpers/logs\"\r\n    src/utils/issue.ts:3:26:\r\n      3 │ import { LogReturn } from \"../adapters/supabase/helpers/logs\";\r\n```\r\nPls fix","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#pullrequestreview-2135017859","commentType":"PULL_COLLABORATOR","score":{"reward":3.456,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":71.81500000000001,"syllables":12,"sentences":1,"score":0.8818499999999999},"multiplier":1,"relevance":0.9}},{"id":2137462405,"content":"Works fine\r\nMoved this https://github.com/ubiquibot/command-start-stop/issues/4 to a separate issue since this PR is already too big","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#pullrequestreview-2137462405","commentType":"PULL_COLLABORATOR","score":{"reward":5.6,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":71.28000000000002,"syllables":35,"sentences":2,"score":0.8871999999999999},"multiplier":1,"relevance":0.5}},{"id":1630852636,"content":"@Keyrxng `UBIQUIBOT_TOKEN` is the github app token, right? Isn't it supposed to be passed in a plugin invocation POST request (assuming we're running the plugin as a Cloudflare worker)?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1630852636","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,29 @@\n+name: Deploy\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  deploy:\n+    runs-on: ubuntu-latest\n+    name: Deploy\n+    steps:\n+      - name: Setup Node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20\"\n+      - uses: actions/checkout@v4\n+      - uses: cloudflare/wrangler-action@v3\n+        with:\n+          wranglerVersion: \"3.57.0\"\n+          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}\n+          secrets: |\n+            SUPABASE_URL\n+            SUPABASE_KEY\n+            UBIQUIBOT_TOKEN\n+        env:\n+          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}\n+          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}\n+          UBIQUIBOT_TOKEN: ${{ secrets.UBIQUIBOT_TOKEN }}","score":{"reward":7.68,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":67.53000000000003,"syllables":44,"sentences":2,"score":0.9246999999999997},"multiplier":1,"relevance":0.8}},{"id":1651175210,"content":"@gentlementlegen Do we need to pass `CLOUDFLARE_ACCOUNT_ID` here ([related PR](https://github.com/ubiquity/ubiquibot-kernel/pull/63))?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1651175210","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,27 @@\n+name: Deploy\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  deploy:\n+    runs-on: ubuntu-latest\n+    name: Deploy\n+    steps:\n+      - name: Setup Node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20\"\n+      - uses: actions/checkout@v4\n+      - uses: cloudflare/wrangler-action@v3\n+        with:\n+          wranglerVersion: \"3.57.0\"\n+          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}\n+          secrets: |","score":{"reward":6.608,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":66.10000000000002,"syllables":14,"sentences":1,"score":0.9389999999999997},"multiplier":1,"relevance":0.7}},{"id":1651178825,"content":"@gentlementlegen The convention is to simply use the latest yarn (currently v4) across all core plugins, right?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1651178825","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -76,5 +83,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@1.22.22+sha1.ac34549e6aa8e7ead463a7407e1c7390f61a6610\"","score":{"reward":3.984,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":45.26235294117649,"syllables":29,"sentences":1,"score":0.8526235294117649},"multiplier":1,"relevance":0.6}},{"id":1651184281,"content":"@Keyrxng As far as I understand `getMultiplier()`, `_getAccessData()` and `getLocationsFromRepo()` are not used anywhere. If so pls remove them.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1651184281","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,63 @@\n+import { Database } from \"../types/database\";\n+import { SupabaseClient } from \"@supabase/supabase-js\";\n+import { Super } from \"./supabase\";\n+import { Context } from \"../../../types/context\";\n+import { addCommentToIssue } from \"../../../utils/issue\";\n+\n+export class User extends Super {\n+  constructor(supabase: SupabaseClient<Database>, context: Context) {\n+    super(supabase, context);\n+  }\n+\n+  async getWalletByUserId(userId: number, issueNumber: number) {\n+    const { data, error } = await this.supabase.from(\"users\").select(\"wallets(*)\").eq(\"id\", userId).single();\n+    if ((error && !data) || !data.wallets?.address) {\n+      this.context.logger.error(\"No wallet address found\", { userId, issueNumber }, true);\n+      if (this.context.config.miscellaneous.startRequiresWallet) {\n+        await addCommentToIssue(this.context, \"```diff\\n! Please set your wallet address with the /wallet command first and try again.\\n```\");\n+        throw new Error(\"No wallet address found\");\n+      } else {\n+        await addCommentToIssue(this.context, \"```diff\\n# Please set your wallet address with the /wallet command in order to receive a task reward.\\n```\");\n+      }\n+    } else {\n+      this.context.logger.info(\"Successfully fetched wallet\", { userId, address: data.wallets?.address });\n+    }\n+\n+    return data?.wallets?.address || null;\n+  }\n+\n+  public async getMultiplier(userId: number, repositoryId: number) {","score":{"reward":5.58,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":87.67750000000001,"syllables":21,"sentences":2,"score":0.7232249999999999},"multiplier":1,"relevance":0.9}},{"id":1651280117,"content":"@Keyrxng Could you update [worker-deploy.yml](https://github.com/ubiquibot/command-start-stop/blob/89fac976bbaf97b30bda4f4982b288b452610c22/.github/workflows/worker-deploy.yml) to reflect changes from https://github.com/ubiquity/ubiquibot-kernel/pull/63?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1651280117","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,27 @@\n+name: Deploy\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  deploy:\n+    runs-on: ubuntu-latest\n+    name: Deploy\n+    steps:\n+      - name: Setup Node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20\"\n+      - uses: actions/checkout@v4\n+      - uses: cloudflare/wrangler-action@v3\n+        with:\n+          wranglerVersion: \"3.57.0\"\n+          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}\n+          secrets: |","score":{"reward":12.288,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":4,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":62.37508771929825,"syllables":31,"sentences":3,"score":0.9762491228070175},"multiplier":1,"relevance":0.8}},{"id":1652950718,"content":"Works fine with yarn v4, at least in the \"worker mode\". As far I understand, [corepack](https://yarnpkg.com/corepack) (binary installed with the NodeJS) makes sure that yarn version from the `packageManager` field is used within the project.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1652950718","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -76,5 +83,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@4.2.2\"","score":{"reward":9.072,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":75.12117647058825,"syllables":46,"sentences":2,"score":0.8487882352941175},"multiplier":1,"relevance":0.6}},{"id":1666899022,"content":"There are 3 entities here:\r\n1. Kernel\r\n2. Core ubiquity plugins\r\n3. 3rd party plugins\r\nKernel and core ubiquity plugins should share the same logger instance. So if `logger.fatal()` is called in the kernel or core plugin then it's definitely an issue that we should resolve ASAP.\r\n3rd party plugin developers should be responsible for their own plugins and maintain their own logging and monitoring solutions.\r\nThere is no need to add logger to the SDK thus allowing 3rd party plugins to use our own logging solution.\r\nIt makes sense to create a separate logger package (which is already [created](https://github.com/ubiquity/ubiquibot-logger) as far as I understand) and use it inside the kernel and core plugins.","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#discussion_r1666899022","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,171 @@\n+import { Context } from \"../types/context\";\n+import { Issue, ISSUE_TYPE } from \"../types/payload\";\n+import { getLinkedPullRequests } from \"./get-linked-prs\";\n+\n+export function isParentIssue(body: string) {\n+  const parentPattern = /-\\s+\\[( |x)\\]\\s+#\\d+/;\n+  return body.match(parentPattern);\n+}\n+\n+export async function getAssignedIssues(context: Context, username: string): Promise<Issue[]> {\n+  const payload = context.payload;\n+\n+  try {\n+    return await context.octokit.paginate(\n+      context.octokit.issues.listForRepo,\n+      {\n+        owner: payload.repository.owner.login,\n+        repo: payload.repository.name,\n+        state: ISSUE_TYPE.OPEN,\n+        per_page: 1000,\n+      },\n+      ({ data: issues }) => issues.filter((issue) => !issue.pull_request && issue.assignee && issue.assignee.login === username)\n+    );\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Fetching assigned issues failed!\", err);\n+    return [];\n+  }\n+}\n+\n+export async function addCommentToIssue(context: Context, message: string | null) {\n+  let comment = message as string;\n+\n+  const { payload } = context;\n+\n+  const issueNumber = payload.issue.number;\n+  try {\n+    await context.octokit.issues.createComment({\n+      owner: payload.repository.owner.login,\n+      repo: payload.repository.name,\n+      issue_number: issueNumber,\n+      body: comment,\n+    });\n+  } catch (e: unknown) {\n+    context.logger.fatal(\"Adding a comment failed!\", e);\n+  }\n+}\n+\n+//// Pull Requests \\\\\\\\\n+\n+export async function closePullRequest(context: Context, pullNumber: number) {\n+  const { repository } = context.payload;\n+  try {\n+    await context.octokit.rest.pulls.update({\n+      owner: repository.owner.login,\n+      repo: repository.name,\n+      pull_number: pullNumber,\n+      state: \"closed\",\n+    });\n+  } catch (err: unknown) {\n+    context.logger.fatal(\"Closing pull requests failed!\", err);","score":{"reward":13.832,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1.3},"priority":4,"words":{"wordCount":111,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":53.972270270270286,"syllables":171,"sentences":5,"score":0.9397227027027029},"multiplier":1,"relevance":0.7}},{"id":2154395636,"content":"@Keyrxng The plugin config example provided in the README throws `SyntaxError: \"[object Object]\" is not valid JSON` (I'm using [this](https://github.com/rndquu-org/test-repo/blob/159be92911c06a2585ee6088ac407b0748478dc5/.github/.ubiquibot-config.yml) one). Could you update README with a ready to use example?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2154395636","commentType":"PULL_COLLABORATOR","score":{"reward":12.168,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":75.70750000000002,"syllables":35,"sentences":2,"score":0.8429249999999997},"multiplier":1,"relevance":0.9}},{"id":2160071884,"content":"@Keyrxng Still getting the `SyntaxError: \"[object Object]\" is not valid JSON` error for [this](https://github.com/rndquu-org/test-repo/blob/a06641b2d350c23809654655572caa96e416c58f/.github/.ubiquibot-config.yml) config from README file. What am I doing wrong?","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2160071884","commentType":"PULL_COLLABORATOR","score":{"reward":8.736,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":92.965,"syllables":20,"sentences":2,"score":0.67035},"multiplier":1,"relevance":0.8}},{"id":2179968947,"content":"I'm getting this warning on `/start`:\r\n```\r\n # Please set your wallet address with the /wallet command first and try again.\r\n```\r\nWasn't this plugin supposed to handle plain assign/unassign flow for contributors? Chances are the `/wallet` plugin may be missed in the config hence the warning doesn't make sense.\r\nAs far as I understand supabase in this plugin is meant to be used only for logging, not for checking permissions, applying multipliers, etc...","url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1#issuecomment-2179968947","commentType":"PULL_COLLABORATOR","score":{"reward":11.7,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":4,"words":{"wordCount":60,"wordValue":0.1,"result":2.52},"readability":{"fleschKincaid":63.86500000000004,"syllables":87,"sentences":3,"score":0.9613499999999996},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2103976001,"effect":{"addition":3441,"deletion":57},"reward":139.92,"priority":4},{"reviewId":2135017859,"effect":{"addition":97,"deletion":424},"reward":20.84,"priority":4},{"reviewId":2136041823,"effect":{"addition":11,"deletion":42},"reward":2.12,"priority":4},{"reviewId":2137462405,"effect":{"addition":101,"deletion":135},"reward":9.44,"priority":4},{"reviewId":2160876497,"effect":{"addition":44,"deletion":23},"reward":2.68,"priority":4}],"url":"https://github.com/ubiquity-os-marketplace/command-start-stop/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 275.704 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>5</td><td>175</td></tr><tr><td>Review</td><td>Comment</td><td>12</td><td>100.704</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_36.json","json":{"gentlementlegen":{"userId":9807008,"total":302.37,"task":{"reward":300,"multiplier":1},"comments":[{"id":2475112048,"content":"This is not a specific plugin but a nice-to-have features for plugin Workers.\r\nCurrently when developing it's quite easy to switch to a different Action branch for testing a new feature, by specifying the `@branch` within the configuration.\r\nHowever, workers do not benefit from this and always have to be deployed from the main branch to be tested. This makes development more tedious than it has to be, even worse when testing other people pull-requests.\r\nWhat would be nice is to get a preview URL base on the latest commit of the branch the user is working on.\r\nIt would also be important to cleanup the preview deployments as they would pollute Cloudflare heavily.\r\nA naming pattern could be:\r\n`<plugin-name>.<username>.<branch>.<hash>` to find them easily and know what they refer to. We could also have the deployed url displayed in the Action results to be found easily, and without the need to access Github token because we do not publish in the pull-request thread.\r\nThis probably can be implemented as an Action, which we could also put inside the `plugin-template` so new plugins can benefit from this right away.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/36","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.37,"formatting":{"content":{"p":{"score":0,"elementCount":8}},"result":0},"priority":1,"words":{"wordCount":190,"wordValue":0.1,"result":1.83},"readability":{"fleschKincaid":62.06932748538013,"syllables":277,"sentences":9,"score":0.9793067251461988},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 302.37 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>300</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.37</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/36\" target=\"_blank\" rel=\"noopener\">This is not a specific plugin but a nice-to-have features for pl&hellip;</a></h6></td><td><details><summary>1.83</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;  result: 0&#13;regex:&#13;  wordCount: 190&#13;  wordValue: 0.1&#13;  result: 1.83&#13;</pre></details></td><td>1</td><td>1</td><td>2.37</td></tr></tbody></table></details>"},"0x4007":{"total":42.711,"userId":4975670,"comments":[{"id":2298576552,"content":"Your technical specification does not offer clarity into how you plan to implement this. Otherwise I would suggest just doing local development (can you use localhost in the bot config?) and then finally doing a deploy?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/36#issuecomment-2298576552","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.92,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":51.30500000000001,"syllables":61,"sentences":3,"score":0.91305},"multiplier":1,"relevance":1}},{"id":2303382955,"content":"We could just ask that contributors allow us to test on their own bot on their own org. No extra work needed.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/36#issuecomment-2303382955","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.67,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":91.84272727272729,"syllables":27,"sentences":2,"score":0.6815727272727271},"multiplier":1,"relevance":1}},{"id":2265150378,"content":"Looks like it works according to your QA","url":"https://github.com/ubiquity-os/plugin-template/pull/16#pullrequestreview-2265150378","commentType":"PULL_COLLABORATOR","score":{"reward":0.819,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.3}},{"id":2314148762,"content":"We can only have [100 workers](https://developers.cloudflare.com/workers/platform/limits/#number-of-workers) on our account. This seems like a bad solution. This should deploy on each developer's personal cloudflare accounts instead, [like I mentioned](https://github.com/ubiquibot/plugins-wishlist/issues/36#issuecomment-2303382955) in the issue discussion. \nIt could be interesting to register a cloudflare key in a similar way we do wallet registrations per user. We can allow them to encrypt using our X25519 key with an adjustment to that evm private key encryption app. \nThen they can safely post their encrypted cloudflare key to github comments and nobody but the bot can use it.","url":"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314148762","commentType":"PULL_COLLABORATOR","score":{"reward":16.119,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":92,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":63.452101449275375,"syllables":139,"sentences":6,"score":0.9654789855072462},"multiplier":1,"relevance":0.9}},{"id":2314175547,"content":"How does it deploy on the contributors account? I just wrote a new task for that.","url":"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314175547","commentType":"PULL_COLLABORATOR","score":{"reward":1.86,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":87.67750000000001,"syllables":21,"sentences":2,"score":0.7232249999999999},"multiplier":1,"relevance":0.4}},{"id":2314179165,"content":"I don't understand how it could possibly post on another Cloudflare account without authentication","url":"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314179165","commentType":"PULL_COLLABORATOR","score":{"reward":2.22,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":33.690000000000026,"syllables":28,"sentences":1,"score":0.7369000000000002},"multiplier":1,"relevance":0.5}},{"id":2314308770,"content":"The answer is that the contributor sets the key in their fork's secrets, and then the CI will run from their fork, using their token.","url":"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314308770","commentType":"PULL_COLLABORATOR","score":{"reward":5.256,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":73.06807692307696,"syllables":33,"sentences":1,"score":0.8693192307692305},"multiplier":1,"relevance":0.8}},{"id":2314316905,"content":"That is a crazy branch name.","url":"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314316905","commentType":"PULL_COLLABORATOR","score":{"reward":0.237,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":2265150378,"effect":{"addition":87,"deletion":0},"reward":2.61,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-template/pull/16"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 42.711 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>2.61</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>13.59</td></tr><tr><td>Review</td><td>Comment</td><td>6</td><td>26.511</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/16\" target=\"_blank\" rel=\"noopener\">#16</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+87 -0</td><td>3</td><td>2.61</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/36#issuecomment-2298576552\" target=\"_blank\" rel=\"noopener\">Your technical specification does not offer clarity into how you&hellip;</a></h6></td><td><details><summary>2.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>1</td><td>3</td><td>7.92</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/36#issuecomment-2303382955\" target=\"_blank\" rel=\"noopener\">We could just ask that contributors allow us to test on their ow&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>1</td><td>3</td><td>5.67</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/16#pullrequestreview-2265150378\" target=\"_blank\" rel=\"noopener\">Looks like it works according to your QA</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.819</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314148762\" target=\"_blank\" rel=\"noopener\">We can only have [100 workers](https://developers.cloudflare.com&hellip;</a></h6></td><td><details><summary>4.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 92&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>3</td><td>16.119</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314175547\" target=\"_blank\" rel=\"noopener\">How does it deploy on the contributors account? I just wrote a n&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.86</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314179165\" target=\"_blank\" rel=\"noopener\">I don't understand how it could possibly post on another Cloudfl&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.22</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314308770\" target=\"_blank\" rel=\"noopener\">The answer is that the contributor sets the key in their fork's &hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.256</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/16#issuecomment-2314316905\" target=\"_blank\" rel=\"noopener\">That is a crazy branch name.</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.237</td></tr></tbody></table></details>"},"whilefoo":{"total":11.379,"userId":139262667,"comments":[{"id":2266724836,"content":"that's super useful!","url":"https://github.com/ubiquity-os/plugin-template/pull/16#pullrequestreview-2266724836","commentType":"PULL_COLLABORATOR","score":{"reward":0.171,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":54.72500000000002,"syllables":7,"sentences":1,"score":0.9472500000000003},"multiplier":1,"relevance":0.1}},{"id":1734959992,"content":"won't this grep match multiple lines for example [a sample config](https://developers.cloudflare.com/workers/wrangler/configuration/#sample-wranglertoml-configuration) that has two lines that start with `name = `","url":"https://github.com/ubiquity-os/plugin-template/pull/16#discussion_r1734959992","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,44 @@\n+name: Delete Deployment\n+\n+on:\n+  delete:\n+\n+jobs:\n+  delete:\n+    runs-on: ubuntu-latest\n+    name: Delete Deployment\n+    steps:\n+      - name: Setup Node\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"20.10.0\"\n+\n+      - name: Enable corepack\n+        run: corepack enable\n+\n+      - uses: actions/checkout@v4\n+\n+      - name: Get Deleted Branch Name\n+        id: get_branch\n+        run: |\n+          branch_name=$(echo '${{ github.event.ref }}' | sed 's#refs/heads/##' | sed 's#[^a-zA-Z0-9]#-#g')\n+          echo \"branch_name=$branch_name\" >> $GITHUB_ENV\n+      - name: Retrieve and Construct Full Worker Name\n+        id: construct_worker_name\n+        run: |\n+          base_name=$(grep '^name = ' wrangler.toml | sed 's/^name = \"\\(.*\\)\"$/\\1/')","score":{"reward":8.208,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":76.2342105263158,"syllables":25,"sentences":1,"score":0.8376578947368419},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2266724836,"effect":{"addition":100,"deletion":0},"reward":3,"priority":3}],"url":"https://github.com/ubiquity-os/plugin-template/pull/16"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 11.379 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>3</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>8.379</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/16\" target=\"_blank\" rel=\"noopener\">#16</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+100 -0</td><td>3</td><td>3</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/16#pullrequestreview-2266724836\" target=\"_blank\" rel=\"noopener\">that's super useful!</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.171</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/16#discussion_r1734959992\" target=\"_blank\" rel=\"noopener\">won't this grep match multiple lines for example [a sample confi&hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.208</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_16.json","json":{"rndquu":{"userId":119500907,"total":1208.18,"task":{"reward":1200,"multiplier":1},"comments":[{"id":2347894059,"content":"User stories:\r\n- Partner should be able to set any ERC20 token as a permit reward (we plan to support only USD-pegged coins initially)\r\n- Ubiquity owner should be able to set permit fees in some env variable. Notes:\r\n  - Fees are transferred to Ubiquity treasury, if permits are regenerated then only the difference is sent\r\n  - Use either direct transfer to ensure partner solvency either permits to the treasury\r\n- Ubiquity owner should be able to whitelist some ERC20 tokens so that they don't incur any fees (ex: Dollar token)\r\nThis issue touches the following repositories / docs:\r\n- https://github.com/ubiquibot/permit-generation\r\n- https://github.com/ubiquibot/conversation-rewards\r\n- https://github.com/ubiquity/pay.ubq.fi\r\n- partner docs","url":"https://github.com/ubiquity-os/permit-generation/issues/16","commentType":"ISSUE_SPECIFICATION","score":{"reward":8.18,"formatting":{"content":{"p":{"score":0,"elementCount":11},"ul":{"score":0,"elementCount":3},"li":{"score":0.1,"elementCount":9},"a":{"score":1,"elementCount":3}},"result":3.9},"priority":1,"words":{"wordCount":97,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":44.882241379310386,"syllables":199,"sentences":7,"score":0.8488224137931039},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1208.18 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>1200</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>8.18</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/16\" target=\"_blank\" rel=\"noopener\">User stories:- Partner should be able to set any ERC20 token a&hellip;</a></h6></td><td><details><summary>6.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 11&#13;    ul:&#13;      score: 0&#13;      elementCount: 3&#13;    li:&#13;      score: 0.1&#13;      elementCount: 9&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.9&#13;regex:&#13;  wordCount: 97&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>1</td><td>1</td><td>8.18</td></tr></tbody></table></details>"},"gitcoindev":{"total":2.49,"userId":88761781,"comments":[{"id":2163867675,"content":"Good proposals. Number 1 seems strange for me, at least from the partner's perspective. I would reject number 2 immediately. Between number 3 and 4, 3 seems the 'proper' but more complex, if requires audit also costly. For number 4, even if treasury pays for gas, I guess the cost would be negligible for L2 permits (or simply treasury would earn 5% - gas fee). Therefore I vote for option '4', and 2nd choice is option '3'.","url":"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2163867675","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":2.49,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":77,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":70.75462121212122,"syllables":112,"sentences":6,"score":0.8924537878787878},"multiplier":0.25,"relevance":1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.49 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>2.49</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2163867675\" target=\"_blank\" rel=\"noopener\">Good proposals. Number 1 seems strange for me, at least from the&hellip;</a></h6></td><td><details><summary>2.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 77&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>1</td><td>3</td><td>2.49</td></tr></tbody></table></details>"},"Keyrxng":{"total":1.92,"userId":106303466,"comments":[{"id":2163876575,"content":"The only other thing I can think of is just a more complex alternative of 4. Automate treasury permits through OZ Defender but it's a long way for a shortcut.\r\nI'd opt for 4, as it's the easiest to implement and like @gitcoindev says the fee is negligible. 3 seems like overkill despite it being my 2nd choice as well.","url":"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2163876575","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":1.92,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":63,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":72.67732142857143,"syllables":88,"sentences":4,"score":0.8732267857142857},"multiplier":0.25,"relevance":0.8}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.92 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.92</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2163876575\" target=\"_blank\" rel=\"noopener\">The only other thing I can think of is just a more complex alter&hellip;</a></h6></td><td><details><summary>2.55</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 63&#13;  wordValue: 0.1&#13;  result: 2.55&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.92</td></tr></tbody></table></details>"},"EresDev":{"total":3.942,"userId":11886219,"comments":[{"id":2163882330,"content":"very well thought out. \r\nIf I am not mistaken, there is a solution in permit2 that combines the pros of your option 2 & 3 and mostly removes the cons of both.  It appears [permitWitnessTransferFrom](https://docs.uniswap.org/contracts/permit2/reference/signature-transfer#single-permitwitnesstransferfrom) allows you to lock the `SignatureTransferDetails` and the bounty hunter can't change the \"transfer to\" address.  I could be wrong because I haven't been able to fully understand and try it, probably will need some time to play with it to confirm. It also has a batch variation to combine multiple transfers [batch-permitWitnessTransferFrom](https://docs.uniswap.org/contracts/permit2/reference/signature-transfer#batch-permitwitnesstransferfrom) \r\nPersonally, even if I am right, I would still not go with this option or the option 2 or 3. The ability to change `SignatureTransferDetails` offers flexibility as it did in offering fiat visa/mastercard as a payment option. It will also help with upcoming [Gnosis Pay Integration](https://github.com/ubiquity/pay.ubq.fi/issues/228). And it keeps the door open for other opportunities.\r\nOption 1 & 4 are the simpler solutions and the change will not leak into other repositories. The option-4 will require a cron job setup but 1 will be easier to implement and something similar is already being considered in [Automatic Transfer](https://github.com/ubiquibot/permit-generation/issues/6) The cons of option-1 are not serious as the partner would be already aware of the fee. And by the time fee is deducted, partner would have received the value in return.","url":"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2163882330","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":3.942,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":3}},"result":3},"priority":3,"words":{"wordCount":220,"wordValue":0.1,"result":1.53},"readability":{"fleschKincaid":56.558636363636396,"syllables":338,"sentences":11,"score":0.965586363636364},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 3.942 XP ]</a>&nbsp;</h3><h6>@EresDev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>3.942</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2163882330\" target=\"_blank\" rel=\"noopener\">very well thought out. If I am not mistaken, there is a soluti&hellip;</a></h6></td><td><details><summary>4.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3&#13;regex:&#13;  wordCount: 220&#13;  wordValue: 0.1&#13;  result: 1.53&#13;</pre></details></td><td>0.9</td><td>3</td><td>3.942</td></tr></tbody></table></details>"},"molecula451":{"total":2.295,"userId":41552663,"comments":[{"id":2164229496,"content":"1. Direct transfers seems an option to me, we save time and cost in implementation and maybe implement some logs stuff to the DB to handle records etc, why no? seems to be the simplest, partners should be aware of which payment receiving from which whitelist address  and lastly the ideal would be\r\na combination of the 2-3 with some combination added from the 4","url":"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2164229496","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":2.295,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":1},"p":{"score":0,"elementCount":1}},"result":0.1},"priority":3,"words":{"wordCount":65,"wordValue":0.1,"result":2.56},"readability":{"fleschKincaid":52.804423076923115,"syllables":93,"sentences":2,"score":0.9280442307692311},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.295 XP ]</a>&nbsp;</h3><h6>@molecula451</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>2.295</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2164229496\" target=\"_blank\" rel=\"noopener\">1. Direct transfers seems an option to me, we save time and cost&hellip;</a></h6></td><td><details><summary>2.66</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0.1&#13;regex:&#13;  wordCount: 65&#13;  wordValue: 0.1&#13;  result: 2.56&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.295</td></tr></tbody></table></details>"},"0x4007":{"total":43.602,"userId":4975670,"comments":[{"id":2164236977,"content":"It is appealing to me if we can build infrastructure that helps with more objectives. \nTo be honest, many of these permit2 method details are beyond me. \nA suggestion is that we can do the \"lower security\" options, and then enforce that they do not tamper with the code by cutting off their service (kernel ignores their installation ID/organization) if they have an outstanding balance.   \n---\nDirect transfers always seemed the most straightforward to me though. Perhaps we can dynamically calculate the gas fee and withdraw the amount due, minus the gas cost. However, especially on mainnet, I am unsure what we would do if gas fees exceed our profit within a transaction. In these cases my mind jumps to \"roll up\" balances, leveraging something like the ERC20 allowance method; but that might be an off topic conversation for another time.","url":"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2164236977","commentType":"ISSUE_COLLABORATOR","score":{"reward":11.475,"formatting":{"content":{"h2":{"score":1,"elementCount":1},"p":{"score":0,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":141,"wordValue":0.1,"result":2.31},"readability":{"fleschKincaid":54.99000000000004,"syllables":219,"sentences":7,"score":0.9499000000000004},"multiplier":1,"relevance":0.9}},{"id":2168641462,"content":"This seems tricky because we need to securely prove to the partner signer that we are \"trading\" previously generated permits to create a new permit `D` that is the sum value of fee permits `A`, `B`, and `C`. \r\nI wonder if there is an opportunity here for NFTs to represent the debts. Then we can easily record from which signer (partner) owes the debt, and how much the debt is worth. Then we can have a smart contract that allows a user to deposit all the NFT debts, and withdraw the sum total all at once?\r\n```solidity\r\n    struct Debt {\r\n        address partner;\r\n        uint256 amount;\r\n        address beneficiary;\r\n    }\r\n```\r\nMinting the NFTs would likely only be viable on a network like Gnosis Chain, but it could remove the database dependency, which is nice. \r\n---\r\nOne other-slightly off topic-monetization method that should be kept in mind, and supported in the future: monthly recurring. For example, ideally, if we can enforce on chain that in order to add the bot to your organization at all, you need to pay $25 a month etc. \r\n- Freemium model (meaning monthly recurring) is a very popular model for consumers (individuals/early startups) to try out the system. \r\n- Usage-based-fees seem popular for businesses. \r\n- Annual billing + dedicated support seemingly seems popular for enterprise.\r\nI'm unsure if there is open source tech for this, but being able to manage this billing method entirely on-chain will be great for our bottom line.","url":"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2168641462","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.4,"formatting":{"content":{"p":{"score":0,"elementCount":8},"hr":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":3,"words":{"wordCount":230,"wordValue":0.1,"result":1.44},"readability":{"fleschKincaid":58.34444664031622,"syllables":346,"sentences":11,"score":0.9834444664031622},"multiplier":1,"relevance":0.8}},{"id":1666672297,"content":"What is this?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1666672297","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -113,6 +117,81 @@ export class PermitGenerationModule implements Module {\n     return result;\n   }\n \n+  /**\n+   * Applies fees to the final result.\n+   * How it works:\n+   * 1. Fee (read from ENV variable) is subtracted from all of the final result items (user.total, user.task.reward, user.comments[].reward)\n+   * 2. Total fee is calculated\n+   * 3. A new item is added to the final result object, example:\n+   * ```\n+   * {\n+   *   ...other items\n+   *   \"ubiquibot-treasury\": {\n+   *     total: 10.00,\n+   *     userId: 1\n+   *   }\n+   * }\n+   * ```\n+   * This method is meant to be called before the final permit generation.\n+   * @param result Result object\n+   * @param erc20RewardToken ERC20 address of the reward token\n+   * @returns Result object\n+   */\n+  async _applyFees(result: Result, erc20RewardToken: string): Promise<Result> {\n+    // validate fee related env variables\n+    if (!process.env.PERMIT_FEE_RATE) {\n+      console.log(\"PERMIT_FEE_RATE is not set, skipping permit fee generation\");\n+      return result;\n+    }\n+    if (!process.env.PERMIT_TREASURY_GITHUB_USERNAME) {\n+      console.log(\"PERMIT_TREASURY_GITHUB_USERNAME is not set, skipping permit fee generation\");","score":{"reward":0.138,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":1673594855,"content":"Consider using a big number library for any monetary calculations, same as they do in the crypto world in any dApps.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1673594855","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -110,6 +114,85 @@ export class PermitGenerationModule implements Module {\n         console.error(e);\n       }\n     }\n+\n+    // remove treasury item from final result in order not to display permit fee in github comments\n+    if (process.env.PERMIT_TREASURY_GITHUB_USERNAME) delete result[process.env.PERMIT_TREASURY_GITHUB_USERNAME];\n+\n+    return result;\n+  }\n+\n+  /**\n+   * Applies fees to the final result.\n+   * How it works:\n+   * 1. Fee (read from ENV variable) is subtracted from all of the final result items (user.total, user.task.reward, user.comments[].reward)\n+   * 2. Total fee is calculated\n+   * 3. A new item is added to the final result object, example:\n+   * ```\n+   * {\n+   *   ...other items\n+   *   \"ubiquibot-treasury\": {\n+   *     total: 10.00,\n+   *     userId: 1\n+   *   }\n+   * }\n+   * ```\n+   * This method is meant to be called before the final permit generation.\n+   * @param result Result object\n+   * @param erc20RewardToken ERC20 address of the reward token\n+   * @returns Result object\n+   */\n+  async _applyFees(result: Result, erc20RewardToken: string): Promise<Result> {\n+    // validate fee related env variables\n+    if (!process.env.PERMIT_FEE_RATE || +process.env.PERMIT_FEE_RATE === 0) {\n+      console.log(\"PERMIT_FEE_RATE is not set, skipping permit fee generation\");\n+      return result;\n+    }\n+    if (!process.env.PERMIT_TREASURY_GITHUB_USERNAME) {\n+      console.log(\"PERMIT_TREASURY_GITHUB_USERNAME is not set, skipping permit fee generation\");\n+      return result;\n+    }\n+    if (process.env.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST) {\n+      const erc20TokensNoFee = process.env.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST.split(\",\");\n+      if (erc20TokensNoFee.includes(erc20RewardToken)) {\n+        console.log(`Token address ${erc20RewardToken} is whitelisted to be fee free, skipping permit fee generation`);\n+        return result;\n+      }\n+    }\n+    \n+    // Get treasury github user id\n+    const octokit = getOctokitInstance();\n+    const { data: treasuryGithubData } = await octokit.users.getByUsername({ username: process.env.PERMIT_TREASURY_GITHUB_USERNAME });\n+    if (!treasuryGithubData) {\n+      console.log(`GitHub user was not found for username ${process.env.PERMIT_TREASURY_GITHUB_USERNAME}, skipping permit fee generation`);\n+      return result;\n+    }\n+\n+    // Subtract fees from the final result:\n+    // - user.total\n+    // - user.task.reward\n+    // - user.comments[].reward\n+    const feeRateDecimal = new Decimal(100).minus(process.env.PERMIT_FEE_RATE).div(100);\n+    let permitFeeAmountDecimal = new Decimal(0);\n+    for (const [_, rewardResult] of Object.entries(result)) {\n+      // accumulate total permit fee amount\n+      const totalAfterFee = +(new Decimal(rewardResult.total).mul(feeRateDecimal).toFixed(2));\n+      permitFeeAmountDecimal = permitFeeAmountDecimal.add(new Decimal(rewardResult.total).minus(totalAfterFee));\n+      // subtract fees\n+      rewardResult.total = +totalAfterFee.toFixed(2);\n+      if (rewardResult.task) rewardResult.task.reward = +(new Decimal(rewardResult.task.reward).mul(feeRateDecimal).toFixed(2));\n+      if (rewardResult.comments) {\n+        for (let comment of rewardResult.comments) {\n+          if (comment.score) comment.score.reward = +(new Decimal(comment.score.reward).mul(feeRateDecimal).toFixed(2));\n+        }\n+      }\n+    }\n+\n+    // Add a new result item for treasury\n+    result[process.env.PERMIT_TREASURY_GITHUB_USERNAME] = {\n+      total: +permitFeeAmountDecimal.toFixed(2),","score":{"reward":5.184,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":48.54857142857145,"syllables":34,"sentences":1,"score":0.8854857142857145},"multiplier":1,"relevance":0.9}},{"id":2210677609,"content":"Oh I see. If it simplifies the code then yeah it probably is the best approach.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#issuecomment-2210677609","commentType":"PULL_COLLABORATOR","score":{"reward":1.395,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":87.67750000000001,"syllables":21,"sentences":2,"score":0.7232249999999999},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2160494560,"effect":{"addition":122,"deletion":72},"reward":5.82,"priority":3},{"reviewId":2171215969,"effect":{"addition":430,"deletion":43},"reward":14.19,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 43.602 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>20.01</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>16.875</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>6.717</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43\" target=\"_blank\" rel=\"noopener\">#43</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+122 -72</td><td>3</td><td>5.82</td></tr><tr><td>+430 -43</td><td>3</td><td>14.19</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2164236977\" target=\"_blank\" rel=\"noopener\">It is appealing to me if we can build infrastructure that helps &hellip;</a></h6></td><td><details><summary>3.31</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 141&#13;  wordValue: 0.1&#13;  result: 2.31&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.475</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/16#issuecomment-2168641462\" target=\"_blank\" rel=\"noopener\">This seems tricky because we need to securely prove to the partn&hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 230&#13;  wordValue: 0.1&#13;  result: 1.44&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.4</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1666672297\" target=\"_blank\" rel=\"noopener\">What is this?</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.138</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1673594855\" target=\"_blank\" rel=\"noopener\">Consider using a big number library for any monetary calculation&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.184</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#issuecomment-2210677609\" target=\"_blank\" rel=\"noopener\">Oh I see. If it simplifies the code then yeah it probably is the&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.395</td></tr></tbody></table></details>"},"whilefoo":{"total":32.478,"userId":139262667,"comments":[{"id":2176251004,"content":"this looks good but I have another idea: \r\nhow about we add another variable `fee` (percentage) and `totalAfterFee`/`totalBeforeFee` and we leave other values unmodified? this way we can display a comment which includes information about the total reward, how much was the fee and total reward after the fee.\r\nThis would increase transparency so the user can clearly see how much the comments/task was worth and sees how much was the fee","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#pullrequestreview-2176251004","commentType":"PULL_COLLABORATOR","score":{"reward":8.568,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":71,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":57.700657276995315,"syllables":105,"sentences":3,"score":0.9770065727699532},"multiplier":1,"relevance":0.85}}],"reviewRewards":[{"reviews":[{"reviewId":2176251004,"effect":{"addition":638,"deletion":159},"reward":23.91,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 32.478 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>23.91</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>8.568</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43\" target=\"_blank\" rel=\"noopener\">#43</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+638 -159</td><td>3</td><td>23.91</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#pullrequestreview-2176251004\" target=\"_blank\" rel=\"noopener\">this looks good but I have another idea: how about we add anot&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 71&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.85</td><td>3</td><td>8.568</td></tr></tbody></table></details>"},"gentlementlegen":{"total":52.893,"userId":9807008,"comments":[{"id":1673545132,"content":"Any reason to only default this one?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1673545132","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -8,6 +8,9 @@ const envConfigSchema = Type.Object({\n   OPENAI_API_KEY: Type.String(),\n   NFT_MINTER_PRIVATE_KEY: Type.String({ default: \"\" }),\n   NFT_CONTRACT_ADDRESS: Type.String({ default: \"\" }),\n+  PERMIT_FEE_RATE: Type.String({ default: \"\" }),","score":{"reward":1.548,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":1,"relevance":0.6}},{"id":1673546600,"content":"I see a lot of `toFixed` in here, wouldn't it be interesting to apply the fix at the and of all the calculation to avoid too much precision loss?","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1673546600","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -110,6 +114,85 @@ export class PermitGenerationModule implements Module {\n         console.error(e);\n       }\n     }\n+\n+    // remove treasury item from final result in order not to display permit fee in github comments\n+    if (process.env.PERMIT_TREASURY_GITHUB_USERNAME) delete result[process.env.PERMIT_TREASURY_GITHUB_USERNAME];\n+\n+    return result;\n+  }\n+\n+  /**\n+   * Applies fees to the final result.\n+   * How it works:\n+   * 1. Fee (read from ENV variable) is subtracted from all of the final result items (user.total, user.task.reward, user.comments[].reward)\n+   * 2. Total fee is calculated\n+   * 3. A new item is added to the final result object, example:\n+   * ```\n+   * {\n+   *   ...other items\n+   *   \"ubiquibot-treasury\": {\n+   *     total: 10.00,\n+   *     userId: 1\n+   *   }\n+   * }\n+   * ```\n+   * This method is meant to be called before the final permit generation.\n+   * @param result Result object\n+   * @param erc20RewardToken ERC20 address of the reward token\n+   * @returns Result object\n+   */\n+  async _applyFees(result: Result, erc20RewardToken: string): Promise<Result> {\n+    // validate fee related env variables\n+    if (!process.env.PERMIT_FEE_RATE || +process.env.PERMIT_FEE_RATE === 0) {\n+      console.log(\"PERMIT_FEE_RATE is not set, skipping permit fee generation\");\n+      return result;\n+    }\n+    if (!process.env.PERMIT_TREASURY_GITHUB_USERNAME) {\n+      console.log(\"PERMIT_TREASURY_GITHUB_USERNAME is not set, skipping permit fee generation\");\n+      return result;\n+    }\n+    if (process.env.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST) {\n+      const erc20TokensNoFee = process.env.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST.split(\",\");\n+      if (erc20TokensNoFee.includes(erc20RewardToken)) {\n+        console.log(`Token address ${erc20RewardToken} is whitelisted to be fee free, skipping permit fee generation`);\n+        return result;\n+      }\n+    }\n+    \n+    // Get treasury github user id\n+    const octokit = getOctokitInstance();\n+    const { data: treasuryGithubData } = await octokit.users.getByUsername({ username: process.env.PERMIT_TREASURY_GITHUB_USERNAME });\n+    if (!treasuryGithubData) {\n+      console.log(`GitHub user was not found for username ${process.env.PERMIT_TREASURY_GITHUB_USERNAME}, skipping permit fee generation`);\n+      return result;\n+    }\n+\n+    // Subtract fees from the final result:\n+    // - user.total\n+    // - user.task.reward\n+    // - user.comments[].reward\n+    const feeRateDecimal = new Decimal(100).minus(process.env.PERMIT_FEE_RATE).div(100);\n+    let permitFeeAmountDecimal = new Decimal(0);\n+    for (const [_, rewardResult] of Object.entries(result)) {\n+      // accumulate total permit fee amount\n+      const totalAfterFee = +(new Decimal(rewardResult.total).mul(feeRateDecimal).toFixed(2));\n+      permitFeeAmountDecimal = permitFeeAmountDecimal.add(new Decimal(rewardResult.total).minus(totalAfterFee));\n+      // subtract fees\n+      rewardResult.total = +totalAfterFee.toFixed(2);\n+      if (rewardResult.task) rewardResult.task.reward = +(new Decimal(rewardResult.task.reward).mul(feeRateDecimal).toFixed(2));\n+      if (rewardResult.comments) {\n+        for (let comment of rewardResult.comments) {\n+          if (comment.score) comment.score.reward = +(new Decimal(comment.score.reward).mul(feeRateDecimal).toFixed(2));\n+        }\n+      }\n+    }\n+\n+    // Add a new result item for treasury\n+    result[process.env.PERMIT_TREASURY_GITHUB_USERNAME] = {\n+      total: +permitFeeAmountDecimal.toFixed(2),","score":{"reward":5.712,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":63.62758620689657,"syllables":39,"sentences":1,"score":0.9637241379310343},"multiplier":1,"relevance":0.8}},{"id":1673579582,"content":"You should not need to modify the `total` as it gets aggregated at the end of the run\r\nhttps://github.com/ubiquibot/conversation-rewards/blob/7a5ba729373d5ba1a63f2012300693f708fd6ed0/src/parser/processor.ts#L43","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1673579582","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -110,6 +114,85 @@ export class PermitGenerationModule implements Module {\n         console.error(e);\n       }\n     }\n+\n+    // remove treasury item from final result in order not to display permit fee in github comments\n+    if (process.env.PERMIT_TREASURY_GITHUB_USERNAME) delete result[process.env.PERMIT_TREASURY_GITHUB_USERNAME];\n+\n+    return result;\n+  }\n+\n+  /**\n+   * Applies fees to the final result.\n+   * How it works:\n+   * 1. Fee (read from ENV variable) is subtracted from all of the final result items (user.total, user.task.reward, user.comments[].reward)\n+   * 2. Total fee is calculated\n+   * 3. A new item is added to the final result object, example:\n+   * ```\n+   * {\n+   *   ...other items\n+   *   \"ubiquibot-treasury\": {\n+   *     total: 10.00,\n+   *     userId: 1\n+   *   }\n+   * }\n+   * ```\n+   * This method is meant to be called before the final permit generation.\n+   * @param result Result object\n+   * @param erc20RewardToken ERC20 address of the reward token\n+   * @returns Result object\n+   */\n+  async _applyFees(result: Result, erc20RewardToken: string): Promise<Result> {\n+    // validate fee related env variables\n+    if (!process.env.PERMIT_FEE_RATE || +process.env.PERMIT_FEE_RATE === 0) {\n+      console.log(\"PERMIT_FEE_RATE is not set, skipping permit fee generation\");\n+      return result;\n+    }\n+    if (!process.env.PERMIT_TREASURY_GITHUB_USERNAME) {\n+      console.log(\"PERMIT_TREASURY_GITHUB_USERNAME is not set, skipping permit fee generation\");\n+      return result;\n+    }\n+    if (process.env.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST) {\n+      const erc20TokensNoFee = process.env.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST.split(\",\");\n+      if (erc20TokensNoFee.includes(erc20RewardToken)) {\n+        console.log(`Token address ${erc20RewardToken} is whitelisted to be fee free, skipping permit fee generation`);\n+        return result;\n+      }\n+    }\n+    \n+    // Get treasury github user id\n+    const octokit = getOctokitInstance();\n+    const { data: treasuryGithubData } = await octokit.users.getByUsername({ username: process.env.PERMIT_TREASURY_GITHUB_USERNAME });\n+    if (!treasuryGithubData) {\n+      console.log(`GitHub user was not found for username ${process.env.PERMIT_TREASURY_GITHUB_USERNAME}, skipping permit fee generation`);\n+      return result;\n+    }\n+\n+    // Subtract fees from the final result:\n+    // - user.total\n+    // - user.task.reward\n+    // - user.comments[].reward\n+    const feeRateDecimal = new Decimal(100).minus(process.env.PERMIT_FEE_RATE).div(100);\n+    let permitFeeAmountDecimal = new Decimal(0);\n+    for (const [_, rewardResult] of Object.entries(result)) {\n+      // accumulate total permit fee amount\n+      const totalAfterFee = +(new Decimal(rewardResult.total).mul(feeRateDecimal).toFixed(2));\n+      permitFeeAmountDecimal = permitFeeAmountDecimal.add(new Decimal(rewardResult.total).minus(totalAfterFee));\n+      // subtract fees\n+      rewardResult.total = +totalAfterFee.toFixed(2);","score":{"reward":8.127,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":58.505000000000024,"syllables":49,"sentences":3,"score":0.9850500000000002},"multiplier":1,"relevance":0.9}},{"id":1675588168,"content":"Ha good catch. Might want to change the workflow later on maybe to avoid computing it twice to avoid errors.","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1675588168","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -110,6 +114,85 @@ export class PermitGenerationModule implements Module {\n         console.error(e);\n       }\n     }\n+\n+    // remove treasury item from final result in order not to display permit fee in github comments\n+    if (process.env.PERMIT_TREASURY_GITHUB_USERNAME) delete result[process.env.PERMIT_TREASURY_GITHUB_USERNAME];\n+\n+    return result;\n+  }\n+\n+  /**\n+   * Applies fees to the final result.\n+   * How it works:\n+   * 1. Fee (read from ENV variable) is subtracted from all of the final result items (user.total, user.task.reward, user.comments[].reward)\n+   * 2. Total fee is calculated\n+   * 3. A new item is added to the final result object, example:\n+   * ```\n+   * {\n+   *   ...other items\n+   *   \"ubiquibot-treasury\": {\n+   *     total: 10.00,\n+   *     userId: 1\n+   *   }\n+   * }\n+   * ```\n+   * This method is meant to be called before the final permit generation.\n+   * @param result Result object\n+   * @param erc20RewardToken ERC20 address of the reward token\n+   * @returns Result object\n+   */\n+  async _applyFees(result: Result, erc20RewardToken: string): Promise<Result> {\n+    // validate fee related env variables\n+    if (!process.env.PERMIT_FEE_RATE || +process.env.PERMIT_FEE_RATE === 0) {\n+      console.log(\"PERMIT_FEE_RATE is not set, skipping permit fee generation\");\n+      return result;\n+    }\n+    if (!process.env.PERMIT_TREASURY_GITHUB_USERNAME) {\n+      console.log(\"PERMIT_TREASURY_GITHUB_USERNAME is not set, skipping permit fee generation\");\n+      return result;\n+    }\n+    if (process.env.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST) {\n+      const erc20TokensNoFee = process.env.PERMIT_ERC20_TOKENS_NO_FEE_WHITELIST.split(\",\");\n+      if (erc20TokensNoFee.includes(erc20RewardToken)) {\n+        console.log(`Token address ${erc20RewardToken} is whitelisted to be fee free, skipping permit fee generation`);\n+        return result;\n+      }\n+    }\n+    \n+    // Get treasury github user id\n+    const octokit = getOctokitInstance();\n+    const { data: treasuryGithubData } = await octokit.users.getByUsername({ username: process.env.PERMIT_TREASURY_GITHUB_USERNAME });\n+    if (!treasuryGithubData) {\n+      console.log(`GitHub user was not found for username ${process.env.PERMIT_TREASURY_GITHUB_USERNAME}, skipping permit fee generation`);\n+      return result;\n+    }\n+\n+    // Subtract fees from the final result:\n+    // - user.total\n+    // - user.task.reward\n+    // - user.comments[].reward\n+    const feeRateDecimal = new Decimal(100).minus(process.env.PERMIT_FEE_RATE).div(100);\n+    let permitFeeAmountDecimal = new Decimal(0);\n+    for (const [_, rewardResult] of Object.entries(result)) {\n+      // accumulate total permit fee amount\n+      const totalAfterFee = +(new Decimal(rewardResult.total).mul(feeRateDecimal).toFixed(2));\n+      permitFeeAmountDecimal = permitFeeAmountDecimal.add(new Decimal(rewardResult.total).minus(totalAfterFee));\n+      // subtract fees\n+      rewardResult.total = +totalAfterFee.toFixed(2);","score":{"reward":1.638,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":82.47500000000001,"syllables":27,"sentences":2,"score":0.7752499999999999},"multiplier":1,"relevance":0.3}},{"id":2221908812,"content":"@rndquu When the Jest runs, since it's a fork, it doesn't have access to secrets: https://github.com/ubiquibot/conversation-rewards/actions/runs/9872254093/job/27262322258?pr=43#step:1:32\r\nTo fix this, two solutions:\r\n- mock supabase module entirely\r\n- give dummy values and intercept the requests with `msw`","url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#issuecomment-2221908812","commentType":"PULL_COLLABORATOR","score":{"reward":11.178,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1.2},"priority":3,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":63.01833333333336,"syllables":75,"sentences":3,"score":0.9698166666666664},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2171135816,"effect":{"addition":546,"deletion":109},"reward":19.65,"priority":3},{"reviewId":2176803618,"effect":{"addition":105,"deletion":63},"reward":5.04,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 52.893 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>24.69</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>28.203</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43\" target=\"_blank\" rel=\"noopener\">#43</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+546 -109</td><td>3</td><td>19.65</td></tr><tr><td>+105 -63</td><td>3</td><td>5.04</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1673545132\" target=\"_blank\" rel=\"noopener\">Any reason to only default this one?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.548</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1673546600\" target=\"_blank\" rel=\"noopener\">I see a lot of &#96;toFixed&#96; in here, wouldn't it be interes&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.712</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1673579582\" target=\"_blank\" rel=\"noopener\">You should not need to modify the &#96;total&#96; as it gets agg&hellip;</a></h6></td><td><details><summary>2.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.127</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#discussion_r1675588168\" target=\"_blank\" rel=\"noopener\">Ha good catch. Might want to change the workflow later on maybe &hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.638</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/43#issuecomment-2221908812\" target=\"_blank\" rel=\"noopener\">@rndquu When the Jest runs, since it's a fork, it doesn't have a&hellip;</a></h6></td><td><details><summary>3.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.2&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.178</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_permit-generation_12.json","json":{"gitcoindev":{"userId":88761781,"total":404.62,"task":{"reward":400,"multiplier":1},"comments":[{"id":2056498153,"content":"I did a research on this today. Starting from where and why it happens to how to solve:\r\n1. The root cause for late limit is that number of queued calls for JsonRPCProvider used crosses the 500 calls in the queue limit.\r\n2. The actual rate limit error from the `permit-generation` RPC provider was thrown by Nethermind client \r\nhttps://github.com/NethermindEth/nethermind/blob/489f3277eddfba5b514d2c7779094b6981ec629e/src/Nethermind/Nethermind.JsonRpc/Modules/BoundedModulePool.cs#L34\r\nwhich is set to 500 calls as a default on the client side:\r\nhttps://github.com/NethermindEth/nethermind/blob/489f3277eddfba5b514d2c7779094b6981ec629e/src/Nethermind/Nethermind.Init/Steps/RegisterRpcModules.cs#L113\r\nhttps://github.com/NethermindEth/nethermind/blob/489f3277eddfba5b514d2c7779094b6981ec629e/src/Nethermind/Nethermind.JsonRpc/JsonRpcConfig.cs#L18\r\nOne of the ways to circumvent this is to use ethers module throttling feature, but as discovered in the ethers implementation, kicks in *only* if the `429` error code is returned in the response header, see:\r\nhttps://github.com/ethers-io/ethers.js/commit/7d435453039f009b339d835ddee47e35a843711b\r\nand `if (response.statusCode === 429 && attempt < attemptLimit)`\r\n3. Since different providers may use different error codes (Nethermind returned -32005 error) and different rate limits, I propose to use https://github.com/ubiquity/rpc-handler which is able to return the fastest provider and array of available providers for a given network. \r\nWe can use the current provider as a default. If rate limit is reached, use rpc-handler to try next fastest provider from the list.\r\nI can experiment, first try to reproduce and error on a fork or using a test and submit a fix today / tomorrow.","url":"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2056498153","commentType":"ISSUE_ASSIGNEE","score":{"reward":4.62,"formatting":{"content":{"p":{"score":0,"elementCount":12},"ol":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":3},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":5}},"result":5.3},"priority":2,"words":{"wordCount":188,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":57.27293634727849,"syllables":396,"sentences":18,"score":0.9727293634727849},"multiplier":0.25,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 404.62 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>400</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>4.62</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2056498153\" target=\"_blank\" rel=\"noopener\">I did a research on this today. Starting from where and why it h&hellip;</a></h6></td><td><details><summary>7.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 12&#13;    ol:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 5&#13;  result: 5.3&#13;regex:&#13;  wordCount: 188&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>1</td><td>2</td><td>4.62</td></tr></tbody></table></details>"},"gentlementlegen":{"total":14.278,"userId":9807008,"comments":[{"id":2049162463,"content":"Since this repo should be soon deprecated, do you want a fix here? I guess this problem is also relevant to the new system as well.","url":"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2049162463","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.996,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":83.0092307692308,"syllables":34,"sentences":2,"score":0.7699076923076921},"multiplier":1,"relevance":0.7}},{"id":2056625384,"content":"@gitcoindev nop just did some research but no work done, all yours!","url":"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2056625384","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.512,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":88.905,"syllables":15,"sentences":1,"score":0.71095},"multiplier":1,"relevance":0.6}},{"id":2068410743,"content":"@gitcoindev thanks for your research. While this works, it really depends on the endpoint for the duration you have to wait until the next call is successful. I had cases where it was seconds, and other where it was minutes. Benefits of switching RPC is to have it available right away. Would this make the implementation way more complex?","url":"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2068410743","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.724,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":59,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":71.54274576271189,"syllables":86,"sentences":5,"score":0.8845725423728811},"multiplier":1,"relevance":0.9}},{"id":2072688086,"content":"I am fine with the code itself, but would love some associated tests with it because it is actually not easy to setup to see if it works properly.","url":"https://github.com/ubiquibot/comment-incentives/pull/35#issuecomment-2072688086","commentType":"PULL_COLLABORATOR","score":{"reward":4.046,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":63.62758620689657,"syllables":39,"sentences":1,"score":0.9637241379310343},"multiplier":1,"relevance":0.85}}],"reviewRewards":[{"url":"https://github.com/ubiquibot/comment-incentives/pull/35"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 14.278 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>3</td><td>10.232</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>4.046</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2049162463\" target=\"_blank\" rel=\"noopener\">Since this repo should be soon deprecated, do you want a fix her&hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.996</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2056625384\" target=\"_blank\" rel=\"noopener\">@gitcoindev nop just did some research but no work done, all you&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.6</td><td>2</td><td>1.512</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2068410743\" target=\"_blank\" rel=\"noopener\">@gitcoindev thanks for your research. While this works, it reall&hellip;</a></h6></td><td><details><summary>2.51</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 59&#13;  wordValue: 0.1&#13;  result: 2.51&#13;</pre></details></td><td>0.9</td><td>2</td><td>5.724</td></tr><tr><td><h6><a href=\"https://github.com/ubiquibot/comment-incentives/pull/35#issuecomment-2072688086\" target=\"_blank\" rel=\"noopener\">I am fine with the code itself, but would love some associated t&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.85</td><td>2</td><td>4.046</td></tr></tbody></table></details>"},"0x4007":{"total":11.718,"userId":4975670,"comments":[{"id":2053554285,"content":"Yeah research and implementation should be handled wherever possible and can be ported easily later if needed.","url":"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2053554285","commentType":"ISSUE_AUTHOR","score":{"reward":2.656,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":45.26235294117649,"syllables":29,"sentences":1,"score":0.8526235294117649},"multiplier":1,"relevance":0.8}},{"id":2068426438,"content":"Good research but I'm always skeptical of \"time based\" solutions compared to \"event based\"\nWhat @gentlementlegen mentions is an example of why this solution might not be the best approach.","url":"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2068426438","commentType":"ISSUE_AUTHOR","score":{"reward":4.302,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":41.64741935483872,"syllables":49,"sentences":1,"score":0.8164741935483871},"multiplier":1,"relevance":0.9}},{"id":2233699079,"content":"We got rate limited https://github.com/ubiquibot/comment-incentives/actions/runs/8617933701/job/23619113189\r\nSeems like this can be a problem as we pick up on activity in our network.\r\n_Originally posted by @0x4007 in https://github.com/ubiquibot/permit-generation/issues/5#issuecomment-2045442568_","url":"https://github.com/ubiquity-os/permit-generation/issues/12","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.76,"formatting":{"content":{"p":{"score":0,"elementCount":3},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":55.38858695652178,"syllables":76,"sentences":4,"score":0.9538858695652178},"multiplier":1,"relevance":1}}],"reviewRewards":[{"url":"https://github.com/ubiquibot/comment-incentives/pull/35"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 11.718 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.76</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>6.958</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/12\" target=\"_blank\" rel=\"noopener\">We got rate limited https://github.com/ubiquibot/comment-incenti&hellip;</a></h6></td><td><details><summary>3.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>1</td><td>1</td><td>4.76</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2053554285\" target=\"_blank\" rel=\"noopener\">Yeah research and implementation should be handled wherever poss&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.656</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2068426438\" target=\"_blank\" rel=\"noopener\">Good research but I'm always skeptical of \"time based\" solutions&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.9</td><td>2</td><td>4.302</td></tr></tbody></table></details>"},"Keyrxng":{"total":2.808,"userId":106303466,"comments":[{"id":2066147225,"content":"1. https://www.npmjs.com/package/@keyrxng/rpc-handler (I've published the polymorphic pkg already under my name, maybe that'll respond better for you) but yeah the updated package is better\r\n2. a server-side integration I have not done yet no, closest is the test cases. I noticed in the feeble stress tests I done that first touch was always far slower/error prone than subsequent touches. I assume you are being rate limited after a few successful calls to a particular RPC or is it erroneously returning a provider which cannot be called in the first place?\r\n3. This is implemented in the upgrade already yeah (I click test multiple times which is why they are changing)\r\n</hr>\r\nhttps://github.com/ubiquibot/permit-generation/assets/106303466/8aab5a24-689d-470b-ab73-3dcce3f736ed","url":"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2066147225","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":2.808,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3},"p":{"score":0,"elementCount":5},"a":{"score":1,"elementCount":2}},"result":2.3},"priority":2,"words":{"wordCount":111,"wordValue":0.1,"result":2.55},"readability":{"fleschKincaid":63.99954545454548,"syllables":193,"sentences":7,"score":0.9600045454545452},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[{"url":"https://github.com/ubiquibot/comment-incentives/pull/35"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 2.808 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>2.808</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/permit-generation/issues/12#issuecomment-2066147225\" target=\"_blank\" rel=\"noopener\">1. https://www.npmjs.com/package/@keyrxng/rpc-handler (I've publ&hellip;</a></h6></td><td><details><summary>4.85</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.3&#13;regex:&#13;  wordCount: 111&#13;  wordValue: 0.1&#13;  result: 2.55&#13;</pre></details></td><td>0.9</td><td>2</td><td>2.808</td></tr></tbody></table></details>"},"molecula451":{"total":3.672,"userId":41552663,"comments":[{"id":2015365994,"content":"Approving looks good","url":"https://github.com/ubiquibot/comment-incentives/pull/35#pullrequestreview-2015365994","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.088,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":62.79000000000002,"syllables":5,"sentences":1,"score":0.9720999999999997},"multiplier":0.25,"relevance":0.4}},{"id":2072620249,"content":"you reviewing here @gentlementlegen ?","url":"https://github.com/ubiquibot/comment-incentives/pull/35#issuecomment-2072620249","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.022,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":-8.724999999999994,"syllables":10,"sentences":1,"score":0},"multiplier":0.25,"relevance":0.1}},{"id":2072721534,"content":"i think you can handle it @gitcoindev ?","url":"https://github.com/ubiquibot/comment-incentives/pull/35#issuecomment-2072721534","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.042,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":78.87285714285717,"syllables":10,"sentences":1,"score":0.8112714285714283},"multiplier":0.25,"relevance":0.1}},{"id":2073086730,"content":"mergin, it looks like @gitcoindev handle tests, https://github.com/ubiquibot/permit-generation/issues/12#issuecomment-2068181273 at the comment, this can be imported later on another PR","url":"https://github.com/ubiquibot/comment-incentives/pull/35#issuecomment-2073086730","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.9,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":44.57500000000002,"syllables":49,"sentences":2,"score":0.8457500000000002},"multiplier":0.25,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2015365994,"effect":{"addition":86,"deletion":45},"reward":2.62,"priority":2}],"url":"https://github.com/ubiquibot/comment-incentives/pull/35"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 3.672 XP ]</a>&nbsp;</h3><h6>@molecula451</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>2.62</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>1.052</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquibot/comment-incentives/pull/35\" target=\"_blank\" rel=\"noopener\">#35</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+86 -45</td><td>2</td><td>2.62</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquibot/comment-incentives/pull/35#pullrequestreview-2015365994\" target=\"_blank\" rel=\"noopener\">Approving looks good</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.4</td><td>2</td><td>0.088</td></tr><tr><td><h6><a href=\"https://github.com/ubiquibot/comment-incentives/pull/35#issuecomment-2072620249\" target=\"_blank\" rel=\"noopener\">you reviewing here @gentlementlegen ?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.022</td></tr><tr><td><h6><a href=\"https://github.com/ubiquibot/comment-incentives/pull/35#issuecomment-2072721534\" target=\"_blank\" rel=\"noopener\">i think you can handle it @gitcoindev ?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.042</td></tr><tr><td><h6><a href=\"https://github.com/ubiquibot/comment-incentives/pull/35#issuecomment-2073086730\" target=\"_blank\" rel=\"noopener\">mergin, it looks like @gitcoindev handle tests, https://github.c&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.6</td><td>2</td><td>0.9</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_29.json","json":{"Keyrxng":{"userId":106303466,"total":200.612,"task":{"reward":200,"multiplier":1},"comments":[{"id":2225292028,"content":"Is this to replace `/ask` or is this a new plugin entirely @0x4007?\r\nI refactored the old `/ask` plugin to V2 standards (slightly outdated again now). Can I refactor it to meet this spec or would you prefer another standalone?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2225292028","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.612,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":67.07833333333336,"syllables":57,"sentences":3,"score":0.9292166666666664},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 200.612 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>200</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.612</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2225292028\" target=\"_blank\" rel=\"noopener\">Is this to replace &#96;/ask&#96; or is this a new plugin entire&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.9</td><td>1</td><td>0.612</td></tr></tbody></table></details>"},"0x4007":{"total":74.132,"userId":4975670,"comments":[{"id":2225294388,"content":"Seems easier to redo we have a ton of new functions to borrow like how we authenticate and collect the comment data is totally different from the old version and new version.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2225294388","commentType":"ISSUE_AUTHOR","score":{"reward":1.968,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":47.45500000000003,"syllables":48,"sentences":1,"score":0.8745500000000003},"multiplier":1,"relevance":0.8}},{"id":2340242913,"content":"It's been two months since the last activity on that pull so it seems fine, except that it should've closed the pull","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2340242913","commentType":"ISSUE_AUTHOR","score":{"reward":0.816,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":83.77500000000002,"syllables":28,"sentences":1,"score":0.7622499999999998},"multiplier":1,"relevance":0.4}},{"id":2402769945,"content":"# Overview\r\n- Similar to an old proposal for `/ask`.\r\n- The goal is to ask a context-aware question.\r\n- Feed the entire conversation context into ChatGPT4o.\r\n- Include any linked pull requests or issues and their entire conversation context.\r\n- Prioritize the issue specification to set the topic, then add comments.\r\n- Simplify comments by showing the username prepending the comment.\r\n- Divide conversations in the prompt using headers and footers.\r\n# Prompt Template\r\n**=== Start Project Specification === ubiquibot/plugins-wishlist #[Issue Number] ===**\r\n```\r\n[GitHub issue specification body]\r\n```\r\n**=== End Project Specification ===**\r\n**=== Start Issue Conversation === ubiquibot/plugins-wishlist #[Issue Number] ===**\r\n```\r\n[Comment ID] [Username]: [Comment]\r\n[Comment ID] [Username]: [Comment]\r\n...\r\n```\r\n**=== End Issue Conversation ===**\r\n**=== Start Linked Pull Request Conversation === ubiquibot/plugins-wishlist #[Pull Request Number] ===**\r\n```\r\n[Comment ID] [Username]: [Comment]\r\n[Comment ID] [Username]: [Comment]\r\n...\r\n```\r\n**=== End Linked Pull Request Conversation ===**\r\n**=== Start Linked Pull Request Code Diff === ubiquibot/plugins-wishlist #[Pull Request Number] ===**\r\n```diff\r\n- [Old Code]\r\n+ [New Code]\r\n```\r\n**=== End Linked Pull Request Code Diff ===**\r\n# Example\r\n**=== Start Project Specification === ubiquibot/plugins-wishlist #29 ===**\r\n```\r\nAdd a new feature to support XYZ plugins.\r\n```\r\n**=== End Project Specification ===**\r\n**=== Start Issue Conversation === ubiquibot/plugins-wishlist #29 ===**\r\n```\r\n2222517181 0x4007: We should consider adding support for plugins to enhance functionality.\r\n2222517182 rndquu: I agree, this would be beneficial.\r\n2222517184 gentlementlegen: Do we have any specific plugins in mind?\r\n```\r\n**=== End Issue Conversation ===**\r\n**=== Start Linked Pull Request Conversation === ubiquibot/plugins-wishlist #30 ===**\r\n```\r\n2222517187 devuser1: Implemented basic support for plugins.\r\n2222517189 devuser2: This looks good, but needs more testing.\r\n```\r\n**=== End Linked Pull Request Conversation ===**\r\n**=== Start Linked Pull Request Code Diff === ubiquibot/plugins-wishlist #30 ===**\r\n```diff\r\n- // insert log\r\n+ console.log(\"test\");\r\n```\r\n**=== End Linked Pull Request Code Diff ===**\r\n# Notes\r\n- Include the org/repo/issue to help ChatGPT understand references to other issues/pulls.\r\n- Annotate comments with their IDs so that ChatGPT can produce outputs with links to other comments for references.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/29","commentType":"ISSUE_SPECIFICATION","score":{"reward":9.56,"formatting":{"content":{"h1":{"score":1,"elementCount":4},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":9},"p":{"score":0,"elementCount":25}},"result":4.9},"priority":1,"words":{"wordCount":100,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":51.73722222222224,"syllables":170,"sentences":9,"score":0.9173722222222225},"multiplier":1,"relevance":1}},{"id":1676753876,"content":"```suggestion\nname: \"command-gpt\"\n```","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676753876","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,4 +1,4 @@\n-name: \"the name of the plugin\"\n+name: \"ubiquibot-gpt-command\"","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":1,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1676754128,"content":"Definitely just ignore all bot comments as we do in conversation rewards.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754128","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,239 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../types\";\n+import { fetchIssue, fetchIssueComments, getLinkedIssueContextFromComments, idIssueFromComment } from \"../utils/issue\";\n+import { IssueComments } from \"../types/github\";\n+import { StreamlinedComment } from \"../types/gpt\";\n+import { createChatHistory, formatChatHistory } from \"../utils/format-chat-history\";\n+import { addCommentToIssue } from \"./add-comment\";\n+\n+export async function askQuestion(context: Context, question: string) {\n+  const {\n+    logger,\n+    payload: { issue: currentIssue },\n+  } = context;\n+\n+  if (!question) {\n+    logger.error(`No question provided`);\n+    await addCommentToIssue(context, \"No question provided\", true, \"error\");\n+    return;\n+  }\n+\n+  const { body: issueSpecOrPullBody, repository_url } = currentIssue;\n+  const org = repository_url.split(\"/\")[4];\n+\n+  const { specReferencedIssueBody, specReferencedIssueKey, streamlinedSpecReferencedIssueComments } = await getSpecReferencedContext(\n+    context,\n+    org,\n+    issueSpecOrPullBody\n+  );\n+\n+  const issueComments = await fetchIssueComments({ context });\n+  const linkedIssueContext = await getLinkedIssueContextFromComments(context, issueComments);\n+  const { linkedIssues, linkedIssueComments } = linkedIssueContext;\n+\n+  // we are only going one level deep with the linked issue context fetching\n+  for (const issue of linkedIssues) {\n+    const fetched = await fetchIssueComments({ context, issueNum: issue.issueNumber, repo: issue.repo });\n+    linkedIssueComments.push(...fetched);\n+  }\n+\n+  const streamlinedComments = await getAllStreamlinedComments(issueComments, streamlinedSpecReferencedIssueComments, linkedIssueComments);\n+  const { linkedPulls, specAndBodies } = await getSpecBodiesAndLinkedPulls(\n+    context,\n+    repository_url,\n+    currentIssue.number,\n+    issueSpecOrPullBody,\n+    specReferencedIssueBody,\n+    specReferencedIssueKey,\n+    linkedIssues\n+  );\n+  const formattedChat = formatChatHistory(context, streamlinedComments, specAndBodies, linkedPulls);\n+\n+  return await askGpt(context, formattedChat);\n+}\n+\n+async function getAllStreamlinedComments(\n+  issueComments: IssueComments,\n+  streamlinedSpecReferencedIssueComments: Record<string, StreamlinedComment[]> | undefined,\n+  linkedIssueComments: IssueComments\n+) {\n+  const streamlinedComments = streamlineComments(issueComments) ?? {};\n+\n+  if (streamlinedSpecReferencedIssueComments && Object.keys(streamlinedSpecReferencedIssueComments).length > 0) {\n+    for (const [key, value] of Object.entries(streamlinedSpecReferencedIssueComments)) {\n+      if (!streamlinedComments[key]) {\n+        streamlinedComments[key] = value;\n+        continue;\n+      }\n+\n+      const previous = streamlinedComments[key] || [];\n+      streamlinedComments[key] = [...previous, ...value];\n+    }\n+  }\n+\n+  if (linkedIssueComments.length > 0) {\n+    const linkedStreamlinedComments = streamlineComments(linkedIssueComments);\n+\n+    if (linkedStreamlinedComments) {\n+      for (const [key, value] of Object.entries(linkedStreamlinedComments)) {\n+        if (!streamlinedComments[key]) {\n+          streamlinedComments[key] = value;\n+          continue;\n+        }\n+\n+        const previous = streamlinedComments[key] || [];\n+        streamlinedComments[key] = [...previous, ...value];\n+      }\n+    }\n+  }\n+\n+  return streamlinedComments;\n+}\n+\n+async function getSpecBodiesAndLinkedPulls(\n+  context: Context,\n+  currentIssueUrl: string,\n+  currentIssueNumber: number,\n+  issueSpecOrPullBody: string | null,\n+  specReferencedIssueBody: string | null | undefined,\n+  specReferencedIssueKey: string | null | undefined,\n+  linkedIssues: { issueNumber: number; repo: string }[]\n+) {\n+  const linkedPulls: Record<string, boolean> = {};\n+  const currentIssueKey = createKey(currentIssueUrl, currentIssueNumber);\n+  // collect specifically all of the spec and PR bodies\n+  const specAndBodies: Record<string, string> = {};\n+  specAndBodies[currentIssueKey] = issueSpecOrPullBody || \"\";\n+  specAndBodies[specReferencedIssueKey as string] = specReferencedIssueBody || \"\";\n+\n+  for (const linkedIssue of linkedIssues) {\n+    const issue = await fetchIssue({ context, issueNum: linkedIssue.issueNumber, repo: linkedIssue.repo });\n+    const { body, repository_url, pull_request } = issue;\n+    const linkedIssueKey = createKey(repository_url, linkedIssue.issueNumber);\n+    specAndBodies[linkedIssueKey] = body || \"\";\n+\n+    if (pull_request) {\n+      linkedPulls[linkedIssueKey] = true;\n+    }\n+  }\n+\n+  return { specAndBodies, linkedPulls };\n+}\n+\n+async function getSpecReferencedContext(context: Context, org: string, issueSpecOrPullBody: string | null) {\n+  // fetch the spec referenced issue if it exists\n+  const specReferencedIssueId = idIssueFromComment(org, issueSpecOrPullBody);\n+  let specReferencedIssue,\n+    specReferencedIssueBody,\n+    specReferencedIssueRepoUrl,\n+    specReferencedIssueComments,\n+    specReferencedIssueKey,\n+    streamlinedSpecReferencedIssueComments;\n+\n+  if (specReferencedIssueId) {\n+    specReferencedIssue = await fetchIssue({ context, issueNum: specReferencedIssueId.issueNumber });\n+    specReferencedIssueBody = specReferencedIssue.body;\n+    specReferencedIssueRepoUrl = specReferencedIssue.repository_url;\n+    specReferencedIssueComments = await fetchIssueComments({ context, issueNum: specReferencedIssueId.issueNumber, repo: specReferencedIssueId.repo });\n+    specReferencedIssueKey = createKey(specReferencedIssueRepoUrl, specReferencedIssueId?.issueNumber);\n+    streamlinedSpecReferencedIssueComments = streamlineComments(specReferencedIssueComments) ?? {};\n+  }\n+\n+  return {\n+    specReferencedIssue,\n+    specReferencedIssueBody,\n+    specReferencedIssueRepoUrl,\n+    specReferencedIssueComments,\n+    specReferencedIssueKey,\n+    streamlinedSpecReferencedIssueComments,\n+  };\n+}\n+\n+function createKey(issueUrl: string, issue?: number) {\n+  const splitUrl = issueUrl?.split(\"/\");\n+  const issueNumber = issue || parseInt(splitUrl?.pop() || \"\");\n+  const issueRepo = splitUrl?.slice(-2).join(\"/\");\n+  const issueOrg = splitUrl?.slice(-3, -2).join(\"/\");\n+\n+  if (issueOrg.startsWith(\"repos\")) {\n+    return `${issueRepo}/issues/${issueNumber}`;\n+  }\n+\n+  return `${issueOrg}/${issueRepo}/${issueNumber}`;\n+}\n+\n+function streamlineComments(comments: IssueComments) {\n+  const streamlined: Record<string, StreamlinedComment[]> = {};\n+\n+  for (const comment of comments) {\n+    const user = comment.user?.login;\n+    if (\n+      user === \"ubiquibot\" ||\n+      user === \"ubiquibot[bot]\" ||\n+      user === \"ubiquibot-v2-testing\" ||\n+      user === \"ubiquibot-dev[bot]\" ||\n+      user === \"ubqbot[bot]\" || // TODO: remove this\n+      user === \"github-actions[bot]\"\n+    ) {","score":{"reward":1.032,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":39.55500000000001,"syllables":22,"sentences":1,"score":0.7955500000000001},"multiplier":1,"relevance":0.8}},{"id":1676754228,"content":"Will this be a problem? It is not clear to me if the kernel will invoke this on any new comment.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754228","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,47 +1,70 @@\n import { Octokit } from \"@octokit/rest\";\n-import { createClient } from \"@supabase/supabase-js\";\n-import { createAdapters } from \"./adapters\";\n-import { Env, PluginInputs } from \"./types\";\n+import { Env, PluginInputs, SupportedEventsU } from \"./types\";\n import { Context } from \"./types\";\n+import { askQuestion } from \"./handlers/ask-gpt\";\n+import { addCommentToIssue } from \"./handlers/add-comment\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n \n /**\n  * How a worker executes the plugin.\n  */\n export async function plugin(inputs: PluginInputs, env: Env) {\n   const octokit = new Octokit({ auth: inputs.authToken });\n-  const supabase = createClient(env.SUPABASE_URL, env.SUPABASE_KEY);\n \n   const context: Context = {\n     eventName: inputs.eventName,\n     payload: inputs.eventPayload,\n     config: inputs.settings,\n     octokit,\n     env,\n-    logger: {\n-      debug(message: unknown, ...optionalParams: unknown[]) {\n-        console.debug(message, ...optionalParams);\n-      },\n-      info(message: unknown, ...optionalParams: unknown[]) {\n-        console.log(message, ...optionalParams);\n-      },\n-      warn(message: unknown, ...optionalParams: unknown[]) {\n-        console.warn(message, ...optionalParams);\n-      },\n-      error(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-      fatal(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-    },\n-    adapters: {} as ReturnType<typeof createAdapters>,\n+    logger: new Logs(\"info\"),\n+    adapters: {} as never,\n   };\n+  const {\n+    logger,\n+    config: { isEnabled },\n+  } = context;\n \n-  context.adapters = createAdapters(supabase, context);\n+  if (isSupportedEvent(context.eventName)) {\n+    const comment = context.payload.comment.body;\n \n-  if (context.eventName === \"issue_comment.created\") {\n-    // do something\n+    if (!comment.startsWith(\"/gpt\")) {\n+      logger.info(\"Comment does not start with /gpt. Skipping.\");","score":{"reward":1.629,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":95.4632142857143,"syllables":25,"sentences":2,"score":0.6453678571428569},"multiplier":1,"relevance":0.9}},{"id":1676754270,"content":"Shouldn't this be fully removed instead of `never`?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754270","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -14,14 +14,8 @@ export interface Context<T extends SupportedEventsU = SupportedEventsU, TU exten\n   eventName: T;\n   payload: TU[\"payload\"];\n   octokit: InstanceType<typeof Octokit>;\n-  adapters: ReturnType<typeof createAdapters>;\n+  adapters: never;","score":{"reward":0.752,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.8}},{"id":1676754450,"content":"Use a `string[]` as the buffer and `.join(\"\\n\")` at the end. += is too error prone.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754450","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,111 @@\n+import { ChatCompletionMessageParam } from \"openai/resources\";\n+import { Context } from \"../types\";\n+import { StreamlinedComment, StreamlinedComments } from \"../types/gpt\";\n+import { fetchPullRequestDiff } from \"./issue\";\n+\n+export function formatChatHistory(\n+  context: Context,\n+  streamlined: Record<string, StreamlinedComment[]>,\n+  specAndBodies: Record<string, string>,\n+  linkedPulls: Record<string, boolean>\n+) {\n+  const convoKeys = Object.keys(streamlined);\n+  const specAndBodyKeys = Object.keys(specAndBodies);\n+\n+  const curIssue = {\n+    convo: streamlined[convoKeys[0]],\n+    specOrBody: specAndBodies[specAndBodyKeys[0]],\n+  };\n+\n+  let issueSpecBlock = \"\";\n+  issueSpecBlock += createHeader(\"Project Specification\", specAndBodyKeys[0]);\n+  issueSpecBlock += createSpecOrBody(curIssue.specOrBody);\n+  issueSpecBlock += createFooter(\"Project Specification\");","score":{"reward":1.144,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":102.62211538461541,"syllables":15,"sentences":2,"score":1},"multiplier":1,"relevance":0.8}},{"id":1676754745,"content":"It would be useful context to explain the purpose of the plugin, and that it is being invoked inside of GitHub comments in order to help the contributors with their research.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754745","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,111 @@\n+import { ChatCompletionMessageParam } from \"openai/resources\";\n+import { Context } from \"../types\";\n+import { StreamlinedComment, StreamlinedComments } from \"../types/gpt\";\n+import { fetchPullRequestDiff } from \"./issue\";\n+\n+export function formatChatHistory(\n+  context: Context,\n+  streamlined: Record<string, StreamlinedComment[]>,\n+  specAndBodies: Record<string, string>,\n+  linkedPulls: Record<string, boolean>\n+) {\n+  const convoKeys = Object.keys(streamlined);\n+  const specAndBodyKeys = Object.keys(specAndBodies);\n+\n+  const curIssue = {\n+    convo: streamlined[convoKeys[0]],\n+    specOrBody: specAndBodies[specAndBodyKeys[0]],\n+  };\n+\n+  let issueSpecBlock = \"\";\n+  issueSpecBlock += createHeader(\"Project Specification\", specAndBodyKeys[0]);\n+  issueSpecBlock += createSpecOrBody(curIssue.specOrBody);\n+  issueSpecBlock += createFooter(\"Project Specification\");\n+\n+  let issueCommentBlock = \"\";\n+  issueCommentBlock += createHeader(\"Issue Conversation\", convoKeys[0]);\n+  issueCommentBlock += createComment({\n+    issue: parseInt(convoKeys[0].split(\"/\")[2]),\n+    repo: convoKeys[0].split(\"/\")[1],\n+    org: convoKeys[0].split(\"/\")[0],\n+    comments: curIssue.convo,\n+  });\n+  issueCommentBlock += createFooter(\"Issue Conversation\");\n+\n+  delete convoKeys[0];\n+\n+  const linkedContextBlocks = convoKeys.map(async (key) => {\n+    const comments = streamlined[key];\n+    const [org, repo, _issues, issue] = key.split(\"/\");\n+    const isPull = linkedPulls[key];\n+    const specHeader = isPull ? `Linked Pull #${issue} Request Body` : `Linked Issue #${issue} Specification`;\n+\n+    const specOrBody = specAndBodies[key];\n+    let specOrBodyBlock = createHeader(specHeader, key);\n+    specOrBodyBlock += createSpecOrBody(specOrBody);\n+    specOrBodyBlock += createFooter(specHeader);\n+\n+    const header = isPull ? `Linked Pull #${issue} Request Conversation` : `Linked Issue #${issue} Conversation`;\n+    const repoString = `${org}/${repo} #${issue}`;\n+    const diff = isPull ? await fetchPullRequestDiff(context, org, repo, issue) : null;\n+\n+    let block = \"\";\n+    block += specOrBodyBlock;\n+    block += createHeader(header, repoString);\n+    block += createComment({ issue: parseInt(issue), repo, org, comments });\n+    block += createFooter(header);\n+\n+    if (!isPull) {\n+      return block;\n+    }\n+\n+    let diffBlock = \"\";\n+    diffBlock += createHeader(\"Linked Pull Request Code Diff\", repoString);\n+    diffBlock += diff ? diff : \"No diff available\";\n+    diffBlock += createFooter(\"Linked Pull Request Code Diff\");\n+    return block + diffBlock;\n+  });\n+\n+  return issueSpecBlock + issueCommentBlock + linkedContextBlocks.join(\"\");\n+}\n+\n+function createHeader(content: string, repoString: string) {\n+  return `=== ${content} === ${repoString} ===\\n\\n`;\n+}\n+\n+function createFooter(content: string) {\n+  return `=== End ${content} ===\\n\\n`;\n+}\n+\n+function createComment(comment: StreamlinedComments) {\n+  let comments = \"\";\n+  for (const c of comment.comments) {\n+    comments += `${c.id} ${c.user}: ${c.body}\\n`;\n+  }\n+  return comments;\n+}\n+\n+function createSpecOrBody(specOrBody: string) {\n+  return `${specOrBody}\\n`;\n+}\n+\n+export function createChatHistory(formattedChat: string) {\n+  const chatHistory: ChatCompletionMessageParam[] = [];\n+\n+  const systemMessage: ChatCompletionMessageParam = {\n+    role: \"system\",\n+\n+    content: `Using the provided context, address the question being asked and make sure to provide a clear and concise answer with no follow-up statements.\n+        The LAST comment in 'Issue Conversation' is the most recent one, focus on it as that is the question being asked.\n+        Use GitHub flavoured markdown in your response making effective use of lists, code blocks and other supported GitHub md features.`,","score":{"reward":1.952,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":49.83451612903227,"syllables":46,"sentences":1,"score":0.8983451612903227},"multiplier":1,"relevance":0.8}},{"id":1676754853,"content":"Why not all? Context length is not a problem anymore.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754853","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,200 @@\n+import { Context } from \"../types\";\n+import { Issue, IssueComments } from \"../types/github\";\n+\n+type FetchParams = {\n+  context: Context;\n+  issueNum?: number;\n+  owner?: string;\n+  repo?: string;\n+};\n+\n+/**\n+ * Because in the eyes of the GitHub api Pull Requests are also\n+ * issues, we can use the same functions for both.\n+ */\n+\n+export async function fetchIssue(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit.issues\n+    .get({\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then(({ data }) => data as Issue);\n+}\n+\n+export async function fetchIssueComments(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit\n+    .paginate(octokit.issues.listComments, {\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then((comments) => comments as IssueComments);\n+}\n+\n+export async function fetchLinkedIssues(params: FetchParams, comments?: IssueComments) {\n+  let issueComments: IssueComments | undefined = comments;\n+  const linkedIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  if (!issueComments && !params) {\n+    throw new Error(\"Either issueComments or params must be provided\");\n+  }\n+\n+  if (!issueComments) {\n+    issueComments = await fetchIssueComments(params);\n+  }\n+\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  if (!issueComments) {\n+    logger.info(\"No comments found on issue\");\n+    return linkedIssues;\n+  }\n+\n+  for (const comment of issueComments) {\n+    const linkedIssue = idIssueFromComment(login, comment.body);\n+    if (linkedIssue) {\n+      linkedIssues.push(linkedIssue);\n+    }\n+  }\n+\n+  return await filterLinkedIssues(params, linkedIssues);\n+}\n+\n+async function filterLinkedIssues(params: FetchParams, linkedIssues: { issueNumber: number; repo: string }[]) {\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  const contextIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  for (const issue of linkedIssues) {\n+    if (issue && issue.issueNumber && issue.repo) {\n+      if (await isRepoFromSameOrg(params.context, issue.repo, login)) {\n+        contextIssues.push({\n+          issueNumber: issue.issueNumber,\n+          repo: issue.repo,\n+        });\n+      } else {\n+        logger.info(`Ignoring linked issue ${issue.issueNumber} from ${issue.repo} as it is not from the same org`);\n+      }\n+    }\n+  }\n+\n+  return contextIssues;\n+}\n+\n+export async function getLinkedIssueContextFromComments(context: Context, issueComments: IssueComments) {\n+  // find any linked issues in comments by parsing the comments and enforcing that the\n+  // linked issue is from the same org that the current issue is from\n+  const linkedIssues = await fetchLinkedIssues({ context }, issueComments);\n+\n+  // the conversational history of the linked issues\n+  const linkedIssueComments: IssueComments = [];\n+\n+  // we are only going one level deep with the linked issue context fetching","score":{"reward":0.666,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":83.32000000000004,"syllables":14,"sentences":2,"score":0.7667999999999996},"multiplier":1,"relevance":0.6}},{"id":1676754902,"content":"I think that recursion is not a problem due to generous context length for 4o","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754902","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,200 @@\n+import { Context } from \"../types\";\n+import { Issue, IssueComments } from \"../types/github\";\n+\n+type FetchParams = {\n+  context: Context;\n+  issueNum?: number;\n+  owner?: string;\n+  repo?: string;\n+};\n+\n+/**\n+ * Because in the eyes of the GitHub api Pull Requests are also\n+ * issues, we can use the same functions for both.\n+ */\n+\n+export async function fetchIssue(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit.issues\n+    .get({\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then(({ data }) => data as Issue);\n+}\n+\n+export async function fetchIssueComments(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit\n+    .paginate(octokit.issues.listComments, {\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then((comments) => comments as IssueComments);\n+}\n+\n+export async function fetchLinkedIssues(params: FetchParams, comments?: IssueComments) {\n+  let issueComments: IssueComments | undefined = comments;\n+  const linkedIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  if (!issueComments && !params) {\n+    throw new Error(\"Either issueComments or params must be provided\");\n+  }\n+\n+  if (!issueComments) {\n+    issueComments = await fetchIssueComments(params);\n+  }\n+\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  if (!issueComments) {\n+    logger.info(\"No comments found on issue\");\n+    return linkedIssues;\n+  }\n+\n+  for (const comment of issueComments) {\n+    const linkedIssue = idIssueFromComment(login, comment.body);\n+    if (linkedIssue) {\n+      linkedIssues.push(linkedIssue);\n+    }\n+  }\n+\n+  return await filterLinkedIssues(params, linkedIssues);\n+}\n+\n+async function filterLinkedIssues(params: FetchParams, linkedIssues: { issueNumber: number; repo: string }[]) {\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  const contextIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  for (const issue of linkedIssues) {\n+    if (issue && issue.issueNumber && issue.repo) {\n+      if (await isRepoFromSameOrg(params.context, issue.repo, login)) {\n+        contextIssues.push({\n+          issueNumber: issue.issueNumber,\n+          repo: issue.repo,\n+        });\n+      } else {\n+        logger.info(`Ignoring linked issue ${issue.issueNumber} from ${issue.repo} as it is not from the same org`);\n+      }\n+    }\n+  }\n+\n+  return contextIssues;\n+}\n+\n+export async function getLinkedIssueContextFromComments(context: Context, issueComments: IssueComments) {\n+  // find any linked issues in comments by parsing the comments and enforcing that the\n+  // linked issue is from the same org that the current issue is from\n+  const linkedIssues = await fetchLinkedIssues({ context }, issueComments);\n+\n+  // the conversational history of the linked issues\n+  const linkedIssueComments: IssueComments = [];\n+\n+  // we are only going one level deep with the linked issue context fetching\n+  for (const issue of linkedIssues) {\n+    const fetched = await fetchIssueComments({ context, issueNum: issue.issueNumber, repo: issue.repo });\n+    linkedIssueComments.push(...fetched);\n+  }\n+\n+  return { linkedIssues, linkedIssueComments };\n+}\n+\n+export function idIssueFromComment(owner?: string, comment?: string | null) {\n+  if (!comment) {\n+    return null;\n+  }\n+  if (!owner) {\n+    throw new Error(\"Owner must be provided when parsing linked issues\");\n+  }\n+  // the assumption here is that any special GitHub markdown formatting is converted to an anchor tag\n+  const urlMatch = comment.match(/https:\\/\\/github.com\\/([^/]+)\\/([^/]+)\\/(pull|issue|issues)\\/(\\d+)/);\n+\n+  /**\n+   * I think we should restrict including any linked context which is not of the same org.","score":{"reward":1.224,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":73.17000000000003,"syllables":21,"sentences":1,"score":0.8682999999999997},"multiplier":1,"relevance":0.8}},{"id":1676754978,"content":"Just be sure to label the section with the org/repo name and ChatGPT should know it's not as relevant","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754978","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,200 @@\n+import { Context } from \"../types\";\n+import { Issue, IssueComments } from \"../types/github\";\n+\n+type FetchParams = {\n+  context: Context;\n+  issueNum?: number;\n+  owner?: string;\n+  repo?: string;\n+};\n+\n+/**\n+ * Because in the eyes of the GitHub api Pull Requests are also\n+ * issues, we can use the same functions for both.\n+ */\n+\n+export async function fetchIssue(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit.issues\n+    .get({\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then(({ data }) => data as Issue);\n+}\n+\n+export async function fetchIssueComments(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit\n+    .paginate(octokit.issues.listComments, {\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then((comments) => comments as IssueComments);\n+}\n+\n+export async function fetchLinkedIssues(params: FetchParams, comments?: IssueComments) {\n+  let issueComments: IssueComments | undefined = comments;\n+  const linkedIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  if (!issueComments && !params) {\n+    throw new Error(\"Either issueComments or params must be provided\");\n+  }\n+\n+  if (!issueComments) {\n+    issueComments = await fetchIssueComments(params);\n+  }\n+\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  if (!issueComments) {\n+    logger.info(\"No comments found on issue\");\n+    return linkedIssues;\n+  }\n+\n+  for (const comment of issueComments) {\n+    const linkedIssue = idIssueFromComment(login, comment.body);\n+    if (linkedIssue) {\n+      linkedIssues.push(linkedIssue);\n+    }\n+  }\n+\n+  return await filterLinkedIssues(params, linkedIssues);\n+}\n+\n+async function filterLinkedIssues(params: FetchParams, linkedIssues: { issueNumber: number; repo: string }[]) {\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  const contextIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  for (const issue of linkedIssues) {\n+    if (issue && issue.issueNumber && issue.repo) {\n+      if (await isRepoFromSameOrg(params.context, issue.repo, login)) {\n+        contextIssues.push({\n+          issueNumber: issue.issueNumber,\n+          repo: issue.repo,\n+        });\n+      } else {\n+        logger.info(`Ignoring linked issue ${issue.issueNumber} from ${issue.repo} as it is not from the same org`);\n+      }\n+    }\n+  }\n+\n+  return contextIssues;\n+}\n+\n+export async function getLinkedIssueContextFromComments(context: Context, issueComments: IssueComments) {\n+  // find any linked issues in comments by parsing the comments and enforcing that the\n+  // linked issue is from the same org that the current issue is from\n+  const linkedIssues = await fetchLinkedIssues({ context }, issueComments);\n+\n+  // the conversational history of the linked issues\n+  const linkedIssueComments: IssueComments = [];\n+\n+  // we are only going one level deep with the linked issue context fetching\n+  for (const issue of linkedIssues) {\n+    const fetched = await fetchIssueComments({ context, issueNum: issue.issueNumber, repo: issue.repo });\n+    linkedIssueComments.push(...fetched);\n+  }\n+\n+  return { linkedIssues, linkedIssueComments };\n+}\n+\n+export function idIssueFromComment(owner?: string, comment?: string | null) {\n+  if (!comment) {\n+    return null;\n+  }\n+  if (!owner) {\n+    throw new Error(\"Owner must be provided when parsing linked issues\");\n+  }\n+  // the assumption here is that any special GitHub markdown formatting is converted to an anchor tag\n+  const urlMatch = comment.match(/https:\\/\\/github.com\\/([^/]+)\\/([^/]+)\\/(pull|issue|issues)\\/(\\d+)/);\n+\n+  /**\n+   * I think we should restrict including any linked context which is not of the same org.\n+   *\n+   * In most cases this will be the expected behaviour, I remember a scenario where\n+   * I linked to an issue in a 3rd party org, for extra reviewer context but I also include the\n+   * TL;DR which is always the case. We wouldn't want that full 3rd party PR review or issue to be","score":{"reward":1.316,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":80.77714285714288,"syllables":26,"sentences":1,"score":0.7922285714285713},"multiplier":1,"relevance":0.7}},{"id":1676842567,"content":"I prefer to exclude for now.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676842567","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,239 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../types\";\n+import { fetchIssue, fetchIssueComments, getLinkedIssueContextFromComments, idIssueFromComment } from \"../utils/issue\";\n+import { IssueComments } from \"../types/github\";\n+import { StreamlinedComment } from \"../types/gpt\";\n+import { createChatHistory, formatChatHistory } from \"../utils/format-chat-history\";\n+import { addCommentToIssue } from \"./add-comment\";\n+\n+export async function askQuestion(context: Context, question: string) {\n+  const {\n+    logger,\n+    payload: { issue: currentIssue },\n+  } = context;\n+\n+  if (!question) {\n+    logger.error(`No question provided`);\n+    await addCommentToIssue(context, \"No question provided\", true, \"error\");\n+    return;\n+  }\n+\n+  const { body: issueSpecOrPullBody, repository_url } = currentIssue;\n+  const org = repository_url.split(\"/\")[4];\n+\n+  const { specReferencedIssueBody, specReferencedIssueKey, streamlinedSpecReferencedIssueComments } = await getSpecReferencedContext(\n+    context,\n+    org,\n+    issueSpecOrPullBody\n+  );\n+\n+  const issueComments = await fetchIssueComments({ context });\n+  const linkedIssueContext = await getLinkedIssueContextFromComments(context, issueComments);\n+  const { linkedIssues, linkedIssueComments } = linkedIssueContext;\n+\n+  // we are only going one level deep with the linked issue context fetching\n+  for (const issue of linkedIssues) {\n+    const fetched = await fetchIssueComments({ context, issueNum: issue.issueNumber, repo: issue.repo });\n+    linkedIssueComments.push(...fetched);\n+  }\n+\n+  const streamlinedComments = await getAllStreamlinedComments(issueComments, streamlinedSpecReferencedIssueComments, linkedIssueComments);\n+  const { linkedPulls, specAndBodies } = await getSpecBodiesAndLinkedPulls(\n+    context,\n+    repository_url,\n+    currentIssue.number,\n+    issueSpecOrPullBody,\n+    specReferencedIssueBody,\n+    specReferencedIssueKey,\n+    linkedIssues\n+  );\n+  const formattedChat = formatChatHistory(context, streamlinedComments, specAndBodies, linkedPulls);\n+\n+  return await askGpt(context, formattedChat);\n+}\n+\n+async function getAllStreamlinedComments(\n+  issueComments: IssueComments,\n+  streamlinedSpecReferencedIssueComments: Record<string, StreamlinedComment[]> | undefined,\n+  linkedIssueComments: IssueComments\n+) {\n+  const streamlinedComments = streamlineComments(issueComments) ?? {};\n+\n+  if (streamlinedSpecReferencedIssueComments && Object.keys(streamlinedSpecReferencedIssueComments).length > 0) {\n+    for (const [key, value] of Object.entries(streamlinedSpecReferencedIssueComments)) {\n+      if (!streamlinedComments[key]) {\n+        streamlinedComments[key] = value;\n+        continue;\n+      }\n+\n+      const previous = streamlinedComments[key] || [];\n+      streamlinedComments[key] = [...previous, ...value];\n+    }\n+  }\n+\n+  if (linkedIssueComments.length > 0) {\n+    const linkedStreamlinedComments = streamlineComments(linkedIssueComments);\n+\n+    if (linkedStreamlinedComments) {\n+      for (const [key, value] of Object.entries(linkedStreamlinedComments)) {\n+        if (!streamlinedComments[key]) {\n+          streamlinedComments[key] = value;\n+          continue;\n+        }\n+\n+        const previous = streamlinedComments[key] || [];\n+        streamlinedComments[key] = [...previous, ...value];\n+      }\n+    }\n+  }\n+\n+  return streamlinedComments;\n+}\n+\n+async function getSpecBodiesAndLinkedPulls(\n+  context: Context,\n+  currentIssueUrl: string,\n+  currentIssueNumber: number,\n+  issueSpecOrPullBody: string | null,\n+  specReferencedIssueBody: string | null | undefined,\n+  specReferencedIssueKey: string | null | undefined,\n+  linkedIssues: { issueNumber: number; repo: string }[]\n+) {\n+  const linkedPulls: Record<string, boolean> = {};\n+  const currentIssueKey = createKey(currentIssueUrl, currentIssueNumber);\n+  // collect specifically all of the spec and PR bodies\n+  const specAndBodies: Record<string, string> = {};\n+  specAndBodies[currentIssueKey] = issueSpecOrPullBody || \"\";\n+  specAndBodies[specReferencedIssueKey as string] = specReferencedIssueBody || \"\";\n+\n+  for (const linkedIssue of linkedIssues) {\n+    const issue = await fetchIssue({ context, issueNum: linkedIssue.issueNumber, repo: linkedIssue.repo });\n+    const { body, repository_url, pull_request } = issue;\n+    const linkedIssueKey = createKey(repository_url, linkedIssue.issueNumber);\n+    specAndBodies[linkedIssueKey] = body || \"\";\n+\n+    if (pull_request) {\n+      linkedPulls[linkedIssueKey] = true;\n+    }\n+  }\n+\n+  return { specAndBodies, linkedPulls };\n+}\n+\n+async function getSpecReferencedContext(context: Context, org: string, issueSpecOrPullBody: string | null) {\n+  // fetch the spec referenced issue if it exists\n+  const specReferencedIssueId = idIssueFromComment(org, issueSpecOrPullBody);\n+  let specReferencedIssue,\n+    specReferencedIssueBody,\n+    specReferencedIssueRepoUrl,\n+    specReferencedIssueComments,\n+    specReferencedIssueKey,\n+    streamlinedSpecReferencedIssueComments;\n+\n+  if (specReferencedIssueId) {\n+    specReferencedIssue = await fetchIssue({ context, issueNum: specReferencedIssueId.issueNumber });\n+    specReferencedIssueBody = specReferencedIssue.body;\n+    specReferencedIssueRepoUrl = specReferencedIssue.repository_url;\n+    specReferencedIssueComments = await fetchIssueComments({ context, issueNum: specReferencedIssueId.issueNumber, repo: specReferencedIssueId.repo });\n+    specReferencedIssueKey = createKey(specReferencedIssueRepoUrl, specReferencedIssueId?.issueNumber);\n+    streamlinedSpecReferencedIssueComments = streamlineComments(specReferencedIssueComments) ?? {};\n+  }\n+\n+  return {\n+    specReferencedIssue,\n+    specReferencedIssueBody,\n+    specReferencedIssueRepoUrl,\n+    specReferencedIssueComments,\n+    specReferencedIssueKey,\n+    streamlinedSpecReferencedIssueComments,\n+  };\n+}\n+\n+function createKey(issueUrl: string, issue?: number) {\n+  const splitUrl = issueUrl?.split(\"/\");\n+  const issueNumber = issue || parseInt(splitUrl?.pop() || \"\");\n+  const issueRepo = splitUrl?.slice(-2).join(\"/\");\n+  const issueOrg = splitUrl?.slice(-3, -2).join(\"/\");\n+\n+  if (issueOrg.startsWith(\"repos\")) {\n+    return `${issueRepo}/issues/${issueNumber}`;\n+  }\n+\n+  return `${issueOrg}/${issueRepo}/${issueNumber}`;\n+}\n+\n+function streamlineComments(comments: IssueComments) {\n+  const streamlined: Record<string, StreamlinedComment[]> = {};\n+\n+  for (const comment of comments) {\n+    const user = comment.user?.login;\n+    if (\n+      user === \"ubiquibot\" ||\n+      user === \"ubiquibot[bot]\" ||\n+      user === \"ubiquibot-v2-testing\" ||\n+      user === \"ubiquibot-dev[bot]\" ||\n+      user === \"ubqbot[bot]\" || // TODO: remove this\n+      user === \"github-actions[bot]\"\n+    ) {","score":{"reward":0.444,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":87.94500000000002,"syllables":8,"sentences":1,"score":0.7205499999999998},"multiplier":1,"relevance":0.6}},{"id":1676842699,"content":"@gentlementlegen might know.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676842699","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,47 +1,70 @@\n import { Octokit } from \"@octokit/rest\";\n-import { createClient } from \"@supabase/supabase-js\";\n-import { createAdapters } from \"./adapters\";\n-import { Env, PluginInputs } from \"./types\";\n+import { Env, PluginInputs, SupportedEventsU } from \"./types\";\n import { Context } from \"./types\";\n+import { askQuestion } from \"./handlers/ask-gpt\";\n+import { addCommentToIssue } from \"./handlers/add-comment\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n \n /**\n  * How a worker executes the plugin.\n  */\n export async function plugin(inputs: PluginInputs, env: Env) {\n   const octokit = new Octokit({ auth: inputs.authToken });\n-  const supabase = createClient(env.SUPABASE_URL, env.SUPABASE_KEY);\n \n   const context: Context = {\n     eventName: inputs.eventName,\n     payload: inputs.eventPayload,\n     config: inputs.settings,\n     octokit,\n     env,\n-    logger: {\n-      debug(message: unknown, ...optionalParams: unknown[]) {\n-        console.debug(message, ...optionalParams);\n-      },\n-      info(message: unknown, ...optionalParams: unknown[]) {\n-        console.log(message, ...optionalParams);\n-      },\n-      warn(message: unknown, ...optionalParams: unknown[]) {\n-        console.warn(message, ...optionalParams);\n-      },\n-      error(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-      fatal(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-    },\n-    adapters: {} as ReturnType<typeof createAdapters>,\n+    logger: new Logs(\"info\"),\n+    adapters: {} as never,\n   };\n+  const {\n+    logger,\n+    config: { isEnabled },\n+  } = context;\n \n-  context.adapters = createAdapters(supabase, context);\n+  if (isSupportedEvent(context.eventName)) {\n+    const comment = context.payload.comment.body;\n \n-  if (context.eventName === \"issue_comment.created\") {\n-    // do something\n+    if (!comment.startsWith(\"/gpt\")) {\n+      logger.info(\"Comment does not start with /gpt. Skipping.\");","score":{"reward":0.24,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":6.390000000000015,"syllables":7,"sentences":1,"score":0.46390000000000015},"multiplier":1,"relevance":0.6}},{"id":1676842973,"content":"I prefer to try utilizing the most amount of context. We can make assumed optimizations later.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676842973","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,200 @@\n+import { Context } from \"../types\";\n+import { Issue, IssueComments } from \"../types/github\";\n+\n+type FetchParams = {\n+  context: Context;\n+  issueNum?: number;\n+  owner?: string;\n+  repo?: string;\n+};\n+\n+/**\n+ * Because in the eyes of the GitHub api Pull Requests are also\n+ * issues, we can use the same functions for both.\n+ */\n+\n+export async function fetchIssue(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit.issues\n+    .get({\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then(({ data }) => data as Issue);\n+}\n+\n+export async function fetchIssueComments(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit\n+    .paginate(octokit.issues.listComments, {\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then((comments) => comments as IssueComments);\n+}\n+\n+export async function fetchLinkedIssues(params: FetchParams, comments?: IssueComments) {\n+  let issueComments: IssueComments | undefined = comments;\n+  const linkedIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  if (!issueComments && !params) {\n+    throw new Error(\"Either issueComments or params must be provided\");\n+  }\n+\n+  if (!issueComments) {\n+    issueComments = await fetchIssueComments(params);\n+  }\n+\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  if (!issueComments) {\n+    logger.info(\"No comments found on issue\");\n+    return linkedIssues;\n+  }\n+\n+  for (const comment of issueComments) {\n+    const linkedIssue = idIssueFromComment(login, comment.body);\n+    if (linkedIssue) {\n+      linkedIssues.push(linkedIssue);\n+    }\n+  }\n+\n+  return await filterLinkedIssues(params, linkedIssues);\n+}\n+\n+async function filterLinkedIssues(params: FetchParams, linkedIssues: { issueNumber: number; repo: string }[]) {\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  const contextIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  for (const issue of linkedIssues) {\n+    if (issue && issue.issueNumber && issue.repo) {\n+      if (await isRepoFromSameOrg(params.context, issue.repo, login)) {\n+        contextIssues.push({\n+          issueNumber: issue.issueNumber,\n+          repo: issue.repo,\n+        });\n+      } else {\n+        logger.info(`Ignoring linked issue ${issue.issueNumber} from ${issue.repo} as it is not from the same org`);\n+      }\n+    }\n+  }\n+\n+  return contextIssues;\n+}\n+\n+export async function getLinkedIssueContextFromComments(context: Context, issueComments: IssueComments) {\n+  // find any linked issues in comments by parsing the comments and enforcing that the\n+  // linked issue is from the same org that the current issue is from\n+  const linkedIssues = await fetchLinkedIssues({ context }, issueComments);\n+\n+  // the conversational history of the linked issues\n+  const linkedIssueComments: IssueComments = [];\n+\n+  // we are only going one level deep with the linked issue context fetching","score":{"reward":1.296,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":50.66500000000002,"syllables":28,"sentences":2,"score":0.9066500000000002},"multiplier":1,"relevance":0.8}},{"id":1676843159,"content":"I prefer maximizing signal to noise in the context of human communication. \nThese LLMs on the other hand work their magic by dealing with a ton of data. I've seen better results when providing more context than less.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676843159","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,200 @@\n+import { Context } from \"../types\";\n+import { Issue, IssueComments } from \"../types/github\";\n+\n+type FetchParams = {\n+  context: Context;\n+  issueNum?: number;\n+  owner?: string;\n+  repo?: string;\n+};\n+\n+/**\n+ * Because in the eyes of the GitHub api Pull Requests are also\n+ * issues, we can use the same functions for both.\n+ */\n+\n+export async function fetchIssue(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit.issues\n+    .get({\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then(({ data }) => data as Issue);\n+}\n+\n+export async function fetchIssueComments(params: FetchParams) {\n+  const { octokit, payload } = params.context;\n+  const { issueNum, owner, repo } = params;\n+\n+  return await octokit\n+    .paginate(octokit.issues.listComments, {\n+      owner: owner || payload.repository.owner.login,\n+      repo: repo || payload.repository.name,\n+      issue_number: issueNum || payload.issue.number,\n+    })\n+    .then((comments) => comments as IssueComments);\n+}\n+\n+export async function fetchLinkedIssues(params: FetchParams, comments?: IssueComments) {\n+  let issueComments: IssueComments | undefined = comments;\n+  const linkedIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  if (!issueComments && !params) {\n+    throw new Error(\"Either issueComments or params must be provided\");\n+  }\n+\n+  if (!issueComments) {\n+    issueComments = await fetchIssueComments(params);\n+  }\n+\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  if (!issueComments) {\n+    logger.info(\"No comments found on issue\");\n+    return linkedIssues;\n+  }\n+\n+  for (const comment of issueComments) {\n+    const linkedIssue = idIssueFromComment(login, comment.body);\n+    if (linkedIssue) {\n+      linkedIssues.push(linkedIssue);\n+    }\n+  }\n+\n+  return await filterLinkedIssues(params, linkedIssues);\n+}\n+\n+async function filterLinkedIssues(params: FetchParams, linkedIssues: { issueNumber: number; repo: string }[]) {\n+  const {\n+    context: {\n+      logger,\n+      payload: {\n+        repository: {\n+          owner: { login },\n+        },\n+      },\n+    },\n+  } = params;\n+\n+  const contextIssues: {\n+    issueNumber: number;\n+    repo: string;\n+  }[] = [];\n+\n+  for (const issue of linkedIssues) {\n+    if (issue && issue.issueNumber && issue.repo) {\n+      if (await isRepoFromSameOrg(params.context, issue.repo, login)) {\n+        contextIssues.push({\n+          issueNumber: issue.issueNumber,\n+          repo: issue.repo,\n+        });\n+      } else {\n+        logger.info(`Ignoring linked issue ${issue.issueNumber} from ${issue.repo} as it is not from the same org`);\n+      }\n+    }\n+  }\n+\n+  return contextIssues;\n+}\n+\n+export async function getLinkedIssueContextFromComments(context: Context, issueComments: IssueComments) {\n+  // find any linked issues in comments by parsing the comments and enforcing that the\n+  // linked issue is from the same org that the current issue is from\n+  const linkedIssues = await fetchLinkedIssues({ context }, issueComments);\n+\n+  // the conversational history of the linked issues\n+  const linkedIssueComments: IssueComments = [];\n+\n+  // we are only going one level deep with the linked issue context fetching\n+  for (const issue of linkedIssues) {\n+    const fetched = await fetchIssueComments({ context, issueNum: issue.issueNumber, repo: issue.repo });\n+    linkedIssueComments.push(...fetched);\n+  }\n+\n+  return { linkedIssues, linkedIssueComments };\n+}\n+\n+export function idIssueFromComment(owner?: string, comment?: string | null) {\n+  if (!comment) {\n+    return null;\n+  }\n+  if (!owner) {\n+    throw new Error(\"Owner must be provided when parsing linked issues\");\n+  }\n+  // the assumption here is that any special GitHub markdown formatting is converted to an anchor tag\n+  const urlMatch = comment.match(/https:\\/\\/github.com\\/([^/]+)\\/([^/]+)\\/(pull|issue|issues)\\/(\\d+)/);\n+\n+  /**\n+   * I think we should restrict including any linked context which is not of the same org.","score":{"reward":2.208,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":65.65538461538465,"syllables":59,"sentences":3,"score":0.9434461538461535},"multiplier":1,"relevance":0.8}},{"id":1689084951,"content":"`enabled` seems like a pointless config. Please remove that.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689084951","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -37,8 +42,8 @@ export async function plugin(inputs: PluginInputs) {\n     }\n \n     if (!isEnabled) {\n-      logger.info(\"Plugin is disabled. Skipping.\");\n-      await addCommentToIssue(context, \"The /gpt command is disabled. Enable it in the plugin settings.\", true, \"warning\");\n+      const log = logger.info(\"The /gpt command is disabled. Enable it in the plugin settings.\");\n+      await addCommentToIssue(context, log?.logMessage.diff as string);\n       return;\n     }","score":{"reward":0.744,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":86.45000000000002,"syllables":11,"sentences":2,"score":0.7354999999999998},"multiplier":1,"relevance":0.8}},{"id":1689085626,"content":"If it is not a pull shouldn't this revert or throw? Doesn't make sense that it would treat an issue as a pull.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689085626","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -100,7 +99,7 @@ async function createContextBlockSection(\n \n   const diffBlock = [\n     createHeader(\"Linked Pull Request Code Diff\", repoString),\n-    diff ? diff : \"No diff available\",\n+    isPull ? isPull : \"No diff available\",","score":{"reward":1.989,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":102.77950000000001,"syllables":27,"sentences":2,"score":1},"multiplier":1,"relevance":0.9}},{"id":1689086710,"content":"You can recycle strings with a const in the beginning of this file.\r\n```suggestion\r\n```","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689086710","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,11 +1,93 @@\n+/* eslint-disable @typescript-eslint/naming-convention */\n+/* eslint-disable sonarjs/no-duplicate-string */","score":{"reward":0.828,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":76.50153846153849,"syllables":18,"sentences":1,"score":0.8349846153846151},"multiplier":1,"relevance":0.6}},{"id":1689087649,"content":"Why? Can't you just write the code to be in line with our styles?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689087649","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,11 +1,93 @@\n+/* eslint-disable @typescript-eslint/naming-convention */","score":{"reward":1.099,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":108.9825,"syllables":16,"sentences":2,"score":1},"multiplier":1,"relevance":0.7}},{"id":1689088291,"content":"```suggestion\r\n  http.get(\"https://api.github.com/orgs/:org/repos\", ({ params: { org } }: { params: { org: string } }) => HttpResponse.json(db.repo.findMany({ where: { owner: { login: { equals: org } } } }))),\r\n```\r\nYou can make these all one liners succienct like this.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689088291","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,11 +1,93 @@\n+/* eslint-disable @typescript-eslint/naming-convention */\n+/* eslint-disable sonarjs/no-duplicate-string */\n import { http, HttpResponse } from \"msw\";\n import { db } from \"./db\";\n+import issueTemplate from \"./issue-template\";\n \n /**\n  * Intercepts the routes and returns a custom payload\n  */\n export const handlers = [\n-  http.get(\"https://api.ubiquity.com/users\", () => {\n-    return HttpResponse.json(db.users.getAll());\n+  http.post(\"https://api.openai.com/v1/chat/completions\", () => {\n+    const answer = `This is a mock answer for the chat`;\n+\n+    return HttpResponse.json({\n+      usage: {\n+        completion_tokens: 150,\n+        prompt_tokens: 1000,\n+        total_tokens: 1150,\n+      },\n+      choices: [\n+        {\n+          message: {\n+            content: answer,\n+          },\n+        },\n+      ],\n+    });\n+  }),\n+  //  GET https://api.github.com/repos/ubiquity/test-repo/issues/1\n+  http.get(\"https://api.github.com/repos/:owner/:repo/issues/:issue_number\", ({ params: { owner, repo, issue_number } }) => {\n+    return HttpResponse.json(\n+      db.issue.findFirst({ where: { owner: { equals: owner as string }, repo: { equals: repo as string }, number: { equals: Number(issue_number) } } })\n+    );\n+  }),\n+\n+  // get repo\n+  http.get(\"https://api.github.com/repos/:owner/:repo\", ({ params: { owner, repo } }: { params: { owner: string; repo: string } }) => {\n+    const item = db.repo.findFirst({ where: { name: { equals: repo }, owner: { login: { equals: owner } } } });\n+    if (!item) {\n+      return new HttpResponse(null, { status: 404 });\n+    }\n+    return HttpResponse.json(item);\n+  }),\n+  // get issue\n+  http.get(\"https://api.github.com/repos/:owner/:repo/issues\", ({ params: { owner, repo } }: { params: { owner: string; repo: string } }) => {\n+    return HttpResponse.json(db.issue.findMany({ where: { owner: { equals: owner }, repo: { equals: repo } } }));\n+  }),\n+  // create issue\n+  http.post(\"https://api.github.com/repos/:owner/:repo/issues\", () => {\n+    const id = db.issue.count() + 1;\n+    const newItem = { ...issueTemplate, id };\n+    db.issue.create(newItem);\n+    return HttpResponse.json(newItem);\n+  }),\n+  // get repo issues\n+  http.get(\"https://api.github.com/orgs/:org/repos\", ({ params: { org } }: { params: { org: string } }) => {\n+    return HttpResponse.json(db.repo.findMany({ where: { owner: { login: { equals: org } } } }));\n+  }),","score":{"reward":0.756,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":95.165,"syllables":12,"sentences":1,"score":0.64835},"multiplier":1,"relevance":0.7}},{"id":1689089521,"content":"Why not just use the correct object? Why cast as `any`?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689089521","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,22 +1,323 @@\n import { db } from \"./__mocks__/db\";\n import { server } from \"./__mocks__/node\";\n import usersGet from \"./__mocks__/users-get.json\";\n-import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it } from \"@jest/globals\";\n+import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it, jest } from \"@jest/globals\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { Context, SupportedEventsU } from \"../src/types\";\n+import { drop } from \"@mswjs/data\";\n+import issueTemplate from \"./__mocks__/issue-template\";\n+import repoTemplate from \"./__mocks__/repo-template\";\n+import { askQuestion } from \"../src/handlers/ask-gpt\";\n+import { plugin } from \"../src/plugin\";\n \n-beforeAll(() => server.listen());\n-afterEach(() => server.resetHandlers());\n+const TEST_QUESTION = \"What is pi?\";\n+const TEST_SLASH_COMMAND = \"/gpt what is pi?\";\n+const LOG_CALLER = \"_Logs.<anonymous>\";\n+\n+type Comment = {\n+  id: number;\n+  user: {\n+    login: string;\n+    type: string;\n+  };\n+  body: string;\n+  url: string;\n+  html_url: string;\n+  owner: string;\n+  repo: string;\n+  issue_number: number;\n+  issue_url?: string;\n+  pull_request_url?: string;\n+};\n+\n+// eslint-disable-next-line @typescript-eslint/no-explicit-any\n+const octokit = jest.requireActual(\"@octokit/rest\") as any;","score":{"reward":0.936,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":100.24000000000002,"syllables":12,"sentences":2,"score":1},"multiplier":1,"relevance":0.8}},{"id":1689091491,"content":"```suggestion\r\n          content: `You are a GitHub integrated chatbot tasked with assisting in research and discussion on GitHub issues and pull requests. Using the provided context, address the question being asked providing a clear and concise answer with no follow-up statements. The LAST comment in 'Issue Conversation' is the most recent one, focus on it as that is the question being asked. Use GitHub flavoured markdown in your response making effective use of lists, code blocks and other supported GitHub md features.`,\r\n```\r\nSeem unnecessary.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689091491","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,22 +1,323 @@\n import { db } from \"./__mocks__/db\";\n import { server } from \"./__mocks__/node\";\n import usersGet from \"./__mocks__/users-get.json\";\n-import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it } from \"@jest/globals\";\n+import { expect, describe, beforeAll, beforeEach, afterAll, afterEach, it, jest } from \"@jest/globals\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n+import { Context, SupportedEventsU } from \"../src/types\";\n+import { drop } from \"@mswjs/data\";\n+import issueTemplate from \"./__mocks__/issue-template\";\n+import repoTemplate from \"./__mocks__/repo-template\";\n+import { askQuestion } from \"../src/handlers/ask-gpt\";\n+import { plugin } from \"../src/plugin\";\n \n-beforeAll(() => server.listen());\n-afterEach(() => server.resetHandlers());\n+const TEST_QUESTION = \"What is pi?\";\n+const TEST_SLASH_COMMAND = \"/gpt what is pi?\";\n+const LOG_CALLER = \"_Logs.<anonymous>\";\n+\n+type Comment = {\n+  id: number;\n+  user: {\n+    login: string;\n+    type: string;\n+  };\n+  body: string;\n+  url: string;\n+  html_url: string;\n+  owner: string;\n+  repo: string;\n+  issue_number: number;\n+  issue_url?: string;\n+  pull_request_url?: string;\n+};\n+\n+// eslint-disable-next-line @typescript-eslint/no-explicit-any\n+const octokit = jest.requireActual(\"@octokit/rest\") as any;\n+// eslint-disable-next-line @typescript-eslint/no-explicit-any\n+jest.requireActual(\"openai\") as any;\n+\n+beforeAll(() => {\n+  server.listen();\n+});\n+afterEach(() => {\n+  drop(db);\n+  server.resetHandlers();\n+});\n afterAll(() => server.close());\n \n-describe(\"User tests\", () => {\n-  beforeEach(() => {\n-    for (const item of usersGet) {\n-      db.users.create(item);\n-    }\n+// TESTS\n+\n+describe(\"Ask plugin tests\", () => {\n+  beforeEach(async () => {\n+    await setupTests();\n+  });\n+\n+  it(\"should ask GPT a question\", async () => {\n+    const ctx = createContext(TEST_SLASH_COMMAND);\n+    createComments([transformCommentTemplate(1, 1, TEST_QUESTION, \"ubiquity\", \"test-repo\", true)]);\n+    const res = await askQuestion(ctx, TEST_QUESTION);\n+\n+    expect(res).toBeDefined();\n+\n+    expect(res?.answer).toBe(\"This is a mock answer for the chat\");\n+  });\n+\n+  it(\"should not ask GPT a question if plugin is disabled\", async () => {\n+    const ctx = createContext(TEST_SLASH_COMMAND, false);\n+    const infoSpy = jest.spyOn(ctx.logger, \"info\");\n+\n+    createComments([transformCommentTemplate(1, 1, TEST_QUESTION, \"ubiquity\", \"test-repo\", true)]);\n+    await plugin(ctx);\n+\n+    expect(infoSpy).toHaveBeenCalledWith(\"The /gpt command is disabled. Enable it in the plugin settings.\");\n+  });\n+\n+  it(\"should not ask GPT a question if comment is from a bot\", async () => {\n+    const ctx = createContext(TEST_SLASH_COMMAND);\n+    const infoSpy = jest.spyOn(ctx.logger, \"info\");\n+\n+    createComments([transformCommentTemplate(1, 1, TEST_QUESTION, \"ubiquity\", \"test-repo\", true)]);\n+    if (!ctx.payload.comment.user) return;\n+    ctx.payload.comment.user.type = \"Bot\";\n+    await plugin(ctx);\n+\n+    expect(infoSpy).toHaveBeenCalledWith(\"Comment is from a bot. Skipping.\");\n   });\n \n-  it(\"Should fetch all the users\", async () => {\n-    const res = await fetch(\"https://api.ubiquity.com/users\");\n-    const data = await res.json();\n-    expect(data).toMatchObject(usersGet);\n+  it(\"should not ask GPT a question if comment does not start with /gpt\", async () => {\n+    const ctx = createContext(TEST_QUESTION);\n+    const infoSpy = jest.spyOn(ctx.logger, \"info\");\n+\n+    createComments([transformCommentTemplate(1, 1, TEST_QUESTION, \"ubiquity\", \"test-repo\", true)]);\n+    await plugin(ctx);\n+\n+    expect(infoSpy).toHaveBeenCalledWith(\"Comment does not start with /gpt. Skipping.\");\n+  });\n+\n+  it(\"should not ask GPT a question if no question is provided\", async () => {\n+    const ctx = createContext(\"/gpt\");\n+    const errorSpy = jest.spyOn(ctx.logger, \"error\");\n+\n+    createComments([transformCommentTemplate(1, 1, TEST_QUESTION, \"ubiquity\", \"test-repo\", true)]);\n+    await plugin(ctx);\n+\n+    expect(errorSpy).toHaveBeenCalledWith(\"No question provided\");\n+  });\n+\n+  it(\"should not ask GPT a question if no OpenAI API key is provided\", async () => {\n+    const ctx = createContext(TEST_SLASH_COMMAND);\n+    const errorSpy = jest.spyOn(ctx.logger, \"error\");\n+\n+    createComments([transformCommentTemplate(1, 1, TEST_QUESTION, \"ubiquity\", \"test-repo\", true)]);\n+    ctx.config.openAi_apiKey = \"\";\n+    await plugin(ctx);\n+\n+    expect(errorSpy).toHaveBeenNthCalledWith(1, \"No OpenAI API Key detected!\");\n+    expect(errorSpy).toHaveBeenNthCalledWith(2, \"No response from OpenAI\");\n+  });\n+\n+  it(\"should construct the chat history correctly\", async () => {\n+    const ctx = createContext(TEST_SLASH_COMMAND);\n+    const infoSpy = jest.spyOn(ctx.logger, \"info\");\n+    createComments([transformCommentTemplate(1, 1, TEST_QUESTION, \"ubiquity\", \"test-repo\", true)]);\n+    await plugin(ctx);\n+\n+    expect(infoSpy).toHaveBeenCalledTimes(3);\n+\n+    const prompt = `=== Current Issue #1 Specification === ubiquity/test-repo/1 ===\n+\n+This is a demo spec for a demo task just perfect for testing.\n+=== End Current Issue #1 Specification ===\n+\n+=== Current Issue #1 Conversation === ubiquity/test-repo #1 ===\n+\n+1 ubiquity: What is pi?\n+=== End Current Issue #1 Conversation ===\\n\n+`;\n+\n+    expect(infoSpy).toHaveBeenNthCalledWith(1, \"Asking question: what is pi?\");\n+    expect(infoSpy).toHaveBeenNthCalledWith(2, \"Sending chat to OpenAI\", {\n+      caller: LOG_CALLER,\n+      chat: [\n+        {\n+          role: \"system\",\n+          content:\n+            \"You are a GitHub integrated chatbot tasked with assisting in research and discussion on GitHub issues and pull requests.\\n        Using the provided context, address the question being asked providing a clear and concise answer with no follow-up statements.\\n        The LAST comment in 'Issue Conversation' is the most recent one, focus on it as that is the question being asked.\\n        Use GitHub flavoured markdown in your response making effective use of lists, code blocks and other supported GitHub md features.\",\n+        },\n+        {\n+          role: \"user\",\n+          content: prompt,\n+        },\n+      ],\n+    });\n+\n+    expect(infoSpy).toHaveBeenNthCalledWith(3, \"Answer: This is a mock answer for the chat\", {\n+      caller: LOG_CALLER,\n+      tokenUsage: {\n+        input: 1000,\n+        output: 150,\n+        total: 1150,\n+      },\n+    });\n+  });\n+\n+  it(\"should collect the linked issues correctly\", async () => {\n+    const ctx = createContext(TEST_SLASH_COMMAND);\n+    const infoSpy = jest.spyOn(ctx.logger, \"info\");\n+    createComments([\n+      transformCommentTemplate(1, 1, \"More context here #2\", \"ubiquity\", \"test-repo\", true),\n+      transformCommentTemplate(2, 1, TEST_QUESTION, \"ubiquity\", \"test-repo\", true),\n+      transformCommentTemplate(3, 2, \"More context here #3\", \"ubiquity\", \"test-repo\", true),\n+      transformCommentTemplate(4, 3, \"Just a comment\", \"ubiquity\", \"test-repo\", true),\n+    ]);\n+\n+    await plugin(ctx);\n+\n+    expect(infoSpy).toHaveBeenCalledTimes(3);\n+\n+    expect(infoSpy).toHaveBeenNthCalledWith(1, \"Asking question: what is pi?\");\n+\n+    const prompt = `=== Current Issue #1 Specification === ubiquity/test-repo/1 ===\n+\n+This is a demo spec for a demo task just perfect for testing.\n+=== End Current Issue #1 Specification ===\n+\n+=== Current Issue #1 Conversation === ubiquity/test-repo #1 ===\n+\n+1 ubiquity: More context here #2\n+2 ubiquity: What is pi?\n+=== End Current Issue #1 Conversation ===\n+\n+=== Linked Issue #2 Specification === ubiquity/test-repo/2 ===\n+\n+Related to issue #3\n+=== End Linked Issue #2 Specification ===\n+\n+=== Linked Issue #2 Conversation === ubiquity/test-repo #2 ===\n+\n+3 ubiquity: More context here #3\n+=== End Linked Issue #2 Conversation ===\n+\n+=== Linked Issue #3 Specification === ubiquity/test-repo/3 ===\n+\n+Just another issue\n+=== End Linked Issue #3 Specification ===\n+\n+=== Linked Issue #3 Conversation === ubiquity/test-repo #3 ===\n+\n+4 ubiquity: Just a comment\n+=== End Linked Issue #3 Conversation ===\\n\n+`;\n+\n+    expect(infoSpy).toHaveBeenNthCalledWith(2, \"Sending chat to OpenAI\", {\n+      caller: LOG_CALLER,\n+      chat: [\n+        {\n+          role: \"system\",\n+          content: `You are a GitHub integrated chatbot tasked with assisting in research and discussion on GitHub issues and pull requests.\\n        Using the provided context, address the question being asked providing a clear and concise answer with no follow-up statements.\\n        The LAST comment in 'Issue Conversation' is the most recent one, focus on it as that is the question being asked.\\n        Use GitHub flavoured markdown in your response making effective use of lists, code blocks and other supported GitHub md features.`,","score":{"reward":0.175,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-48.994999999999976,"syllables":6,"sentences":1,"score":0},"multiplier":1,"relevance":0.7}},{"id":1776362061,"content":"It's more natural to use it this way","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776362061","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,5 @@\n+{\n+  \"name\": \"command-ask\",\n+  \"description\": \"A highly context aware organization integrated chatbot\",\n+  \"ubiquity:listeners\": [\"issue_comment.created\"]","score":{"reward":1.01,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":94.30000000000001,"syllables":11,"sentences":1,"score":0.6569999999999999},"multiplier":1,"relevance":1}},{"id":1779440462,"content":"Why don't you downgrade to 1.22.21 so you don't have this problem anymore","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1779440462","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -79,5 +78,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@1.22.22\"","score":{"reward":0.785,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":96.57745098039217,"syllables":21,"sentences":3,"score":0.6342254901960783},"multiplier":1,"relevance":0.5}},{"id":1779440674,"content":"Did you test using the openai playground for optimizing the prompt? If not, please do in a new task.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1779440674","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,161 @@\n+import { ChatCompletionMessageParam } from \"openai/resources\";\n+import { Context } from \"../types\";\n+import { StreamlinedComment, StreamlinedComments } from \"../types/gpt\";\n+import { createKey, streamlineComments } from \"../handlers/comments\";\n+import { fetchPullRequestDiff, fetchIssue, fetchIssueComments } from \"./issue-fetching\";\n+import { splitKey } from \"./issue\";\n+\n+export async function formatChatHistory(context: Context, streamlined: Record<string, StreamlinedComment[]>, specAndBodies: Record<string, string>) {\n+  const convoKeys = Object.keys(streamlined);\n+  const specAndBodyKeys = Object.keys(specAndBodies);\n+  const chatHistory: string[] = [];\n+  const currentIssueKey = createKey(context.payload.issue.html_url);\n+  const keys: string[] = Array.from(new Set([...convoKeys, ...specAndBodyKeys, currentIssueKey]));\n+\n+  for (const key of keys) {\n+    const isCurrentIssue = key === currentIssueKey;\n+    const block = await createContextBlockSection(context, key, streamlined, specAndBodies, isCurrentIssue);\n+    chatHistory.push(block);\n+  }\n+\n+  return Array.from(new Set(chatHistory)).join(\"\");\n+}\n+\n+function getCorrectHeaderString(isPull: string | null, issueNumber: number, isCurrentIssue: boolean, isBody: boolean) {\n+  const strings = {\n+    pull: {\n+      linked: `Linked Pull #${issueNumber} Request`,\n+      current: `Current Pull #${issueNumber} Request`,\n+    },\n+    issue: {\n+      linked: `Linked Issue #${issueNumber} Specification`,\n+      current: `Current Issue #${issueNumber} Specification`,\n+    },\n+    convo: {\n+      linked: `Linked Issue #${issueNumber} Conversation`,\n+      current: `Current Issue #${issueNumber} Conversation`,\n+    },\n+  };\n+\n+  let header = \"\";\n+\n+  if (isPull) {\n+    header = isCurrentIssue ? strings.pull.current : strings.pull.linked;\n+  } else {\n+    header = isCurrentIssue ? strings.issue.current : strings.issue.linked;\n+  }\n+\n+  if (isBody) {\n+    header = isCurrentIssue ? strings.convo.current : strings.convo.linked;\n+  }\n+\n+  return header;\n+}\n+\n+async function createContextBlockSection(\n+  context: Context,\n+  key: string,\n+  streamlined: Record<string, StreamlinedComment[]>,\n+  specAndBodies: Record<string, string>,\n+  isCurrentIssue: boolean\n+) {\n+  let comments = streamlined[key];\n+\n+  if (!comments || comments.length === 0) {\n+    const [owner, repo, number] = splitKey(key);\n+    const { comments: comments_ } = await fetchIssueComments({\n+      context,\n+      owner,\n+      repo,\n+      issueNum: parseInt(number),\n+    });\n+\n+    comments = streamlineComments(comments_)[key];\n+  }\n+\n+  const [org, repo, issueNum] = key.split(\"/\");\n+\n+  const issueNumber = parseInt(issueNum);\n+  const prDiff = await fetchPullRequestDiff(context, org, repo, issueNumber);\n+\n+  if (!issueNumber || isNaN(issueNumber)) {\n+    throw context.logger.error(\"Issue number is not valid\");\n+  }\n+\n+  const specHeader = getCorrectHeaderString(prDiff, issueNumber, isCurrentIssue, false);\n+\n+  let specOrBody = specAndBodies[key];\n+  if (!specOrBody) {\n+    specOrBody =\n+      (\n+        await fetchIssue({\n+          context,\n+          owner: org,\n+          repo,\n+          issueNum: issueNumber,\n+        })\n+      )?.body || \"No specification or body available\";\n+  }\n+  const specOrBodyBlock = [createHeader(specHeader, key), createSpecOrBody(specOrBody), createFooter(specHeader)];\n+\n+  const header = getCorrectHeaderString(prDiff, issueNumber, isCurrentIssue, true);\n+  const repoString = `${org}/${repo} #${issueNumber}`;\n+\n+  const block = [specOrBodyBlock.join(\"\"), createHeader(header, repoString), createComment({ issueNumber, repo, org, comments }), createFooter(header)];\n+\n+  if (!prDiff) {\n+    return block.join(\"\");\n+  }\n+\n+  const diffBlock = [createHeader(\"Linked Pull Request Code Diff\", repoString), prDiff, createFooter(\"Linked Pull Request Code Diff\")];\n+\n+  return block.concat(diffBlock).join(\"\");\n+}\n+\n+function createHeader(content: string, repoString: string) {\n+  return `=== ${content} === ${repoString} ===\\n\\n`;\n+}\n+\n+function createFooter(content: string) {\n+  return `=== End ${content} ===\\n\\n`;\n+}\n+\n+function createComment(comment: StreamlinedComments) {\n+  if (!comment.comments) {\n+    return \"\";\n+  }\n+  const comments = [];\n+\n+  // filter dupes\n+  comment.comments = comment.comments?.filter((c, i, a) => a.findIndex((cc) => cc.id === c.id) === i);\n+\n+  for (const c of comment.comments) {\n+    comments.push(`${c.id} ${c.user}: ${c.body}\\n`);\n+  }\n+  return comments.join(\"\");\n+}\n+\n+function createSpecOrBody(specOrBody: string) {\n+  return `${specOrBody}\\n`;\n+}\n+\n+export function createChatHistory(formattedChat: string) {\n+  const chatHistory: ChatCompletionMessageParam[] = [];\n+\n+  const systemMessage: ChatCompletionMessageParam = {\n+    role: \"system\",\n+    content: `You are a GitHub integrated chatbot tasked with assisting in research and discussion on GitHub issues and pull requests.\n+Using the provided context, address the question being asked providing a clear and concise answer with no follow-up statements.\n+The LAST comment in 'Issue Conversation' is the most recent one, focus on it as that is the question being asked.\n+Use GitHub flavoured markdown in your response making effective use of lists, code blocks and other supported GitHub md features.`,","score":{"reward":1.593,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":81.42407894736841,"syllables":26,"sentences":2,"score":0.7857592105263158},"multiplier":1,"relevance":0.9}},{"id":1779442458,"content":"Empty string always seems wrong.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1779442458","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -18,7 +18,12 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n  * The kernel will extract those and pass them to the plugin,\n  * which are built into the context object from setup().\n  */\n-export const pluginSettingsSchema = T.Object({});\n+\n+export const pluginSettingsSchema = T.Object({\n+  model: T.String({ default: \"o1-mini\" }),\n+  openAiBaseUrl: T.String({ default: \"\" }),","score":{"reward":0.455,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.7}},{"id":1779925947,"content":"No it's not a problem for anybody except your yarn","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1779925947","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -79,5 +78,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@1.22.22\"","score":{"reward":0.488,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":72.61545454545457,"syllables":16,"sentences":1,"score":0.8738454545454544},"multiplier":1,"relevance":0.4}},{"id":1780972176,"content":"I never agreed","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1780972176","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -79,5 +78,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@1.22.22\"","score":{"reward":0.135,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":62.79000000000002,"syllables":5,"sentences":1,"score":0.9720999999999997},"multiplier":1,"relevance":0.3}},{"id":2246836103,"content":"Curious to see examples.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2246836103","commentType":"PULL_COLLABORATOR","score":{"reward":0.162,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":33.57500000000002,"syllables":8,"sentences":1,"score":0.7357500000000001},"multiplier":1,"relevance":0.3}},{"id":2362637498,"content":"Maybe let's test in production but let's make it reply to @UbiquityOS instead of /gpt\n1. Make the change\n2. Merge\n3. Install config \nAnd let's go from there","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2362637498","commentType":"PULL_COLLABORATOR","score":{"reward":2.2,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":1,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":66.5448275862069,"syllables":38,"sentences":1,"score":0.934551724137931},"multiplier":1,"relevance":0.8}},{"id":2370762222,"content":"Merge or delete this repo? @Keyrxng","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2370762222","commentType":"PULL_COLLABORATOR","score":{"reward":0.37,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":90.99000000000004,"syllables":8,"sentences":2,"score":0.6900999999999996},"multiplier":1,"relevance":0.5}},{"id":2372782346,"content":"Sure we can rename later","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2372782346","commentType":"PULL_COLLABORATOR","score":{"reward":0.26,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":0.4}},{"id":2375043874,"content":"`command-ask` is fine for now. Your QA makes it look stable. Can we start using it? Also I want to mention that I have access to o1 from the API now. \r\nhttps://platform.openai.com/docs/guides/reasoning\r\nI'm not sure which model is best. I'm assuming `o1-mini` is pretty solid for our use case though. \r\n---","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2375043874","commentType":"PULL_COLLABORATOR","score":{"reward":3.24,"formatting":{"content":{"p":{"score":0,"elementCount":3},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":49,"wordValue":0.1,"result":2.37},"readability":{"fleschKincaid":92.46928571428575,"syllables":71,"sentences":8,"score":0.6753071428571426},"multiplier":1,"relevance":0.8}},{"id":2375887264,"content":"I think it's fine. A comment responding ten seconds later isn't a problem","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2375887264","commentType":"PULL_COLLABORATOR","score":{"reward":0.9,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":80.78250000000001,"syllables":21,"sentences":2,"score":0.7921749999999999},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2176163612,"effect":{"addition":679,"deletion":53},"reward":7.32,"priority":1},{"reviewId":2195598182,"effect":{"addition":793,"deletion":461},"reward":12.54,"priority":1},{"reviewId":2330078610,"effect":{"addition":698,"deletion":246},"reward":9.44,"priority":1},{"reviewId":2334966010,"effect":{"addition":22,"deletion":24},"reward":0.46,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 74.132 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>29.76</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>9.56</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.784</td></tr><tr><td>Review</td><td>Comment</td><td>32</td><td>32.028</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+679 -53</td><td>1</td><td>7.32</td></tr><tr><td>+793 -461</td><td>1</td><td>12.54</td></tr><tr><td>+698 -246</td><td>1</td><td>9.44</td></tr><tr><td>+22 -24</td><td>1</td><td>0.46</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/29\" target=\"_blank\" rel=\"noopener\"># Overview- Similar to an old proposal for &#96;/ask&#96;.- &hellip;</a></h6></td><td><details><summary>7.5</summary><pre>content:&#13;  content:&#13;    h1:&#13;      score: 1&#13;      elementCount: 4&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 9&#13;    p:&#13;      score: 0&#13;      elementCount: 25&#13;  result: 4.9&#13;regex:&#13;  wordCount: 100&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>1</td><td>1</td><td>9.56</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2225294388\" target=\"_blank\" rel=\"noopener\">Seems easier to redo we have a ton of new functions to borrow li&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.968</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2340242913\" target=\"_blank\" rel=\"noopener\">It's been two months since the last activity on that pull so it &hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.816</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676753876\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionname: \"command-gpt\"&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>1</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754128\" target=\"_blank\" rel=\"noopener\">Definitely just ignore all bot comments as we do in conversation&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.032</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754228\" target=\"_blank\" rel=\"noopener\">Will this be a problem? It is not clear to me if the kernel will&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.629</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754270\" target=\"_blank\" rel=\"noopener\">Shouldn't this be fully removed instead of &#96;never&#96;?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.752</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754450\" target=\"_blank\" rel=\"noopener\">Use a &#96;string[]&#96; as the buffer and &#96;.join(\"\\n\")&#96;&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.144</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754745\" target=\"_blank\" rel=\"noopener\">It would be useful context to explain the purpose of the plugin,&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.952</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754853\" target=\"_blank\" rel=\"noopener\">Why not all? Context length is not a problem anymore.</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.666</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754902\" target=\"_blank\" rel=\"noopener\">I think that recursion is not a problem due to generous context &hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.224</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676754978\" target=\"_blank\" rel=\"noopener\">Just be sure to label the section with the org/repo name and Cha&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.316</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676842567\" target=\"_blank\" rel=\"noopener\">I prefer to exclude for now.</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.444</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676842699\" target=\"_blank\" rel=\"noopener\">@gentlementlegen might know.</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.24</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676842973\" target=\"_blank\" rel=\"noopener\">I prefer to try utilizing the most amount of context. We can mak&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.296</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1676843159\" target=\"_blank\" rel=\"noopener\">I prefer maximizing signal to noise in the context of human comm&hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.208</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689084951\" target=\"_blank\" rel=\"noopener\">&#96;enabled&#96; seems like a pointless config. Please remove t&hellip;</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.744</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689085626\" target=\"_blank\" rel=\"noopener\">If it is not a pull shouldn't this revert or throw? Doesn't make&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.989</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689086710\" target=\"_blank\" rel=\"noopener\">You can recycle strings with a const in the beginning of this fi&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.828</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689087649\" target=\"_blank\" rel=\"noopener\">Why? Can't you just write the code to be in line with our styles?</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.099</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689088291\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionhttp.get(\"https://api.github.com/or&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.756</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689089521\" target=\"_blank\" rel=\"noopener\">Why not just use the correct object? Why cast as &#96;any&#96;?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.936</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1689091491\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestioncontent: &#96;You are a Git&hellip;</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.175</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776362061\" target=\"_blank\" rel=\"noopener\">It's more natural to use it this way</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>1</td><td>1</td><td>1.01</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1779440462\" target=\"_blank\" rel=\"noopener\">Why don't you downgrade to 1.22.21 so you don't have this proble&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.785</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1779440674\" target=\"_blank\" rel=\"noopener\">Did you test using the openai playground for optimizing the prom&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.593</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1779442458\" target=\"_blank\" rel=\"noopener\">Empty string always seems wrong.</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.455</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1779925947\" target=\"_blank\" rel=\"noopener\">No it's not a problem for anybody except your yarn</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.488</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1780972176\" target=\"_blank\" rel=\"noopener\">I never agreed</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.135</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2246836103\" target=\"_blank\" rel=\"noopener\">Curious to see examples.</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.162</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2362637498\" target=\"_blank\" rel=\"noopener\">Maybe let's test in production but let's make it reply to @Ubiqu&hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.2</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2370762222\" target=\"_blank\" rel=\"noopener\">Merge or delete this repo? @Keyrxng</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.37</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2372782346\" target=\"_blank\" rel=\"noopener\">Sure we can rename later</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.26</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2375043874\" target=\"_blank\" rel=\"noopener\">&#96;command-ask&#96; is fine for now. Your QA makes it look sta&hellip;</a></h6></td><td><details><summary>3.37</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 49&#13;  wordValue: 0.1&#13;  result: 2.37&#13;</pre></details></td><td>0.8</td><td>1</td><td>3.24</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2375887264\" target=\"_blank\" rel=\"noopener\">I think it's fine. A comment responding ten seconds later isn't &hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.9</td></tr></tbody></table></details>"},"gentlementlegen":{"total":38.751,"userId":9807008,"comments":[{"id":2339630460,"content":"It seems that the `user-activity-watcher` ignores when a user opened a pull-request against an issue and considers there is no activity.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2339630460","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.392,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":56.6057142857143,"syllables":32,"sentences":1,"score":0.966057142857143},"multiplier":1,"relevance":0.2}},{"id":2342425481,"content":"There was an issue opened for this case: https://github.com/ubiquibot/command-start-stop/issues/27","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2342425481","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.444,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":73.79573529411766,"syllables":25,"sentences":2,"score":0.8620426470588234},"multiplier":1,"relevance":0.2}},{"id":2330005061,"content":"Would be nice to be able to configure the ChatGpt endpoint and model through the configuration (can be inside another issue).","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#pullrequestreview-2330005061","commentType":"PULL_COLLABORATOR","score":{"reward":1.344,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":48.54857142857145,"syllables":34,"sentences":1,"score":0.8854857142857145},"multiplier":1,"relevance":0.7}},{"id":1678675275,"content":"I think the kernel will have to be changed because currently plugins can only have one command which is problematic for the ones like `start stop` which is only working for one of the two commands.\r\nSecond, the plugin can be set in the wildcard, or the wrong event, so it is possible that it is called from the wrong event, or the wrong command payload.\r\nTL;DR it is not required but definitely safer to have the checks there.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1678675275","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,47 +1,70 @@\n import { Octokit } from \"@octokit/rest\";\n-import { createClient } from \"@supabase/supabase-js\";\n-import { createAdapters } from \"./adapters\";\n-import { Env, PluginInputs } from \"./types\";\n+import { Env, PluginInputs, SupportedEventsU } from \"./types\";\n import { Context } from \"./types\";\n+import { askQuestion } from \"./handlers/ask-gpt\";\n+import { addCommentToIssue } from \"./handlers/add-comment\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n \n /**\n  * How a worker executes the plugin.\n  */\n export async function plugin(inputs: PluginInputs, env: Env) {\n   const octokit = new Octokit({ auth: inputs.authToken });\n-  const supabase = createClient(env.SUPABASE_URL, env.SUPABASE_KEY);\n \n   const context: Context = {\n     eventName: inputs.eventName,\n     payload: inputs.eventPayload,\n     config: inputs.settings,\n     octokit,\n     env,\n-    logger: {\n-      debug(message: unknown, ...optionalParams: unknown[]) {\n-        console.debug(message, ...optionalParams);\n-      },\n-      info(message: unknown, ...optionalParams: unknown[]) {\n-        console.log(message, ...optionalParams);\n-      },\n-      warn(message: unknown, ...optionalParams: unknown[]) {\n-        console.warn(message, ...optionalParams);\n-      },\n-      error(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-      fatal(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-    },\n-    adapters: {} as ReturnType<typeof createAdapters>,\n+    logger: new Logs(\"info\"),\n+    adapters: {} as never,\n   };\n+  const {\n+    logger,\n+    config: { isEnabled },\n+  } = context;\n \n-  context.adapters = createAdapters(supabase, context);\n+  if (isSupportedEvent(context.eventName)) {\n+    const comment = context.payload.comment.body;\n \n-  if (context.eventName === \"issue_comment.created\") {\n-    // do something\n+    if (!comment.startsWith(\"/gpt\")) {\n+      logger.info(\"Comment does not start with /gpt. Skipping.\");","score":{"reward":3.042,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":1,"words":{"wordCount":78,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":65.47576923076926,"syllables":106,"sentences":3,"score":0.9452423076923074},"multiplier":1,"relevance":0.9}},{"id":1680547173,"content":"Related PR for the fix is [here](https://github.com/ubiquity/ubiquibot-kernel/issues/75).","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1680547173","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,47 +1,70 @@\n import { Octokit } from \"@octokit/rest\";\n-import { createClient } from \"@supabase/supabase-js\";\n-import { createAdapters } from \"./adapters\";\n-import { Env, PluginInputs } from \"./types\";\n+import { Env, PluginInputs, SupportedEventsU } from \"./types\";\n import { Context } from \"./types\";\n+import { askQuestion } from \"./handlers/ask-gpt\";\n+import { addCommentToIssue } from \"./handlers/add-comment\";\n+import { Logs } from \"@ubiquity-dao/ubiquibot-logger\";\n \n /**\n  * How a worker executes the plugin.\n  */\n export async function plugin(inputs: PluginInputs, env: Env) {\n   const octokit = new Octokit({ auth: inputs.authToken });\n-  const supabase = createClient(env.SUPABASE_URL, env.SUPABASE_KEY);\n \n   const context: Context = {\n     eventName: inputs.eventName,\n     payload: inputs.eventPayload,\n     config: inputs.settings,\n     octokit,\n     env,\n-    logger: {\n-      debug(message: unknown, ...optionalParams: unknown[]) {\n-        console.debug(message, ...optionalParams);\n-      },\n-      info(message: unknown, ...optionalParams: unknown[]) {\n-        console.log(message, ...optionalParams);\n-      },\n-      warn(message: unknown, ...optionalParams: unknown[]) {\n-        console.warn(message, ...optionalParams);\n-      },\n-      error(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-      fatal(message: unknown, ...optionalParams: unknown[]) {\n-        console.error(message, ...optionalParams);\n-      },\n-    },\n-    adapters: {} as ReturnType<typeof createAdapters>,\n+    logger: new Logs(\"info\"),\n+    adapters: {} as never,\n   };\n+  const {\n+    logger,\n+    config: { isEnabled },\n+  } = context;\n \n-  context.adapters = createAdapters(supabase, context);\n+  if (isSupportedEvent(context.eventName)) {\n+    const comment = context.payload.comment.body;\n \n-  if (context.eventName === \"issue_comment.created\") {\n-    // do something\n+    if (!comment.startsWith(\"/gpt\")) {\n+      logger.info(\"Comment does not start with /gpt. Skipping.\");","score":{"reward":1.32,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1776309633,"content":"Only `.dev.vars.example` is needed isn't it?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776309633","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.395,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1776310034,"content":"I made little changes on `workflow-delete` and `workflow-create` sorry about that: https://github.com/ubiquity-os/plugin-template/commit/dbb9b22049cdd45bbda0230b61a5095d73771ff5","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776310034","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.952,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":61.400000000000034,"syllables":29,"sentences":2,"score":0.9859999999999997},"multiplier":1,"relevance":0.4}},{"id":1776310379,"content":"It is missing the command definition, how can it run?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776310379","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,5 @@\n+{\n+  \"name\": \"command-ask\",\n+  \"description\": \"A highly context aware organization integrated chatbot\",\n+  \"ubiquity:listeners\": [\"issue_comment.created\"]","score":{"reward":0.912,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":69.78500000000001,"syllables":15,"sentences":1,"score":0.9021499999999999},"multiplier":1,"relevance":0.8}},{"id":1776311319,"content":"Shouldn't this be handle when we decode the env?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776311319","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,47 @@\n+import OpenAI from \"openai\";\n+import { Context } from \"../types\";\n+import { createChatHistory, formatChatHistory } from \"../helpers/format-chat-history\";\n+import { recursivelyFetchLinkedIssues } from \"../helpers/issue-fetching\";\n+\n+export async function askQuestion(context: Context, question: string) {\n+  if (!question) {\n+    throw context.logger.error(`No question provided`);\n+  }\n+\n+  const { specAndBodies, streamlinedComments } = await recursivelyFetchLinkedIssues({ context });\n+\n+  const formattedChat = await formatChatHistory(context, streamlinedComments, specAndBodies);\n+  return await askGpt(context, formattedChat);\n+}\n+\n+export async function askGpt(context: Context, formattedChat: string) {\n+  const {\n+    logger,\n+    env: { OPENAI_API_KEY },\n+  } = context;\n+\n+  if (!OPENAI_API_KEY) {\n+    throw logger.error(`No OpenAI API Key detected!`);","score":{"reward":0.756,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":95.165,"syllables":12,"sentences":1,"score":0.64835},"multiplier":1,"relevance":0.7}},{"id":1776313300,"content":"Should probably be camelCase","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776313300","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -18,7 +18,11 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n  * The kernel will extract those and pass them to the plugin,\n  * which are built into the context object from setup().\n  */\n-export const pluginSettingsSchema = T.Object({});\n+\n+export const pluginSettingsSchema = T.Object({\n+  ubiquity_os_app_slug: T.String(),","score":{"reward":0.324,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":33.57500000000002,"syllables":8,"sentences":1,"score":0.7357500000000001},"multiplier":1,"relevance":0.6}},{"id":1776329652,"content":"So how is that plugin used? I thought it would be something like `/ask`","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776329652","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,5 @@\n+{\n+  \"name\": \"command-ask\",\n+  \"description\": \"A highly context aware organization integrated chatbot\",\n+  \"ubiquity:listeners\": [\"issue_comment.created\"]","score":{"reward":0.655,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":96.11442307692309,"syllables":16,"sentences":2,"score":0.6388557692307691},"multiplier":1,"relevance":0.5}},{"id":1776353045,"content":"I see. Any reason to do it that way instead of a command?","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776353045","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,5 @@\n+{\n+  \"name\": \"command-ask\",\n+  \"description\": \"A highly context aware organization integrated chatbot\",\n+  \"ubiquity:listeners\": [\"issue_comment.created\"]","score":{"reward":0.655,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":96.11442307692309,"syllables":16,"sentences":2,"score":0.6388557692307691},"multiplier":1,"relevance":0.5}},{"id":1776738139,"content":"Do we need optional with the defaults? Also be careful not sure if it works if you send an empty string to the OpenAI constructor for the base url if it works.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776738139","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -18,7 +18,12 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n  * The kernel will extract those and pass them to the plugin,\n  * which are built into the context object from setup().\n  */\n-export const pluginSettingsSchema = T.Object({});\n+\n+export const pluginSettingsSchema = T.Object({","score":{"reward":1.952,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":76.91375000000001,"syllables":43,"sentences":2,"score":0.8308625},"multiplier":1,"relevance":0.8}},{"id":1776784905,"content":"Because a check is done https://github.com/ubiquity-os-marketplace/conversation-rewards/blob/2da6b868c9700b68e5bbedfb64683e42b384755c/src/parser/content-evaluator-module.ts#L29\r\nIt's fine to use optional, but usually not useful if there is a default because a value will be given either way.","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776784905","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -18,7 +18,12 @@ export interface PluginInputs<T extends SupportedEventsU = SupportedEventsU, TU\n  * The kernel will extract those and pass them to the plugin,\n  * which are built into the context object from setup().\n  */\n-export const pluginSettingsSchema = T.Object({});\n+\n+export const pluginSettingsSchema = T.Object({","score":{"reward":2.478,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":46.85000000000002,"syllables":77,"sentences":3,"score":0.8685000000000003},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2179084017,"effect":{"addition":679,"deletion":53},"reward":7.32,"priority":1},{"reviewId":2329998529,"effect":{"addition":1167,"deletion":371},"reward":15.38,"priority":1},{"reviewId":2330693263,"effect":{"addition":19,"deletion":24},"reward":0.43,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 38.751 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>23.13</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>0.836</td></tr><tr><td>Review</td><td>Comment</td><td>12</td><td>14.785</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1\" target=\"_blank\" rel=\"noopener\">#1</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+679 -53</td><td>1</td><td>7.32</td></tr><tr><td>+1167 -371</td><td>1</td><td>15.38</td></tr><tr><td>+19 -24</td><td>1</td><td>0.43</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2339630460\" target=\"_blank\" rel=\"noopener\">It seems that the &#96;user-activity-watcher&#96; ignores when a&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.392</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/29#issuecomment-2342425481\" target=\"_blank\" rel=\"noopener\">There was an issue opened for this case: https://github.com/ubiq&hellip;</a></h6></td><td><details><summary>1.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.444</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#pullrequestreview-2330005061\" target=\"_blank\" rel=\"noopener\">Would be nice to be able to configure the ChatGpt endpoint and m&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.7</td><td>1</td><td>1.344</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1678675275\" target=\"_blank\" rel=\"noopener\">I think the kernel will have to be changed because currently plu&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 78&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>1</td><td>3.042</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1680547173\" target=\"_blank\" rel=\"noopener\">Related PR for the fix is [here](https://github.com/ubiquity/ubi&hellip;</a></h6></td><td><details><summary>1.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.32</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776309633\" target=\"_blank\" rel=\"noopener\">Only &#96;.dev.vars.example&#96; is needed isn't it?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.395</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776310034\" target=\"_blank\" rel=\"noopener\">I made little changes on &#96;workflow-delete&#96; and &#96;work&hellip;</a></h6></td><td><details><summary>1.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.952</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776310379\" target=\"_blank\" rel=\"noopener\">It is missing the command definition, how can it run?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.8</td><td>1</td><td>0.912</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776311319\" target=\"_blank\" rel=\"noopener\">Shouldn't this be handle when we decode the env?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.756</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776313300\" target=\"_blank\" rel=\"noopener\">Should probably be camelCase</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.324</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776329652\" target=\"_blank\" rel=\"noopener\">So how is that plugin used? I thought it would be something like&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.655</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776353045\" target=\"_blank\" rel=\"noopener\">I see. Any reason to do it that way instead of a command?</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.655</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776738139\" target=\"_blank\" rel=\"noopener\">Do we need optional with the defaults? Also be careful not sure &hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.952</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#discussion_r1776784905\" target=\"_blank\" rel=\"noopener\">Because a check is done https://github.com/ubiquity-os-marketpla&hellip;</a></h6></td><td><details><summary>2.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.7</td><td>1</td><td>2.478</td></tr></tbody></table></details>"},"shiv810":{"total":0.804,"userId":53160903,"comments":[{"id":2395517480,"content":"@Keyrxng I think it would be a good idea for me to continue with this PR, as my #2 PR builds on it.\r\n@0x4007 rfc","url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2395517480","commentType":"PULL_COLLABORATOR","score":{"reward":0.804,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":99.3955,"syllables":28,"sentences":2,"score":0.6060450000000001},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/command-ask/pull/1"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.804 XP ]</a>&nbsp;</h3><h6>@shiv810</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>0.804</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/command-ask/pull/1#issuecomment-2395517480\" target=\"_blank\" rel=\"noopener\">@Keyrxng I think it would be a good idea for me to continue with&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.804</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_75.json","json":{"gentlementlegen":{"userId":9807008,"total":61.571,"task":{"reward":50,"multiplier":1},"comments":[{"id":2232322181,"content":"I think in some cases it would lead to a lot of duplicated code, thus lot of duplicated bugs. Maybe start stop is not the best example (plus we talked about assigning without the need to do the `/start` command just by linking a pull-request), but probably for complex commands it will be a required feature.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75#issuecomment-2232322181","commentType":"ISSUE_AUTHOR","score":{"reward":2.853,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":65.1114285714286,"syllables":75,"sentences":2,"score":0.948885714285714},"multiplier":1,"relevance":0.9}},{"id":2232371364,"content":"It should be a fairly simple change (< 1h, tops 2h with the related tests), and would be required for our current version of `start stop`.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75#issuecomment-2232371364","commentType":"ISSUE_AUTHOR","score":{"reward":1.608,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":76.82043478260871,"syllables":29,"sentences":1,"score":0.8317956521739128},"multiplier":1,"relevance":0.8}},{"id":2410994339,"content":"The Kernel does not forward commands if the configuration does not list the command, as seen in [this code](https://github.com/ubiquity/ubiquibot-kernel/blob/41dd0cef127607e568c2ad8cab68de6b35d99d8a/src/github/handlers/index.ts#L38).\r\nIt works usually fine except for plugins that can handle multiple commands, such as [start stop](https://github.com/ubiquibot/command-start-stop).\r\nOnce the [manifests](https://github.com/ubiquity/ubiquibot-kernel/issues/73) are up and running, it would be important to update the logic so multiple commands can be handled by the same plugin.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.11,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":3}},"result":3},"priority":1,"words":{"wordCount":60,"wordValue":0.1,"result":2.52},"readability":{"fleschKincaid":63.86500000000004,"syllables":87,"sentences":3,"score":0.9613499999999996},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 61.571 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.11</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>4.461</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75\" target=\"_blank\" rel=\"noopener\">The Kernel does not forward commands if the configuration does n&hellip;</a></h6></td><td><details><summary>5.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3&#13;regex:&#13;  wordCount: 60&#13;  wordValue: 0.1&#13;  result: 2.52&#13;</pre></details></td><td>1</td><td>1</td><td>7.11</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75#issuecomment-2232322181\" target=\"_blank\" rel=\"noopener\">I think in some cases it would lead to a lot of duplicated code,&hellip;</a></h6></td><td><details><summary>2.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.853</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75#issuecomment-2232371364\" target=\"_blank\" rel=\"noopener\">It should be a fairly simple change (&lt; 1h, tops 2h with the r&hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.608</td></tr></tbody></table></details>"},"0x4007":{"total":5.308,"userId":4975670,"comments":[{"id":2232280376,"content":"This is half relevant comment, but what if we force each plugin to only support a single command so that they are tightly scoped? \r\nI am conflicted because on one hand I want to make the kernel superior to be able to handle everything. On the other hand, I want to encourage solid plugin development. I don't want to see developers tempted to make one super plugin that has tons of capabilities and is a mess of code etc. More modularity allows partners to more finely customize their configurations for their requirements. \r\n(`/stop` technically can be replaced by the assignee self unassigning using the GitHub UI.)","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75#issuecomment-2232280376","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.988,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":1,"words":{"wordCount":106,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":55.78575471698113,"syllables":170,"sentences":7,"score":0.9578575471698113},"multiplier":1,"relevance":0.9}},{"id":2232352236,"content":"Yes but this clearly illustrates that it isn't a priority now right? \r\nAnyways, as long as the changes to the code are not complex, then we can add this capability now. If it is complex, I think its wise to defer until absolutely needed.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75#issuecomment-2232352236","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.32,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":71.29000000000002,"syllables":64,"sentences":3,"score":0.8870999999999998},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/77"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 5.308 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>5.308</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75#issuecomment-2232280376\" target=\"_blank\" rel=\"noopener\">This is half relevant comment, but what if we force each plugin &hellip;</a></h6></td><td><details><summary>2.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 106&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.988</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/75#issuecomment-2232352236\" target=\"_blank\" rel=\"noopener\">Yes but this clearly illustrates that it isn't a priority now ri&hellip;</a></h6></td><td><details><summary>2.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.32</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-template_42.json","json":{"whilefoo":{"userId":139262667,"total":18,"task":{"reward":18,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 18 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>18</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"},"0x4007":{"total":6.333,"userId":4975670,"comments":[{"id":2615461403,"content":"@gentlementlegen rfc","url":"https://github.com/ubiquity-os/plugin-template/issues/42#issuecomment-2615461403","commentType":"ISSUE_AUTHOR","score":{"reward":0.45,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":-48.994999999999976,"syllables":6,"sentences":1,"score":0},"multiplier":1,"relevance":0.6}},{"id":2615461420,"content":"This should be on by default","url":"https://github.com/ubiquity-os/plugin-template/issues/42#issuecomment-2615461420","commentType":"ISSUE_AUTHOR","score":{"reward":2.133,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.9}},{"id":2812718125,"content":"I think this is the right repository to file this issue in.\nSet up TypeScript source maps for stack traces in embedded metadata by default.\n _Originally posted by @0x4007 in [#72](https://github.com/ubiquity-os-marketplace/text-vector-embeddings/issues/72#issuecomment-2615056144)_","url":"https://github.com/ubiquity-os/plugin-template/issues/42","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.75,"formatting":{"content":{"p":{"score":0,"elementCount":1},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":65.35311827956991,"syllables":48,"sentences":3,"score":0.9464688172043009},"multiplier":1,"relevance":1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/47"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 6.333 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.75</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.583</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/42\" target=\"_blank\" rel=\"noopener\">I think this is the right repository to file this issue in.Set &hellip;</a></h6></td><td><details><summary>2.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>1</td><td>1</td><td>3.75</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/42#issuecomment-2615461403\" target=\"_blank\" rel=\"noopener\">@gentlementlegen rfc</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.45</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/42#issuecomment-2615461420\" target=\"_blank\" rel=\"noopener\">This should be on by default</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.133</td></tr></tbody></table></details>"},"gentlementlegen":{"total":8.408,"userId":9807008,"comments":[{"id":2615461415,"content":"You can enable the source map in the compilation action, and it is unrelated to the SDK.\nhttps://github.com/ubiquity-os/action-deploy-plugin/blob/main/action.yml#L26","url":"https://github.com/ubiquity-os/plugin-template/issues/42#issuecomment-2615461415","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.408,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":69.5025,"syllables":46,"sentences":4,"score":0.904975},"multiplier":1,"relevance":0.95}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/plugin-template/pull/47"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 8.408 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>8.408</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/42#issuecomment-2615461415\" target=\"_blank\" rel=\"noopener\">You can enable the source map in the compilation action, and it &hellip;</a></h6></td><td><details><summary>2.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.95</td><td>3</td><td>8.408</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-sdk_46.json","json":{"0x4007":{"total":0,"userId":4975670,"comments":[{"id":2572403318,"content":"I suppose that block quoted links should not be credited.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/46#issuecomment-2572403318","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.08,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":95.165,"syllables":12,"sentences":1,"score":0.64835},"multiplier":1,"relevance":1}},{"id":2572437548,"content":"Oh I see now. It's fine to claim. Generally speaking all of the permits are fine to claim. If it's a problem I would just have to invalidate it.","url":"https://github.com/ubiquity-os/plugin-sdk/issues/46#issuecomment-2572437548","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.32,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":89.80745967741936,"syllables":40,"sentences":4,"score":0.7019254032258064},"multiplier":1,"relevance":1}}]},"gentlementlegen":{"total":0,"userId":9807008,"comments":[{"id":2572420102,"content":"@0x4007 They were not, it was the link that I didn't quote for the issue. Shall I not claim this?","url":"https://github.com/ubiquity-os/plugin-sdk/issues/46#issuecomment-2572420102","commentType":"ISSUE_AUTHOR","score":{"reward":1.584,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":107.54892857142858,"syllables":22,"sentences":2,"score":1},"multiplier":1,"relevance":0.8}},{"id":2769808331,"content":"https://github.com/Meniole/text-conversation-rewards/issues/46#issuecomment-2572236162","url":"https://github.com/ubiquity-os/plugin-sdk/issues/46","commentType":"ISSUE_SPECIFICATION","score":{"reward":1.22,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":32.05250000000001,"syllables":22,"sentences":2,"score":0.7205250000000001},"multiplier":1,"relevance":1}}]}}},{"name":"results/ubiquity-os_plugin-template_3.json","json":{"Keyrxng":{"userId":106303466,"total":51.682,"task":{"reward":50,"multiplier":1},"comments":[{"id":2344694890,"content":"Jest workflow is being triggered after `Build` which doesn't exist and it should trigger on `Knip` completion.","url":"https://github.com/ubiquity-os/plugin-template/issues/3","commentType":"ISSUE_SPECIFICATION","score":{"reward":1.62,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":68.9825,"syllables":23,"sentences":1,"score":0.910175},"multiplier":1,"relevance":1}},{"id":1912934013,"content":"Resolves #3","url":"https://github.com/ubiquity-os/plugin-template/pull/4","commentType":"PULL_SPECIFICATION","score":{"reward":0.062,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":2,"wordValue":0.1,"result":0.25},"readability":{"fleschKincaid":77.90500000000002,"syllables":3,"sentences":1,"score":0.8209499999999998},"multiplier":1,"relevance":0.2}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 51.682 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>1.62</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.062</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/3\" target=\"_blank\" rel=\"noopener\">Jest workflow is being triggered after &#96;Build&#96; which doe&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>1</td><td>1</td><td>1.62</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/4\" target=\"_blank\" rel=\"noopener\">Resolves #3</a></h6></td><td><details><summary>0.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 2&#13;  wordValue: 0.1&#13;  result: 0.25&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.062</td></tr></tbody></table></details>"},"gentlementlegen":{"total":17.608,"userId":9807008,"comments":[{"id":2133031878,"content":"I am not sure if this was changed on another PR, but Knip should run on `pull_request` not `pull_request_target`","url":"https://github.com/ubiquity-os/plugin-template/pull/4#pullrequestreview-2133031878","commentType":"PULL_COLLABORATOR","score":{"reward":2.528,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":95.02705882352943,"syllables":19,"sentences":1,"score":0.6497294117647057},"multiplier":1,"relevance":0.8}},{"id":2162097259,"content":"Would be nice to have in this one, but you can do it separately if you prefer. Since it's a one line PR it could fit here easily.","url":"https://github.com/ubiquity-os/plugin-template/pull/4#issuecomment-2162097259","commentType":"PULL_COLLABORATOR","score":{"reward":1.8,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":87.0968103448276,"syllables":36,"sentences":2,"score":0.729031896551724},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2133030501,"effect":{"addition":264,"deletion":61},"reward":6.5,"priority":2},{"reviewId":2133031878,"effect":{"addition":0,"deletion":0},"reward":0,"priority":2},{"reviewId":2138750752,"effect":{"addition":270,"deletion":69},"reward":6.78,"priority":2}],"url":"https://github.com/ubiquity-os/plugin-template/pull/4"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 17.608 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>13.28</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>4.328</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/plugin-template/pull/4\" target=\"_blank\" rel=\"noopener\">#4</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+264 -61</td><td>2</td><td>6.5</td></tr><tr><td>+0 -0</td><td>2</td><td>0</td></tr><tr><td>+270 -69</td><td>2</td><td>6.78</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/4#pullrequestreview-2133031878\" target=\"_blank\" rel=\"noopener\">I am not sure if this was changed on another PR, but Knip should&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.8</td><td>2</td><td>2.528</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/pull/4#issuecomment-2162097259\" target=\"_blank\" rel=\"noopener\">Would be nice to have in this one, but you can do it separately &hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.4</td><td>2</td><td>1.8</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-logger_50.json","json":{"whilefoo":{"userId":139262667,"total":54.058,"task":{"reward":50,"multiplier":1},"comments":[{"id":2536943503,"content":"I think those don't make sense for a logger, `redirect` won't be used, `clientError` and `serverError` are better merged as `error`\r\nCurrently we have:\r\n- logger.debug()\r\n- logger.ok()\r\n- logger.info()\r\n- logger.error()\r\n- logger.fatal()\r\nI think these are fine, although ok() and info() are rarely used, we could rename ok() to success() because I think `ok()` is too neutral.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2536943503","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.656,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5}},"result":0.5},"priority":2,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":81.03666666666669,"syllables":77,"sentences":6,"score":0.7896333333333331},"multiplier":0.25,"relevance":0.9}},{"id":2539747171,"content":"i feel like we should either make this note/tip/important/warning/caution as SDK functions separate from the logger or match them with logger methods, or both.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2539747171","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.944,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":60.579285714285746,"syllables":39,"sentences":1,"score":0.9942071428571425},"multiplier":0.25,"relevance":0.8}},{"id":2540852455,"content":"If client error will appear as Warning and server error will appear as Caution, then the user won't differentiate between those two. Even if you add status codes only developers will understand that. It's the text that will the user that they used the command with invalid parameters. If we could modify the header that would make more sense","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2540852455","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.458,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":65.14969262295084,"syllables":91,"sentences":4,"score":0.9485030737704916},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 54.058 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>4.058</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2536943503\" target=\"_blank\" rel=\"noopener\">I think those don't make sense for a logger, &#96;redirect&#96; &hellip;</a></h6></td><td><details><summary>2.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;  result: 0.5&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.656</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2539747171\" target=\"_blank\" rel=\"noopener\">i feel like we should either make this note/tip/important/warnin&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.8</td><td>2</td><td>0.944</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2540852455\" target=\"_blank\" rel=\"noopener\">If client error will appear as Warning and server error will app&hellip;</a></h6></td><td><details><summary>2.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.458</td></tr></tbody></table></details>"},"gentlementlegen":{"total":26.297,"userId":9807008,"comments":[{"id":2537039031,"content":"The functions basically match the `console` function names. Ok and info are used throughout most plug-ins, it's the green output and grey output respectively.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2537039031","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.052,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":65.55550000000002,"syllables":38,"sentences":2,"score":0.9444449999999998},"multiplier":1,"relevance":0.7}},{"id":2612572178,"content":"The bot not being part of the organization and not being a regular user indeed doesn't have access to permit generation, we could change it. On the other hand it might be safer that way, your choice.\nAs for the changes, considering only approvals accelerates the process, considering changes requested makes it safer. Maybe the later one makes more sense.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2612572178","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.652,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":63.762807377049214,"syllables":92,"sentences":4,"score":0.9623719262295078},"multiplier":1,"relevance":0.1}},{"id":2576523861,"content":"Tested here: https://github.com/Meniole/ubiquity-os-kernel/issues/20\r\nWorks fine. Maybe it is strange to have `Important` for debug and might be better without any header, and use `Important` for verbose?","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576523861","commentType":"PULL_COLLABORATOR","score":{"reward":4.564,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":77.03958333333337,"syllables":45,"sentences":3,"score":0.8296041666666664},"multiplier":1,"relevance":0.7}},{"id":2576867363,"content":"What is server and what is client? Because the kernel, the Actions and the Workers can all post errors. I think this should be the responsibility of the developer to add these in the metadata and not in the message itself","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576867363","commentType":"PULL_COLLABORATOR","score":{"reward":5.04,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":69.15845528455286,"syllables":60,"sentences":3,"score":0.9084154471544714},"multiplier":1,"relevance":0.9}},{"id":2576910515,"content":"I think this should be in the metadata, it doesn't give any useful information to the user, and for the debug we now have the url inside of the metadata and can easily figure out what broke. A logger should be generic and able to log anything without depending on the platform or environment, which is why we could embed this info in the metadata (which becomes the SDK responsibility)","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576910515","commentType":"PULL_COLLABORATOR","score":{"reward":5.457,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":71,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":38.540528169014124,"syllables":111,"sentences":2,"score":0.7854052816901412},"multiplier":1,"relevance":0.85}},{"id":2577490972,"content":"@whilefoo yes or contained within a code block? But that was just a suggestion I don't mind it the way it is, just that we maybe want debug to stand out because it is non-normal logs.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2577490972","commentType":"PULL_COLLABORATOR","score":{"reward":2.62,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":82.91315789473686,"syllables":47,"sentences":2,"score":0.7708684210526314},"multiplier":1,"relevance":0.5}},{"id":2577626972,"content":"@whilefoo Fair enough haha. Yes across our plugins I don't think verbose is used much, maybe in `command-start-stop` as well? It is hard to tell when this should be chosen instead of `ok` or `info`. In my thoughts it was just because I wouldn't expect `debug` messages to actually get posted to an issue, thus not needing the header.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2577626972","commentType":"PULL_COLLABORATOR","score":{"reward":3.672,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":57,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":82.53967105263159,"syllables":74,"sentences":4,"score":0.7746032894736841},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2538709751,"effect":{"addition":35,"deletion":27},"reward":1.24,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 26.297 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>1.24</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>3.704</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>21.353</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53\" target=\"_blank\" rel=\"noopener\">#53</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+35 -27</td><td>2</td><td>1.24</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2537039031\" target=\"_blank\" rel=\"noopener\">The functions basically match the &#96;console&#96; function nam&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.7</td><td>2</td><td>3.052</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2612572178\" target=\"_blank\" rel=\"noopener\">The bot not being part of the organization and not being a regul&hellip;</a></h6></td><td><details><summary>2.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.652</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576523861\" target=\"_blank\" rel=\"noopener\">Tested here: https://github.com/Meniole/ubiquity-os-kernel/issue&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.7</td><td>2</td><td>4.564</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576867363\" target=\"_blank\" rel=\"noopener\">What is server and what is client? Because the kernel, the Actio&hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.9</td><td>2</td><td>5.04</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576910515\" target=\"_blank\" rel=\"noopener\">I think this should be in the metadata, it doesn't give any usef&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 71&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.85</td><td>2</td><td>5.457</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2577490972\" target=\"_blank\" rel=\"noopener\">@whilefoo yes or contained within a code block? But that was jus&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.5</td><td>2</td><td>2.62</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2577626972\" target=\"_blank\" rel=\"noopener\">@whilefoo Fair enough haha. Yes across our plugins I don't think&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 57&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.6</td><td>2</td><td>3.672</td></tr></tbody></table></details>"},"0x4007":{"total":34.916,"userId":4975670,"comments":[{"id":2540343090,"content":"Small details but I think the general spirit of this proposal still holds.\nThe idea is to guide the developer to think how http codes are standardized. It makes the log type less subjective to choose. \nIn practice we use \"redirect\" as developer verbose, purple, comments. \nI disagree. Client error means the user messed up. Server error means that the code is messed up. \nExamples:\n- User invoked a command with an invalid parameter = client error\n- user invoked a command correctly, but ens resolver broke = server error \n## recreating the visuals\nI agree that the headers can be misleading. We can possibly recreate them without the headers by using images of the colored borders, but I'm not sure if we can float: left images in GitHub comments.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2540343090","commentType":"ISSUE_AUTHOR","score":{"reward":9.42,"formatting":{"content":{"p":{"score":0,"elementCount":2},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"h2":{"score":1,"elementCount":1}},"result":1.2},"priority":2,"words":{"wordCount":126,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":62.36785714285713,"syllables":194,"sentences":9,"score":0.9763214285714287},"multiplier":1,"relevance":1}},{"id":2540992841,"content":"The errors just need to be descriptive and it's fine.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2540992841","commentType":"ISSUE_AUTHOR","score":{"reward":1.652,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":87.99727272727276,"syllables":14,"sentences":1,"score":0.7200272727272724},"multiplier":1,"relevance":0.7}},{"id":2550033531,"content":"@whilefoo can you handle this","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2550033531","commentType":"ISSUE_AUTHOR","score":{"reward":0.136,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":66.40000000000003,"syllables":8,"sentences":1,"score":0.9359999999999996},"multiplier":1,"relevance":0.1}},{"id":2571638320,"content":"@whilefoo please handle this promptly","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2571638320","commentType":"ISSUE_AUTHOR","score":{"reward":0.134,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":49.48000000000002,"syllables":9,"sentences":1,"score":0.8948000000000002},"multiplier":1,"relevance":0.1}},{"id":2612537924,"content":"@gentlementlegen seems that daemon-merge doesn't have permissions to generate permits. Bug or feature?\nAlso I requested changes on that pull. Does it  make sense to only use the latest review state (your approval) or only automatically merge when everybody approves? I feel that there can be a case for either way.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2612537924","commentType":"ISSUE_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":63.58920754716982,"syllables":83,"sentences":5,"score":0.9641079245283017},"multiplier":1,"relevance":0}},{"id":2612587917,"content":"I suppose it can be considered a nudge to keep things moving. Lets leave as is until it becomes a problem.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2612587917","commentType":"ISSUE_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":83.37750000000003,"syllables":28,"sentences":2,"score":0.7662249999999997},"multiplier":1,"relevance":0}},{"id":2731566747,"content":"Change all logger comments to \"new format\" which looks more aesthetically pleasing. \r\n## Old Format\r\nWe should color code essentially the equivalent of HTTP 1xx 2xx 3xx 4xx 5xx class errors in these bot comments. \r\n```diff\r\n# 1xx Class (Informational Responses)\r\n```\r\n```diff\r\n+ 2xx Class (Successful Responses)\r\n```\r\n```diff\r\n@@ 3xx Class (Redirection Messages) @@\r\n```\r\n```diff\r\n! 4xx Class (Client Error Responses)\r\n```\r\n```diff\r\n- 5xx Class (Server Error Responses)\r\n```\r\n## New Format\r\nAs it turns out, GitHub flavored markdown includes these handy color indicators. We can use the same color keys but instead of diff syntax, we use this syntax. \r\nThis should be applied across all kernel and plugin messages.\r\nIt might even be handy to rename the methods in our logger if its still attached to posting comments. The inspiration behind the rename is so that the class of message is no longer subjective.\r\n```typescript\r\nlogger.info();\r\nlogger.success();\r\nlogger.redirect();\r\nlogger.clientError();\r\nlogger.serverError();\r\n```\r\n### Status Codes\r\nBased on HTTP status codes, we should color code the responses. The only problem is that some of the headers can be misleading, but it does look a lot more aesthetically pleasing than the diffs. The left border in particular I think is a great minimal representation of the status. \r\n### Source Code\r\n```markdown\r\n```\r\n### About HTTP Status Code Classes","url":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50","commentType":"ISSUE_SPECIFICATION","score":{"reward":9.04,"formatting":{"content":{"p":{"score":0,"elementCount":6},"h2":{"score":1,"elementCount":2},"h3":{"score":1,"elementCount":3}},"result":5},"priority":1,"words":{"wordCount":168,"wordValue":0.1,"result":2.05},"readability":{"fleschKincaid":65.94389610389612,"syllables":249,"sentences":11,"score":0.9405610389610388},"multiplier":1,"relevance":1}},{"id":2533114671,"content":"Redundant entries should be replaced.","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#pullrequestreview-2533114671","commentType":"PULL_COLLABORATOR","score":{"reward":0.536,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":49.48000000000002,"syllables":9,"sentences":1,"score":0.8948000000000002},"multiplier":1,"relevance":0.4}},{"id":1904726406,"content":"It is also no longer called diff","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#discussion_r1904726406","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -131,40 +142,27 @@ export class Logs {\n     Logs.console = new PrettyLogs();\n   }\n \n-  private _diffColorCommentMessage(type: string, message: string) {\n-    const diffPrefix = {\n-      fatal: \"-\", // - text in red\n-      ok: \"+\", // + text in green\n-      error: \"!\", // ! text in orange\n-      info: \"#\", // # text in gray\n-      debug: \"@@@@\", // @@ text in purple (and bold)@@\n+  private _diffColorCommentMessage(type: LogLevelWithOk, message: string) {","score":{"reward":1.494,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.9}},{"id":2576562134,"content":"We can try your suggestions and iterate after. \n---\nI still think that we should use client error and server error because that is not ambiguous and all plug-in developers are more likely to agree on the definitions and conform to the standard","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576562134","commentType":"PULL_COLLABORATOR","score":{"reward":5.852,"formatting":{"content":{"h2":{"score":1,"elementCount":1},"p":{"score":0,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":55.16133720930236,"syllables":66,"sentences":2,"score":0.9516133720930235},"multiplier":1,"relevance":0.7}},{"id":2576904601,"content":"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2540343090","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576904601","commentType":"PULL_COLLABORATOR","score":{"reward":0.484,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":31.545000000000016,"syllables":24,"sentences":2,"score":0.7154500000000001},"multiplier":1,"relevance":0.2}},{"id":2576917370,"content":"Generally, I agree, but when I first implemented this, I was trying to solve a problem of logging in three separate places:\n- the console, for local development\n- GitHub comment, for triage\n- The database, for later review\nDue to these requirements this was designed specifically for this platform and environment (UbiquityOS plugins, interacting with GitHub)","url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576917370","commentType":"PULL_COLLABORATOR","score":{"reward":4.928,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3}},"result":0.3},"priority":2,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":1.6250000000000284,"syllables":96,"sentences":1,"score":0.4162500000000003},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2533114671,"effect":{"addition":35,"deletion":27},"reward":1.24,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 34.916 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>1.24</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>9.04</td></tr><tr><td>Issue</td><td>Comment</td><td>6</td><td>11.342</td></tr><tr><td>Review</td><td>Comment</td><td>5</td><td>13.294</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53\" target=\"_blank\" rel=\"noopener\">#53</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+35 -27</td><td>2</td><td>1.24</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50\" target=\"_blank\" rel=\"noopener\">Change all logger comments to \"new format\" which looks more aest&hellip;</a></h6></td><td><details><summary>7.05</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    h2:&#13;      score: 1&#13;      elementCount: 2&#13;    h3:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 5&#13;regex:&#13;  wordCount: 168&#13;  wordValue: 0.1&#13;  result: 2.05&#13;</pre></details></td><td>1</td><td>1</td><td>9.04</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2540343090\" target=\"_blank\" rel=\"noopener\">Small details but I think the general spirit of this proposal st&hellip;</a></h6></td><td><details><summary>3.64</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.2&#13;regex:&#13;  wordCount: 126&#13;  wordValue: 0.1&#13;  result: 2.44&#13;</pre></details></td><td>1</td><td>2</td><td>9.42</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2540992841\" target=\"_blank\" rel=\"noopener\">The errors just need to be descriptive and it's fine.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.7</td><td>2</td><td>1.652</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2550033531\" target=\"_blank\" rel=\"noopener\">@whilefoo can you handle this</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.136</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2571638320\" target=\"_blank\" rel=\"noopener\">@whilefoo please handle this promptly</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.1</td><td>2</td><td>0.134</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2612537924\" target=\"_blank\" rel=\"noopener\">@gentlementlegen seems that daemon-merge doesn't have permission&hellip;</a></h6></td><td><details><summary>2.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>0</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issuecomment-2612587917\" target=\"_blank\" rel=\"noopener\">I suppose it can be considered a nudge to keep things moving. Le&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0</td><td>2</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#pullrequestreview-2533114671\" target=\"_blank\" rel=\"noopener\">Redundant entries should be replaced.</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.4</td><td>2</td><td>0.536</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#discussion_r1904726406\" target=\"_blank\" rel=\"noopener\">It is also no longer called diff</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.9</td><td>2</td><td>1.494</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576562134\" target=\"_blank\" rel=\"noopener\">We can try your suggestions and iterate after. ---I still thin&hellip;</a></h6></td><td><details><summary>3.25</summary><pre>content:&#13;  content:&#13;    h2:&#13;      score: 1&#13;      elementCount: 1&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.7</td><td>2</td><td>5.852</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576904601\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os/ubiquity-os-logger/issues/50#issu&hellip;</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.2</td><td>2</td><td>0.484</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-logger/pull/53#issuecomment-2576917370\" target=\"_blank\" rel=\"noopener\">Generally, I agree, but when I first implemented this, I was try&hellip;</a></h6></td><td><details><summary>2.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;  result: 0.3&#13;regex:&#13;  wordCount: 54&#13;  wordValue: 0.1&#13;  result: 2.44&#13;</pre></details></td><td>0.8</td><td>2</td><td>4.928</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_125.json","json":{"gentlementlegen":{"userId":9807008,"total":50,"task":{"reward":50,"multiplier":1},"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 50 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_31.json","json":{"Keyrxng":{"userId":106303466,"total":211.651,"task":{"reward":200,"multiplier":1},"comments":[{"id":2119288902,"content":"Spent an hour or so on this and the below approach solves things as far as I can tell, unsure how relevant this still is tho considering it's age but I enjoy a TS challenge me\r\nPlugin side:\r\nloose auto-complete stops `string is not assignable to <union type>`\r\nbasically plucks the events matching only those keys `Context` generic accepts only those events as `T` and then grabs the matching event with `TU` then extract payload via `TU[\"payload\"]` \r\n```ts\r\nexport type SupportedEventsU = \"issues.labeled\"\r\n | \"issues.unlabeled\"\r\n | \"label.edited\"\r\n | \"issues.reopened\"\r\n | \"push\"\r\n | \"issue_comment.created\"\r\n | (string & {}); // this allows for loose auto-complete \r\nexport type SupportedEvents = {\r\n  [K in SupportedEventsU]: K extends WebhookEventName ? WebhookEvent<K> : never;\r\n};\r\nexport interface Context<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]> {\r\n  eventName: T;\r\n  payload: TU[\"payload\"];\r\n  ...\r\n  }\r\n```\r\nKernel side:\r\nThe errors kernel side seem to have been resolved/worked-around, but from what I can tell this resolves it kernel side too trying against `repo_dispatch` specifically and checking whether TS IDE errors were thrown for the rest.\r\nI updated below, `GithubContext` and turned `handleEvent` and `tryCatchWrapper` into generics using `SupportedEvents[T]` and where needed assigning `T` using `SupportedEvents<typeof event[\"name\"]>`\r\n```ts\r\nexport type SupportedEvents<T extends EmitterWebhookEventName = EmitterWebhookEventName> = {\r\n  [K in EmitterWebhookEventName]: T extends K ? EmitterWebhookEvent<T> : never;\r\n};\r\nexport class DelegatedComputeInputs<T extends keyof SupportedEvents = keyof SupportedEvents, TU extends SupportedEvents[T] = SupportedEvents[T]> {\r\n  public stateId: string;\r\n  public eventName: T;\r\n  public eventPayload: TU[\"payload\"];\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2119288902","commentType":"ISSUE_ASSIGNEE","score":{"reward":2.96,"formatting":{"content":{"p":{"score":0,"elementCount":7}},"result":0},"priority":4,"words":{"wordCount":121,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":24.470475206611596,"syllables":173,"sentences":2,"score":0.644704752066116},"multiplier":0.25,"relevance":1}},{"id":2160332558,"content":"ayyy I'm two for two with these tricky type tasks now\r\nthere was no price label set for the [last one](https://github.com/ubiquity/ubiquibot-kernel/issues/19) either, could this be priced and permit generated?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2160332558","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.092,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":4,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":72.04500000000002,"syllables":37,"sentences":1,"score":0.8795499999999998},"multiplier":0.25,"relevance":0.3}},{"id":2161252091,"content":"There is a larger explanation in the PR I think covers things better but here is the boiled down solution:\r\n```ts\r\npublic payload: {\r\n    [K in TSupportedEvents]: K extends WebhookEventName ? WebhookEvent<K> : never;\r\n  }[TSupportedEvents][\"payload\"];\r\n```\r\nA mapped type to help with the heavy lifting by creating a more efficient path for TS to find the underlying type as opposed to it trying to infer all combinations of the variance in `payload` between events when using `WebhookEvent<T>` (when `WebhookEvent` itself is a complicated type). Now it accesses a straightforward type that returns the `baseWebhookEvent` for any given `T` which is expected to always be a `WebhookEventName`.\r\n<hr/>\r\nThis one took me about an hour the first one took a couple of hours but whatever is thought to be fair enough is fine.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2161252091","commentType":"ISSUE_ASSIGNEE","score":{"reward":3.28,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":4,"words":{"wordCount":110,"wordValue":0.1,"result":2.56},"readability":{"fleschKincaid":55.0237878787879,"syllables":149,"sentences":3,"score":0.950237878787879},"multiplier":0.25,"relevance":1}},{"id":1911762126,"content":"Resolves #31 \r\nUsing the same type setup I've used in https://github.com/ubiquibot/plugin-template\r\n- https://github.com/ubiquity/ubiquibot-kernel/issues/31#issuecomment-2119288902 you don't need the additional stuff I mentioned just the updated context type.\r\nhttps://github.com/ubiquity/ubiquibot-kernel/assets/106303466/e04d59f7-e720-439a-874a-84440138288b","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52","commentType":"PULL_SPECIFICATION","score":{"reward":4.319,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":1},"a":{"score":1,"elementCount":3}},"result":3.1},"priority":1,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":54.87300000000002,"syllables":90,"sentences":5,"score":0.9487300000000002},"multiplier":1,"relevance":0.7}},{"id":2158041305,"content":"Believe me so was I for this very same reason but I went through the files looking for other ts errors and couldn't find any. Checked the `tsserver` logged types, used `twoslash` etc and confirmed the output types look the same as they did before.\r\n<hr/>\r\nThis is building a mapped type which is basically an object using the keys of the `WebhookEventName` union type and assigning the underlying `BaseWebhookEvent` as the values of those keys. We know that `K` will always extend `WebhookEventName`, so we are basically removing the conditionals from the Octokit types.\r\n```ts\r\nexport type SupportedEvents = {\r\n  [K in SupportedEventsU]: K extends WebhookEventName ? WebhookEvent<K> : never;\r\n};\r\n```\r\nThis is saying `\"context takes a key, any key of the union type. Use that key to index the type object which will return only the webhook event for that key\"`\r\n`T` remains the string to index by and `TU` becomes a single object using that key by indexing a type which is straightforward.\r\n```ts\r\nGitHubContext<T extends SupportedEventsU = SupportedEventsU, TU extends SupportedEvents[T] = SupportedEvents[T]>\r\n```\r\n`TU[\"payload\"]` can only be the payload assignable to that specific key as `TU` is only possible through `T`\r\n```ts\r\nTU[\"payload\"];\r\n```\r\n<hr/>\r\nIf I show you the difference between the two types as the `tsserver` sees it.\r\nOriginal\r\n```txt\r\n\"(alias) getDefaultBranch(\r\n    context: GitHubContext<\\\r\n    \"branch_protection_configuration\\\" | \\\"branch_protection_rule.disabled\\\" \r\n    | \\\"branch_protection_rule.enabled\\\" | \\\"branch_protection_rule\\\" \r\n    | \\\"branch_protection_rule.created\\\" | ... 270 more ... \r\n    | \\\"workflow_run.requested\\\">, owner: string, repository: string): Promise<...>\\n\r\n    import getDefaultBranch\"\r\n```\r\nNew\r\n```txt\r\n\"(alias) getDefaultBranch(\r\n    context: GitHubContext<\\\r\n    \"branch_protection_configuration\\\" | \\\"branch_protection_rule.disabled\\\" \r\n    | \\\"branch_protection_rule.enabled\\\" | \\\"branch_protection_rule\\\" \r\n    | \\\"branch_protection_rule.created\\\" | ... 270 more ... \r\n    | \\\"workflow_run.requested\\\", BaseWebhookEvent<...> | ... 274 more ... \r\n    | (BaseWebhookEvent<...> & {\\n    ...;\\n})>, owner: string, repository: string): Promise<...>\\n\r\n    import getDefaultBranch\"\r\n```\r\nYou see here that despite it actually being more verbose and includes another whole type, it's less work for TS because we've constrained things, so rather than TS trying to produce options through inference for all possible combinations of the union type when saying `WebhookEvent<T>[\"payload\"]` it's now only having to index a typed object with `T` that'll return the event or `never`, there is no inference involved for it beyond identifying which key of the union it is.\r\n<hr/>\r\nThis is how I understand the problem and how it looks in my head","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158041305","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":13}},"result":0},"priority":4,"words":{"wordCount":240,"wordValue":0,"result":0},"readability":{"fleschKincaid":56.535000000000025,"syllables":340,"sentences":8,"score":0.9653500000000003},"multiplier":0,"relevance":0.9}},{"id":2158194659,"content":"I didn't really touch on why I think this resolves the underlying issue\r\nWe are abstracting inference logic into types which are basically TS functions. So rather than TS trying to do some wizard shit, the path for it to find the underlying webhook event is cut short because we are building a `Record` of `EventName:Event` which is more efficient than the Octokit type which has many conditionals and lots of variances in payload etc. \r\nSo I think it's just a more direct and efficient path to the underlying type taking some of the burden off of the TS server that allows it to infer easier or that it's due to the generic `TU` being explicitly defined which is carrying some of the load.\r\nThis is just my opinion tho I don't have anything to support this really beyond what I've shared.\r\n<hr/>\r\nUsing the below approach throws this error, which is pretty much how it was being used before with `WebhookEvent<T>[\"payload\"]` and I expect that is because WebhookEvent wants a specific key of the union and it's being passed a type which is the whole union which is just a guess but logically you'd expect this to work looking at it.\r\n```ts\r\nGitHubContext<T extends WebhookEventName = WebhookEventName, TU extends WebhookEvent[T] = WebhookEvent[T]>\r\n```\r\n```txt\r\nType 'T' cannot be used to index type 'EmitterWebhookEvent'.ts(2536)\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158194659","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":6}},"result":0},"priority":4,"words":{"wordCount":205,"wordValue":0,"result":0},"readability":{"fleschKincaid":48.018048780487845,"syllables":284,"sentences":5,"score":0.8801804878048785},"multiplier":0,"relevance":0.8}},{"id":2158406344,"content":"A much cleaner way to represent it for sure @whilefoo \r\nI wasn't sure I knew the various edge cases to try that you'll have worked around or whatever but I'm happy it's working","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158406344","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":37,"wordValue":0,"result":0},"readability":{"fleschKincaid":57.242162162162174,"syllables":49,"sentences":1,"score":0.9724216216216217},"multiplier":0,"relevance":0.3}},{"id":2158520161,"content":"@whilefoo I'm unsure whether to make those changes or if you are going to PR/commit against this or just close as completed and use the new approach, lmk if there is something I need to do.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158520161","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":38,"wordValue":0,"result":0},"readability":{"fleschKincaid":61.401842105263185,"syllables":48,"sentences":1,"score":0.9859815789473682},"multiplier":0,"relevance":0.4}},{"id":2159917773,"content":"I think you commented in the same sec that I pushed the change 😂","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2159917773","commentType":"PULL_AUTHOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":13,"wordValue":0,"result":0},"readability":{"fleschKincaid":102.53230769230771,"syllables":14,"sentences":1,"score":1},"multiplier":0,"relevance":0.2}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 211.651 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>200</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>7.332</td></tr><tr><td>Review</td><td>Comment</td><td>6</td><td>4.319</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2119288902\" target=\"_blank\" rel=\"noopener\">Spent an hour or so on this and the below approach solves things&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;  result: 0&#13;regex:&#13;  wordCount: 121&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>1</td><td>4</td><td>2.96</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2160332558\" target=\"_blank\" rel=\"noopener\">ayyy I'm two for two with these tricky type tasks nowthere was&hellip;</a></h6></td><td><details><summary>2.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.3</td><td>4</td><td>1.092</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2161252091\" target=\"_blank\" rel=\"noopener\">There is a larger explanation in the PR I think covers things be&hellip;</a></h6></td><td><details><summary>2.56</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 110&#13;  wordValue: 0.1&#13;  result: 2.56&#13;</pre></details></td><td>1</td><td>4</td><td>3.28</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52\" target=\"_blank\" rel=\"noopener\">Resolves #31 Using the same type setup I've used in https://gi&hellip;</a></h6></td><td><details><summary>4.8</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.1&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.7</td><td>1</td><td>4.319</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158041305\" target=\"_blank\" rel=\"noopener\">Believe me so was I for this very same reason but I went through&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 13&#13;  result: 0&#13;regex:&#13;  wordCount: 240&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.9</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158194659\" target=\"_blank\" rel=\"noopener\">I didn't really touch on why I think this resolves the underlyin&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;  result: 0&#13;regex:&#13;  wordCount: 205&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158406344\" target=\"_blank\" rel=\"noopener\">A much cleaner way to represent it for sure @whilefoo I wasn't&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.3</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158520161\" target=\"_blank\" rel=\"noopener\">@whilefoo I'm unsure whether to make those changes or if you are&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.4</td><td>4</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2159917773\" target=\"_blank\" rel=\"noopener\">I think you commented in the same sec that I pushed the change 😂</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0&#13;  result: 0&#13;</pre></details></td><td>0.2</td><td>4</td><td>0</td></tr></tbody></table></details>"},"0x4007":{"total":49.152,"userId":4975670,"comments":[{"id":1987444013,"content":"![image](https://github.com/ubiquity/ubiquibot-kernel/assets/4975670/4417a5bc-5f84-4ad8-acad-765046d9deda)\n@FernandVEYRIER you said you wanted to try your hand at this. Both whilefoo and I gave it our attempts but no luck. If you can't figure it out we will probably need to proceed with the method I proposed in our private messages, which would make the code not elegant and add a lot of bloat.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1987444013","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.392,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":57,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":79.20263157894739,"syllables":73,"sentences":3,"score":0.8079736842105261},"multiplier":1,"relevance":0.6}},{"id":1990086073,"content":"I think we should type guard every webhook event. Then we can have auto completion. \nThis means a dedicated function for every webhook event (there's over 50)\nWe could start by trying the generic event first ex: `issues_comment` instead of the specific event ex: `issues_comment.created`","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1990086073","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.176,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":65.04833333333336,"syllables":66,"sentences":3,"score":0.9495166666666663},"multiplier":1,"relevance":0.7}},{"id":1990520618,"content":"I assume it's fine but @whilefoo would know best.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1990520618","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.88,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.2}},{"id":2007566356,"content":"The kernel doesn't use probot. Its a ground-up implementation to cut the bloat and work in Cloudflare Workers.\r\n1. casting as `any` is a bad idea. It kills the point of type safety.\r\n2. yes I suggested we typeguard at the webhook event handler function level. This will introduce a lot of type guards (one for every webhook type) but this is the only viable way I see to handle this with type safety.\r\n3. refer to 1\r\n4. we don't use probot so not sure if `context` is applicable here.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2007566356","commentType":"ISSUE_COLLABORATOR","score":{"reward":12.16,"formatting":{"content":{"p":{"score":0,"elementCount":5},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":4,"words":{"wordCount":88,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":75.82727272727276,"syllables":123,"sentences":7,"score":0.8417272727272724},"multiplier":1,"relevance":0.8}},{"id":2008188212,"content":"Maybe, somehow generate simplified types based on the corresponding real type and cast to use those?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2008188212","commentType":"ISSUE_COLLABORATOR","score":{"reward":3.936,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":58.4075,"syllables":25,"sentences":1,"score":0.984075},"multiplier":1,"relevance":0.6}},{"id":2157458834,"content":"I am assuming that we need to typeguard like a whitelist. Basically we can not have an `else` conditional block for \"everything else.\" We can only have `if` blocks with the type-guards we are supporting @whilefoo","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2157458834","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.392,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":62.05047619047622,"syllables":55,"sentences":3,"score":0.9794952380952379},"multiplier":1,"relevance":0.7}},{"id":2161075748,"content":"The header is `diff` not `text` @gentlementlegen","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2161075748","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.26,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":32.56000000000003,"syllables":10,"sentences":1,"score":0.7256000000000004},"multiplier":1,"relevance":0.1}},{"id":2161077533,"content":"Sure although you should write the solution here so we can include it in the spec before you complete the task. \nThen we can provide a time estimate and price it. \nWhat time label are we adding? How long did it take you?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2161077533","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.44,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":89.68188953488374,"syllables":54,"sentences":4,"score":0.7031811046511627},"multiplier":1,"relevance":0.5}},{"id":2107310962,"content":"I am skeptical here because the whole team tried and nobody could figure it out. \nCan you explain what exactly the trade off is here with your adjustment? We need to preserve type safety","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#pullrequestreview-2107310962","commentType":"PULL_COLLABORATOR","score":{"reward":3.036,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":73.40813725490199,"syllables":49,"sentences":3,"score":0.8659186274509801},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2107310962,"effect":{"addition":9,"deletion":3},"reward":0.48,"priority":4}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 49.152 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.48</td></tr><tr><td>Issue</td><td>Comment</td><td>8</td><td>45.636</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>3.036</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52\" target=\"_blank\" rel=\"noopener\">#52</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+9 -3</td><td>4</td><td>0.48</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1987444013\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/ubiquity/ubiquibot-kernel/assets/497&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 57&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.6</td><td>4</td><td>7.392</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1990086073\" target=\"_blank\" rel=\"noopener\">I think we should type guard every webhook event. Then we can ha&hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 44&#13;  wordValue: 0.1&#13;  result: 2.27&#13;</pre></details></td><td>0.7</td><td>4</td><td>8.176</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1990520618\" target=\"_blank\" rel=\"noopener\">I assume it's fine but @whilefoo would know best.</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.2</td><td>4</td><td>0.88</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2007566356\" target=\"_blank\" rel=\"noopener\">The kernel doesn't use probot. Its a ground-up implementation to&hellip;</a></h6></td><td><details><summary>3.03</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;  result: 0.4&#13;regex:&#13;  wordCount: 88&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.8</td><td>4</td><td>12.16</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2008188212\" target=\"_blank\" rel=\"noopener\">Maybe, somehow generate simplified types based on the correspond&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.6</td><td>4</td><td>3.936</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2157458834\" target=\"_blank\" rel=\"noopener\">I am assuming that we need to typeguard like a whitelist. Basica&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.7</td><td>4</td><td>7.392</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2161075748\" target=\"_blank\" rel=\"noopener\">The header is &#96;diff&#96; not &#96;text&#96; @gentlementlegen</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.1</td><td>4</td><td>0.26</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2161077533\" target=\"_blank\" rel=\"noopener\">Sure although you should write the solution here so we can inclu&hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.5</td><td>4</td><td>5.44</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#pullrequestreview-2107310962\" target=\"_blank\" rel=\"noopener\">I am skeptical here because the whole team tried and nobody coul&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.3</td><td>4</td><td>3.036</td></tr></tbody></table></details>"},"gentlementlegen":{"total":26.34,"userId":9807008,"comments":[{"id":1989853627,"content":"To follow up on the research, I tried:\r\n- updating TS version to the latest\r\n- downgrading TS version < 5.x\r\n- change rules in the tsconfig to use `esnext`\r\n- use yarn / npm instead of bun\r\nand none of this was successful either. Every code change attempt led me to what @whilefoo has already covered. There is a very few results about this error, and it seems to be more of a TypeScript limitation that an actual code issue. Maybe we could also consider just silencing the error, as the IDE properly resolves the types, and it would be quite a loss to not have proper auto complete there (works fine in Webstorm as well).\r\nThere seem to be more errors on the typings as well, c.f. screenshot\r\n![image](https://github.com/ubiquity/ubiquibot-kernel/assets/9807008/a0a126e6-e181-4ab5-920a-de5aa40ed7a5)","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1989853627","commentType":"ISSUE_COLLABORATOR","score":{"reward":11.52,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":4,"words":{"wordCount":125,"wordValue":0.1,"result":2.45},"readability":{"fleschKincaid":72.53562500000002,"syllables":175,"sentences":8,"score":0.8746437499999997},"multiplier":1,"relevance":0.8}},{"id":1990170537,"content":"Well that's the thing, we already have access to full auto-completion, just TypeScript compiler doesn't understand it, so is it really worth it to spend all that time rewriting everything?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1990170537","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.94,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":42.59454545454548,"syllables":51,"sentences":1,"score":0.8259454545454549},"multiplier":1,"relevance":0.5}},{"id":1990421358,"content":"Another approach that works, and keeps a very similar design:\r\n```TypeScript\r\nimport { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\r\nimport { customOctokit } from \"./github-client\";\r\nimport { GitHubEventHandler } from \"./github-event-handler\";\r\nexport class GitHubContext {\r\n  public key: WebhookEventName;\r\n  public name: WebhookEventName;\r\n  public id: string;\r\n  private readonly _payload: WebhookEvent<typeof this.key>[\"payload\"];\r\n  public octokit: InstanceType<typeof customOctokit>;\r\n  public eventHandler: InstanceType<typeof GitHubEventHandler>;\r\n  constructor(eventHandler: InstanceType<typeof GitHubEventHandler>, event: WebhookEvent, octokit: InstanceType<typeof customOctokit>) {\r\n    this.eventHandler = eventHandler;\r\n    this.name = event.name;\r\n    this.id = event.id;\r\n    this._payload = event.payload;\r\n    if (\"action\" in this._payload) {\r\n      this.key = `${this.name}.${this._payload.action}` as WebhookEventName;\r\n    } else {\r\n      this.key = this.name;\r\n    }\r\n    this.octokit = octokit;\r\n  }\r\n   getPayload<T extends WebhookEventName>(): WebhookEvent<T>[\"payload\"] {\r\n    return this._payload;\r\n  }\r\n}\r\nexport type SimplifiedContext = Omit<GitHubContext, keyof WebhookEventName>;\r\n```\r\nThis does not throw complexity errors. It changes the use from\r\n```TypeScript\r\ncontext: GitHubContext<\"repository_dispatch\">\r\ncontext.payload\r\n// To\r\ncontext: GitHubContext\r\ncontext.getPayload<\"repository_dispatch\">()\r\n```\r\nI don't know if this is viable for our design.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1990421358","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.88,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":4,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":71.62625000000001,"syllables":45,"sentences":2,"score":0.8837374999999998},"multiplier":1,"relevance":1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 26.34 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>3</td><td>26.34</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1989853627\" target=\"_blank\" rel=\"noopener\">To follow up on the research, I tried:- updating TS version to&hellip;</a></h6></td><td><details><summary>2.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;  result: 0.4&#13;regex:&#13;  wordCount: 125&#13;  wordValue: 0.1&#13;  result: 2.45&#13;</pre></details></td><td>0.8</td><td>4</td><td>11.52</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1990170537\" target=\"_blank\" rel=\"noopener\">Well that's the thing, we already have access to full auto-compl&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.5</td><td>4</td><td>4.94</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-1990421358\" target=\"_blank\" rel=\"noopener\">Another approach that works, and keeps a very similar design:&&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>1</td><td>4</td><td>9.88</td></tr></tbody></table></details>"},"gitcoindev":{"total":11.016,"userId":88761781,"comments":[{"id":2006239796,"content":"I spent a few hours on this being curious about the root cause and in the end found out this error is not so scary:\r\nhttps://github.com/probot/probot/issues/1680\r\nhttps://github.com/probot/probot/issues/1968\r\nhttps://github.com/probot/probot/discussions/1966\r\nTherefore, this is a known issue and the only workaround so far has been to narrow down context type or use context payload only. \r\nBasically there are several options to avoid this Typescript compiler error:\r\n1) Cast context argument to 'any' a.k.a. I am giving you noodles or sushi for dinner, you have to consume it. Example: Microsoft's fluentui https://github.com/microsoft/fluentui/blob/5e690201797c6b1ce34ac59638fd4a77a0f5a2b3/packages/fluentui/react-northstar-emotion-renderer/src/invokeKeyframes.ts#L50\r\n2) Narrow down types or pass only payload of certain type. I am close to conclude that it complains about incompatibility between \"repository_dispatch\" vs \"workflow_dispatch\" context, so this would need need to be handled.\r\n3) Add ts-ignore, an example https://github.com/taiga-family/argus/blob/d32d3f7d1d62d34c1e404e2fea24b94f1e7fcf51/src/selectors/workflow-run.selectors.ts#L59 \r\n4) Use a wrapper around context, example https://github.com/advanced-security/probot-security-alerts/blob/e7c7f636ab5593b33e79327be1b1589b44bdf13a/src/events/approvingTeam.ts#L6","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2006239796","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":10.116,"formatting":{"content":{"p":{"score":0,"elementCount":10},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4},"a":{"score":1,"elementCount":6}},"result":6.4},"priority":4,"words":{"wordCount":130,"wordValue":0.1,"result":2.41},"readability":{"fleschKincaid":52.53363636363639,"syllables":335,"sentences":18,"score":0.9253363636363638},"multiplier":0.25,"relevance":0.9}},{"id":2161054204,"content":"I think this is a reasonable request. I looked into this before and confirm it was tricky to solve.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2161054204","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.9,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":76.97144736842105,"syllables":27,"sentences":2,"score":0.8302855263157894},"multiplier":0.25,"relevance":0.5}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 11.016 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>2</td><td>11.016</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2006239796\" target=\"_blank\" rel=\"noopener\">I spent a few hours on this being curious about the root cause a&hellip;</a></h6></td><td><details><summary>8.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 10&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 6&#13;  result: 6.4&#13;regex:&#13;  wordCount: 130&#13;  wordValue: 0.1&#13;  result: 2.41&#13;</pre></details></td><td>0.9</td><td>4</td><td>10.116</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2161054204\" target=\"_blank\" rel=\"noopener\">I think this is a reasonable request. I looked into this before &hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.5</td><td>4</td><td>0.9</td></tr></tbody></table></details>"},"whilefoo":{"total":22.462,"userId":139262667,"comments":[{"id":2008070074,"content":"Even typeguards don't work. For example:\r\n```js\r\nexport function isRepositoryDispatchEvent(context: GitHubContext): context is GitHubContext<\"repository_dispatch\"> {\r\n  return context.key === \"repository_dispatch\";\r\n}\r\nexport async function repositoryDispatch(context: GitHubContext) {\r\n  if (!isRepositoryDispatchEvent(context)) {\r\n    console.error(\"Wrong event type\");\r\n    return;\r\n  }\r\n  console.log(context);\r\n}\r\n```\r\n`console.log(context)` triggers the error","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2008070074","commentType":"ISSUE_AUTHOR","score":{"reward":4.64,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":4,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":57.940000000000026,"syllables":17,"sentences":2,"score":0.9794000000000003},"multiplier":1,"relevance":1}},{"id":2177915477,"content":"We need to fix a Typescript [issue](https://github.com/ubiquity/ubiquibot-kernel/blob/c000369cb11cdcf67e1ac6678df403149e699f43/src/github/handlers/repository-dispatch.ts#L52): `Expression produces a union type that is too complex to represent.`\r\nI've tried multiple things:\r\n- function only accepting context of certain events\r\n```js\r\nexport async function getDefaultBranch(context: GitHubContext<\"repository_dispatch\">, owner: string, repository: string)\r\n```\r\n- making the function generic\r\n```js\r\nexport async function getDefaultBranch<T extends EmitterWebhookEventName>(context: GitHubContext<T>, owner: string, repository: string)\r\n```\r\n- casting a Context<\"repository_dispatch\"> to Context<T> - it seems to work in my IDE but fails in CI but it's also a real solution\r\n```js\r\nconst defaultBranch = await getDefaultBranch(context as GitHubContext, nextPlugin.plugin.owner, nextPlugin.plugin.repo);\r\n```\r\n---\r\nI've also got this problem when developing [assistive-pricing](https://github.com/ubiquibot/assistive-pricing) plugin. I was trying to create typeguards like this:\r\n```js\r\nexport function isIssueCommentCreatedEvent(context: Context): context is Context<\"issue_comment.created\"> {\r\n  return context.eventName === \"issue_comment.created\";\r\n}\r\n```\r\n`context is Context<\"issue_comment.created\">` triggers the error","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31","commentType":"ISSUE_SPECIFICATION","score":{"reward":6.03,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ul":{"score":0,"elementCount":3},"li":{"score":0.1,"elementCount":3},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2.3},"priority":1,"words":{"wordCount":70,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":37.158571428571435,"syllables":111,"sentences":2,"score":0.7715857142857143},"multiplier":1,"relevance":1}},{"id":2158375360,"content":"This looks promising, I tried it and it works. I can also see why it's easier for TS to resolve a mapped type instead of trying to infer so many combinations.\r\nI've used your example and removed `TU` so we only need to provide one type and it looks it's working\r\n```js\r\nexport class GitHubContext<TSupportedEvents extends WebhookEventName = WebhookEventName> {\r\n  public key: WebhookEventName;\r\n  public name: WebhookEventName;\r\n  public id: string;\r\n  public payload: {\r\n    [K in TSupportedEvents]: K extends WebhookEventName ? WebhookEvent<K> : never;\r\n  }[TSupportedEvents][\"payload\"];\r\n  public octokit: InstanceType<typeof customOctokit>;\r\n  public eventHandler: InstanceType<typeof GitHubEventHandler>;\r\n```\r\n@Keyrxng what do you think?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158375360","commentType":"PULL_COLLABORATOR","score":{"reward":11.16,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":4,"words":{"wordCount":58,"wordValue":0.1,"result":2.49},"readability":{"fleschKincaid":77.81511494252875,"syllables":75,"sentences":3,"score":0.8218488505747125},"multiplier":1,"relevance":0.9}},{"id":2159916334,"content":"@Keyrxng you can make the change","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2159916334","commentType":"PULL_COLLABORATOR","score":{"reward":0.632,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":4,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":116.14500000000001,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 22.462 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Specification</td><td>1</td><td>6.03</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>4.64</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>11.792</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31\" target=\"_blank\" rel=\"noopener\">We need to fix a Typescript [issue](https://github.com/ubiquity/&hellip;</a></h6></td><td><details><summary>4.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ul:&#13;      score: 0&#13;      elementCount: 3&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.3&#13;regex:&#13;  wordCount: 70&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>1</td><td>1</td><td>6.03</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/31#issuecomment-2008070074\" target=\"_blank\" rel=\"noopener\">Even typeguards don't work. For example:&#96;&#96;&#96;jsexp&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>1</td><td>4</td><td>4.64</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2158375360\" target=\"_blank\" rel=\"noopener\">This looks promising, I tried it and it works. I can also see wh&hellip;</a></h6></td><td><details><summary>2.49</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 58&#13;  wordValue: 0.1&#13;  result: 2.49&#13;</pre></details></td><td>0.9</td><td>4</td><td>11.16</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/52#issuecomment-2159916334\" target=\"_blank\" rel=\"noopener\">@Keyrxng you can make the change</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.2</td><td>4</td><td>0.632</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_configuration-loader_6.json","json":{"gentlementlegen":{"userId":9807008,"total":53.57,"task":{"reward":50,"multiplier":1},"comments":[{"id":2164740006,"content":"Currently the package depends on libraries that are only runnable inside a node.js environment. This is problematic when ran inside a browser, or inside any other container not having node.js. It is necessary to decouple node and this package as it should not be needed. Two main culprits:\r\n- ubiquibot-logger\r\n- fs\r\nThese should be removed from this package. Also, the output should be bundled.","url":"https://github.com/ubiquity-os/configuration-loader/issues/6","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.57,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":1,"words":{"wordCount":66,"wordValue":0.1,"result":2.57},"readability":{"fleschKincaid":63.95590909090913,"syllables":104,"sentences":7,"score":0.9604409090909087},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 53.57 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.57</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/configuration-loader/issues/6\" target=\"_blank\" rel=\"noopener\">Currently the package depends on libraries that are only runnabl&hellip;</a></h6></td><td><details><summary>2.77</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 66&#13;  wordValue: 0.1&#13;  result: 2.57&#13;</pre></details></td><td>1</td><td>1</td><td>3.57</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_69.json","json":{"gentlementlegen":{"userId":9807008,"total":51.94,"task":{"reward":50,"multiplier":1},"comments":[{"id":2215495959,"content":"The `WEBHOOK_PROXY_URL` is for development only. But the `WEBHOOK_SECRET` is required to communicate with the GitHub app, if set. Will check if it can be made optional.\r\n---\r\n`WEBHOOK_SECRET` is definitely required due to https://github.com/ubiquity/ubiquibot-kernel/blob/afc96262f402f62e6dc611142b9a02c7eac8942c/src/github/github-event-handler.ts#L33 which is not optional.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/69#issuecomment-2215495959","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.94,"formatting":{"content":{"p":{"score":0,"elementCount":2},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":2,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":56.97032312925171,"syllables":82,"sentences":6,"score":0.9697032312925171},"multiplier":0.25,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 51.94 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>1.94</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/69#issuecomment-2215495959\" target=\"_blank\" rel=\"noopener\">The &#96;WEBHOOK_PROXY_URL&#96; is for development only. But the&hellip;</a></h6></td><td><details><summary>3.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>1</td><td>2</td><td>1.94</td></tr></tbody></table></details>"},"0x4007":{"total":5.99,"userId":4975670,"comments":[{"id":2394988974,"content":"Upon deploy of v2 we had to add several new secrets which were not necessary for v1. This indicates that they are not essential and must be removed. \r\n- `WEBHOOK_SECRET`\r\n- `WEBHOOK_PROXY_URL`","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/69","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.56,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":1,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":68.74642857142858,"syllables":41,"sentences":2,"score":0.9125357142857142},"multiplier":1,"relevance":1}},{"id":1669761112,"content":"Debating on if it makes sense to prefix this with APP since it is defined in the GitHub App settings.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/70#discussion_r1669761112","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -34,16 +34,14 @@ jobs:\n \n       - uses: cloudflare/wrangler-action@v3\n         with:\n-          wranglerVersion: \"3.57.0\"\n+          wranglerVersion: \"3.63.1\"\n           apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}\n           accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}\n           secrets: |\n-            WEBHOOK_PROXY_URL\n-            WEBHOOK_SECRET\n             APP_ID\n-            PRIVATE_KEY\n+            APP_PRIVATE_KEY\n+            WEBHOOK_SECRET","score":{"reward":2.59,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":2,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":76.55500000000004,"syllables":26,"sentences":1,"score":0.8344499999999997},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2165089407,"effect":{"addition":22,"deletion":20},"reward":0.84,"priority":2}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/70"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 5.99 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>0.84</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.56</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>2.59</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/70\" target=\"_blank\" rel=\"noopener\">#70</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+22 -20</td><td>2</td><td>0.84</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/69\" target=\"_blank\" rel=\"noopener\">Upon deploy of v2 we had to add several new secrets which were n&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>1</td><td>1</td><td>2.56</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/70#discussion_r1669761112\" target=\"_blank\" rel=\"noopener\">Debating on if it makes sense to prefix this with APP since it i&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.7</td><td>2</td><td>2.59</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_6.json","json":{"gentlementlegen":{"userId":9807008,"total":106.96,"task":{"reward":100,"multiplier":1},"comments":[{"id":2284671184,"content":"[label change/pricing](https://github.com/ubiquity/ubiquibot/tree/eefbee925896ff367e2ae14307281d28a7105613/src/handlers/pricing): does not allow for pricing on \"meta issues\" syncs labels to the config, and also sets price labels based on the time/priority labels. There's also an [access control capability](https://github.com/ubiquity/ubiquibot/blob/7d3e75cd1ea94bff73998ae4bcce1cc0f3e15ab7/src/handlers/label/label.ts), which is designed to allow project managers to set priority levels, and technical contributors to provide time estimates.\r\nWe also have an [Action](https://github.com/ubiquibot/assistive-pricing) for this","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/6","commentType":"ISSUE_SPECIFICATION","score":{"reward":6.96,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":3}},"result":3},"priority":1,"words":{"wordCount":59,"wordValue":0.1,"result":2.51},"readability":{"fleschKincaid":47.785197740113006,"syllables":97,"sentences":3,"score":0.8778519774011301},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 106.96 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>100</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>6.96</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/6\" target=\"_blank\" rel=\"noopener\">[label change/pricing](https://github.com/ubiquity/ubiquibot/tre&hellip;</a></h6></td><td><details><summary>5.51</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3&#13;regex:&#13;  wordCount: 59&#13;  wordValue: 0.1&#13;  result: 2.51&#13;</pre></details></td><td>1</td><td>1</td><td>6.96</td></tr></tbody></table></details>"},"molecula451":{"total":6.29,"userId":41552663,"comments":[{"id":2049060132,"content":"great addition++ approving","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#pullrequestreview-2049060132","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.03,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":6.390000000000015,"syllables":7,"sentences":1,"score":0.46390000000000015},"multiplier":0.25,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2049060132,"effect":{"addition":264,"deletion":362},"reward":6.26,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 6.29 XP ]</a>&nbsp;</h3><h6>@molecula451</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>6.26</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.03</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3\" target=\"_blank\" rel=\"noopener\">#3</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+264 -362</td><td>1</td><td>6.26</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#pullrequestreview-2049060132\" target=\"_blank\" rel=\"noopener\">great addition++ approving</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.03</td></tr></tbody></table></details>"},"0x4007":{"total":13.59,"userId":4975670,"comments":[{"id":1601339087,"content":"```suggestion\n  \"description\": \"Helps set pricing for GitHub Issues and their rewards.\",\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#discussion_r1601339087","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,7 +1,7 @@\n {\n-  \"name\": \"ts-template\",\n+  \"name\": \"@ubiquibot/assistive-pricing\",\n   \"version\": \"1.0.0\",\n-  \"description\": \"Template repository with TypeScript support.\",\n+  \"description\": \"Helps setting the pricing for Issues and rewards.\",","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":1,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1601341688,"content":"It looks pretty low level to be capturing commands like this. Do you think we should make a wrapper in the SDK so that it is more convenient for future plugin developers?\nIt's okay to leave it like this forever in this plugin, but I am keen on making this common capability easier for future developers.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#discussion_r1601341688","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,38 +18,50 @@ export async function handleComment(context: Context) {\n     await addCommentToIssue(context, `@${sender}, You are not allowed to set access`, payload.issue.number);\n   }\n \n-  if (body.match(/\\/.*/)) {\n-    const { username, labels } = parseComment(body);\n-    const { access, user } = context.adapters.supabase;\n-    const url = payload.comment?.html_url as string;\n-    if (!url) throw new Error(\"Comment url is undefined\");\n+  try {\n+    if (/\\/\\S+/.test(body)) {\n+      const { username, labels, command } = parseComment(body);\n+      if (command === \"/allow\") {","score":{"reward":2.889,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":57,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":61.392105263157916,"syllables":85,"sentences":3,"score":0.9860789473684208},"multiplier":1,"relevance":0.9}},{"id":1601567030,"content":"This is why I wanted commands to be mappable from the config. But if not, then it will be the partners' responsibility to manage collisions. Perhaps collisions could be useful to double up functionality?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#discussion_r1601567030","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,38 +18,50 @@ export async function handleComment(context: Context) {\n     await addCommentToIssue(context, `@${sender}, You are not allowed to set access`, payload.issue.number);\n   }\n \n-  if (body.match(/\\/.*/)) {\n-    const { username, labels } = parseComment(body);\n-    const { access, user } = context.adapters.supabase;\n-    const url = payload.comment?.html_url as string;\n-    if (!url) throw new Error(\"Comment url is undefined\");\n+  try {\n+    if (/\\/\\S+/.test(body)) {\n+      const { username, labels, command } = parseComment(body);\n+      if (command === \"/allow\") {","score":{"reward":2.056,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":53.50225490196081,"syllables":57,"sentences":3,"score":0.9350225490196081},"multiplier":1,"relevance":0.8}},{"id":2108984865,"content":"They should be used to automatically populate a repository's labels with the \"special\" price related labels. \nDo you recall when working on a new repository that you must toggle some label for the bot to populate the rest? @gentlementlegen","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#issuecomment-2108984865","commentType":"PULL_COLLABORATOR","score":{"reward":1.375,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":47.366666666666674,"syllables":69,"sentences":3,"score":0.8736666666666667},"multiplier":1,"relevance":0.5}}],"reviewRewards":[{"reviews":[{"reviewId":2057510398,"effect":{"addition":272,"deletion":362},"reward":6.34,"priority":1},{"reviewId":2057887592,"effect":{"addition":58,"deletion":35},"reward":0.93,"priority":1}],"url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 13.59 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>7.27</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>6.32</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3\" target=\"_blank\" rel=\"noopener\">#3</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+272 -362</td><td>1</td><td>6.34</td></tr><tr><td>+58 -35</td><td>1</td><td>0.93</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#discussion_r1601339087\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion\"description\": \"Helps set pricing fo&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>1</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#discussion_r1601341688\" target=\"_blank\" rel=\"noopener\">It looks pretty low level to be capturing commands like this. Do&hellip;</a></h6></td><td><details><summary>2.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 57&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.889</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#discussion_r1601567030\" target=\"_blank\" rel=\"noopener\">This is why I wanted commands to be mappable from the config. Bu&hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.056</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/3#issuecomment-2108984865\" target=\"_blank\" rel=\"noopener\">They should be used to automatically populate a repository's lab&hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.5</td><td>1</td><td>1.375</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-plugin-installer_19.json","json":{"Keyrxng":{"userId":106303466,"total":302.352,"task":{"reward":300,"multiplier":1},"comments":[{"id":2479783207,"content":"It's all good brother I got things under control here, I'm happy to carry on and clear the new tasks prior to merge. I assume you'll be reviewing my PRs which will take up some time and I assume you have more pressing tasks to address anyway like permit rollups etc","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2479783207","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.693,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":71.33000000000003,"syllables":69,"sentences":2,"score":0.8866999999999997},"multiplier":0.25,"relevance":0.3}},{"id":2491030081,"content":"@rndquu Is this certain? Are we deprecating the dev bot instance or is this just in terms of partners? i.e including a less visible method of selecting the dev config for internal use? I figured this would be used for development too as @gentlementlegen had mentioned building something similar for his own use","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2491030081","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.659,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":64.27300000000002,"syllables":84,"sentences":5,"score":0.9572699999999997},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 302.352 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>300</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>2.352</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2479783207\" target=\"_blank\" rel=\"noopener\">It's all good brother I got things under control here, I'm happy&hellip;</a></h6></td><td><details><summary>2.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 54&#13;  wordValue: 0.1&#13;  result: 2.44&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.693</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2491030081\" target=\"_blank\" rel=\"noopener\">@rndquu Is this certain? Are we deprecating the dev bot instance&hellip;</a></h6></td><td><details><summary>2.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 54&#13;  wordValue: 0.1&#13;  result: 2.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.659</td></tr></tbody></table></details>"},"zugdev":{"total":95.224,"userId":155616000,"comments":[{"id":2479319570,"content":"I'll take this one as soon as #13 is through.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2479319570","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.768,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":111.07000000000002,"syllables":11,"sentences":1,"score":1},"multiplier":0.25,"relevance":0.8}},{"id":2525291747,"content":"I agree, priority should apply to review and implementation, but spec doesn't fit that well","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2525291747","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.123,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":58.4075,"syllables":25,"sentences":1,"score":0.984075},"multiplier":0.25,"relevance":0.1}},{"id":1854517927,"content":"This is a duplicate cache set, you already cache manifests inside `fetchMarketplaceManifests()` on L41 of `fetch-manifest.ts`:\r\n`localStorage.setItem(\"manifestCache\", JSON.stringify(manifestCache));`","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1854517927","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -12,30 +13,33 @@ async function handleAuth() {\n \n export async function mainModule() {\n   const auth = await handleAuth();\n-  const decoder = new ManifestDecoder();\n   const renderer = new ManifestRenderer(auth);\n-  const search = window.location.search.substring(1);\n-\n-  if (search) {\n-    const decodedManifest = await decoder.decodeManifestFromSearch(search);\n-    return renderer.renderManifest(decodedManifest);\n-  }\n+  renderer.manifestGuiBody.dataset.loading = \"false\";\n \n   try {\n     const ubiquityOrgsToFetchOfficialConfigFrom = [\"ubiquity-os\"];\n-    const fetcher = new ManifestFetcher(ubiquityOrgsToFetchOfficialConfigFrom, auth.octokit, decoder);\n+    const fetcher = new ManifestFetcher(ubiquityOrgsToFetchOfficialConfigFrom, auth.octokit);\n     const cache = fetcher.checkManifestCache();\n+\n     if (auth.isActiveSession()) {\n       const userOrgs = await auth.getGitHubUserOrgs();\n-      renderer.renderOrgPicker(userOrgs);\n+\n       if (Object.keys(cache).length === 0) {\n+        renderer.manifestGuiBody.dataset.loading = \"true\";\n+        const killNotification = toastNotification(\"Fetching manifest data...\", { type: \"info\", shouldAutoDismiss: true });\n+        renderOrgPicker(renderer, []);\n+\n         const manifestCache = await fetcher.fetchMarketplaceManifests();\n         localStorage.setItem(\"manifestCache\", JSON.stringify(manifestCache));","score":{"reward":0.999,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":65.72500000000001,"syllables":21,"sentences":1,"score":0.9427499999999999},"multiplier":0.25,"relevance":0.9}},{"id":1854520321,"content":"You have `JSON.parse(localStorage.getItem(\"manifestCache\") || \"{}\")` more than once, perhaps write a getter function.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1854520321","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,93 @@\n+import { ManifestCache, ManifestPreDecode, Plugin } from \"../../types/plugins\";\n+import { createElement } from \"../../utils/element-helpers\";\n+import { STRINGS } from \"../../utils/strings\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { renderConfigEditor } from \"./config-editor\";\n+import { controlButtons } from \"./control-buttons\";\n+import { closeAllSelect, updateGuiTitle } from \"./utils\";\n+\n+export function renderPluginSelector(renderer: ManifestRenderer): void {\n+  renderer.currentStep = \"pluginSelector\";\n+  renderer.backButton.style.display = \"block\";\n+  renderer.manifestGuiBody.innerHTML = null;\n+  controlButtons({ hide: true });\n+\n+  const manifestCache = JSON.parse(localStorage.getItem(\"manifestCache\") || \"{}\") as ManifestCache;","score":{"reward":0.648,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":0.25,"relevance":0.8}},{"id":1854525852,"content":"If there is still time we should move buttons outside of table. Tables are terrible for layouting and will definitely generate padding/overflow problems eventually. I think the config itself is fine within table as there is no easy better way to do it.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1854525852","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -26,7 +26,7 @@\n           <tbody id=\"manifest-gui-body\"></tbody>\n           <tfoot\n             ><tr\n-              ><td></td><td><button id=\"remove\"></button><button id=\"add\"></button></td></tr\n+              ><td></td><td><button id=\"reset-to-default\"></button><button id=\"remove\"></button><button id=\"add\"></button></td></tr","score":{"reward":1.533,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":55.434696969697,"syllables":71,"sentences":3,"score":0.95434696969697},"multiplier":0.25,"relevance":0.7}},{"id":1857457755,"content":"redundant cache set here, handleOrgSelection already caches","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857457755","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,99 @@\n+import { createElement } from \"../../utils/element-helpers\";\n+import { STRINGS } from \"../../utils/strings\";\n+import { toastNotification } from \"../../utils/toaster\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { controlButtons } from \"./control-buttons\";\n+import { renderPluginSelector } from \"./plugin-select\";\n+import { closeAllSelect, updateGuiTitle } from \"./utils\";\n+\n+export function renderOrgPicker(renderer: ManifestRenderer, orgs: string[]) {\n+  renderer.currentStep = \"orgPicker\";\n+  controlButtons({ hide: true });\n+  renderer.backButton.style.display = \"none\";\n+  renderer.manifestGui?.classList.add(\"rendering\");\n+  renderer.manifestGuiBody.innerHTML = null;\n+  renderer.orgs = orgs;\n+\n+  const pickerRow = document.createElement(\"tr\");\n+  const pickerCell = document.createElement(\"td\");\n+  pickerCell.colSpan = 4;\n+  pickerCell.className = STRINGS.TDV_CENTERED;\n+\n+  const customSelect = createElement(\"div\", { class: \"custom-select\", style: `display: ${orgs.length ? \"block\" : \"none\"}` });\n+\n+  const selectSelected = createElement(\"div\", {\n+    class: \"select-selected\",\n+    textContent: \"Select an organization\",\n+  });\n+\n+  const selectItems = createElement(\"div\", {\n+    class: \"select-items select-hide\",\n+  });\n+\n+  customSelect.appendChild(selectSelected);\n+  customSelect.appendChild(selectItems);\n+\n+  pickerCell.appendChild(customSelect);\n+  pickerRow.appendChild(pickerCell);\n+\n+  renderer.manifestGuiBody.appendChild(pickerRow);\n+  renderer.manifestGui?.classList.add(\"rendered\");\n+\n+  if (!orgs.length) {\n+    const hasSession = renderer.auth.isActiveSession();\n+    const isLoading = renderer.manifestGuiBody.dataset.loading === \"true\";\n+\n+    if (hasSession && !isLoading) {\n+      updateGuiTitle(\"No organizations found\");\n+    } else if (hasSession && isLoading) {\n+      updateGuiTitle(\"Fetching organization data...\");\n+    } else {\n+      updateGuiTitle(\"Please sign in to GitHub\");\n+    }\n+    return;\n+  }\n+\n+  updateGuiTitle(\"Select an Organization\");\n+\n+  orgs.forEach((org) => {\n+    const optionDiv = createElement(\"div\", { class: \"select-option\" });\n+    const textSpan = createElement(\"span\", { textContent: org });\n+\n+    optionDiv.appendChild(textSpan);\n+\n+    optionDiv.addEventListener(\"click\", () => {\n+      handleOrgSelection(renderer, org);\n+      selectSelected.textContent = org;\n+      localStorage.setItem(\"selectedOrg\", org);","score":{"reward":0.54,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":18.44428571428574,"syllables":15,"sentences":1,"score":0.5844428571428574},"multiplier":0.25,"relevance":0.9}},{"id":1857478872,"content":"the problem is this addEventListener statement, if only you navigate a couple times and then execute an action it will stackup. you only need one event listener please check that. \r\n[eventListenerAdded.webm](https://github.com/user-attachments/assets/976db9d7-b09b-42c5-9663-72d10b858773)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857478872","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,109 @@\n+import { Manifest, Plugin } from \"../../types/plugins\";\n+import { controlButtons } from \"./control-buttons\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { processProperties } from \"./input-parsing\";\n+import { updateGuiTitle } from \"./utils\";\n+import { writeNewConfig } from \"./write-add-remove\";\n+import MarkdownIt from \"markdown-it\";\n+import { getManifestCache } from \"../../utils/storage\";\n+const md = new MarkdownIt();\n+\n+export function renderConfigEditor(renderer: ManifestRenderer, pluginManifest: Manifest | null, plugin?: Plugin[\"uses\"][0][\"with\"]): void {\n+  renderer.currentStep = \"configEditor\";\n+  renderer.backButton.style.display = \"block\";\n+  renderer.manifestGuiBody.innerHTML = null;\n+  controlButtons({ hide: false });\n+  processProperties(renderer, pluginManifest?.configuration?.properties || {});\n+  const configInputs = document.querySelectorAll<HTMLInputElement | HTMLTextAreaElement>(\".config-input\");\n+\n+  if (plugin) {\n+    configInputs.forEach((input) => {\n+      const key = input.getAttribute(\"data-config-key\");\n+      if (!key) {\n+        throw new Error(\"Input key is required\");\n+      }\n+\n+      const keys = key.split(\".\");\n+      let currentObj = plugin;\n+      for (let i = 0; i < keys.length; i++) {\n+        if (!currentObj[keys[i]]) {\n+          break;\n+        }\n+        currentObj = currentObj[keys[i]] as Record<string, unknown>;\n+      }\n+\n+      let value: string;\n+\n+      if (typeof currentObj === \"object\") {\n+        value = JSON.stringify(currentObj, null, 2);\n+      } else {\n+        value = currentObj as string;\n+      }\n+\n+      if (input.tagName === \"TEXTAREA\") {\n+        (input as HTMLTextAreaElement).value = value;\n+      } else {\n+        (input as HTMLInputElement).value = value;\n+      }\n+    });\n+  }\n+\n+  const add = document.getElementById(\"add\") as HTMLButtonElement;\n+  const remove = document.getElementById(\"remove\") as HTMLButtonElement;\n+  if (!add || !remove) {\n+    throw new Error(\"Add or remove button not found\");\n+  }\n+  add.addEventListener(\"click\", writeNewConfig.bind(null, renderer, \"add\"));","score":{"reward":2.651,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":48.02125000000001,"syllables":57,"sentences":4,"score":0.8802125000000001},"multiplier":0.25,"relevance":0.95}},{"id":1857481885,"content":"typo: space between sentences here","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857481885","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,132 @@\n+import { toastNotification } from \"../../utils/toaster\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { Manifest, Plugin } from \"../../types/plugins\";\n+import { parseConfigInputs } from \"./input-parsing\";\n+import { getOfficialPluginConfig } from \"../../utils/storage\";\n+\n+export function writeNewConfig(renderer: ManifestRenderer, option: \"add\" | \"remove\"): void {\n+  const selectedManifest = localStorage.getItem(\"selectedPluginManifest\");\n+  if (!selectedManifest) {\n+    toastNotification(\"No selected plugin manifest found.\", {\n+      type: \"error\",\n+      shouldAutoDismiss: true,\n+    });\n+    throw new Error(\"No selected plugin manifest found\");\n+  }\n+  const pluginManifest = JSON.parse(selectedManifest) as Manifest;\n+  const configInputs = document.querySelectorAll<HTMLInputElement | HTMLTextAreaElement>(\".config-input\");\n+\n+  const newConfig = parseConfigInputs(configInputs, pluginManifest);\n+\n+  renderer.configParser.loadConfig();\n+\n+  const officialPluginConfig: Record<string, { actionUrl?: string; workerUrl?: string }> = getOfficialPluginConfig();\n+\n+  const pluginName = pluginManifest.name;\n+\n+  // this relies on the manifest matching the repo name\n+  const normalizedPluginName = pluginName\n+    .toLowerCase()\n+    .replace(/ /g, \"-\")\n+    .replace(/[^a-z0-9-]/g, \"\")\n+    .replace(/-+/g, \"-\");\n+\n+  const pluginUrl = Object.keys(officialPluginConfig).find((url) => {\n+    return url.includes(normalizedPluginName);\n+  });\n+\n+  if (!pluginUrl) {\n+    toastNotification(`No plugin URL found for ${pluginName}.`, {\n+      type: \"error\",\n+      shouldAutoDismiss: true,\n+    });\n+    throw new Error(\"No plugin URL found\");\n+  }\n+\n+  const plugin: Plugin = {\n+    uses: [\n+      {\n+        plugin: pluginUrl,\n+        with: newConfig,\n+      },\n+    ],\n+  };\n+\n+  if (option === \"add\") {\n+    handleAddPlugin(renderer, plugin, pluginManifest);\n+  } else {\n+    handleRemovePlugin(renderer, plugin, pluginManifest);\n+  }\n+}\n+\n+function handleAddPlugin(renderer: ManifestRenderer, plugin: Plugin, pluginManifest: Manifest): void {\n+  renderer.configParser.addPlugin(plugin);\n+  toastNotification(`Configuration for ${pluginManifest.name} saved successfully.Do you want to push to GitHub ? `, {","score":{"reward":0.204,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":66.40000000000003,"syllables":8,"sentences":1,"score":0.9359999999999996},"multiplier":0.25,"relevance":0.4}},{"id":1857482759,"content":"please use `else if (option === \"remove\")`, if new option is added someday can lead to error","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857482759","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,132 @@\n+import { toastNotification } from \"../../utils/toaster\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { Manifest, Plugin } from \"../../types/plugins\";\n+import { parseConfigInputs } from \"./input-parsing\";\n+import { getOfficialPluginConfig } from \"../../utils/storage\";\n+\n+export function writeNewConfig(renderer: ManifestRenderer, option: \"add\" | \"remove\"): void {\n+  const selectedManifest = localStorage.getItem(\"selectedPluginManifest\");\n+  if (!selectedManifest) {\n+    toastNotification(\"No selected plugin manifest found.\", {\n+      type: \"error\",\n+      shouldAutoDismiss: true,\n+    });\n+    throw new Error(\"No selected plugin manifest found\");\n+  }\n+  const pluginManifest = JSON.parse(selectedManifest) as Manifest;\n+  const configInputs = document.querySelectorAll<HTMLInputElement | HTMLTextAreaElement>(\".config-input\");\n+\n+  const newConfig = parseConfigInputs(configInputs, pluginManifest);\n+\n+  renderer.configParser.loadConfig();\n+\n+  const officialPluginConfig: Record<string, { actionUrl?: string; workerUrl?: string }> = getOfficialPluginConfig();\n+\n+  const pluginName = pluginManifest.name;\n+\n+  // this relies on the manifest matching the repo name\n+  const normalizedPluginName = pluginName\n+    .toLowerCase()\n+    .replace(/ /g, \"-\")\n+    .replace(/[^a-z0-9-]/g, \"\")\n+    .replace(/-+/g, \"-\");\n+\n+  const pluginUrl = Object.keys(officialPluginConfig).find((url) => {\n+    return url.includes(normalizedPluginName);\n+  });\n+\n+  if (!pluginUrl) {\n+    toastNotification(`No plugin URL found for ${pluginName}.`, {\n+      type: \"error\",\n+      shouldAutoDismiss: true,\n+    });\n+    throw new Error(\"No plugin URL found\");\n+  }\n+\n+  const plugin: Plugin = {\n+    uses: [\n+      {\n+        plugin: pluginUrl,\n+        with: newConfig,\n+      },\n+    ],\n+  };\n+\n+  if (option === \"add\") {\n+    handleAddPlugin(renderer, plugin, pluginManifest);\n+  } else {","score":{"reward":0.816,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":81.85500000000002,"syllables":16,"sentences":1,"score":0.7814499999999999},"multiplier":0.25,"relevance":0.85}},{"id":1857484579,"content":"typo: space between sentences","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857484579","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,132 @@\n+import { toastNotification } from \"../../utils/toaster\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { Manifest, Plugin } from \"../../types/plugins\";\n+import { parseConfigInputs } from \"./input-parsing\";\n+import { getOfficialPluginConfig } from \"../../utils/storage\";\n+\n+export function writeNewConfig(renderer: ManifestRenderer, option: \"add\" | \"remove\"): void {\n+  const selectedManifest = localStorage.getItem(\"selectedPluginManifest\");\n+  if (!selectedManifest) {\n+    toastNotification(\"No selected plugin manifest found.\", {\n+      type: \"error\",\n+      shouldAutoDismiss: true,\n+    });\n+    throw new Error(\"No selected plugin manifest found\");\n+  }\n+  const pluginManifest = JSON.parse(selectedManifest) as Manifest;\n+  const configInputs = document.querySelectorAll<HTMLInputElement | HTMLTextAreaElement>(\".config-input\");\n+\n+  const newConfig = parseConfigInputs(configInputs, pluginManifest);\n+\n+  renderer.configParser.loadConfig();\n+\n+  const officialPluginConfig: Record<string, { actionUrl?: string; workerUrl?: string }> = getOfficialPluginConfig();\n+\n+  const pluginName = pluginManifest.name;\n+\n+  // this relies on the manifest matching the repo name\n+  const normalizedPluginName = pluginName\n+    .toLowerCase()\n+    .replace(/ /g, \"-\")\n+    .replace(/[^a-z0-9-]/g, \"\")\n+    .replace(/-+/g, \"-\");\n+\n+  const pluginUrl = Object.keys(officialPluginConfig).find((url) => {\n+    return url.includes(normalizedPluginName);\n+  });\n+\n+  if (!pluginUrl) {\n+    toastNotification(`No plugin URL found for ${pluginName}.`, {\n+      type: \"error\",\n+      shouldAutoDismiss: true,\n+    });\n+    throw new Error(\"No plugin URL found\");\n+  }\n+\n+  const plugin: Plugin = {\n+    uses: [\n+      {\n+        plugin: pluginUrl,\n+        with: newConfig,\n+      },\n+    ],\n+  };\n+\n+  if (option === \"add\") {\n+    handleAddPlugin(renderer, plugin, pluginManifest);\n+  } else {\n+    handleRemovePlugin(renderer, plugin, pluginManifest);\n+  }\n+}\n+\n+function handleAddPlugin(renderer: ManifestRenderer, plugin: Plugin, pluginManifest: Manifest): void {\n+  renderer.configParser.addPlugin(plugin);\n+  toastNotification(`Configuration for ${pluginManifest.name} saved successfully.Do you want to push to GitHub ? `, {\n+    type: \"success\",\n+    actionText: \"Push to GitHub\",\n+    action: async () => {\n+      const octokit = renderer.auth.octokit;\n+      if (!octokit) {\n+        throw new Error(\"Octokit not found\");\n+      }\n+\n+      const org = localStorage.getItem(\"selectedOrg\");\n+\n+      if (!org) {\n+        throw new Error(\"No selected org found\");\n+      }\n+\n+      try {\n+        await renderer.configParser.updateConfig(org, octokit, \"add\");\n+      } catch (error) {\n+        console.error(\"Error pushing config to GitHub:\", error);\n+        toastNotification(\"An error occurred while pushing the configuration to GitHub.\", {\n+          type: \"error\",\n+          shouldAutoDismiss: true,\n+        });\n+        return;\n+      }\n+\n+      toastNotification(\"Configuration pushed to GitHub successfully.\", {\n+        type: \"success\",\n+        shouldAutoDismiss: true,\n+      });\n+    },\n+  });\n+}\n+\n+function handleRemovePlugin(renderer: ManifestRenderer, plugin: Plugin, pluginManifest: Manifest): void {\n+  renderer.configParser.removePlugin(plugin);\n+  toastNotification(`Configuration for ${pluginManifest.name} removed successfully.Do you want to push to GitHub ? `, {","score":{"reward":0.168,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":54.72500000000002,"syllables":7,"sentences":1,"score":0.9472500000000003},"multiplier":0.25,"relevance":0.4}},{"id":1857489292,"content":"the function isn't being called because it's in a arrow function. please copy the syntax from the add button:\r\n remove.addEventListener(\"click\", writeNewConfig.bind(null, renderer, \"remove\"));","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857489292","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,109 @@\n+import { Manifest, Plugin } from \"../../types/plugins\";\n+import { controlButtons } from \"./control-buttons\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { processProperties } from \"./input-parsing\";\n+import { updateGuiTitle } from \"./utils\";\n+import { writeNewConfig } from \"./write-add-remove\";\n+import MarkdownIt from \"markdown-it\";\n+import { getManifestCache } from \"../../utils/storage\";\n+const md = new MarkdownIt();\n+\n+export function renderConfigEditor(renderer: ManifestRenderer, pluginManifest: Manifest | null, plugin?: Plugin[\"uses\"][0][\"with\"]): void {\n+  renderer.currentStep = \"configEditor\";\n+  renderer.backButton.style.display = \"block\";\n+  renderer.manifestGuiBody.innerHTML = null;\n+  controlButtons({ hide: false });\n+  processProperties(renderer, pluginManifest?.configuration?.properties || {});\n+  const configInputs = document.querySelectorAll<HTMLInputElement | HTMLTextAreaElement>(\".config-input\");\n+\n+  if (plugin) {\n+    configInputs.forEach((input) => {\n+      const key = input.getAttribute(\"data-config-key\");\n+      if (!key) {\n+        throw new Error(\"Input key is required\");\n+      }\n+\n+      const keys = key.split(\".\");\n+      let currentObj = plugin;\n+      for (let i = 0; i < keys.length; i++) {\n+        if (!currentObj[keys[i]]) {\n+          break;\n+        }\n+        currentObj = currentObj[keys[i]] as Record<string, unknown>;\n+      }\n+\n+      let value: string;\n+\n+      if (typeof currentObj === \"object\") {\n+        value = JSON.stringify(currentObj, null, 2);\n+      } else {\n+        value = currentObj as string;\n+      }\n+\n+      if (input.tagName === \"TEXTAREA\") {\n+        (input as HTMLTextAreaElement).value = value;\n+      } else {\n+        (input as HTMLInputElement).value = value;\n+      }\n+    });\n+  }\n+\n+  const add = document.getElementById(\"add\") as HTMLButtonElement;\n+  const remove = document.getElementById(\"remove\") as HTMLButtonElement;\n+  if (!add || !remove) {\n+    throw new Error(\"Add or remove button not found\");\n+  }\n+  add.addEventListener(\"click\", writeNewConfig.bind(null, renderer, \"add\"));\n+\n+  if (plugin) {\n+    remove.disabled = false;\n+    remove.classList.remove(\"disabled\");\n+    remove.addEventListener(\"click\", () => writeNewConfig.bind(null, renderer, \"remove\"));","score":{"reward":1.71,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":56.53142241379314,"syllables":49,"sentences":4,"score":0.9653142241379313},"multiplier":0.25,"relevance":0.95}},{"id":1857491627,"content":"pressing reset to default is disabling the remove button when it shouldn't please mind that you should pass in plugin to `renderConfigEditor`","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857491627","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -0,0 +1,109 @@\n+import { Manifest, Plugin } from \"../../types/plugins\";\n+import { controlButtons } from \"./control-buttons\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { processProperties } from \"./input-parsing\";\n+import { updateGuiTitle } from \"./utils\";\n+import { writeNewConfig } from \"./write-add-remove\";\n+import MarkdownIt from \"markdown-it\";\n+import { getManifestCache } from \"../../utils/storage\";\n+const md = new MarkdownIt();\n+\n+export function renderConfigEditor(renderer: ManifestRenderer, pluginManifest: Manifest | null, plugin?: Plugin[\"uses\"][0][\"with\"]): void {\n+  renderer.currentStep = \"configEditor\";\n+  renderer.backButton.style.display = \"block\";\n+  renderer.manifestGuiBody.innerHTML = null;\n+  controlButtons({ hide: false });\n+  processProperties(renderer, pluginManifest?.configuration?.properties || {});\n+  const configInputs = document.querySelectorAll<HTMLInputElement | HTMLTextAreaElement>(\".config-input\");\n+\n+  if (plugin) {\n+    configInputs.forEach((input) => {\n+      const key = input.getAttribute(\"data-config-key\");\n+      if (!key) {\n+        throw new Error(\"Input key is required\");\n+      }\n+\n+      const keys = key.split(\".\");\n+      let currentObj = plugin;\n+      for (let i = 0; i < keys.length; i++) {\n+        if (!currentObj[keys[i]]) {\n+          break;\n+        }\n+        currentObj = currentObj[keys[i]] as Record<string, unknown>;\n+      }\n+\n+      let value: string;\n+\n+      if (typeof currentObj === \"object\") {\n+        value = JSON.stringify(currentObj, null, 2);\n+      } else {\n+        value = currentObj as string;\n+      }\n+\n+      if (input.tagName === \"TEXTAREA\") {\n+        (input as HTMLTextAreaElement).value = value;\n+      } else {\n+        (input as HTMLInputElement).value = value;\n+      }\n+    });\n+  }\n+\n+  const add = document.getElementById(\"add\") as HTMLButtonElement;\n+  const remove = document.getElementById(\"remove\") as HTMLButtonElement;\n+  if (!add || !remove) {\n+    throw new Error(\"Add or remove button not found\");\n+  }\n+  add.addEventListener(\"click\", writeNewConfig.bind(null, renderer, \"add\"));\n+\n+  if (plugin) {\n+    remove.disabled = false;\n+    remove.classList.remove(\"disabled\");\n+    remove.addEventListener(\"click\", () => writeNewConfig.bind(null, renderer, \"remove\"));\n+  } else {\n+    remove.disabled = true;\n+    remove.classList.add(\"disabled\");\n+  }\n+\n+  const resetToDefaultButton = document.getElementById(\"reset-to-default\") as HTMLButtonElement;\n+  if (!resetToDefaultButton) {\n+    throw new Error(\"Reset to default button not found\");\n+  }\n+\n+  resetToDefaultButton.addEventListener(\"click\", () => {","score":{"reward":1.275,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":69.14136363636365,"syllables":30,"sentences":1,"score":0.9085863636363635},"multiplier":0.25,"relevance":0.85}},{"id":2494525137,"content":"We should only show \"no orgs available\" after we've looked at the request answer, it can be confusing in high latency environments. Show \"loading\", either as string or animation. Perhaps copy from [work.ubq.fi](https://github.com/ubiquity/work.ubq.fi/blob/5ad2731d99f3c03cdb52fe5f7122e412669ca0bd/static/style/style.css#L817C5-L819C41).","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494525137","commentType":"PULL_CONTRIBUTOR","score":{"reward":2.352,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":36,"wordValue":0.1,"result":2.07},"readability":{"fleschKincaid":65.57700000000003,"syllables":57,"sentences":5,"score":0.9442299999999997},"multiplier":0.25,"relevance":0.8}},{"id":2494533703,"content":"1. Though I've selected an org there is no visual indicator of what org I am at, this can be confusing.\r\n2. README fails to be opened for me. Also, no `console.error` log to help debug this.\r\n![image](https://github.com/user-attachments/assets/5d4bf53e-28f1-49c8-af5f-6bd083ddd1f9)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494533703","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.836,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"p":{"score":0,"elementCount":3}},"result":0.2},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":86.22190476190477,"syllables":45,"sentences":3,"score":0.7377809523809523},"multiplier":0.25,"relevance":0.9}},{"id":2494601671,"content":"These icons are not intuitive, perhaps text is better.\r\n![image](https://github.com/user-attachments/assets/a6b2903d-c8d1-47a3-9c1f-7c3b45da1bba)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494601671","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.567,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":66.10000000000002,"syllables":14,"sentences":1,"score":0.9389999999999997},"multiplier":0.25,"relevance":0.7}},{"id":2494615029,"content":"Some responsiveness issues, not sure if relevant as of this PR:\r\n![image](https://github.com/user-attachments/assets/5dc23202-332c-4f0d-b932-8f76e1c25919)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494615029","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.558,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":57.23363636363638,"syllables":18,"sentences":1,"score":0.9723363636363638},"multiplier":0.25,"relevance":0.6}},{"id":2494621341,"content":"json is not vertically expanding for me:\r\nhttps://github.com/user-attachments/assets/cc0b8c1c-e623-47bf-a8cf-0e0822d7197e","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494621341","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.296,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":66.10000000000002,"syllables":28,"sentences":2,"score":0.9389999999999997},"multiplier":0.25,"relevance":0.8}},{"id":2494630577,"content":"Once a plugin config is added, a popup appears to push to GitHub. I think we either directly push (kinda dangerous), or offer a \"shopping cart\" where changes get added to your \"cart\" and partner reviews it all before pushing.\r\n![image](https://github.com/user-attachments/assets/771a97f4-12b3-4a81-8415-59d325f11007)\r\nAlso, if I push and go back the plugin won't appear as green/added until I refresh:\r\nhttps://github.com/user-attachments/assets/3405fd4f-b263-4b24-8e39-8f86d29fccb5","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494630577","commentType":"PULL_CONTRIBUTOR","score":{"reward":2.805,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":58,"wordValue":0.1,"result":2.49},"readability":{"fleschKincaid":71.62190217391307,"syllables":96,"sentences":4,"score":0.8837809782608693},"multiplier":0.25,"relevance":0.85}},{"id":2494640242,"content":"Cleared cache and is now working smooth, perhaps it was on my end. If I can repro again I'll debug.\r\nI think styling decisions are more opinion based comments than direct request for changes. Just let it be for now, unless agreed by team.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494640242","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.065,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":82.61625000000004,"syllables":60,"sentences":4,"score":0.7738374999999996},"multiplier":0.25,"relevance":0.5}},{"id":2499205439,"content":"Of course the ideal is to show precisely the ones he can edit. If that can't be done it's better to show all admin orgs than to miss some.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2499205439","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.044,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":87.39927419354841,"syllables":38,"sentences":2,"score":0.7260072580645159},"multiplier":0.25,"relevance":0.6}},{"id":2499237545,"content":"I can't add conversation rewards plugin with default config, I imagine it's because of the undefineds and nulls. An error message should indicate that.\r\n[cant-add-conversation-rewards.webm](https://github.com/user-attachments/assets/ef7627af-062d-4f06-a0bf-cdbdd6e48d2a)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2499237545","commentType":"PULL_CONTRIBUTOR","score":{"reward":2.538,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":57.059072580645164,"syllables":52,"sentences":4,"score":0.9705907258064517},"multiplier":0.25,"relevance":0.9}},{"id":2499255144,"content":"writeNewConfig executions are accumulating:\r\n[accumulating-toaster.webm](https://github.com/user-attachments/assets/de6d1c8b-f95d-490d-bdf1-8c88254ae800)\r\nIt's outside of toaster, you can follow the experiment by adding `console.log(\"1\");` inside of `writeNewConfig(...)` function declaration. Then go into a plugin add it, go back, add it go back, it follows an arithmetic progression each time you do that.\r\n[accumulating-writeConfigs.webm](https://github.com/user-attachments/assets/4e449e78-8fb4-44ab-bf18-bb522a861e60)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2499255144","commentType":"PULL_CONTRIBUTOR","score":{"reward":3.848,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":49,"wordValue":0.1,"result":2.37},"readability":{"fleschKincaid":38.04718367346939,"syllables":92,"sentences":5,"score":0.7804718367346939},"multiplier":0.25,"relevance":0.95}},{"id":2499262431,"content":"Remove is broken for me, nothing happens when I press it.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2499262431","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.765,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":80.30636363636367,"syllables":15,"sentences":1,"score":0.7969363636363633},"multiplier":0.25,"relevance":0.85}},{"id":2501244701,"content":"This is oAuth rate limit.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2501244701","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.288,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":0.25,"relevance":0.6}},{"id":2501281038,"content":"Appears like you have solved the problems I found. The only thing I managed to find now is the overlap between table and header:\r\n![image](https://github.com/user-attachments/assets/a02b0e61-fddd-4c79-b3e7-4078602c3d1e)\r\nWe could create a issue later for me to fix these kind of CSS problems. By taking a very quick look:\r\n1. Nav should be inside of header\r\n2. The height for content does not need to be calculated just use display block use the available height\r\n3. Fix overlapping\r\n4. Make responsive","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2501281038","commentType":"PULL_CONTRIBUTOR","score":{"reward":2.037,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4}},"result":0.4},"priority":3,"words":{"wordCount":73,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":65.08735159817354,"syllables":101,"sentences":3,"score":0.9491264840182646},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2455430531,"effect":{"addition":982,"deletion":639},"reward":48.63,"priority":3},{"reviewId":2459812278,"effect":{"addition":23,"deletion":11},"reward":1.02,"priority":3},{"reviewId":2462035873,"effect":{"addition":297,"deletion":141},"reward":13.14,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 95.224 XP ]</a>&nbsp;</h3><h6>@zugdev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>62.79</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>0.891</td></tr><tr><td>Review</td><td>Comment</td><td>23</td><td>31.543</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25\" target=\"_blank\" rel=\"noopener\">#25</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+982 -639</td><td>3</td><td>48.63</td></tr><tr><td>+23 -11</td><td>3</td><td>1.02</td></tr><tr><td>+297 -141</td><td>3</td><td>13.14</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2479319570\" target=\"_blank\" rel=\"noopener\">I'll take this one as soon as #13 is through.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>3</td><td>0.768</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2525291747\" target=\"_blank\" rel=\"noopener\">I agree, priority should apply to review and implementation, but&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.123</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1854517927\" target=\"_blank\" rel=\"noopener\">This is a duplicate cache set, you already cache manifests insid&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.9</td><td>3</td><td>0.999</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1854520321\" target=\"_blank\" rel=\"noopener\">You have &#96;JSON.parse(localStorage.getItem(\"manifestCache\") |&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.8</td><td>3</td><td>0.648</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1854525852\" target=\"_blank\" rel=\"noopener\">If there is still time we should move buttons outside of table. &hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 44&#13;  wordValue: 0.1&#13;  result: 2.27&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.533</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857457755\" target=\"_blank\" rel=\"noopener\">redundant cache set here, handleOrgSelection already caches</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.9</td><td>3</td><td>0.54</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857478872\" target=\"_blank\" rel=\"noopener\">the problem is this addEventListener statement, if only you navi&hellip;</a></h6></td><td><details><summary>2.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.95</td><td>3</td><td>2.651</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857481885\" target=\"_blank\" rel=\"noopener\">typo: space between sentences here</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.204</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857482759\" target=\"_blank\" rel=\"noopener\">please use &#96;else if (option === \"remove\")&#96;, if new optio&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.85</td><td>3</td><td>0.816</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857484579\" target=\"_blank\" rel=\"noopener\">typo: space between sentences</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.168</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857489292\" target=\"_blank\" rel=\"noopener\">the function isn't being called because it's in a arrow function&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.95</td><td>3</td><td>1.71</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#discussion_r1857491627\" target=\"_blank\" rel=\"noopener\">pressing reset to default is disabling the remove button when it&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.85</td><td>3</td><td>1.275</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494525137\" target=\"_blank\" rel=\"noopener\">We should only show \"no orgs available\" after we've looked at th&hellip;</a></h6></td><td><details><summary>3.07</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 36&#13;  wordValue: 0.1&#13;  result: 2.07&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.352</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494533703\" target=\"_blank\" rel=\"noopener\">1. Though I've selected an org there is no visual indicator of w&hellip;</a></h6></td><td><details><summary>2.24</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0.2&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.9</td><td>3</td><td>1.836</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494601671\" target=\"_blank\" rel=\"noopener\">These icons are not intuitive, perhaps text is better.![image]&hellip;</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.567</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494615029\" target=\"_blank\" rel=\"noopener\">Some responsiveness issues, not sure if relevant as of this PR:&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.558</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494621341\" target=\"_blank\" rel=\"noopener\">json is not vertically expanding for me:https://github.com/use&hellip;</a></h6></td><td><details><summary>1.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.296</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494630577\" target=\"_blank\" rel=\"noopener\">Once a plugin config is added, a popup appears to push to GitHub&hellip;</a></h6></td><td><details><summary>3.49</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 58&#13;  wordValue: 0.1&#13;  result: 2.49&#13;</pre></details></td><td>0.85</td><td>3</td><td>2.805</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2494640242\" target=\"_blank\" rel=\"noopener\">Cleared cache and is now working smooth, perhaps it was on my en&hellip;</a></h6></td><td><details><summary>2.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.065</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2499205439\" target=\"_blank\" rel=\"noopener\">Of course the ideal is to show precisely the ones he can edit. I&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.044</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2499237545\" target=\"_blank\" rel=\"noopener\">I can't add conversation rewards plugin with default config, I i&hellip;</a></h6></td><td><details><summary>2.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.538</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2499255144\" target=\"_blank\" rel=\"noopener\">writeNewConfig executions are accumulating:[accumulating-toast&hellip;</a></h6></td><td><details><summary>4.37</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 49&#13;  wordValue: 0.1&#13;  result: 2.37&#13;</pre></details></td><td>0.95</td><td>3</td><td>3.848</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2499262431\" target=\"_blank\" rel=\"noopener\">Remove is broken for me, nothing happens when I press it.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.85</td><td>3</td><td>0.765</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2501244701\" target=\"_blank\" rel=\"noopener\">This is oAuth rate limit.</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.288</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2501281038\" target=\"_blank\" rel=\"noopener\">Appears like you have solved the problems I found. The only thin&hellip;</a></h6></td><td><details><summary>3.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;  result: 0.4&#13;regex:&#13;  wordCount: 73&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.037</td></tr></tbody></table></details>"},"rndquu":{"total":168.23,"userId":119500907,"comments":[{"id":2491038750,"content":"Yes, https://github.com/ubiquity-os/ubiquity-os-plugin-installer is for partners. Development config can be created manually at any time.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2491038750","commentType":"ISSUE_AUTHOR","score":{"reward":7.98,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":49.41893939393941,"syllables":39,"sentences":3,"score":0.8941893939393941},"multiplier":1,"relevance":1}},{"id":2491188904,"content":"@Keyrxng Notice a new subtask:\r\n```\r\n6. Add github redirect to the same page ([example](https://github.com/ubiquity/work.ubq.fi/blob/5ad2731d99f3c03cdb52fe5f7122e412669ca0bd/src/home/rendering/render-github-login-button.ts#L37))\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2491188904","commentType":"ISSUE_AUTHOR","score":{"reward":1.95,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":83.32000000000004,"syllables":7,"sentences":1,"score":0.7667999999999996},"multiplier":1,"relevance":1}},{"id":2506539999,"content":"The bot is not responding because of https://github.com/ubiquity-os/ubiquity-os-kernel/issues/195. I'll try to regenerate later.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2506539999","commentType":"ISSUE_AUTHOR","score":{"reward":1.62,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":55.60115942028986,"syllables":39,"sentences":3,"score":0.9560115942028986},"multiplier":1,"relevance":0.2}},{"id":2507857975,"content":"All text conversation incentive parameters should be fine tuned once the project is transformed into an automated DAO.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2507857975","commentType":"ISSUE_AUTHOR","score":{"reward":0.516,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":42.86500000000001,"syllables":31,"sentences":1,"score":0.8286500000000001},"multiplier":1,"relevance":0.1}},{"id":2661828692,"content":"Depends on https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13\r\nWhat should be done:\r\n1. The \"select configuration\" step should be removed. Always use the \"production\" config.\r\n2. Show plugin readme on installing a new plugin (original [comment](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/15#issue-2646661367))\r\n3. Show indicator if plugin is already installed (original [comment](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/16#issue-2647181893))\r\n4. Load current config values in the editor (if config is present)\r\n5. Add \"Reset to defaults\" button which resets plugin options to default values (original [comment](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/17#issue-2647183231))\r\n6. Add github redirect to the same page ([example](https://github.com/ubiquity/work.ubq.fi/blob/5ad2731d99f3c03cdb52fe5f7122e412669ca0bd/src/home/rendering/render-github-login-button.ts#L37))","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19","commentType":"ISSUE_SPECIFICATION","score":{"reward":10.04,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":6},"a":{"score":1,"elementCount":5}},"result":5.6},"priority":1,"words":{"wordCount":70,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":34.83680555555557,"syllables":145,"sentences":4,"score":0.7483680555555557},"multiplier":1,"relevance":1}},{"id":2460806756,"content":"@Keyrxng \r\n1. Getting this error on trying to add the https://github.com/ubiquity-os-marketplace/text-conversation-rewards plugin:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-26 at 11 50 32\" src=\"https://github.com/user-attachments/assets/242b2bc1-91ef-4ec3-9fd5-53a739ec8adb\">\r\n2. Getting this error o trying to add the https://github.com/ubiquity-os-marketplace/daemon-pricing plugin:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-26 at 11 51 11\" src=\"https://github.com/user-attachments/assets/bae62f13-a936-45eb-b304-24e3da1eabeb\">\r\nPls fix","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#pullrequestreview-2460806756","commentType":"PULL_COLLABORATOR","score":{"reward":21.42,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ol":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":4}},"result":4.2},"priority":3,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":64.44444186046513,"syllables":127,"sentences":5,"score":0.9555555813953487},"multiplier":1,"relevance":0.85}},{"id":2465411821,"content":"@Keyrxng Check this screenshot:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-27 at 18 46 00\" src=\"https://github.com/user-attachments/assets/50013049-ba69-4659-83df-36da403f630c\">\r\nThe \"Assistive pricing\" plugin is disabled although its config is present in the `.ubiquity-os.config.yml` file. The expected behavior for the \"Assistive pricing\" is to be in the enabled mode.\r\nPls fix","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#pullrequestreview-2465411821","commentType":"PULL_COLLABORATOR","score":{"reward":11.313,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":47,"wordValue":0.1,"result":2.33},"readability":{"fleschKincaid":73.96922413793105,"syllables":81,"sentences":4,"score":0.8603077586206895},"multiplier":1,"relevance":0.9}},{"id":2466901669,"content":"@Keyrxng \r\n1. For some of the plugins (`User activity watcher`, `Automated merging`, `Telegram kernel`) getting the `No plugin URL found for user-activity-watcher` error:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-28 at 10 24 57\" src=\"https://github.com/user-attachments/assets/505e9476-8289-4b85-83a3-708627d09267\">\r\nAs far as I understand those plugins work as github actions so it's not clear why we can't set them up.\r\n2. The `command-ask` plugin shows empty UI:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-28 at 10 29 42\" src=\"https://github.com/user-attachments/assets/f3cbec23-00ab-496d-8fc0-c62cd3497064\">\r\nPls fix","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#pullrequestreview-2466901669","commentType":"PULL_COLLABORATOR","score":{"reward":15.096,"formatting":{"content":{"p":{"score":0,"elementCount":5},"ol":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2.2},"priority":3,"words":{"wordCount":65,"wordValue":0.1,"result":2.56},"readability":{"fleschKincaid":78.76564655172417,"syllables":109,"sentences":4,"score":0.8123435344827583},"multiplier":1,"relevance":0.85}},{"id":2468579669,"content":"Check this screenshot:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-28 at 19 41 55\" src=\"https://github.com/user-attachments/assets/80f20e40-8266-48fd-9860-afa85b3f2ca8\">\r\nAlthough the `registerWalletWithVerification` is set to `true` in the `yml` config the option in the html UI is not check while the expected behavior is to load current config values.\r\nPls fix.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#pullrequestreview-2468579669","commentType":"PULL_COLLABORATOR","score":{"reward":11.151,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":74.58476190476193,"syllables":75,"sentences":3,"score":0.8541523809523807},"multiplier":1,"relevance":0.9}},{"id":2506501726,"content":"1. So, as far as I understand, when https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24 is solved all plugins setup will be fine because of the correct `name` property.\r\n2. I cleared the cache and error is gone","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2506501726","commentType":"PULL_COLLABORATOR","score":{"reward":8.106,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1.2},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":65.65538461538465,"syllables":59,"sentences":3,"score":0.9434461538461535},"multiplier":1,"relevance":0.7}},{"id":2506532356,"content":"I suppose when all of the critical issues are ready (https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24, https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/22, https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/20) we can get back to neaten up the css.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2506532356","commentType":"PULL_COLLABORATOR","score":{"reward":10.026,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":3}},"result":3},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":45.59000000000003,"syllables":91,"sentences":4,"score":0.8559000000000003},"multiplier":1,"relevance":0.6}},{"id":2506533814,"content":"@Keyrxng Now you could merge the latest `main` branch into your other PRs from https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pulls","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2506533814","commentType":"PULL_COLLABORATOR","score":{"reward":3.252,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":62.74510869565219,"syllables":36,"sentences":2,"score":0.9725489130434781},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2460806756,"effect":{"addition":997,"deletion":642},"reward":49.17,"priority":3},{"reviewId":2465411821,"effect":{"addition":297,"deletion":141},"reward":13.14,"priority":3},{"reviewId":2466901669,"effect":{"addition":39,"deletion":68},"reward":3.21,"priority":3},{"reviewId":2468608765,"effect":{"addition":7,"deletion":1},"reward":0.24,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 168.23 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>65.76</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>10.04</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>12.066</td></tr><tr><td>Review</td><td>Comment</td><td>7</td><td>80.364</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25\" target=\"_blank\" rel=\"noopener\">#25</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+997 -642</td><td>3</td><td>49.17</td></tr><tr><td>+297 -141</td><td>3</td><td>13.14</td></tr><tr><td>+39 -68</td><td>3</td><td>3.21</td></tr><tr><td>+7 -1</td><td>3</td><td>0.24</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19\" target=\"_blank\" rel=\"noopener\">Depends on https://github.com/ubiquity-os/ubiquity-os-plugin-ins&hellip;</a></h6></td><td><details><summary>8.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 6&#13;    a:&#13;      score: 1&#13;      elementCount: 5&#13;  result: 5.6&#13;regex:&#13;  wordCount: 70&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>1</td><td>1</td><td>10.04</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2491038750\" target=\"_blank\" rel=\"noopener\">Yes, https://github.com/ubiquity-os/ubiquity-os-plugin-installer&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>1</td><td>3</td><td>7.98</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2491188904\" target=\"_blank\" rel=\"noopener\">@Keyrxng Notice a new subtask:&#96;&#96;&#96;6. Add github r&hellip;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>1</td><td>3</td><td>1.95</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2506539999\" target=\"_blank\" rel=\"noopener\">The bot is not responding because of https://github.com/ubiquity&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.62</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2507857975\" target=\"_blank\" rel=\"noopener\">All text conversation incentive parameters should be fine tuned &hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.516</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#pullrequestreview-2460806756\" target=\"_blank\" rel=\"noopener\">@Keyrxng 1. Getting this error on trying to add the https://gi&hellip;</a></h6></td><td><details><summary>6.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ol:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 4&#13;  result: 4.2&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.85</td><td>3</td><td>21.42</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#pullrequestreview-2465411821\" target=\"_blank\" rel=\"noopener\">@Keyrxng Check this screenshot:&lt;img width=\"1511\" alt=\"Scree&hellip;</a></h6></td><td><details><summary>3.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 47&#13;  wordValue: 0.1&#13;  result: 2.33&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.313</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#pullrequestreview-2466901669\" target=\"_blank\" rel=\"noopener\">@Keyrxng 1. For some of the plugins (&#96;User activity watche&hellip;</a></h6></td><td><details><summary>4.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    ol:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.2&#13;regex:&#13;  wordCount: 65&#13;  wordValue: 0.1&#13;  result: 2.56&#13;</pre></details></td><td>0.85</td><td>3</td><td>15.096</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#pullrequestreview-2468579669\" target=\"_blank\" rel=\"noopener\">Check this screenshot:&lt;img width=\"1511\" alt=\"Screenshot 202&hellip;</a></h6></td><td><details><summary>3.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.151</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2506501726\" target=\"_blank\" rel=\"noopener\">1. So, as far as I understand, when https://github.com/ubiquity-&hellip;</a></h6></td><td><details><summary>3.01</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.2&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.7</td><td>3</td><td>8.106</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2506532356\" target=\"_blank\" rel=\"noopener\">I suppose when all of the critical issues are ready (https://git&hellip;</a></h6></td><td><details><summary>4.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.6</td><td>3</td><td>10.026</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2506533814\" target=\"_blank\" rel=\"noopener\">@Keyrxng Now you could merge the latest &#96;main&#96; branch in&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.4</td><td>3</td><td>3.252</td></tr></tbody></table></details>"},"0x4007":{"total":0,"userId":4975670,"comments":[{"id":2525242237,"content":"I think we need to remove the priority level multiplier on the spec @gentlementlegen","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2525242237","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":47.59642857142859,"syllables":24,"sentences":1,"score":0.8759642857142859},"multiplier":1,"relevance":0}},{"id":2525288529,"content":"As I understand its the priority level thats the problem. Spec should always be a 3x multiplier. Maybe.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2525288529","commentType":"ISSUE_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":73.84500000000001,"syllables":27,"sentences":3,"score":0.8615499999999998},"multiplier":1,"relevance":0}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25"}]},"gentlementlegen":{"total":28.566,"userId":9807008,"comments":[{"id":2525266890,"content":"https://github.com/ubiquity-os/.ubiquity-os/commit/e22141cb0682674d30a2e5f57231ca51c1ed1f5b\r\nhttps://github.com/ubiquity-os-marketplace/.ubiquity-os/commit/b6eca6949ef6d415a2f6ef623faf8a622d0b4937\r\nhttps://github.com/ubiquity/.ubiquity-os/commit/a3e7b74559639c846d21285c5f69ca98bcefa39d","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2525266890","commentType":"ISSUE_COLLABORATOR","score":{"reward":6.3,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":3}},"result":3},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":-7.013333333333293,"syllables":67,"sentences":7,"score":0},"multiplier":1,"relevance":0.7}},{"id":2492861812,"content":"Seems to work fine although I have a few remarks:\r\n- I don't seem to have padding like in your video\r\n<img width=\"1710\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8fc12966-f72d-4798-aed1-3fc3ea06c81d\">\r\n- the left panel shifts a bit when hovering the \"use default\" button\r\n- I am only seeing two orgs but I am in more orgs that that, how are they chosen?\r\n- going back from the edit plugin menu makes the bar take the full width\r\n<img width=\"1710\" alt=\"image\" src=\"https://github.com/user-attachments/assets/66799da9-95f9-4da0-9b4c-5e5183218dde\">\r\n- the \"remove\" button should maybe be disabled on plugins that are not installed","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2492861812","commentType":"PULL_COLLABORATOR","score":{"reward":17.604,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":3},"li":{"score":0.1,"elementCount":5},"a":{"score":1,"elementCount":2}},"result":2.5},"priority":3,"words":{"wordCount":90,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":69.64357142857145,"syllables":144,"sentences":4,"score":0.9035642857142855},"multiplier":1,"relevance":0.9}},{"id":2497319574,"content":"I have seen only 2 out of 4 orgs where I am an admin with the rights to create a configuration (`Meniole` and `ubiquity-os`). I should have seen `ubiquity-os-marketplace` most likely.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2497319574","commentType":"PULL_COLLABORATOR","score":{"reward":4.662,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":83.85357142857143,"syllables":36,"sentences":2,"score":0.7614642857142857},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 28.566 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>6.3</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>22.266</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/19#issuecomment-2525266890\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os/.ubiquity-os/commit/e22141cb06826&hellip;</a></h6></td><td><details><summary>3</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.3</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2492861812\" target=\"_blank\" rel=\"noopener\">Seems to work fine although I have a few remarks:- I don't see&hellip;</a></h6></td><td><details><summary>5.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 3&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.5&#13;regex:&#13;  wordCount: 90&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>3</td><td>17.604</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25#issuecomment-2497319574\" target=\"_blank\" rel=\"noopener\">I have seen only 2 out of 4 orgs where I am an admin with the ri&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.662</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-plugin-installer_24.json","json":{"Keyrxng":{"userId":106303466,"total":304.842,"task":{"reward":300,"multiplier":1},"comments":[{"id":2493899154,"content":"I think we should also support injecting the plugin url into the manifest after worker deployment too (could do the same for action plugins too)\r\n- Currently I'm taking the urls from one of our org configs, which works for now ([code](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/25/files#diff-d72e5b50501bea64e3577567350998756038e90e8b5815a091a00dc03f9b82b9R27))\r\n- But if we have plugins on the marketplace which are not installed in our org then the fetch and write would fail without a `- plugin: <url>` and I'd need to build the URL myself and that has faults\r\n- 3rd party plugins fall into published but not installed\r\n- I'm also building the plugin names using `manifest.name` which should match the repo but may not, so `manifest.url` would be a more guaranteed way of matching","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2493899154","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.188,"formatting":{"content":{"p":{"score":0,"elementCount":5},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1.4},"priority":3,"words":{"wordCount":113,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":-20.160884955752195,"syllables":150,"sentences":1,"score":0},"multiplier":0.25,"relevance":0.4}},{"id":2495481338,"content":"@gentlementlegen I'm comfortable doing this for all plugins with the exception of https://github.com/ubiquity-os-marketplace/text-conversation-rewards/blob/development/src/types/plugin-input.ts, would you mind doing this one and I'll catch the rest?\r\nI can see there is `/**\\` comments for some but I'd imagine these descriptions would be different at least more verbose and you would know best\r\n---\r\nWe have the README displayed to the right of the editor now. So for each input should we have a little tooltip info indicator top-right adjacent to the input title i.e `EVM Private Encrypted ℹ️` or adjacent the input field on the far right for each row?\r\n![image](https://github.com/user-attachments/assets/b2d6b696-4bae-4e0c-ac30-a033d59bb21c)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2495481338","commentType":"ISSUE_ASSIGNEE","score":{"reward":3.48,"formatting":{"content":{"p":{"score":0,"elementCount":4},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":96,"wordValue":0.1,"result":2.62},"readability":{"fleschKincaid":65.52047619047622,"syllables":162,"sentences":6,"score":0.9447952380952378},"multiplier":0.25,"relevance":1}},{"id":2500756414,"content":"Thanks @gentlementlegen for handling that one for me, appreciate it","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2500756414","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.174,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":52.86500000000001,"syllables":17,"sentences":1,"score":0.9286500000000001},"multiplier":0.25,"relevance":0.2}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 304.842 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>300</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>4.842</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2493899154\" target=\"_blank\" rel=\"noopener\">I think we should also support injecting the plugin url into the&hellip;</a></h6></td><td><details><summary>3.94</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.4&#13;regex:&#13;  wordCount: 113&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>0.4</td><td>3</td><td>1.188</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2495481338\" target=\"_blank\" rel=\"noopener\">@gentlementlegen I'm comfortable doing this for all plugins with&hellip;</a></h6></td><td><details><summary>3.62</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 96&#13;  wordValue: 0.1&#13;  result: 2.62&#13;</pre></details></td><td>1</td><td>3</td><td>3.48</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2500756414\" target=\"_blank\" rel=\"noopener\">Thanks @gentlementlegen for handling that one for me, appreciate&hellip;</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.174</td></tr></tbody></table></details>"},"rndquu":{"total":42.078,"userId":119500907,"comments":[{"id":2486256763,"content":"@gentlementlegen Pls check the description. Perhaps there's a way to create plugin parameter configuration descriptions in the [plugin-input.ts](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/src/types/plugin-input.ts) file.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2486256763","commentType":"ISSUE_AUTHOR","score":{"reward":9.51,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":37.88257575757578,"syllables":42,"sentences":3,"score":0.7788257575757578},"multiplier":1,"relevance":1}},{"id":2486680627,"content":"Awesome, thanks, updated the spec","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2486680627","commentType":"ISSUE_AUTHOR","score":{"reward":1.428,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":66.40000000000003,"syllables":8,"sentences":1,"score":0.9359999999999996},"multiplier":1,"relevance":0.7}},{"id":2500046937,"content":"I think tooltip is fine","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2500046937","commentType":"ISSUE_AUTHOR","score":{"reward":1.656,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":100.24000000000002,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":2500111214,"content":"https://github.com/ubiquity-os/plugin-template/issues/33","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2500111214","commentType":"ISSUE_AUTHOR","score":{"reward":2.304,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":51.867500000000035,"syllables":16,"sentences":2,"score":0.9186750000000004},"multiplier":1,"relevance":0.6}},{"id":2672874281,"content":"Right now all core plugins have a `manifest.json` file ([example](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/manifest.json)) describing plugin's:\r\n- name\r\n- description\r\n- listeners\r\n- command examples\r\n- configuration parameters\r\nThe issue is that when plugin configuration is displayed in https://github.com/ubiquity-os/ubiquity-os-plugin-installer there're no any configuration parameter descriptions so it's really hard for a partner to find out what parameters are meant to be used for:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-19 at 19 14 11\" src=\"https://github.com/user-attachments/assets/b2fe50c2-c740-49f8-bec5-2afa1af2f695\">\r\nWhat should be done for all of the core plugins in https://github.com/ubiquity-os-marketplace:\r\n1. Make sure the readme file is relevant (i.e. has a relevant config example and configuration parameter descriptions)\r\n2. Make sure there's a `name` property in the `manifest.json` (some of the core plugins miss it)\r\n3. Make sure there's a `description` property in the `manifest.json`\r\n4. Add descriptions of plugin configuration parameters in the `plugin-input.ts` file (for example [this](https://github.com/Meniole/command-query-user/blob/042533ebbbfebaf5f5754b1d4a2fcf1d8afd94ad/src/types/plugin-input.ts#L7) code generates [this](https://github.com/Meniole/command-query-user/blob/ecb3c906d0e21b1557b23a8465fb2760b3f87abf/manifest.json#L16) manifest). Simply put we should add the `description` field for all of the plugin parameters in the `plugin-input.ts` file. Description should include general info and possible parameter options.\r\nNotice that in the `manifest.json` file the `configuration` schema is created dynamically:\r\n1. [update-configuration.yml](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/.github/workflows/update-configuration.yml) workflow runs \r\n2. Configuration schema is fetched from [plugin-input.ts](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/src/types/plugin-input.ts)\r\n3. [manifest.json](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/manifest.json) is updated ([example commit](https://github.com/ubiquity-os-marketplace/command-start-stop/commit/56232c8c67d198cc46cf61c9b3fd0b90cce57df7))\r\nThen we'll display all configuration parameter descriptions in https://github.com/ubiquity-os/ubiquity-os-plugin-installer on creating/editing a config.\r\nUpdate: parameter description PRs:\r\n- https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/49\r\n- https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/56\r\n- https://github.com/ubiquity-os-marketplace/command-start-stop/pull/94\r\n- https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/52\r\n- https://github.com/ubiquity-os-marketplace/command-wallet/pull/24\r\n- https://github.com/ubiquity-os-marketplace/command-query/pull/25\r\n- https://github.com/ubiquity-os-marketplace/command-ask/pull/41\r\n- https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/202\r\n- https://github.com/ubiquity-os-marketplace/daemon-merging/pull/30","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24","commentType":"ISSUE_SPECIFICATION","score":{"reward":27.18,"formatting":{"content":{"p":{"score":0,"elementCount":28},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":21},"ol":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":18}},"result":20.1},"priority":1,"words":{"wordCount":208,"wordValue":0.1,"result":1.65},"readability":{"fleschKincaid":43.201816770186355,"syllables":591,"sentences":23,"score":0.8320181677018635},"multiplier":1,"relevance":1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 42.078 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Specification</td><td>1</td><td>27.18</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>14.898</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24\" target=\"_blank\" rel=\"noopener\">Right now all core plugins have a &#96;manifest.json&#96; file (&hellip;</a></h6></td><td><details><summary>21.75</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 28&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 21&#13;    ol:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 18&#13;  result: 20.1&#13;regex:&#13;  wordCount: 208&#13;  wordValue: 0.1&#13;  result: 1.65&#13;</pre></details></td><td>1</td><td>1</td><td>27.18</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2486256763\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Pls check the description. Perhaps there's a wa&hellip;</a></h6></td><td><details><summary>2.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>1</td><td>3</td><td>9.51</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2486680627\" target=\"_blank\" rel=\"noopener\">Awesome, thanks, updated the spec</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.428</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2500046937\" target=\"_blank\" rel=\"noopener\">I think tooltip is fine</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.656</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2500111214\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os/plugin-template/issues/33</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.304</td></tr></tbody></table></details>"},"gentlementlegen":{"total":210.843,"userId":9807008,"comments":[{"id":2486464747,"content":"@rndquu I believe there is a simpler way. For every item in the configuration, there is a \"description\" parameter available. It gets serialized in the manifest.json and is available right away.\r\nExample:\r\nThe following code\r\nhttps://github.com/Meniole/command-query-user/blob/042533ebbbfebaf5f5754b1d4a2fcf1d8afd94ad/src/types/plugin-input.ts#L7\r\nYields the following configuration\r\nhttps://github.com/Meniole/command-query-user/blob/fix/improvements/manifest.json#L16\r\nAnd I think this would be usable by the UI","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2486464747","commentType":"ISSUE_COLLABORATOR","score":{"reward":16.59,"formatting":{"content":{"p":{"score":0,"elementCount":7},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":47.27679487179489,"syllables":139,"sentences":9,"score":0.8727679487179489},"multiplier":1,"relevance":1}},{"id":1951976688,"content":"Do we need this log?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1951976688","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -149,9 +126,11 @@ export function renderConfigEditor(renderer: ManifestRenderer, pluginManifest: M\n \n   const org = localStorage.getItem(\"selectedOrg\");\n \n-  updateGuiTitle(`Editing Configuration for ${pluginManifest?.name} in ${org}`);\n+  updateGuiTitle(`Editing configuration for ${pluginName.replace(/-/g, \" \").replace(/\\b\\w/g, (l) => l.toUpperCase())} in ${org}`);\n   renderer.manifestGui?.classList.add(\"plugin-editor\");\n   renderer.manifestGui?.classList.add(\"rendered\");\n+\n+  console.log(\"Config editor rendered\");","score":{"reward":0.621,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":1951977842,"content":"There is no better way than this to identify the error?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1951977842","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -44,8 +44,14 @@ export class ConfigParser {\n \n         toastNotification(\"We noticed you don't have a '.ubiquity-os' config repo, so we created one for you.\", { type: \"success\" });\n       } catch (er) {\n-        console.log(er);\n-        throw new Error(\"Config repo creation failed\");\n+        if (er instanceof Error && er.message.includes(\"name already exists on this account\")) {","score":{"reward":2.562,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":72.61545454545457,"syllables":16,"sentences":1,"score":0.8738454545454544},"multiplier":1,"relevance":0.7}},{"id":1951978487,"content":"```suggestion\r\n      message: `chore(PluginInstallerUI): updating config`,\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1951978487","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -148,7 +154,7 @@ export class ConfigParser {\n       owner: org,\n       repo: repo,\n       path,\n-      message: `chore: Plugin Installer UI - update`,\n+      message: `chore: updating config (Plugin Installer UI)`,","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.8}},{"id":1951980784,"content":"```suggestion\r\n      message: `chore(PluginInstallerUI): updating config`,\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1951980784","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -148,7 +154,7 @@ export class ConfigParser {\n       owner: org,\n       repo: repo,\n       path,\n-      message: `chore: Plugin Installer UI - update`,\n+      message: `chorechore(PluginInstallerUI): updating config`,","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":2635683775,"content":"@Keyrxng Did all the related pull-requests to add description to items got merged already? I'll have a look at this.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2635683775","commentType":"PULL_COLLABORATOR","score":{"reward":3.474,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":84.15181818181821,"syllables":29,"sentences":2,"score":0.7584818181818178},"multiplier":1,"relevance":0.6}},{"id":2637467676,"content":"Seems to work quite okay, all my feedback would be visuals related (not sure if that is part of the scope of this PR):\r\n<img width=\"690\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ac53c9c9-bc49-46d4-b084-79a11d7849ca\" />\r\n<img width=\"1521\" alt=\"image\" src=\"https://github.com/user-attachments/assets/17991ec1-86b4-42ef-b118-cbe78144a91e\" />\r\n- the backticks (e.g. `backtick`) just display as plain text\r\n- enable / disable buttons are not aligned with the text box\r\n- reset button displays weird\r\n<img width=\"249\" alt=\"image\" src=\"https://github.com/user-attachments/assets/7c0cec1e-b55b-49bd-9348-4e294ca648d7\" />","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2637467676","commentType":"PULL_COLLABORATOR","score":{"reward":19.872,"formatting":{"content":{"p":{"score":0,"elementCount":7},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3},"a":{"score":1,"elementCount":3}},"result":3.3},"priority":3,"words":{"wordCount":65,"wordValue":0.1,"result":2.56},"readability":{"fleschKincaid":74.57911564625854,"syllables":134,"sentences":6,"score":0.8542088435374146},"multiplier":1,"relevance":0.9}},{"id":2646645806,"content":"I wanted to test the changes, but even if you didn't seem to have touched much logic the website for me is unusable. I have lots of errors on each screen and I cannot enter the plugin configuration anymore.\r\n<img width=\"1670\" alt=\"image\" src=\"https://github.com/user-attachments/assets/75fa53a2-1a52-4bc4-aa92-d7d0df68e1a6\" />\r\nI cleared the cache, cleared the local storage, same result.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2646645806","commentType":"PULL_COLLABORATOR","score":{"reward":11.88,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":71.14121268656717,"syllables":94,"sentences":4,"score":0.8885878731343283},"multiplier":1,"relevance":0.9}},{"id":2646658164,"content":"@Keyrxng I already have a configuration and my goal was to modify the plugins there. Made it public if that helps: https://github.com/Meniole/.ubiquity-os\r\nA lot of errors come from trying to fetch https://github.com/mentlegen-2 which exists and is public, not sure why this happens.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2646658164","commentType":"PULL_COLLABORATOR","score":{"reward":11.046,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":73.72905882352943,"syllables":74,"sentences":5,"score":0.8627094117647057},"multiplier":1,"relevance":0.7}},{"id":2646697091,"content":"Created a related issue, will remove my current configuration and try again then.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2646697091","commentType":"PULL_COLLABORATOR","score":{"reward":2.1,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":50.470769230769264,"syllables":22,"sentences":1,"score":0.9047076923076927},"multiplier":1,"relevance":0.5}},{"id":2649634874,"content":"@Keyrxng It works better after removing the configuration, although it takes a very long time to display the first screen because somehow it cannot fetch `mentlegen-2` organization configuration. Logic also seems to work fine. Still a few remarks:\r\n<img width=\"420\" alt=\"image\" src=\"https://github.com/user-attachments/assets/c5643e50-f048-4d1c-9662-a5e8f8d78580\" />\r\nWhy are some field names having dots and other having spaces?\r\nText box fields still seems not aligned properly\r\nThe commit name on config update starts with `chore: Plugin` which is not `conventional commit` friendly (should not start with uppercase)\r\nAlso it seems that these kind of selectors don't work:\r\nhttps://github.com/user-attachments/assets/73f10fef-f5fe-40b6-ac25-627bb9af150b","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2649634874","commentType":"PULL_COLLABORATOR","score":{"reward":16.119,"formatting":{"content":{"p":{"score":0,"elementCount":7},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":90,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":63.25440476190478,"syllables":165,"sentences":6,"score":0.9674559523809522},"multiplier":1,"relevance":0.9}},{"id":2652595668,"content":"Truly don't understand about that organization because it has very similar settings to the other ones, if I find something I'll let you know.\r\nThe problem to me is that during all the fetching the UI is completely empty, and the only feedback appears in the console.\r\nCool let me test again.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2652595668","commentType":"PULL_COLLABORATOR","score":{"reward":4.74,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":54,"wordValue":0.1,"result":2.44},"readability":{"fleschKincaid":58.531666666666666,"syllables":83,"sentences":3,"score":0.9853166666666666},"multiplier":1,"relevance":0.5}},{"id":2652606616,"content":"One last margin problem remaining here:\r\n<img width=\"604\" alt=\"image\" src=\"https://github.com/user-attachments/assets/0f5d86d1-a038-4956-9fda-5d62b5e04c75\" />\r\nOtherwise everything seems to work fine.\r\nOn the above screenshot, each of these have a lot of configurable parameters but only a text box is shown, when I thing there should be all the inner parameters available. This is obviously outside of the scope of this pull-request but it should be addressed within another pull-request.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2652606616","commentType":"PULL_COLLABORATOR","score":{"reward":11.136,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":69,"wordValue":0.1,"result":2.59},"readability":{"fleschKincaid":57.52000000000004,"syllables":122,"sentences":4,"score":0.9752000000000004},"multiplier":1,"relevance":0.8}},{"id":2652663947,"content":"Yes I can write a spec. My idea would be that all the fields should be rendered recursively within a tree, so if you have an object within an objects within an object they all render. I think this is doable since you have the full object shape within the generated manifest. But again outside of the scope of this pull-request.\r\nalso yes I have to render 5 organizations which is why it is slow. Ideally some spinner or anything that lets you know something is happening.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2652663947","commentType":"PULL_COLLABORATOR","score":{"reward":6.993,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":88,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":70.81651515151518,"syllables":126,"sentences":6,"score":0.8918348484848483},"multiplier":1,"relevance":0.7}},{"id":2658026560,"content":"Probably @0x4007 can take a peek and give some feedback","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2658026560","commentType":"PULL_COLLABORATOR","score":{"reward":0.99,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2610812095,"effect":{"addition":2450,"deletion":968},"reward":102.54,"priority":3},{"reviewId":2610818296,"effect":{"addition":1,"deletion":3},"reward":0.12,"priority":3},{"reviewId":2610822147,"effect":{"addition":1,"deletion":1},"reward":0.06,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 210.843 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>102.72</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>16.59</td></tr><tr><td>Review</td><td>Comment</td><td>14</td><td>91.533</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30\" target=\"_blank\" rel=\"noopener\">#30</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+2450 -968</td><td>3</td><td>102.54</td></tr><tr><td>+1 -3</td><td>3</td><td>0.12</td></tr><tr><td>+1 -1</td><td>3</td><td>0.06</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/24#issuecomment-2486464747\" target=\"_blank\" rel=\"noopener\">@rndquu I believe there is a simpler way. For every item in the &hellip;</a></h6></td><td><details><summary>4.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>1</td><td>3</td><td>16.59</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1951976688\" target=\"_blank\" rel=\"noopener\">Do we need this log?</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.621</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1951977842\" target=\"_blank\" rel=\"noopener\">There is no better way than this to identify the error?</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.562</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1951978487\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionmessage: &#96;chore(PluginInsta&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.8</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1951980784\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionmessage: &#96;chore(PluginInsta&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2635683775\" target=\"_blank\" rel=\"noopener\">@Keyrxng Did all the related pull-requests to add description to&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.474</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2637467676\" target=\"_blank\" rel=\"noopener\">Seems to work quite okay, all my feedback would be visuals relat&hellip;</a></h6></td><td><details><summary>5.86</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.3&#13;regex:&#13;  wordCount: 65&#13;  wordValue: 0.1&#13;  result: 2.56&#13;</pre></details></td><td>0.9</td><td>3</td><td>19.872</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2646645806\" target=\"_blank\" rel=\"noopener\">I wanted to test the changes, but even if you didn't seem to hav&hellip;</a></h6></td><td><details><summary>3.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.88</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2646658164\" target=\"_blank\" rel=\"noopener\">@Keyrxng I already have a configuration and my goal was to modif&hellip;</a></h6></td><td><details><summary>4.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.7</td><td>3</td><td>11.046</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2646697091\" target=\"_blank\" rel=\"noopener\">Created a related issue, will remove my current configuration an&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.1</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2649634874\" target=\"_blank\" rel=\"noopener\">@Keyrxng It works better after removing the configuration, altho&hellip;</a></h6></td><td><details><summary>4.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 90&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>3</td><td>16.119</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2652595668\" target=\"_blank\" rel=\"noopener\">Truly don't understand about that organization because it has ve&hellip;</a></h6></td><td><details><summary>2.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 54&#13;  wordValue: 0.1&#13;  result: 2.44&#13;</pre></details></td><td>0.5</td><td>3</td><td>4.74</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2652606616\" target=\"_blank\" rel=\"noopener\">One last margin problem remaining here:&lt;img width=\"604\" alt&hellip;</a></h6></td><td><details><summary>3.59</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 69&#13;  wordValue: 0.1&#13;  result: 2.59&#13;</pre></details></td><td>0.8</td><td>3</td><td>11.136</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2652663947\" target=\"_blank\" rel=\"noopener\">Yes I can write a spec. My idea would be that all the fields sho&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 88&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.993</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2658026560\" target=\"_blank\" rel=\"noopener\">Probably @0x4007 can take a peek and give some feedback</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.99</td></tr></tbody></table></details>"},"whilefoo":{"total":109.665,"userId":139262667,"comments":[{"id":1960183908,"content":"SDK is now at `3.0.0`","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1960183908","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -35,7 +35,7 @@\n   \"dependencies\": {\n     \"@octokit/rest\": \"^21.0.2\",\n     \"@supabase/supabase-js\": \"^2.46.1\",\n-    \"@ubiquity-os/plugin-sdk\": \"^1.0.11\",\n+    \"@ubiquity-os/plugin-sdk\": \"^2.0.3\",","score":{"reward":0.513,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":2666536452,"content":"![image](https://github.com/user-attachments/assets/b7cb00d8-24c6-424e-a57d-eb968a3f93aa)\r\nI selected my org and then tried a few repositories that already have a config but it didn't work (it seems to be a known issue from what I read in this PR), then I selected a repo that doesn't have a config and it created one but I can't select any plugins, the dropdown won't open.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2666536452","commentType":"PULL_COLLABORATOR","score":{"reward":6.552,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":61,"wordValue":0.1,"result":2.53},"readability":{"fleschKincaid":38.129836065573784,"syllables":77,"sentences":1,"score":0.7812983606557379},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2624352679,"effect":{"addition":2448,"deletion":968},"reward":102.48,"priority":3},{"reviewId":2627762531,"effect":{"addition":2,"deletion":2},"reward":0.12,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 109.665 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>102.6</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>7.065</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30\" target=\"_blank\" rel=\"noopener\">#30</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+2448 -968</td><td>3</td><td>102.48</td></tr><tr><td>+2 -2</td><td>3</td><td>0.12</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#discussion_r1960183908\" target=\"_blank\" rel=\"noopener\">SDK is now at &#96;3.0.0&#96;</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.513</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/30#issuecomment-2666536452\" target=\"_blank\" rel=\"noopener\">![image](https://github.com/user-attachments/assets/b7cb00d8-24c&hellip;</a></h6></td><td><details><summary>2.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 61&#13;  wordValue: 0.1&#13;  result: 2.53&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.552</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_8.json","json":{"Keyrxng":{"userId":106303466,"total":309.557,"task":{"reward":300,"multiplier":1},"comments":[{"id":2120098943,"content":"I've already done about 80% of the legwork for this.\r\nThe trouble with this @gentlementlegen is that the plugin won't be able to read their org config so cannot process an org wide update.\r\nA repo level update is do-able as it'll be public but I think the spec implies an org-wide label update if the org base rate changes, am I correct in thinking that or did you mean on a per-repo basis?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2120098943","commentType":"ISSUE_ASSIGNEE","score":{"reward":2.52,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":80,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":66.61583333333336,"syllables":107,"sentences":3,"score":0.9338416666666665},"multiplier":0.25,"relevance":1}},{"id":2120105248,"content":"@jordan-ae thanks buddy I appreciate it\r\nThe repo is private as I've had to consistently log env vars in debugging the situation","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2120105248","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.318,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":52.05000000000001,"syllables":37,"sentences":1,"score":0.9205000000000001},"multiplier":0.25,"relevance":0.2}},{"id":2121085357,"content":"That would imply that in order to use secrets like `keys.openAi` it would be strictly through repo secrets, meaning if ever they had to update their API they'd need to update the secret in every repo.\r\nIf that is the case, what's the purpose in having properties like `keys.openAi` in the bot config at all if they are just being pulled from the repo meaning that the kernel won't have access to it just the invoked plugin that requires `OPENAI_KEY` as a secret.\r\nMaybe I've missed a step in the direction V2 is taking and I need to read over some issues again but I'm a little confused with this","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2121085357","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.23,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":112,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":57.90416666666667,"syllables":147,"sentences":3,"score":0.9790416666666667},"multiplier":0.25,"relevance":0.5}},{"id":2178351389,"content":"No issue I can move on this, ty for the follow up.\r\nEDIT:\r\nIt can be done, my setup was wrong. Working on things atm","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2178351389","commentType":"ISSUE_ASSIGNEE","score":{"reward":1.377,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":96.85666666666667,"syllables":30,"sentences":3,"score":0.6314333333333333},"multiplier":0.25,"relevance":0.9}},{"id":1987501382,"content":"Resolves https://github.com/ubiquibot/plugins-wishlist/issues/8\r\n- adds a new config item `globalConfigUpdate` which contains `enable: boolean, excludeRepos:[\"\"]`\r\n- I was able to re-use `syncPriceLabelsToConfig()` but it meant moving the typeguard check into the eventName switch case and out of the function\r\n- I had to fix eslint and ts errors which is why there are small changes across seemingly unrelated files\r\n- renamed `setPrice` to `getPrice`\r\n- removed `logger.fatal()` calls\r\n- salvaged most of the tests from my plugin\r\n---\r\n`excludeRepos` will have many uses but the reason that spurred me to include it was that in my QA `devpool-directory` was being updated with a green `Price: $10` label when it should have a grey `Pricing: $10` so that would likely be a default for us to include","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18","commentType":"PULL_SPECIFICATION","score":{"reward":4.112,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":6},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1.6},"priority":1,"words":{"wordCount":104,"wordValue":0.1,"result":2.59},"readability":{"fleschKincaid":35.18071428571429,"syllables":152,"sentences":2,"score":0.7518071428571429},"multiplier":1,"relevance":0.8}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 309.557 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>300</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>5.445</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>4.112</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2120098943\" target=\"_blank\" rel=\"noopener\">I've already done about 80% of the legwork for this.The troubl&hellip;</a></h6></td><td><details><summary>2.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 80&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>3</td><td>2.52</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2120105248\" target=\"_blank\" rel=\"noopener\">@jordan-ae thanks buddy I appreciate itThe repo is private as &hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.318</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2121085357\" target=\"_blank\" rel=\"noopener\">That would imply that in order to use secrets like &#96;keys.ope&hellip;</a></h6></td><td><details><summary>2.54</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 112&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.23</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2178351389\" target=\"_blank\" rel=\"noopener\">No issue I can move on this, ty for the follow up.EDIT:It ca&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.9</td><td>3</td><td>1.377</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquibot/plugins-wishlist/issues/8&hellip;</a></h6></td><td><details><summary>4.19</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 6&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.6&#13;regex:&#13;  wordCount: 104&#13;  wordValue: 0.1&#13;  result: 2.59&#13;</pre></details></td><td>0.8</td><td>1</td><td>4.112</td></tr></tbody></table></details>"},"david-p-miller":{"total":0.42,"userId":159854708,"comments":[{"id":2119753684,"content":"Can I work on this issue?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2119753684","commentType":"ISSUE_CONTRIBUTOR","score":{"reward":0.42,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.42 XP ]</a>&nbsp;</h3><h6>@david-p-miller</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.42</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2119753684\" target=\"_blank\" rel=\"noopener\">Can I work on this issue?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.42</td></tr></tbody></table></details>"},"jordan-ae":{"total":0,"userId":33989423,"reviewRewards":[{"url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18"}]},"0x4007":{"total":158.49,"userId":4975670,"comments":[{"id":2121063060,"content":"We can consider making the org config public, although to me it seems like a lazy answer. I'm sure that we can solve auth via the app for that repository.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2121063060","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.808,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":73.75411290322583,"syllables":43,"sentences":2,"score":0.8624588709677417},"multiplier":1,"relevance":0.8}},{"id":1692835097,"content":"Why add this","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692835097","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -86,5 +86,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n-}\n+  },\n+  \"packageManager\": \"yarn@1.22.22\"","score":{"reward":0.552,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.4}},{"id":1692835456,"content":"Isn't this casting undefined as string? Seems wrong.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692835456","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -10,7 +10,7 @@ const commandHandlers: { [k in AllowedCommand]: (context: Context, commandArgume\n       return logger.debug(\"Not an comment event\");\n     }\n     const payload = context.payload;\n-    const sender = payload.sender.login;\n+    const sender = payload.sender?.login as string;","score":{"reward":2.448,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":89.46750000000003,"syllables":12,"sentences":2,"score":0.7053249999999998},"multiplier":1,"relevance":0.8}},{"id":1692835611,"content":"Same","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692835611","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -31,7 +31,7 @@ export async function handleComment(context: Context) {\n   }\n \n   const payload = context.payload;\n-  const sender = payload.sender.login;\n+  const sender = payload.sender?.login as string;","score":{"reward":0.378,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":121.22000000000003,"syllables":1,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1692841251,"content":"Can you elaborate on this comment?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692841251","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,11 +1,11 @@\n-import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n+import { EmitterWebhookEvent as WebhookEvent } from \"@octokit/webhooks\";\n import { Octokit } from \"@octokit/rest\";\n import { AssistivePricingSettings } from \"./plugin-input\";\n import { createAdapters } from \"../adapters\";\n \n-export type SupportedEvents = \"issues.labeled\" | \"issues.unlabeled\" | \"label.edited\" | \"issue_comment.created\";\n+export type SupportedEvents = \"issues.labeled\" | \"issues.unlabeled\" | \"label.edited\" | \"issue_comment.created\" | \"push\" | \"issue_comment\"; // last one is needed to satisfy typeguard constraints","score":{"reward":1.185,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":59.745000000000005,"syllables":10,"sentences":1,"score":0.9974500000000001},"multiplier":1,"relevance":0.5}},{"id":1692842132,"content":"Perhaps these can be organized in an object called `strings` and placed in a separate file.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692842132","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,114 @@\n+export const TIME_LABELS = [\n+  {\n+    name: \"Time: <1 Hour\",\n+  },\n+  {\n+    name: \"Time: <2 Hours\",\n+  },\n+  {\n+    name: \"Time: <4 Hours\",\n+  },\n+  {\n+    name: \"Time: <1 Day\",\n+  },\n+  {\n+    name: \"Time: <1 Week\",\n+  },\n+];\n+\n+export const PRIORITY_LABELS = [\n+  {\n+    name: \"Priority: 1 (Normal)\",\n+  },\n+  {\n+    name: \"Priority: 2 (Medium)\",\n+  },\n+  {\n+    name: \"Priority: 3 (High)\",\n+  },\n+  {\n+    name: \"Priority: 4 (Urgent)\",\n+  },\n+  {\n+    name: \"Priority: 5 (Emergency)\",\n+  },\n+];\n+\n+export const PRICE_LABELS = [\n+  { name: \"Price: 12.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 25 USD\", color: \"1f883d\" },\n+  { name: \"Price: 37.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 50 USD\", color: \"1f883d\" },\n+  { name: \"Price: 62.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 75 USD\", color: \"1f883d\" },\n+  { name: \"Price: 125 USD\", color: \"1f883d\" },\n+  { name: \"Price: 100 USD\", color: \"1f883d\" },\n+  { name: \"Price: 150 USD\", color: \"1f883d\" },\n+  { name: \"Price: 200 USD\", color: \"1f883d\" },\n+  { name: \"Price: 250 USD\", color: \"1f883d\" },\n+  { name: \"Price: 300 USD\", color: \"1f883d\" },\n+  { name: \"Price: 400 USD\", color: \"1f883d\" },\n+  { name: \"Price: 450 USD\", color: \"1f883d\" },\n+  { name: \"Price: 500 USD\", color: \"1f883d\" },\n+  { name: \"Price: 600 USD\", color: \"1f883d\" },\n+  { name: \"Price: 750 USD\", color: \"1f883d\" },\n+  { name: \"Price: 800 USD\", color: \"1f883d\" },\n+  { name: \"Price: 1000 USD\", color: \"1f883d\" },\n+];\n+\n+export const CONFIG_PATH = \".github/ubiquibot-config.yml\";\n+export const UBIQUITY = \"ubiquity\";\n+export const USER_2 = \"user2\";\n+export const TEST_REPO = \"test-repo\";\n+export const SHA_1 = \"1234\";\n+export const CONFIG_CHANGED_IN_COMMIT = \".github/ubiquibot-config.yml was modified or added in the commits\";\n+export const CREATED_NEW_LABEL = \"Created new price label\";\n+export const UPDATING_ISSUE_1_IN_TEST_REPO = \"Updating issue 1 in test-repo\";\n+export const UPDATING_ISSUE_2_IN_TEST_REPO = \"Updating issue 2 in test-repo\";\n+export const UPDATING_ISSUE_3_IN_TEST_REPO = \"Updating issue 3 in test-repo\";\n+export const UPDATING_FROM_1_TO_5 = \"Updating base rate from 1 to 5\";\n+export const CREATING_MISSING_LABELS = \"Creating missing labels done\";\n+export const PUSHER_NOT_AUTHED = \"Pusher is not an admin or billing manager\";\n+export const SENDER_NOT_AUTHED = \"Sender is not an admin or billing manager\";\n+export const NO_RECOGNIZED_LABELS = \"No recognized labels to calculate price\";\n+export const NEEDS_TRIGGERED_BY_ADMIN_OR_BILLING_MANAGER = \"Changes should be pushed and triggered by an admin or billing manager.\";","score":{"reward":2.79,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":67.53000000000003,"syllables":22,"sentences":1,"score":0.9246999999999997},"multiplier":1,"relevance":0.6}},{"id":1692884860,"content":"Maybe change your system yarn to v1 because I don't have this problem.\r\n```shell\r\n$ yarn -v\r\n1.22.21\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692884860","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -86,5 +86,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n-}\n+  },\n+  \"packageManager\": \"yarn@1.22.22\"","score":{"reward":2.94,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":89.89642857142859,"syllables":17,"sentences":1,"score":0.7010357142857141},"multiplier":1,"relevance":0.7}},{"id":1692889320,"content":"```typescript\r\nconst sender = payload.sender?.login as (undefined | string);\r\n```\r\nI guess, or don't do casting at all and handle undefined. It just seems wrong that you are casting as a string.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692889320","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -10,7 +10,7 @@ const commandHandlers: { [k in AllowedCommand]: (context: Context, commandArgume\n       return logger.debug(\"Not an comment event\");\n     }\n     const payload = context.payload;\n-    const sender = payload.sender.login;\n+    const sender = payload.sender?.login as string;","score":{"reward":5.238,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":92.17119565217394,"syllables":28,"sentences":2,"score":0.6782880434782607},"multiplier":1,"relevance":0.9}},{"id":1692891131,"content":"I think that might be more appropriate for user facing code. As I understand this is commonly used for translations.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692891131","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,114 @@\n+export const TIME_LABELS = [\n+  {\n+    name: \"Time: <1 Hour\",\n+  },\n+  {\n+    name: \"Time: <2 Hours\",\n+  },\n+  {\n+    name: \"Time: <4 Hours\",\n+  },\n+  {\n+    name: \"Time: <1 Day\",\n+  },\n+  {\n+    name: \"Time: <1 Week\",\n+  },\n+];\n+\n+export const PRIORITY_LABELS = [\n+  {\n+    name: \"Priority: 1 (Normal)\",\n+  },\n+  {\n+    name: \"Priority: 2 (Medium)\",\n+  },\n+  {\n+    name: \"Priority: 3 (High)\",\n+  },\n+  {\n+    name: \"Priority: 4 (Urgent)\",\n+  },\n+  {\n+    name: \"Priority: 5 (Emergency)\",\n+  },\n+];\n+\n+export const PRICE_LABELS = [\n+  { name: \"Price: 12.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 25 USD\", color: \"1f883d\" },\n+  { name: \"Price: 37.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 50 USD\", color: \"1f883d\" },\n+  { name: \"Price: 62.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 75 USD\", color: \"1f883d\" },\n+  { name: \"Price: 125 USD\", color: \"1f883d\" },\n+  { name: \"Price: 100 USD\", color: \"1f883d\" },\n+  { name: \"Price: 150 USD\", color: \"1f883d\" },\n+  { name: \"Price: 200 USD\", color: \"1f883d\" },\n+  { name: \"Price: 250 USD\", color: \"1f883d\" },\n+  { name: \"Price: 300 USD\", color: \"1f883d\" },\n+  { name: \"Price: 400 USD\", color: \"1f883d\" },\n+  { name: \"Price: 450 USD\", color: \"1f883d\" },\n+  { name: \"Price: 500 USD\", color: \"1f883d\" },\n+  { name: \"Price: 600 USD\", color: \"1f883d\" },\n+  { name: \"Price: 750 USD\", color: \"1f883d\" },\n+  { name: \"Price: 800 USD\", color: \"1f883d\" },\n+  { name: \"Price: 1000 USD\", color: \"1f883d\" },\n+];\n+\n+export const CONFIG_PATH = \".github/ubiquibot-config.yml\";\n+export const UBIQUITY = \"ubiquity\";\n+export const USER_2 = \"user2\";\n+export const TEST_REPO = \"test-repo\";\n+export const SHA_1 = \"1234\";\n+export const CONFIG_CHANGED_IN_COMMIT = \".github/ubiquibot-config.yml was modified or added in the commits\";\n+export const CREATED_NEW_LABEL = \"Created new price label\";\n+export const UPDATING_ISSUE_1_IN_TEST_REPO = \"Updating issue 1 in test-repo\";\n+export const UPDATING_ISSUE_2_IN_TEST_REPO = \"Updating issue 2 in test-repo\";\n+export const UPDATING_ISSUE_3_IN_TEST_REPO = \"Updating issue 3 in test-repo\";\n+export const UPDATING_FROM_1_TO_5 = \"Updating base rate from 1 to 5\";\n+export const CREATING_MISSING_LABELS = \"Creating missing labels done\";\n+export const PUSHER_NOT_AUTHED = \"Pusher is not an admin or billing manager\";\n+export const SENDER_NOT_AUTHED = \"Sender is not an admin or billing manager\";\n+export const NO_RECOGNIZED_LABELS = \"No recognized labels to calculate price\";\n+export const NEEDS_TRIGGERED_BY_ADMIN_OR_BILLING_MANAGER = \"Changes should be pushed and triggered by an admin or billing manager.\";","score":{"reward":3.384,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":69.78500000000001,"syllables":30,"sentences":2,"score":0.9021499999999999},"multiplier":1,"relevance":0.6}},{"id":1692894479,"content":"Seems like a hack but I don't understand the types implementation well enough to offer suggestions. There probably is a way to handle the type definition correctly to resolve this?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692894479","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,11 +1,11 @@\n-import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n+import { EmitterWebhookEvent as WebhookEvent } from \"@octokit/webhooks\";\n import { Octokit } from \"@octokit/rest\";\n import { AssistivePricingSettings } from \"./plugin-input\";\n import { createAdapters } from \"../adapters\";\n \n-export type SupportedEvents = \"issues.labeled\" | \"issues.unlabeled\" | \"label.edited\" | \"issue_comment.created\";\n+export type SupportedEvents = \"issues.labeled\" | \"issues.unlabeled\" | \"label.edited\" | \"issue_comment.created\" | \"push\" | \"issue_comment\"; // last one is needed to satisfy typeguard constraints","score":{"reward":5.187,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":31,"wordValue":0.1,"result":1.92},"readability":{"fleschKincaid":54.65088709677423,"syllables":50,"sentences":2,"score":0.9465088709677423},"multiplier":1,"relevance":0.7}},{"id":1694794190,"content":"I am not great with type definitions, but seems like you did your research!","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1694794190","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,11 +1,11 @@\n-import { EmitterWebhookEvent as WebhookEvent, EmitterWebhookEventName as WebhookEventName } from \"@octokit/webhooks\";\n+import { EmitterWebhookEvent as WebhookEvent } from \"@octokit/webhooks\";\n import { Octokit } from \"@octokit/rest\";\n import { AssistivePricingSettings } from \"./plugin-input\";\n import { createAdapters } from \"../adapters\";\n \n-export type SupportedEvents = \"issues.labeled\" | \"issues.unlabeled\" | \"label.edited\" | \"issue_comment.created\";\n+export type SupportedEvents = \"issues.labeled\" | \"issues.unlabeled\" | \"label.edited\" | \"issue_comment.created\" | \"push\" | \"issue_comment\"; // last one is needed to satisfy typeguard constraints","score":{"reward":1.278,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":83.85357142857143,"syllables":18,"sentences":1,"score":0.7614642857142857},"multiplier":1,"relevance":0.3}},{"id":1789000226,"content":"We should definitely throw an error.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1789000226","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -9,7 +9,13 @@ import { run } from \"./run\";\n  * Run the plugin as a GitHub Action instance.\n  */\n async function actionRun() {\n-  const env = Value.Decode(envSchema, process.env);\n+  const payloadEnv = {\n+    SUPABASE_KEY: process.env.SUPABASE_KEY,\n+    SUPABASE_URL: process.env.SUPABASE_URL,\n+    UBIQUIBOT_PUBLIC_KEY: process.env.UBIQUIBOT_PUBLIC_KEY || \"temporarily-disabled\",","score":{"reward":2.079,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":45.64500000000001,"syllables":11,"sentences":1,"score":0.8564500000000002},"multiplier":1,"relevance":0.9}},{"id":1797638799,"content":"Code should be cleaned up","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797638799","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.035,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1797638847,"content":"Ubiquibot term is deprecated \nMaybe just delete","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797638847","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -5,7 +5,7 @@ import { StandardValidator } from \"typebox-validators\";\n export const envSchema = T.Object({\n   SUPABASE_URL: T.String(),\n   SUPABASE_KEY: T.String(),\n-  UBIQUIBOT_PUBLIC_KEY: T.String(),\n+  UBIQUIBOT_PUBLIC_KEY: T.Optional(T.String()), // optional because it's currently disabled","score":{"reward":2.064,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":42.61571428571432,"syllables":13,"sentences":1,"score":0.8261571428571431},"multiplier":1,"relevance":0.8}},{"id":1797639054,"content":"Let's delete we deprecated the term UbiquiBot officially a couple days ago.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797639054","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -9,7 +9,13 @@ import { run } from \"./run\";\n  * Run the plugin as a GitHub Action instance.\n  */\n async function actionRun() {\n-  const env = Value.Decode(envSchema, process.env);\n+  const payloadEnv = {\n+    SUPABASE_KEY: process.env.SUPABASE_KEY,\n+    SUPABASE_URL: process.env.SUPABASE_URL,\n+    UBIQUIBOT_PUBLIC_KEY: process.env.UBIQUIBOT_PUBLIC_KEY || \"temporarily-disabled\",","score":{"reward":3.312,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":43.963076923076954,"syllables":23,"sentences":1,"score":0.8396307692307695},"multiplier":1,"relevance":0.8}},{"id":1797639327,"content":"Doesn't the rest halt execution if any fail in the chain of requests? Maybe we should loop and do each request individually.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797639327","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -23,6 +22,48 @@ export async function syncPriceLabelsToConfig(context: Context) {\n   // List all the labels for a repository\n   const allLabels = await listLabelsForRepo(context);\n \n+  const incorrectPriceLabels = allLabels.filter((label) => label.name.startsWith(\"Price: \") && !priceLabels.includes(label.name));\n+\n+  if (incorrectPriceLabels.length > 0 && config.globalConfigUpdate) {\n+    logger.info(\"Incorrect price labels found, removing them\", { incorrectPriceLabels: incorrectPriceLabels.map((label) => label.name) });\n+    const owner = context.payload.repository.owner?.login;\n+    if (!owner) {\n+      throw logger.error(\"No owner found in the repository!\");\n+    }\n+    await Promise.allSettled(","score":{"reward":5.427,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":77.45815217391308,"syllables":32,"sentences":2,"score":0.8254184782608692},"multiplier":1,"relevance":0.9}},{"id":1797639751,"content":"We changed these to .ubiquity-os.config.yml. We also need to consider the dev environment now potentially which is .ubiquity-os.dev.config.yml I believe","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797639751","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,38 @@\n+import { Context } from \"../types/context\";\n+import { isPushEvent } from \"../types/typeguards\";\n+import { getCommitChanges } from \"./get-commit-changes\";\n+\n+export const ZERO_SHA = \"0000000000000000000000000000000000000000\";\n+const BASE_RATE_FILES = [\".github/ubiquibot-config.yml\", \".github/.ubiquibot-config.yml\"];","score":{"reward":6.21,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":62.79000000000002,"syllables":45,"sentences":9,"score":0.9720999999999997},"multiplier":1,"relevance":0.9}},{"id":1797684208,"content":"It's a good idea","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797684208","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,38 @@\n+import { Context } from \"../types/context\";\n+import { isPushEvent } from \"../types/typeguards\";\n+import { getCommitChanges } from \"./get-commit-changes\";\n+\n+export const ZERO_SHA = \"0000000000000000000000000000000000000000\";\n+const BASE_RATE_FILES = [\".github/ubiquibot-config.yml\", \".github/.ubiquibot-config.yml\"];","score":{"reward":0.621,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":100.24000000000002,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.3}},{"id":1797766921,"content":"Well, now we have two. We have development and production instance so perhaps:\r\n`KERNEL_APP_PUBLIC_KEY` and `DEV_KERNEL_APP_PUBLIC_KEY`","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797766921","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -5,7 +5,7 @@ import { StandardValidator } from \"typebox-validators\";\n export const envSchema = T.Object({\n   SUPABASE_URL: T.String(),\n   SUPABASE_KEY: T.String(),\n-  UBIQUIBOT_PUBLIC_KEY: T.String(),\n+  UBIQUIBOT_PUBLIC_KEY: T.Optional(T.String()), // optional because it's currently disabled","score":{"reward":3.504,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":72.83000000000003,"syllables":21,"sentences":2,"score":0.8716999999999997},"multiplier":1,"relevance":0.8}},{"id":1816733235,"content":"Shouldnt this be enabled","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1816733235","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -51,24 +49,3 @@ function handleUncaughtError(errors: unknown) {\n   const status = 500;\n   return new Response(JSON.stringify(errors), { status: status, headers: { \"content-type\": \"application/json\" } });\n }\n-\n-// async function verifySignature(publicKeyPem: string, payload: unknown, signature: string) {","score":{"reward":1.092,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":97.025,"syllables":5,"sentences":1,"score":0.6297499999999999},"multiplier":1,"relevance":0.7}},{"id":2393467632,"content":"I already have a solution in the works for ~3 second typescript GitHub action, cold start response time, so I don't think the lag will be an issue in the near future.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2393467632","commentType":"PULL_COLLABORATOR","score":{"reward":3.84,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":57.97636363636366,"syllables":45,"sentences":1,"score":0.9797636363636366},"multiplier":1,"relevance":0.5}},{"id":2435294106,"content":"Where is the QA test?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2435294106","commentType":"PULL_COLLABORATOR","score":{"reward":0.828,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2201460332,"effect":{"addition":1010,"deletion":63},"reward":32.19,"priority":3},{"reviewId":2350494188,"effect":{"addition":874,"deletion":629},"reward":45.09,"priority":3},{"reviewId":2395371714,"effect":{"addition":408,"deletion":259},"reward":20.01,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 158.49 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>97.29</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>5.808</td></tr><tr><td>Review</td><td>Comment</td><td>21</td><td>55.392</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18\" target=\"_blank\" rel=\"noopener\">#18</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1010 -63</td><td>3</td><td>32.19</td></tr><tr><td>+874 -629</td><td>3</td><td>45.09</td></tr><tr><td>+408 -259</td><td>3</td><td>20.01</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2121063060\" target=\"_blank\" rel=\"noopener\">We can consider making the org config public, although to me it &hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.808</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692835097\" target=\"_blank\" rel=\"noopener\">Why add this</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.552</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692835456\" target=\"_blank\" rel=\"noopener\">Isn't this casting undefined as string? Seems wrong.</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.448</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692835611\" target=\"_blank\" rel=\"noopener\">Same</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.378</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692841251\" target=\"_blank\" rel=\"noopener\">Can you elaborate on this comment?</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.185</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692842132\" target=\"_blank\" rel=\"noopener\">Perhaps these can be organized in an object called &#96;strings&&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.79</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692884860\" target=\"_blank\" rel=\"noopener\">Maybe change your system yarn to v1 because I don't have this pr&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.94</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692889320\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;typescriptconst sender = payload.sender?.login &hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.238</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692891131\" target=\"_blank\" rel=\"noopener\">I think that might be more appropriate for user facing code. As &hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.384</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692894479\" target=\"_blank\" rel=\"noopener\">Seems like a hack but I don't understand the types implementatio&hellip;</a></h6></td><td><details><summary>1.92</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 31&#13;  wordValue: 0.1&#13;  result: 1.92&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.187</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1694794190\" target=\"_blank\" rel=\"noopener\">I am not great with type definitions, but seems like you did you&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.278</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1789000226\" target=\"_blank\" rel=\"noopener\">We should definitely throw an error.</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.079</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797638799\" target=\"_blank\" rel=\"noopener\">Code should be cleaned up</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.035</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797638847\" target=\"_blank\" rel=\"noopener\">Ubiquibot term is deprecated Maybe just delete</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.064</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797639054\" target=\"_blank\" rel=\"noopener\">Let's delete we deprecated the term UbiquiBot officially a coupl&hellip;</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.312</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797639327\" target=\"_blank\" rel=\"noopener\">Doesn't the rest halt execution if any fail in the chain of requ&hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.427</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797639751\" target=\"_blank\" rel=\"noopener\">We changed these to .ubiquity-os.config.yml. We also need to con&hellip;</a></h6></td><td><details><summary>1.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.21</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797684208\" target=\"_blank\" rel=\"noopener\">It's a good idea</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.621</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797766921\" target=\"_blank\" rel=\"noopener\">Well, now we have two. We have development and production instan&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.504</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1816733235\" target=\"_blank\" rel=\"noopener\">Shouldnt this be enabled</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.092</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2393467632\" target=\"_blank\" rel=\"noopener\">I already have a solution in the works for ~3 second typescript &hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.5</td><td>3</td><td>3.84</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2435294106\" target=\"_blank\" rel=\"noopener\">Where is the QA test?</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.828</td></tr></tbody></table></details>"},"gentlementlegen":{"total":267.285,"userId":9807008,"comments":[{"id":2121258176,"content":"I am not sure to understand the issue. Each repo should have their own secrets, otherwise we also share secrets on an Org level for things like OPENAI_KEY since it's the same for each repo (only orgs can benefit from these shared secrets). \r\nProblem passing down these through the config or the settings is that it can be vector for abuse by third parties which we want to avoid.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2121258176","commentType":"ISSUE_AUTHOR","score":{"reward":6.972,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":70,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":67.12880952380954,"syllables":96,"sentences":3,"score":0.9287119047619047},"multiplier":1,"relevance":0.7}},{"id":2178168421,"content":"@Keyrxng something going on here or shall I have a look at it?","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2178168421","commentType":"ISSUE_AUTHOR","score":{"reward":3.144,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":96.02461538461542,"syllables":15,"sentences":1,"score":0.6397538461538459},"multiplier":1,"relevance":0.8}},{"id":2442151788,"content":"@Keyrxng My mistake sorry.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2442151788","commentType":"ISSUE_AUTHOR","score":{"reward":0.33,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.2}},{"id":2442164599,"content":"Should be good when we get the disqualifier to work and actually disqualify people, because it will close PRs as well, and the user won't be able to re-assign itself.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2442164599","commentType":"ISSUE_AUTHOR","score":{"reward":0.747,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":32,"wordValue":0.1,"result":1.95},"readability":{"fleschKincaid":52.74250000000002,"syllables":46,"sentences":1,"score":0.9274250000000002},"multiplier":1,"relevance":0.1}},{"id":2292579147,"content":"A plugin that will update all the price labels if a base rate change is detected. Should most likely be carried out within https://github.com/ubiquibot/assistive-pricing if not already there.\r\n[See code reference](https://github.com/ubiquity/ubiquibot/tree/4f15f0f294728e701cb9a2e1aac89e2f73623f31/src/handlers/push)","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/8","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.95,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":68.45000000000005,"syllables":55,"sentences":4,"score":0.9154999999999995},"multiplier":1,"relevance":1}},{"id":2391166762,"content":"Fine with the changes once comments are removed.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#pullrequestreview-2391166762","commentType":"PULL_COLLABORATOR","score":{"reward":1.911,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.7}},{"id":1691731885,"content":"Would be better to have it disable if not present in the config I think.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1691731885","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,47 +3,59 @@\n Helps settings prices and adds label to the issues accordingly.\n \n ## Usage\n+\n Example of valid configuration:\n+\n ```yml\n- - plugin: https://ubiquibot-assistive-pricing.ubq.fi\n-   type: github\n-   with:\n-     labels:\n-       time:\n-         - \"Time: <1 Hour\"\n-         - \"Time: <2 Hours\"\n-         - \"Time: <4 Hours\"\n-         - \"Time: <1 Day\"\n-         - \"Time: <1 Week\"\n-       priority:\n-         - \"Priority: 1 (Normal)\"\n-         - \"Priority: 2 (Medium)\"\n-         - \"Priority: 3 (High)\"\n-         - \"Priority: 4 (Urgent)\"\n-         - \"Priority: 5 (Emergency)\"\n-     basePriceMultiplier: 1\n-     publicAccessControl:\n-       setLabel: true\n-       fundExternalClosedIssue: false\n+- plugin: https://ubiquibot-assistive-pricing.ubq.fi\n+  type: github\n+  with:\n+    labels:\n+      time:\n+        - \"Time: <1 Hour\"\n+        - \"Time: <2 Hours\"\n+        - \"Time: <4 Hours\"\n+        - \"Time: <1 Day\"\n+        - \"Time: <1 Week\"\n+      priority:\n+        - \"Priority: 1 (Normal)\"\n+        - \"Priority: 2 (Medium)\"\n+        - \"Priority: 3 (High)\"\n+        - \"Priority: 4 (Urgent)\"\n+        - \"Priority: 5 (Emergency)\"\n+    basePriceMultiplier: 1\n+    publicAccessControl:\n+      setLabel: true\n+      fundExternalClosedIssue: false\n+    globalConfigUpdate:\n+      enabled: true","score":{"reward":4.05,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":78.81000000000003,"syllables":20,"sentences":1,"score":0.8118999999999997},"multiplier":1,"relevance":0.9}},{"id":1691733148,"content":"I remember we had that talk before, but is the sha needed?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1691733148","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -86,5 +86,6 @@\n     \"extends\": [\n       \"@commitlint/config-conventional\"\n     ]\n-  }\n+  },\n+  \"packageManager\": \"yarn@1.22.22+sha1.ac34549e6aa8e7ead463a7407e1c7390f61a6610\"","score":{"reward":2.268,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":88.905,"syllables":15,"sentences":1,"score":0.71095},"multiplier":1,"relevance":0.6}},{"id":1692490773,"content":"just having `globalConfigUpdate` present would imply that it is enabled, no need to add `enabled: true`, and if it is not present in the config then it implies it is disabled.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692490773","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,47 +3,59 @@\n Helps settings prices and adds label to the issues accordingly.\n \n ## Usage\n+\n Example of valid configuration:\n+\n ```yml\n- - plugin: https://ubiquibot-assistive-pricing.ubq.fi\n-   type: github\n-   with:\n-     labels:\n-       time:\n-         - \"Time: <1 Hour\"\n-         - \"Time: <2 Hours\"\n-         - \"Time: <4 Hours\"\n-         - \"Time: <1 Day\"\n-         - \"Time: <1 Week\"\n-       priority:\n-         - \"Priority: 1 (Normal)\"\n-         - \"Priority: 2 (Medium)\"\n-         - \"Priority: 3 (High)\"\n-         - \"Priority: 4 (Urgent)\"\n-         - \"Priority: 5 (Emergency)\"\n-     basePriceMultiplier: 1\n-     publicAccessControl:\n-       setLabel: true\n-       fundExternalClosedIssue: false\n+- plugin: https://ubiquibot-assistive-pricing.ubq.fi\n+  type: github\n+  with:\n+    labels:\n+      time:\n+        - \"Time: <1 Hour\"\n+        - \"Time: <2 Hours\"\n+        - \"Time: <4 Hours\"\n+        - \"Time: <1 Day\"\n+        - \"Time: <1 Week\"\n+      priority:\n+        - \"Priority: 1 (Normal)\"\n+        - \"Priority: 2 (Medium)\"\n+        - \"Priority: 3 (High)\"\n+        - \"Priority: 4 (Urgent)\"\n+        - \"Priority: 5 (Emergency)\"\n+    basePriceMultiplier: 1\n+    publicAccessControl:\n+      setLabel: true\n+      fundExternalClosedIssue: false\n+    globalConfigUpdate:\n+      enabled: true","score":{"reward":6.21,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":69.64357142857145,"syllables":36,"sentences":1,"score":0.9035642857142855},"multiplier":1,"relevance":0.9}},{"id":1692883696,"content":"Might be overkill but tools like `i18n` could be userful for this.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692883696","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,114 @@\n+export const TIME_LABELS = [\n+  {\n+    name: \"Time: <1 Hour\",\n+  },\n+  {\n+    name: \"Time: <2 Hours\",\n+  },\n+  {\n+    name: \"Time: <4 Hours\",\n+  },\n+  {\n+    name: \"Time: <1 Day\",\n+  },\n+  {\n+    name: \"Time: <1 Week\",\n+  },\n+];\n+\n+export const PRIORITY_LABELS = [\n+  {\n+    name: \"Priority: 1 (Normal)\",\n+  },\n+  {\n+    name: \"Priority: 2 (Medium)\",\n+  },\n+  {\n+    name: \"Priority: 3 (High)\",\n+  },\n+  {\n+    name: \"Priority: 4 (Urgent)\",\n+  },\n+  {\n+    name: \"Priority: 5 (Emergency)\",\n+  },\n+];\n+\n+export const PRICE_LABELS = [\n+  { name: \"Price: 12.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 25 USD\", color: \"1f883d\" },\n+  { name: \"Price: 37.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 50 USD\", color: \"1f883d\" },\n+  { name: \"Price: 62.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 75 USD\", color: \"1f883d\" },\n+  { name: \"Price: 125 USD\", color: \"1f883d\" },\n+  { name: \"Price: 100 USD\", color: \"1f883d\" },\n+  { name: \"Price: 150 USD\", color: \"1f883d\" },\n+  { name: \"Price: 200 USD\", color: \"1f883d\" },\n+  { name: \"Price: 250 USD\", color: \"1f883d\" },\n+  { name: \"Price: 300 USD\", color: \"1f883d\" },\n+  { name: \"Price: 400 USD\", color: \"1f883d\" },\n+  { name: \"Price: 450 USD\", color: \"1f883d\" },\n+  { name: \"Price: 500 USD\", color: \"1f883d\" },\n+  { name: \"Price: 600 USD\", color: \"1f883d\" },\n+  { name: \"Price: 750 USD\", color: \"1f883d\" },\n+  { name: \"Price: 800 USD\", color: \"1f883d\" },\n+  { name: \"Price: 1000 USD\", color: \"1f883d\" },\n+];\n+\n+export const CONFIG_PATH = \".github/ubiquibot-config.yml\";\n+export const UBIQUITY = \"ubiquity\";\n+export const USER_2 = \"user2\";\n+export const TEST_REPO = \"test-repo\";\n+export const SHA_1 = \"1234\";\n+export const CONFIG_CHANGED_IN_COMMIT = \".github/ubiquibot-config.yml was modified or added in the commits\";\n+export const CREATED_NEW_LABEL = \"Created new price label\";\n+export const UPDATING_ISSUE_1_IN_TEST_REPO = \"Updating issue 1 in test-repo\";\n+export const UPDATING_ISSUE_2_IN_TEST_REPO = \"Updating issue 2 in test-repo\";\n+export const UPDATING_ISSUE_3_IN_TEST_REPO = \"Updating issue 3 in test-repo\";\n+export const UPDATING_FROM_1_TO_5 = \"Updating base rate from 1 to 5\";\n+export const CREATING_MISSING_LABELS = \"Creating missing labels done\";\n+export const PUSHER_NOT_AUTHED = \"Pusher is not an admin or billing manager\";\n+export const SENDER_NOT_AUTHED = \"Sender is not an admin or billing manager\";\n+export const NO_RECOGNIZED_LABELS = \"No recognized labels to calculate price\";\n+export const NEEDS_TRIGGERED_BY_ADMIN_OR_BILLING_MANAGER = \"Changes should be pushed and triggered by an admin or billing manager.\";","score":{"reward":2.16,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":80.30636363636367,"syllables":15,"sentences":1,"score":0.7969363636363633},"multiplier":1,"relevance":0.6}},{"id":1692898475,"content":"I do not know if these strings are exposed to the user. I just thought about it because it is easy to put them all in a file, and also because they support templates (so adding arguments like number) and singular / plural etc. Seems to much for this case but `\"Updating issue 1 in test-repo\"` could be a template for example to avoid copy pasting 3 times.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692898475","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,114 @@\n+export const TIME_LABELS = [\n+  {\n+    name: \"Time: <1 Hour\",\n+  },\n+  {\n+    name: \"Time: <2 Hours\",\n+  },\n+  {\n+    name: \"Time: <4 Hours\",\n+  },\n+  {\n+    name: \"Time: <1 Day\",\n+  },\n+  {\n+    name: \"Time: <1 Week\",\n+  },\n+];\n+\n+export const PRIORITY_LABELS = [\n+  {\n+    name: \"Priority: 1 (Normal)\",\n+  },\n+  {\n+    name: \"Priority: 2 (Medium)\",\n+  },\n+  {\n+    name: \"Priority: 3 (High)\",\n+  },\n+  {\n+    name: \"Priority: 4 (Urgent)\",\n+  },\n+  {\n+    name: \"Priority: 5 (Emergency)\",\n+  },\n+];\n+\n+export const PRICE_LABELS = [\n+  { name: \"Price: 12.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 25 USD\", color: \"1f883d\" },\n+  { name: \"Price: 37.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 50 USD\", color: \"1f883d\" },\n+  { name: \"Price: 62.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 75 USD\", color: \"1f883d\" },\n+  { name: \"Price: 125 USD\", color: \"1f883d\" },\n+  { name: \"Price: 100 USD\", color: \"1f883d\" },\n+  { name: \"Price: 150 USD\", color: \"1f883d\" },\n+  { name: \"Price: 200 USD\", color: \"1f883d\" },\n+  { name: \"Price: 250 USD\", color: \"1f883d\" },\n+  { name: \"Price: 300 USD\", color: \"1f883d\" },\n+  { name: \"Price: 400 USD\", color: \"1f883d\" },\n+  { name: \"Price: 450 USD\", color: \"1f883d\" },\n+  { name: \"Price: 500 USD\", color: \"1f883d\" },\n+  { name: \"Price: 600 USD\", color: \"1f883d\" },\n+  { name: \"Price: 750 USD\", color: \"1f883d\" },\n+  { name: \"Price: 800 USD\", color: \"1f883d\" },\n+  { name: \"Price: 1000 USD\", color: \"1f883d\" },\n+];\n+\n+export const CONFIG_PATH = \".github/ubiquibot-config.yml\";\n+export const UBIQUITY = \"ubiquity\";\n+export const USER_2 = \"user2\";\n+export const TEST_REPO = \"test-repo\";\n+export const SHA_1 = \"1234\";\n+export const CONFIG_CHANGED_IN_COMMIT = \".github/ubiquibot-config.yml was modified or added in the commits\";\n+export const CREATED_NEW_LABEL = \"Created new price label\";\n+export const UPDATING_ISSUE_1_IN_TEST_REPO = \"Updating issue 1 in test-repo\";\n+export const UPDATING_ISSUE_2_IN_TEST_REPO = \"Updating issue 2 in test-repo\";\n+export const UPDATING_ISSUE_3_IN_TEST_REPO = \"Updating issue 3 in test-repo\";\n+export const UPDATING_FROM_1_TO_5 = \"Updating base rate from 1 to 5\";\n+export const CREATING_MISSING_LABELS = \"Creating missing labels done\";\n+export const PUSHER_NOT_AUTHED = \"Pusher is not an admin or billing manager\";\n+export const SENDER_NOT_AUTHED = \"Sender is not an admin or billing manager\";\n+export const NO_RECOGNIZED_LABELS = \"No recognized labels to calculate price\";\n+export const NEEDS_TRIGGERED_BY_ADMIN_OR_BILLING_MANAGER = \"Changes should be pushed and triggered by an admin or billing manager.\";","score":{"reward":4.845,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":62,"wordValue":0.1,"result":2.54},"readability":{"fleschKincaid":69.87446236559143,"syllables":85,"sentences":3,"score":0.9012553763440857},"multiplier":1,"relevance":0.5}},{"id":1693710303,"content":"It's one of the few plugins that are very verbose with `conversation-rewards` so not needed for every plugin.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1693710303","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,114 @@\n+export const TIME_LABELS = [\n+  {\n+    name: \"Time: <1 Hour\",\n+  },\n+  {\n+    name: \"Time: <2 Hours\",\n+  },\n+  {\n+    name: \"Time: <4 Hours\",\n+  },\n+  {\n+    name: \"Time: <1 Day\",\n+  },\n+  {\n+    name: \"Time: <1 Week\",\n+  },\n+];\n+\n+export const PRIORITY_LABELS = [\n+  {\n+    name: \"Priority: 1 (Normal)\",\n+  },\n+  {\n+    name: \"Priority: 2 (Medium)\",\n+  },\n+  {\n+    name: \"Priority: 3 (High)\",\n+  },\n+  {\n+    name: \"Priority: 4 (Urgent)\",\n+  },\n+  {\n+    name: \"Priority: 5 (Emergency)\",\n+  },\n+];\n+\n+export const PRICE_LABELS = [\n+  { name: \"Price: 12.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 25 USD\", color: \"1f883d\" },\n+  { name: \"Price: 37.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 50 USD\", color: \"1f883d\" },\n+  { name: \"Price: 62.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 75 USD\", color: \"1f883d\" },\n+  { name: \"Price: 125 USD\", color: \"1f883d\" },\n+  { name: \"Price: 100 USD\", color: \"1f883d\" },\n+  { name: \"Price: 150 USD\", color: \"1f883d\" },\n+  { name: \"Price: 200 USD\", color: \"1f883d\" },\n+  { name: \"Price: 250 USD\", color: \"1f883d\" },\n+  { name: \"Price: 300 USD\", color: \"1f883d\" },\n+  { name: \"Price: 400 USD\", color: \"1f883d\" },\n+  { name: \"Price: 450 USD\", color: \"1f883d\" },\n+  { name: \"Price: 500 USD\", color: \"1f883d\" },\n+  { name: \"Price: 600 USD\", color: \"1f883d\" },\n+  { name: \"Price: 750 USD\", color: \"1f883d\" },\n+  { name: \"Price: 800 USD\", color: \"1f883d\" },\n+  { name: \"Price: 1000 USD\", color: \"1f883d\" },\n+];\n+\n+export const CONFIG_PATH = \".github/ubiquibot-config.yml\";\n+export const UBIQUITY = \"ubiquity\";\n+export const USER_2 = \"user2\";\n+export const TEST_REPO = \"test-repo\";\n+export const SHA_1 = \"1234\";\n+export const CONFIG_CHANGED_IN_COMMIT = \".github/ubiquibot-config.yml was modified or added in the commits\";\n+export const CREATED_NEW_LABEL = \"Created new price label\";\n+export const UPDATING_ISSUE_1_IN_TEST_REPO = \"Updating issue 1 in test-repo\";\n+export const UPDATING_ISSUE_2_IN_TEST_REPO = \"Updating issue 2 in test-repo\";\n+export const UPDATING_ISSUE_3_IN_TEST_REPO = \"Updating issue 3 in test-repo\";\n+export const UPDATING_FROM_1_TO_5 = \"Updating base rate from 1 to 5\";\n+export const CREATING_MISSING_LABELS = \"Creating missing labels done\";\n+export const PUSHER_NOT_AUTHED = \"Pusher is not an admin or billing manager\";\n+export const SENDER_NOT_AUTHED = \"Sender is not an admin or billing manager\";\n+export const NO_RECOGNIZED_LABELS = \"No recognized labels to calculate price\";\n+export const NEEDS_TRIGGERED_BY_ADMIN_OR_BILLING_MANAGER = \"Changes should be pushed and triggered by an admin or billing manager.\";","score":{"reward":2.076,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":75.76500000000001,"syllables":24,"sentences":1,"score":0.8423499999999998},"multiplier":1,"relevance":0.4}},{"id":1693829266,"content":"This being said, these strings are only used for testing right? So you could just have them in a `json` as @0x4007 suggested, just to avoid piling them in the code (you can directly import the JSON in the code which should be easy to use).","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1693829266","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,114 @@\n+export const TIME_LABELS = [\n+  {\n+    name: \"Time: <1 Hour\",\n+  },\n+  {\n+    name: \"Time: <2 Hours\",\n+  },\n+  {\n+    name: \"Time: <4 Hours\",\n+  },\n+  {\n+    name: \"Time: <1 Day\",\n+  },\n+  {\n+    name: \"Time: <1 Week\",\n+  },\n+];\n+\n+export const PRIORITY_LABELS = [\n+  {\n+    name: \"Priority: 1 (Normal)\",\n+  },\n+  {\n+    name: \"Priority: 2 (Medium)\",\n+  },\n+  {\n+    name: \"Priority: 3 (High)\",\n+  },\n+  {\n+    name: \"Priority: 4 (Urgent)\",\n+  },\n+  {\n+    name: \"Priority: 5 (Emergency)\",\n+  },\n+];\n+\n+export const PRICE_LABELS = [\n+  { name: \"Price: 12.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 25 USD\", color: \"1f883d\" },\n+  { name: \"Price: 37.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 50 USD\", color: \"1f883d\" },\n+  { name: \"Price: 62.5 USD\", color: \"1f883d\" },\n+  { name: \"Price: 75 USD\", color: \"1f883d\" },\n+  { name: \"Price: 125 USD\", color: \"1f883d\" },\n+  { name: \"Price: 100 USD\", color: \"1f883d\" },\n+  { name: \"Price: 150 USD\", color: \"1f883d\" },\n+  { name: \"Price: 200 USD\", color: \"1f883d\" },\n+  { name: \"Price: 250 USD\", color: \"1f883d\" },\n+  { name: \"Price: 300 USD\", color: \"1f883d\" },\n+  { name: \"Price: 400 USD\", color: \"1f883d\" },\n+  { name: \"Price: 450 USD\", color: \"1f883d\" },\n+  { name: \"Price: 500 USD\", color: \"1f883d\" },\n+  { name: \"Price: 600 USD\", color: \"1f883d\" },\n+  { name: \"Price: 750 USD\", color: \"1f883d\" },\n+  { name: \"Price: 800 USD\", color: \"1f883d\" },\n+  { name: \"Price: 1000 USD\", color: \"1f883d\" },\n+];\n+\n+export const CONFIG_PATH = \".github/ubiquibot-config.yml\";\n+export const UBIQUITY = \"ubiquity\";\n+export const USER_2 = \"user2\";\n+export const TEST_REPO = \"test-repo\";\n+export const SHA_1 = \"1234\";\n+export const CONFIG_CHANGED_IN_COMMIT = \".github/ubiquibot-config.yml was modified or added in the commits\";\n+export const CREATED_NEW_LABEL = \"Created new price label\";\n+export const UPDATING_ISSUE_1_IN_TEST_REPO = \"Updating issue 1 in test-repo\";\n+export const UPDATING_ISSUE_2_IN_TEST_REPO = \"Updating issue 2 in test-repo\";\n+export const UPDATING_ISSUE_3_IN_TEST_REPO = \"Updating issue 3 in test-repo\";\n+export const UPDATING_FROM_1_TO_5 = \"Updating base rate from 1 to 5\";\n+export const CREATING_MISSING_LABELS = \"Creating missing labels done\";\n+export const PUSHER_NOT_AUTHED = \"Pusher is not an admin or billing manager\";\n+export const SENDER_NOT_AUTHED = \"Sender is not an admin or billing manager\";\n+export const NO_RECOGNIZED_LABELS = \"No recognized labels to calculate price\";\n+export const NEEDS_TRIGGERED_BY_ADMIN_OR_BILLING_MANAGER = \"Changes should be pushed and triggered by an admin or billing manager.\";","score":{"reward":5.922,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":45,"wordValue":0.1,"result":2.29},"readability":{"fleschKincaid":82.4775,"syllables":54,"sentences":2,"score":0.7752249999999999},"multiplier":1,"relevance":0.7}},{"id":1697933938,"content":"I'd say it is a bit strange to throw on `undefined`, I would either use a type guard directly which would make more sense in a TypeScript context, or a validator of some sort. So not against it, but might be better options.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697933938","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,16 +1,21 @@\n import { Context } from \"../types/context\";\n \n+export function returnOptional<T>(value: T | undefined): T {\n+  if (value === undefined) throw new Error(\"Value is undefined\");\n+  return value;\n+}","score":{"reward":6.744,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":76.80319767441863,"syllables":55,"sentences":2,"score":0.8319680232558138},"multiplier":1,"relevance":0.8}},{"id":1708472753,"content":"This seems a bit dangerous and error prone if we change the name of the variable someday. Do you need to check the diff, can't we just always update even if the price is the same? What are the benefits from it?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1708472753","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,74 @@\n+import { Context } from \"../types/context\";\n+import { Rates } from \"../types/plugin-input\";\n+import { isPushEvent } from \"../types/typeguards\";\n+\n+/**\n+ * Parses the diff of changes to the org config file to find the old and new base rates.\n+ *\n+ * This will capture changes to either the plugin's config or the global basePriceMultiplier.\n+ */\n+export async function getBaseRateChanges(context: Context): Promise<Rates> {\n+  if (!isPushEvent(context)) {\n+    context.logger.debug(\"Not a push event\");\n+    return {\n+      previousBaseRate: null,\n+      newBaseRate: null,\n+    };\n+  }\n+  const {\n+    logger,\n+    payload: { repository, head_commit: headCommit },\n+  } = context;\n+  const commitSha = headCommit?.id;\n+  let commitData;\n+\n+  if (!commitSha) {\n+    throw new Error(\"No commit sha found\");\n+  }\n+  const owner = repository.owner?.login\n+\n+  if (!owner) {\n+    throw logger.error(\"No owner found in the repository\");\n+  }\n+\n+  try {\n+    commitData = await context.octokit.repos.getCommit({\n+      owner,\n+      repo: repository.name,\n+      ref: commitSha,\n+      mediaType: {\n+        format: \"diff\",\n+      },\n+    });\n+  } catch (err: unknown) {\n+    logger.debug(\"Commit sha error.\", { err });\n+  }\n+\n+  if (!commitData) {\n+    throw new Error(\"No commit data found\");\n+  }\n+\n+  const data = commitData.data as unknown as string;\n+  const changes = data.split(\"\\n\");\n+\n+  const newValue = /\\+\\s*basePriceMultiplier:\\s*(\\S+)/;","score":{"reward":6.624,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":84.0773643410853,"syllables":55,"sentences":3,"score":0.7592263565891471},"multiplier":1,"relevance":0.8}},{"id":1708980245,"content":"Doesn't this run on an Action? I am not sure what is more costly between checking all the diffs or just updating the values. But if this is an Action we should be fine.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1708980245","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,74 @@\n+import { Context } from \"../types/context\";\n+import { Rates } from \"../types/plugin-input\";\n+import { isPushEvent } from \"../types/typeguards\";\n+\n+/**\n+ * Parses the diff of changes to the org config file to find the old and new base rates.\n+ *\n+ * This will capture changes to either the plugin's config or the global basePriceMultiplier.\n+ */\n+export async function getBaseRateChanges(context: Context): Promise<Rates> {\n+  if (!isPushEvent(context)) {\n+    context.logger.debug(\"Not a push event\");\n+    return {\n+      previousBaseRate: null,\n+      newBaseRate: null,\n+    };\n+  }\n+  const {\n+    logger,\n+    payload: { repository, head_commit: headCommit },\n+  } = context;\n+  const commitSha = headCommit?.id;\n+  let commitData;\n+\n+  if (!commitSha) {\n+    throw new Error(\"No commit sha found\");\n+  }\n+  const owner = repository.owner?.login\n+\n+  if (!owner) {\n+    throw logger.error(\"No owner found in the repository\");\n+  }\n+\n+  try {\n+    commitData = await context.octokit.repos.getCommit({\n+      owner,\n+      repo: repository.name,\n+      ref: commitSha,\n+      mediaType: {\n+        format: \"diff\",\n+      },\n+    });\n+  } catch (err: unknown) {\n+    logger.debug(\"Commit sha error.\", { err });\n+  }\n+\n+  if (!commitData) {\n+    throw new Error(\"No commit data found\");\n+  }\n+\n+  const data = commitData.data as unknown as string;\n+  const changes = data.split(\"\\n\");\n+\n+  const newValue = /\\+\\s*basePriceMultiplier:\\s*(\\S+)/;","score":{"reward":4.428,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":91.05619047619048,"syllables":43,"sentences":3,"score":0.6894380952380952},"multiplier":1,"relevance":0.6}},{"id":1788990390,"content":"Do we want a default here, shouldn't we display an error and stop the run?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1788990390","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -9,7 +9,13 @@ import { run } from \"./run\";\n  * Run the plugin as a GitHub Action instance.\n  */\n async function actionRun() {\n-  const env = Value.Decode(envSchema, process.env);\n+  const payloadEnv = {\n+    SUPABASE_KEY: process.env.SUPABASE_KEY,\n+    SUPABASE_URL: process.env.SUPABASE_URL,\n+    UBIQUIBOT_PUBLIC_KEY: process.env.UBIQUIBOT_PUBLIC_KEY || \"temporarily-disabled\",","score":{"reward":3.696,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":90.13250000000001,"syllables":19,"sentences":1,"score":0.6986749999999999},"multiplier":1,"relevance":0.8}},{"id":1789318607,"content":"Ha yes I remember this part now. It can be safely ignored then.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1789318607","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -9,7 +9,13 @@ import { run } from \"./run\";\n  * Run the plugin as a GitHub Action instance.\n  */\n async function actionRun() {\n-  const env = Value.Decode(envSchema, process.env);\n+  const payloadEnv = {\n+    SUPABASE_KEY: process.env.SUPABASE_KEY,\n+    SUPABASE_URL: process.env.SUPABASE_URL,\n+    UBIQUIBOT_PUBLIC_KEY: process.env.UBIQUIBOT_PUBLIC_KEY || \"temporarily-disabled\",","score":{"reward":1.215,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":83.09903846153848,"syllables":18,"sentences":2,"score":0.7690096153846152},"multiplier":1,"relevance":0.3}},{"id":1797640048,"content":"I wonder if these constants should be exported from the Kernel to avoid mistakes.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797640048","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,38 @@\n+import { Context } from \"../types/context\";\n+import { isPushEvent } from \"../types/typeguards\";\n+import { getCommitChanges } from \"./get-commit-changes\";\n+\n+export const ZERO_SHA = \"0000000000000000000000000000000000000000\";\n+const BASE_RATE_FILES = [\".github/ubiquibot-config.yml\", \".github/.ubiquibot-config.yml\"];","score":{"reward":3.087,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":71.76785714285715,"syllables":20,"sentences":1,"score":0.8823214285714285},"multiplier":1,"relevance":0.7}},{"id":1798111600,"content":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/144","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1798111600","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,38 @@\n+import { Context } from \"../types/context\";\n+import { isPushEvent } from \"../types/typeguards\";\n+import { getCommitChanges } from \"./get-commit-changes\";\n+\n+export const ZERO_SHA = \"0000000000000000000000000000000000000000\";\n+const BASE_RATE_FILES = [\".github/ubiquibot-config.yml\", \".github/.ubiquibot-config.yml\"];","score":{"reward":2.667,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":49.48000000000002,"syllables":18,"sentences":2,"score":0.8948000000000002},"multiplier":1,"relevance":0.7}},{"id":1806146710,"content":"Shall be fixed by using the SDK, can come in a later PR I guess.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1806146710","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -5,7 +5,7 @@ import { StandardValidator } from \"typebox-validators\";\n export const envSchema = T.Object({\n   SUPABASE_URL: T.String(),\n   SUPABASE_KEY: T.String(),\n-  UBIQUIBOT_PUBLIC_KEY: T.String(),\n+  UBIQUIBOT_PUBLIC_KEY: T.Optional(T.String()), // optional because it's currently disabled","score":{"reward":3.456,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":95.73000000000002,"syllables":17,"sentences":1,"score":0.6426999999999998},"multiplier":1,"relevance":0.8}},{"id":1808041522,"content":"You can delete as it is all handled by the SDK.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1808041522","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -5,7 +5,7 @@ import { StandardValidator } from \"typebox-validators\";\n export const envSchema = T.Object({\n   SUPABASE_URL: T.String(),\n   SUPABASE_KEY: T.String(),\n-  UBIQUIBOT_PUBLIC_KEY: T.String(),\n+  UBIQUIBOT_PUBLIC_KEY: T.Optional(T.String()), // optional because it's currently disabled","score":{"reward":3.024,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":103.37909090909093,"syllables":12,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1814200148,"content":"Should be removed.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1814200148","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -36,13 +38,16 @@ jobs:\n \n       - uses: oven-sh/setup-bun@v1\n \n-      - name: Generate Supabase Types\n-        run: |\n-          yarn install\n-          yarn run \"supabase:generate:remote\"\n-        env:\n-          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}\n-          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}\n+      - name: Install dependencies\n+        run: yarn install\n+\n+      # - name: Generate Supabase Types","score":{"reward":0.882,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.7}},{"id":1814201310,"content":"Is this needed now?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1814201310","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,4 @@\n+module.exports = {\n+  CONFIG_FULL_PATH: \".github/.ubiquity-os.config.yml\",\n+  DEV_CONFIG_FULL_PATH: \".github/.ubiquity-os.config.dev.yml\",\n+} as jest.Mocked<typeof import(\"@ubiquity-os/ubiquity-os-kernel\")>;","score":{"reward":1.026,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":118.17500000000001,"syllables":4,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1814232135,"content":"It is probably needed but no in the compute file, so can be removed from here.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1814232135","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -36,13 +38,16 @@ jobs:\n \n       - uses: oven-sh/setup-bun@v1\n \n-      - name: Generate Supabase Types\n-        run: |\n-          yarn install\n-          yarn run \"supabase:generate:remote\"\n-        env:\n-          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}\n-          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}\n+      - name: Install dependencies\n+        run: yarn install\n+\n+      # - name: Generate Supabase Types","score":{"reward":3.318,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":79.5575,"syllables":21,"sentences":1,"score":0.804425},"multiplier":1,"relevance":0.7}},{"id":1819274510,"content":"Should be handled by the SDK: https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/50","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1819274510","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -51,24 +49,3 @@ function handleUncaughtError(errors: unknown) {\n   const status = 500;\n   return new Response(JSON.stringify(errors), { status: status, headers: { \"content-type\": \"application/json\" } });\n }\n-\n-// async function verifySignature(publicKeyPem: string, payload: unknown, signature: string) {","score":{"reward":4.896,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":71.81500000000001,"syllables":24,"sentences":2,"score":0.8818499999999999},"multiplier":1,"relevance":0.8}},{"id":2365036181,"content":"@Keyrxng Can you please resolve the conflicts?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2365036181","commentType":"PULL_COLLABORATOR","score":{"reward":1.245,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.5}},{"id":2382401424,"content":"@Keyrxng I tested in my org and it seems to work fine, I have a few questions however:\r\n- you mentioned that it should be an Action, but this is currently a Worker, so how do we set this up?\r\n- running it on my whole org took ~10 minutes, speed is not really a factor but the problem was that plenty of issues remained unlabeled for the whole duration since it does the update step by step. Couldn't we parallelize this more to get it running faster?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2382401424","commentType":"PULL_COLLABORATOR","score":{"reward":9.801,"formatting":{"content":{"p":{"score":0,"elementCount":3},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":3,"words":{"wordCount":87,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":65.57241379310345,"syllables":115,"sentences":3,"score":0.9442758620689655},"multiplier":1,"relevance":0.9}},{"id":2383661196,"content":"Sure thing.\r\nWhat about the commands and the change of labels that have to respond instantly?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2383661196","commentType":"PULL_COLLABORATOR","score":{"reward":2.826,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":82.39000000000001,"syllables":22,"sentences":2,"score":0.7760999999999999},"multiplier":1,"relevance":0.6}},{"id":2383751307,"content":"If it is no deal breaker that `/allow` and label changes take long to respond then no I do not mind, @0x4007 @whilefoo what do you think?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2383751307","commentType":"PULL_COLLABORATOR","score":{"reward":4.536,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":79.57576923076925,"syllables":31,"sentences":1,"score":0.8042423076923074},"multiplier":1,"relevance":0.7}},{"id":2393314212,"content":"@Keyrxng Can you resolve the conflicts thank you.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2393314212","commentType":"PULL_COLLABORATOR","score":{"reward":1.365,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":92.965,"syllables":10,"sentences":1,"score":0.67035},"multiplier":1,"relevance":0.5}},{"id":2427255433,"content":"@Keyrxng I made an ESM change to the package today, try it out and let me know if it changed something, otherwise I'll look into it as well.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2427255433","commentType":"PULL_COLLABORATOR","score":{"reward":5.616,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":29,"wordValue":0.1,"result":1.85},"readability":{"fleschKincaid":72.3793103448276,"syllables":36,"sentences":1,"score":0.876206896551724},"multiplier":1,"relevance":0.8}},{"id":2428041465,"content":"@Keyrxng As you suggested maybe just split these variables inside their own file so no polluting `imports` come within the compiled files.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2428041465","commentType":"PULL_COLLABORATOR","score":{"reward":4.137,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":60.634285714285724,"syllables":31,"sentences":1,"score":0.9936571428571428},"multiplier":1,"relevance":0.7}},{"id":2430992251,"content":"@Keyrxng I'll have a look, if I can't solve it yes that would be fine.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2430992251","commentType":"PULL_COLLABORATOR","score":{"reward":2.58,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":104.98000000000002,"syllables":17,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":2431159312,"content":"@Keyrxng Can you change the `update-configuration.yml` to use https://github.com/ubiquity-os/action-deploy-plugin like here https://github.com/ubiquity-os-marketplace/text-conversation-rewards/blob/development/.github/workflows/update-configuration.yml This also implies renaming the schema to `pluginSettingsSchema`","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2431159312","commentType":"PULL_COLLABORATOR","score":{"reward":11.124,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":46.435,"syllables":72,"sentences":5,"score":0.8643500000000001},"multiplier":1,"relevance":0.9}},{"id":2431205406,"content":"You will also need to add `signature` to `compute.yml`.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2431205406","commentType":"PULL_COLLABORATOR","score":{"reward":2.16,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":2431238382,"content":"Plugin works fine for me:\r\nhttps://github.com/Meniole/assistive-pricing/actions/runs/11475651902/job/31933949733\r\nYou just need to add `\"type\": \"module\"` in the `package.config`.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2431238382","commentType":"PULL_COLLABORATOR","score":{"reward":6.804,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":81.13641304347829,"syllables":31,"sentences":2,"score":0.7886358695652171},"multiplier":1,"relevance":0.9}},{"id":2431348282,"content":"@Keyrxng problem was that first the `ubiquity logger` was not properly exported for ESM. When it was, actually `octokit` was the one breaking the run: https://github.com/Meniole/assistive-pricing/actions/runs/11475539990/job/31933599621#step:7:54\r\nThese are both solved by making sure all the packages are treated as ESM.\r\nFor telegram, I do not see any calls made to it which is why it doesn't run I suppose.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2431348282","commentType":"PULL_COLLABORATOR","score":{"reward":11.583,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":81.5096428571429,"syllables":89,"sentences":4,"score":0.784903571428571},"multiplier":1,"relevance":0.9}},{"id":2440656252,"content":"@Keyrxng QA is good, please fix conflicts and let's merge this.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2440656252","commentType":"PULL_COLLABORATOR","score":{"reward":2.43,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":103.00500000000001,"syllables":13,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2199749831,"effect":{"addition":1004,"deletion":62},"reward":31.98,"priority":3},{"reviewId":2201538833,"effect":{"addition":20,"deletion":15},"reward":1.05,"priority":3},{"reviewId":2209224662,"effect":{"addition":236,"deletion":263},"reward":14.97,"priority":3},{"reviewId":2226762512,"effect":{"addition":62,"deletion":34},"reward":2.88,"priority":3},{"reviewId":2350490257,"effect":{"addition":774,"deletion":530},"reward":39.12,"priority":3},{"reviewId":2391161643,"effect":{"addition":415,"deletion":258},"reward":20.19,"priority":3},{"reviewId":2399435626,"effect":{"addition":0,"deletion":8},"reward":0.24,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 267.285 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>7</td><td>110.43</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.95</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>11.193</td></tr><tr><td>Review</td><td>Comment</td><td>34</td><td>140.712</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18\" target=\"_blank\" rel=\"noopener\">#18</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1004 -62</td><td>3</td><td>31.98</td></tr><tr><td>+20 -15</td><td>3</td><td>1.05</td></tr><tr><td>+236 -263</td><td>3</td><td>14.97</td></tr><tr><td>+62 -34</td><td>3</td><td>2.88</td></tr><tr><td>+774 -530</td><td>3</td><td>39.12</td></tr><tr><td>+415 -258</td><td>3</td><td>20.19</td></tr><tr><td>+0 -8</td><td>3</td><td>0.24</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8\" target=\"_blank\" rel=\"noopener\">A plugin that will update all the price labels if a base rate ch&hellip;</a></h6></td><td><details><summary>3.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>1</td><td>1</td><td>4.95</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2121258176\" target=\"_blank\" rel=\"noopener\">I am not sure to understand the issue. Each repo should have the&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 70&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.972</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2178168421\" target=\"_blank\" rel=\"noopener\">@Keyrxng something going on here or shall I have a look at it?</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.144</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2442151788\" target=\"_blank\" rel=\"noopener\">@Keyrxng My mistake sorry.</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.33</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/8#issuecomment-2442164599\" target=\"_blank\" rel=\"noopener\">Should be good when we get the disqualifier to work and actually&hellip;</a></h6></td><td><details><summary>1.95</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 32&#13;  wordValue: 0.1&#13;  result: 1.95&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.747</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#pullrequestreview-2391166762\" target=\"_blank\" rel=\"noopener\">Fine with the changes once comments are removed.</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.911</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1691731885\" target=\"_blank\" rel=\"noopener\">Would be better to have it disable if not present in the config &hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.05</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1691733148\" target=\"_blank\" rel=\"noopener\">I remember we had that talk before, but is the sha needed?</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.268</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692490773\" target=\"_blank\" rel=\"noopener\">just having &#96;globalConfigUpdate&#96; present would imply tha&hellip;</a></h6></td><td><details><summary>1.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.21</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692883696\" target=\"_blank\" rel=\"noopener\">Might be overkill but tools like &#96;i18n&#96; could be userful&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.16</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1692898475\" target=\"_blank\" rel=\"noopener\">I do not know if these strings are exposed to the user. I just t&hellip;</a></h6></td><td><details><summary>2.54</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 62&#13;  wordValue: 0.1&#13;  result: 2.54&#13;</pre></details></td><td>0.5</td><td>3</td><td>4.845</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1693710303\" target=\"_blank\" rel=\"noopener\">It's one of the few plugins that are very verbose with &#96;conv&hellip;</a></h6></td><td><details><summary>1.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.4</td><td>3</td><td>2.076</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1693829266\" target=\"_blank\" rel=\"noopener\">This being said, these strings are only used for testing right? &hellip;</a></h6></td><td><details><summary>2.29</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 45&#13;  wordValue: 0.1&#13;  result: 2.29&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.922</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697933938\" target=\"_blank\" rel=\"noopener\">I'd say it is a bit strange to throw on &#96;undefined&#96;, I w&hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.744</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1708472753\" target=\"_blank\" rel=\"noopener\">This seems a bit dangerous and error prone if we change the name&hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.624</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1708980245\" target=\"_blank\" rel=\"noopener\">Doesn't this run on an Action? I am not sure what is more costly&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.428</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1788990390\" target=\"_blank\" rel=\"noopener\">Do we want a default here, shouldn't we display an error and sto&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.696</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1789318607\" target=\"_blank\" rel=\"noopener\">Ha yes I remember this part now. It can be safely ignored then.</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.215</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797640048\" target=\"_blank\" rel=\"noopener\">I wonder if these constants should be exported from the Kernel t&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.087</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1798111600\" target=\"_blank\" rel=\"noopener\">https://github.com/ubiquity-os/ubiquity-os-kernel/pull/144</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.667</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1806146710\" target=\"_blank\" rel=\"noopener\">Shall be fixed by using the SDK, can come in a later PR I guess.</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.456</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1808041522\" target=\"_blank\" rel=\"noopener\">You can delete as it is all handled by the SDK.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>3</td><td>3.024</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1814200148\" target=\"_blank\" rel=\"noopener\">Should be removed.</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.882</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1814201310\" target=\"_blank\" rel=\"noopener\">Is this needed now?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.026</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1814232135\" target=\"_blank\" rel=\"noopener\">It is probably needed but no in the compute file, so can be remo&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.318</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1819274510\" target=\"_blank\" rel=\"noopener\">Should be handled by the SDK: https://github.com/ubiquity-os-mar&hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.896</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2365036181\" target=\"_blank\" rel=\"noopener\">@Keyrxng Can you please resolve the conflicts?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.245</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2382401424\" target=\"_blank\" rel=\"noopener\">@Keyrxng I tested in my org and it seems to work fine, I have a &hellip;</a></h6></td><td><details><summary>2.83</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 87&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.9</td><td>3</td><td>9.801</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2383661196\" target=\"_blank\" rel=\"noopener\">Sure thing.What about the commands and the change of labels th&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.826</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2383751307\" target=\"_blank\" rel=\"noopener\">If it is no deal breaker that &#96;/allow&#96; and label changes&hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.536</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2393314212\" target=\"_blank\" rel=\"noopener\">@Keyrxng Can you resolve the conflicts thank you.</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.365</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2427255433\" target=\"_blank\" rel=\"noopener\">@Keyrxng I made an ESM change to the package today, try it out a&hellip;</a></h6></td><td><details><summary>1.85</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 29&#13;  wordValue: 0.1&#13;  result: 1.85&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.616</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2428041465\" target=\"_blank\" rel=\"noopener\">@Keyrxng As you suggested maybe just split these variables insid&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.7</td><td>3</td><td>4.137</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2430992251\" target=\"_blank\" rel=\"noopener\">@Keyrxng I'll have a look, if I can't solve it yes that would be&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.58</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2431159312\" target=\"_blank\" rel=\"noopener\">@Keyrxng Can you change the &#96;update-configuration.yml&#96; t&hellip;</a></h6></td><td><details><summary>3.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.124</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2431205406\" target=\"_blank\" rel=\"noopener\">You will also need to add &#96;signature&#96; to &#96;compute.ym&hellip;</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.16</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2431238382\" target=\"_blank\" rel=\"noopener\">Plugin works fine for me:https://github.com/Meniole/assistive-&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.804</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2431348282\" target=\"_blank\" rel=\"noopener\">@Keyrxng problem was that first the &#96;ubiquity logger&#96; wa&hellip;</a></h6></td><td><details><summary>3.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.583</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2440656252\" target=\"_blank\" rel=\"noopener\">@Keyrxng QA is good, please fix conflicts and let's merge this.</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.43</td></tr></tbody></table></details>"},"whilefoo":{"total":108.015,"userId":139262667,"comments":[{"id":1697565914,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697565914","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -3,47 +3,58 @@\n Helps settings prices and adds label to the issues accordingly.\n \n ## Usage\n+\n Example of valid configuration:\n+\n ```yml\n- - plugin: https://ubiquibot-assistive-pricing.ubq.fi\n-   type: github\n-   with:\n-     labels:\n-       time:\n-         - \"Time: <1 Hour\"\n-         - \"Time: <2 Hours\"\n-         - \"Time: <4 Hours\"\n-         - \"Time: <1 Day\"\n-         - \"Time: <1 Week\"\n-       priority:\n-         - \"Priority: 1 (Normal)\"\n-         - \"Priority: 2 (Medium)\"\n-         - \"Priority: 3 (High)\"\n-         - \"Priority: 4 (Urgent)\"\n-         - \"Priority: 5 (Emergency)\"\n-     basePriceMultiplier: 1\n-     publicAccessControl:\n-       setLabel: true\n-       fundExternalClosedIssue: false\n+- plugin: https://ubiquibot-assistive-pricing.ubq.fi\n+  type: github","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.4}},{"id":1697581824,"content":"```suggestion\r\nexport async function isConfigModified(context: Context): Promise<boolean> {\r\n```","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697581824","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,38 @@\n+import { Context } from \"../types/context\";\n+import { isPushEvent } from \"../types/typeguards\";\n+import { getCommitChanges } from \"./get-commit-changes\";\n+\n+export const ZERO_SHA = \"0000000000000000000000000000000000000000\";\n+const BASE_RATE_FILES = [\".github/ubiquibot-config.yml\", \".github/.ubiquibot-config.yml\"];\n+\n+export async function checkModifiedBaseRate(context: Context): Promise<boolean> {","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}},{"id":1697604776,"content":"should throw error","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697604776","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -42,12 +48,37 @@ export async function addCommentToIssue(context: Context, message: string, issue\n   const payload = context.payload;\n   try {\n     await context.octokit.issues.createComment({\n-      owner: owner ?? payload.repository.owner.login,\n+      owner: owner ?? returnOptional(payload.repository.owner?.login),\n       repo: repo ?? payload.repository.name,\n       issue_number: issueNumber,\n       body: message,\n     });\n-  } catch (e: unknown) {\n-    context.logger.fatal(\"Adding a comment failed!\", e);\n+  } catch (err: unknown) {\n+    context.logger.error(\"Adding a comment failed!\", { err });\n+  }\n+}\n+\n+export async function listOrgRepos(context: Context) {\n+  try {\n+    const response = await context.octokit.rest.repos.listForOrg({\n+      org: returnOptional(context.payload.organization?.login),\n+    });\n+    return response.data;\n+  } catch (err) {\n+    context.logger.error(\"Listing org repos failed!\", { err });\n+    return [];","score":{"reward":1.008,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.8}},{"id":1697604889,"content":"should throw error","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697604889","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -42,12 +48,37 @@ export async function addCommentToIssue(context: Context, message: string, issue\n   const payload = context.payload;\n   try {\n     await context.octokit.issues.createComment({\n-      owner: owner ?? payload.repository.owner.login,\n+      owner: owner ?? returnOptional(payload.repository.owner?.login),\n       repo: repo ?? payload.repository.name,\n       issue_number: issueNumber,\n       body: message,\n     });\n-  } catch (e: unknown) {\n-    context.logger.fatal(\"Adding a comment failed!\", e);\n+  } catch (err: unknown) {\n+    context.logger.error(\"Adding a comment failed!\", { err });\n+  }\n+}\n+\n+export async function listOrgRepos(context: Context) {\n+  try {\n+    const response = await context.octokit.rest.repos.listForOrg({\n+      org: returnOptional(context.payload.organization?.login),\n+    });\n+    return response.data;\n+  } catch (err) {\n+    context.logger.error(\"Listing org repos failed!\", { err });\n+    return [];\n+  }\n+}\n+\n+export async function listRepoIssues(context: Context, owner: string, repo: string) {\n+  try {\n+    const response = await context.octokit.rest.issues.listForRepo({\n+      owner,\n+      repo,\n+    });\n+    return response.data;\n+  } catch (err) {\n+    context.logger.error(\"Listing repo issues failed!\", { err });\n+    return [];","score":{"reward":0.756,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.6}},{"id":1697608028,"content":"it's better to check if action is in payload rather than assume it is","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697608028","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -17,16 +17,17 @@ export async function labelAccessPermissionsCheck(context: Context) {\n     logger.info(\"Public access control is enabled for setting labels\");\n     return true;\n   }\n-  if (payload.sender.type === UserType.Bot) {\n+  if (payload.sender?.type === UserType.Bot) {\n     logger.info(\"Bot has full control over all labels\");\n     return true;\n   }\n \n-  const sender = payload.sender.login;\n+  const sender = returnOptional(payload.sender?.login);\n   const repo = payload.repository;\n   const sufficientPrivileges = await isUserAdminOrBillingManager(context, sender);\n   // event in plain english\n-  const eventName = payload.action === \"labeled\" ? \"add\" : \"remove\";\n+  const action = (payload as { action: string }).action as \"labeled\" | \"unlabeled\";","score":{"reward":4.05,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":78.81000000000003,"syllables":20,"sentences":1,"score":0.8118999999999997},"multiplier":1,"relevance":0.9}},{"id":1697625085,"content":"should throw error","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697625085","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -42,12 +48,37 @@ export async function addCommentToIssue(context: Context, message: string, issue\n   const payload = context.payload;\n   try {\n     await context.octokit.issues.createComment({\n-      owner: owner ?? payload.repository.owner.login,\n+      owner: owner ?? returnOptional(payload.repository.owner?.login),\n       repo: repo ?? payload.repository.name,\n       issue_number: issueNumber,\n       body: message,\n     });\n-  } catch (e: unknown) {\n-    context.logger.fatal(\"Adding a comment failed!\", e);\n+  } catch (err: unknown) {\n+    context.logger.error(\"Adding a comment failed!\", { err });","score":{"reward":0.882,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.7}},{"id":1697626420,"content":"I've never seen this style in JS, it feels like Rust and I don't know if I like or not - it's a bit confusing when looking at the code.\r\n@gentlementlegen what do you think?","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697626420","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,16 +1,21 @@\n import { Context } from \"../types/context\";\n \n+export function returnOptional<T>(value: T | undefined): T {\n+  if (value === undefined) throw new Error(\"Value is undefined\");\n+  return value;\n+}","score":{"reward":4.662,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":82.87912162162164,"syllables":46,"sentences":2,"score":0.7712087837837837},"multiplier":1,"relevance":0.6}},{"id":1697627308,"content":"should throw error","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697627308","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -163,7 +164,7 @@ async function getAllIssueEvents(context: Context) {\n       per_page: 100,\n     });\n   } catch (err: unknown) {\n-    context.logger.fatal(\"Failed to fetch lists of events\", err);\n+    context.logger.error(\"Failed to fetch lists of events\", { err });\n     return [];","score":{"reward":0.882,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":90.99000000000004,"syllables":4,"sentences":1,"score":0.6900999999999996},"multiplier":1,"relevance":0.7}},{"id":1697628824,"content":"try to avoid casts if possible","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697628824","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -33,7 +37,7 @@ export async function watchLabelChange(context: Context) {\n     currentLabel,\n     authorized: hasAccess,\n     repositoryId: payload.repository.id,\n-    userId: sender.id,","score":{"reward":1.848,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":73.84500000000001,"syllables":9,"sentences":1,"score":0.8615499999999998},"multiplier":1,"relevance":0.8}},{"id":1705826334,"content":"I'm not against throwing if a value is undefined (where it makes sense), in fact it's a right thing to do, but usually you do that with a simple if and throw. I assume you're trying to reduce repeating code by putting it in a function. However we never use that pattern in other repos and I think sometimes it's okay to be a little verbose.","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1705826334","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,16 +1,21 @@\n import { Context } from \"../types/context\";\n \n+export function returnOptional<T>(value: T | undefined): T {\n+  if (value === undefined) throw new Error(\"Value is undefined\");\n+  return value;\n+}","score":{"reward":7.944,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":70,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":68.33738095238095,"syllables":95,"sentences":3,"score":0.9166261904761904},"multiplier":1,"relevance":0.8}},{"id":1797721143,"content":"we should enable this since it's used for authentication, otherwise anybody can call a plugin.\r\nWe can rename it to `UBIQUITY_KERNEL_PUBLIC_KEY`","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797721143","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -5,7 +5,7 @@ import { StandardValidator } from \"typebox-validators\";\n export const envSchema = T.Object({\n   SUPABASE_URL: T.String(),\n   SUPABASE_KEY: T.String(),\n-  UBIQUIBOT_PUBLIC_KEY: T.String(),\n+  UBIQUIBOT_PUBLIC_KEY: T.Optional(T.String()), // optional because it's currently disabled","score":{"reward":5.319,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":59.20607142857145,"syllables":34,"sentences":2,"score":0.9920607142857145},"multiplier":1,"relevance":0.9}},{"id":2427334425,"content":"I've tried with kernel v2.2.0 and it works but when I tried v2.3.0 and v2.4.0 I got same error as @Keyrxng \r\nIt's also weird to me that yarn doesn't install all dependencies from the kernel and we have to manually add hono, octokit/plugin-retry and octokit/plugin-throttling","url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2427334425","commentType":"PULL_COLLABORATOR","score":{"reward":6.384,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":58,"wordValue":0.1,"result":2.49},"readability":{"fleschKincaid":86.11120689655174,"syllables":77,"sentences":7,"score":0.7388879310344827},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2208658716,"effect":{"addition":1014,"deletion":94},"reward":33.24,"priority":3},{"reviewId":2363929309,"effect":{"addition":820,"deletion":548},"reward":41.04,"priority":3}],"url":"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 108.015 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>74.28</td></tr><tr><td>Review</td><td>Comment</td><td>12</td><td>33.735</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18\" target=\"_blank\" rel=\"noopener\">#18</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1014 -94</td><td>3</td><td>33.24</td></tr><tr><td>+820 -548</td><td>3</td><td>41.04</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697565914\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.4</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697581824\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionexport async function isConfigModifie&hellip;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697604776\" target=\"_blank\" rel=\"noopener\">should throw error</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.008</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697604889\" target=\"_blank\" rel=\"noopener\">should throw error</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.756</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697608028\" target=\"_blank\" rel=\"noopener\">it's better to check if action is in payload rather than assume &hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.9</td><td>3</td><td>4.05</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697625085\" target=\"_blank\" rel=\"noopener\">should throw error</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.882</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697626420\" target=\"_blank\" rel=\"noopener\">I've never seen this style in JS, it feels like Rust and I don't&hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.662</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697627308\" target=\"_blank\" rel=\"noopener\">should throw error</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.882</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1697628824\" target=\"_blank\" rel=\"noopener\">try to avoid casts if possible</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.848</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1705826334\" target=\"_blank\" rel=\"noopener\">I'm not against throwing if a value is undefined (where it makes&hellip;</a></h6></td><td><details><summary>2.6</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 70&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.944</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#discussion_r1797721143\" target=\"_blank\" rel=\"noopener\">we should enable this since it's used for authentication, otherw&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.319</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/18#issuecomment-2427334425\" target=\"_blank\" rel=\"noopener\">I've tried with kernel v2.2.0 and it works but when I tried v2.3&hellip;</a></h6></td><td><details><summary>2.49</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 58&#13;  wordValue: 0.1&#13;  result: 2.49&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.384</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugin-template_7.json","json":{"gitcoindev":{"userId":88761781,"total":302.64,"task":{"reward":300,"multiplier":1},"comments":[{"id":2360527643,"content":"As discussed via Telegram with @0x4007 , the goal of this issue is to write a 'Hello world' plugin to ensure that the documentation is without errors and clear enough to onboard new developers who have no previous experience with the repository.","url":"https://github.com/ubiquity-os/plugin-template/issues/7","commentType":"ISSUE_SPECIFICATION","score":{"reward":2.64,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":26.971219512195177,"syllables":67,"sentences":1,"score":0.6697121951219518},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 302.64 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>300</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>2.64</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/7\" target=\"_blank\" rel=\"noopener\">As discussed via Telegram with @0x4007 , the goal of this issue &hellip;</a></h6></td><td><details><summary>2.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>1</td><td>1</td><td>2.64</td></tr></tbody></table></details>"},"0x4007":{"total":20.364,"userId":4975670,"comments":[{"id":2182710601,"content":"Also I encourage you to write proposals to streamline the process further as you see fit. \nWe want to make things as simple as possible for new developers and I'm sure that there's lots of low hanging fruit.","url":"https://github.com/ubiquity-os/plugin-template/issues/7#issuecomment-2182710601","commentType":"ISSUE_COLLABORATOR","score":{"reward":6.648,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":40,"wordValue":0.1,"result":2.18},"readability":{"fleschKincaid":70.21000000000004,"syllables":55,"sentences":2,"score":0.8978999999999996},"multiplier":1,"relevance":0.8}},{"id":2194224780,"content":"To clarify, by proposals I mean file new GitHub issues under the appropriate repositories specifying new tasks to enhance the onboarding.","url":"https://github.com/ubiquity-os/plugin-template/issues/7#issuecomment-2194224780","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.344,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":24.3771428571429,"syllables":40,"sentences":1,"score":0.643771428571429},"multiplier":1,"relevance":0.8}},{"id":2194234534,"content":"Do you have any proposals on how to streamline the process further?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2194234534","commentType":"PULL_COLLABORATOR","score":{"reward":2.358,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":74.805,"syllables":17,"sentences":1,"score":0.85195},"multiplier":1,"relevance":0.6}},{"id":2235170765,"content":"@gentlementlegen @Keyrxng @whilefoo I think you all have successfully built plugins before right? Can you all verify?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2235170765","commentType":"PULL_COLLABORATOR","score":{"reward":3.507,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":48.9133823529412,"syllables":30,"sentences":2,"score":0.889133823529412},"multiplier":1,"relevance":0.7}},{"id":2235189473,"content":"I suppose this would be good to add if its not too complicated.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2235189473","commentType":"PULL_COLLABORATOR","score":{"reward":1.197,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":89.51692307692309,"syllables":16,"sentences":1,"score":0.704830769230769},"multiplier":1,"relevance":0.3}}],"reviewRewards":[{"reviews":[{"reviewId":2144833045,"effect":{"addition":63,"deletion":14},"reward":2.31,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 20.364 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>2.31</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>10.992</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>7.062</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66\" target=\"_blank\" rel=\"noopener\">#66</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+63 -14</td><td>3</td><td>2.31</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/7#issuecomment-2182710601\" target=\"_blank\" rel=\"noopener\">Also I encourage you to write proposals to streamline the proces&hellip;</a></h6></td><td><details><summary>2.18</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 40&#13;  wordValue: 0.1&#13;  result: 2.18&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.648</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugin-template/issues/7#issuecomment-2194224780\" target=\"_blank\" rel=\"noopener\">To clarify, by proposals I mean file new GitHub issues under the&hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.344</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2194234534\" target=\"_blank\" rel=\"noopener\">Do you have any proposals on how to streamline the process furth&hellip;</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.358</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2235170765\" target=\"_blank\" rel=\"noopener\">@gentlementlegen @Keyrxng @whilefoo I think you all have success&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.507</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2235189473\" target=\"_blank\" rel=\"noopener\">I suppose this would be good to add if its not too complicated.</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.197</td></tr></tbody></table></details>"},"rndquu":{"total":59.58,"userId":119500907,"comments":[{"id":2144917741,"content":"@gitcoindev Awesome\r\nThe next steps could be:\r\n1. [This](https://github.com/ubiquity/ubiquibot-kernel/wiki/Hello-world-plugin-onboarding-tutorial) tutorial series uses \"local\" [plugin](https://github.com/ubiquity/ubiquibot-kernel/blob/3a7066ba9a80df29ed6aad5322b597ea39c10bf2/tests/__mocks__/hello-world-plugin.ts) in the kernel which is a barebone http server. We could add 1 more video of how to create a \"hello world\" plugin using https://github.com/ubiquibot/plugin-template.\r\n2. Add an example of how to use the kernel with the \"github action\" type plugin.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#pullrequestreview-2144917741","commentType":"PULL_COLLABORATOR","score":{"reward":19.467,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":3}},"result":3.2},"priority":3,"words":{"wordCount":52,"wordValue":0.1,"result":2.41},"readability":{"fleschKincaid":65.21750000000002,"syllables":87,"sentences":4,"score":0.9478249999999998},"multiplier":1,"relevance":0.9}},{"id":2182855297,"content":"@gitcoindev Cool, I think it's ready to be merged","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#pullrequestreview-2182855297","commentType":"PULL_COLLABORATOR","score":{"reward":0.99,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.3}},{"id":2194281421,"content":"Only senior devs know how to quit vim without restarting OS :)","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2194281421","commentType":"PULL_COLLABORATOR","score":{"reward":0,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":72.61545454545457,"syllables":16,"sentences":1,"score":0.8738454545454544},"multiplier":1,"relevance":0}},{"id":2208273353,"content":"Yes, as `gentlementlegen` noted check that:\r\n1. The bot is installed both in the plugin repo and in the repo where the config is located\r\n2. The bot has `read` permission for repository contents\r\nIf that doesn't help try to set all of the permissions to `read and write`, perhaps we're missing smth.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2208273353","commentType":"PULL_COLLABORATOR","score":{"reward":6.699,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":3,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":43.55250000000001,"syllables":65,"sentences":1,"score":0.8355250000000001},"multiplier":1,"relevance":0.7}},{"id":2237536157,"content":"The thing with the worker example is that the kernel supports any http server to be a plugin (which is already covered in the [wiki](https://github.com/ubiquity/ubiquibot-kernel/wiki/Hello-world-plugin-onboarding-tutorial) at step 7 `Running hello world plugin`) and cloudflare worker is just another way of setting up an http server.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2237536157","commentType":"PULL_COLLABORATOR","score":{"reward":9.648,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":41,"wordValue":0.1,"result":2.2},"readability":{"fleschKincaid":45.54195121951224,"syllables":58,"sentences":1,"score":0.8554195121951225},"multiplier":1,"relevance":0.8}},{"id":2249643240,"content":"This \"hello-world\" plugin is really handy for QAing kernel features. It was not initially meant to be used in the onboarding although it more or less fits this purpose.\r\nOverall I agree that in the next docs iteration we could stick only to the https://github.com/ubiquibot/plugin-template and add more diagrams describing the overall process.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2249643240","commentType":"PULL_COLLABORATOR","score":{"reward":10.656,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":61.37900423728814,"syllables":91,"sentences":4,"score":0.9862099576271186},"multiplier":1,"relevance":0.8}}],"reviewRewards":[{"reviews":[{"reviewId":2144917741,"effect":{"addition":63,"deletion":14},"reward":2.31,"priority":3},{"reviewId":2182855297,"effect":{"addition":235,"deletion":92},"reward":9.81,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 59.58 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>12.12</td></tr><tr><td>Review</td><td>Comment</td><td>6</td><td>47.46</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66\" target=\"_blank\" rel=\"noopener\">#66</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+63 -14</td><td>3</td><td>2.31</td></tr><tr><td>+235 -92</td><td>3</td><td>9.81</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#pullrequestreview-2144917741\" target=\"_blank\" rel=\"noopener\">@gitcoindev AwesomeThe next steps could be:1. [This](https:/&hellip;</a></h6></td><td><details><summary>5.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.2&#13;regex:&#13;  wordCount: 52&#13;  wordValue: 0.1&#13;  result: 2.41&#13;</pre></details></td><td>0.9</td><td>3</td><td>19.467</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#pullrequestreview-2182855297\" target=\"_blank\" rel=\"noopener\">@gitcoindev Cool, I think it's ready to be merged</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.99</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2194281421\" target=\"_blank\" rel=\"noopener\">Only senior devs know how to quit vim without restarting OS :)</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2208273353\" target=\"_blank\" rel=\"noopener\">Yes, as &#96;gentlementlegen&#96; noted check that:1. The bot &hellip;</a></h6></td><td><details><summary>2.55</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 48&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.699</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2237536157\" target=\"_blank\" rel=\"noopener\">The thing with the worker example is that the kernel supports an&hellip;</a></h6></td><td><details><summary>3.2</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 41&#13;  wordValue: 0.1&#13;  result: 2.2&#13;</pre></details></td><td>0.8</td><td>3</td><td>9.648</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2249643240\" target=\"_blank\" rel=\"noopener\">This \"hello-world\" plugin is really handy for QAing kernel featu&hellip;</a></h6></td><td><details><summary>3.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>0.8</td><td>3</td><td>10.656</td></tr></tbody></table></details>"},"gentlementlegen":{"total":9.552,"userId":9807008,"comments":[{"id":2207651376,"content":"@gitcoindev Are you saying it runs fine when the configuration is public? I am also using a private repo on my org for the Action plugins with the kernel and it works fine so far. I don't recall setting particular permissions for that but it is possible it was required. Did you install the app on that repository, and is the config available on the branch you are trying to access?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2207651376","commentType":"PULL_COLLABORATOR","score":{"reward":6.066,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":72,"wordValue":0.1,"result":2.61},"readability":{"fleschKincaid":62.84,"syllables":107,"sentences":4,"score":0.9716},"multiplier":1,"relevance":0.6}},{"id":2235184077,"content":"Works for me, although there is no example with Workers, will it be in a separate PR?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2235184077","commentType":"PULL_COLLABORATOR","score":{"reward":3.486,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":75.12117647058825,"syllables":23,"sentences":1,"score":0.8487882352941175},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 9.552 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>2</td><td>9.552</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2207651376\" target=\"_blank\" rel=\"noopener\">@gitcoindev Are you saying it runs fine when the configuration i&hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 72&#13;  wordValue: 0.1&#13;  result: 2.61&#13;</pre></details></td><td>0.6</td><td>3</td><td>6.066</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2235184077\" target=\"_blank\" rel=\"noopener\">Works for me, although there is no example with Workers, will it&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>3</td><td>3.486</td></tr></tbody></table></details>"},"Keyrxng":{"total":1.431,"userId":106303466,"comments":[{"id":2242699183,"content":"1. The GitHub app setup and kernel config setup etc is excellent it's clear and easy to follow\r\n2. When the setup was happening only two events were subscribed to, which is true in the case of the plugin but it's the bot that's being setup in that section not the plugin, which I think will lead to confusion as the bot should listen to basically all events no?\r\n3. Having the videos combined into one and hosted somewhere built for it would be a huge bonus. Idk about you folks but GitHub is terrible for video playback, it fails to load and repeats the same section constantly for me forcing me to refresh until it loads and plays it all. It took way longer than it should have to watch these videos and I live alone with really good wifi speeds.\r\n4. Personally, I found the plugin config and the worker confusing. It felt totally different from how actual plugins are built and configured, `ts-template` usage also confused me but I see it has been updated.\r\n5. The updated video showing the diff of the inserted config values does not show the function that had to be created in order for the plugin to work. I think this is a problem because in watching the first videos my thoughts were \"how is the 'world' comment happening without any logic being written\", I first checked the repos which korrba and rndquu made before realizing it was a script in the kernel repo. Again, totally different from how things are actually done.\r\n---\r\nI'd have assumed that the `plugin-template` would be converted into a `hello-world` plugin which when forked works right out of the box and you have to delete the `hello-world.ts` file to start building. This is the most streamlined version I can think of and it keeps the kernel separate from plugins which is the model we want to push onto plugin devs really isn't it, not so much the kernel side? \r\nAlso you cannot just copy and paste [this](https://github.com/ubiquity/ubiquibot-kernel/blob/development/tests/__mocks__/hello-world-plugin.ts) plugin example so I think it's a bad example to use for onboarding.\r\n---\r\nWhen I was helping jordan set things up he said this to me on the 13th and at the time I wasn't aware of the kernel hello-world example but it's clear that it was something he had to wrap his head around. But understood things once I made it clear you had to run both locally, separately and how those interacted with each other i.e the plugin only listens to the kernel and the kernel only listens to GitHub etc...\r\nWhich makes me ask what assumptions are we making about people we are onboarding?\r\nThere are assumptions being made re: http coms and servers, intuitive enough to seek out examples, intuitive enough to see the poor example and then transform that into a proper plugin via other real examples etc.\r\nI think one or two simple diagrams for how the kernel interacts with plugins and vice versa would go a really long way and cut onboarding time down considerably as it's far easier to understand a new mental model when you can see it visualized.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2242699183","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.431,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":5},"p":{"score":0,"elementCount":11},"hr":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1.5},"priority":3,"words":{"wordCount":530,"wordValue":0.1,"result":0.15},"readability":{"fleschKincaid":58.98775681341722,"syllables":739,"sentences":18,"score":0.9898775681341722},"multiplier":0.25,"relevance":0.9}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.431 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>1.431</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/66#issuecomment-2242699183\" target=\"_blank\" rel=\"noopener\">1. The GitHub app setup and kernel config setup etc is excellent&hellip;</a></h6></td><td><details><summary>1.65</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 5&#13;    p:&#13;      score: 0&#13;      elementCount: 11&#13;    hr:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.5&#13;regex:&#13;  wordCount: 530&#13;  wordValue: 0.1&#13;  result: 0.15&#13;</pre></details></td><td>0.9</td><td>3</td><td>1.431</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_26.json","json":{"gentlementlegen":{"userId":9807008,"total":31.506,"task":{"reward":25,"multiplier":1},"comments":[{"id":1980216742,"content":"@pavlovcik Good idea didn't think of it. Then the plan would just be to add the test case.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980216742","commentType":"ISSUE_AUTHOR","score":{"reward":1.352,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":99.23460526315789,"syllables":22,"sentences":2,"score":0.6076539473684212},"multiplier":1,"relevance":0.8}},{"id":1980217980,"content":"Forgot about this sorry 😅","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980217980","commentType":"ISSUE_AUTHOR","score":{"reward":0.114,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":54.72500000000002,"syllables":7,"sentences":1,"score":0.9472500000000003},"multiplier":1,"relevance":0.2}},{"id":2170792113,"content":"Since the repository was created before the `ts-template` repository was created, it does not include a basic test setup with Jest. It would be very helpful to have it here as well, to better understand how the kernel is articulated and having a basic setup out of the box.\r\nWhat would be needed:\r\n- jest testing system\r\n- coverage\r\n- a basic use case that shows a successful workflow\r\nRefer [here](https://github.com/ubiquity/ts-template) for Jest setup.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26","commentType":"ISSUE_SPECIFICATION","score":{"reward":5.04,"formatting":{"content":{"p":{"score":0,"elementCount":6},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1.3},"priority":1,"words":{"wordCount":70,"wordValue":0.1,"result":2.6},"readability":{"fleschKincaid":57.4602380952381,"syllables":104,"sentences":3,"score":0.9746023809523809},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 31.506 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>5.04</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>1.466</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26\" target=\"_blank\" rel=\"noopener\">Since the repository was created before the &#96;ts-template&#96&hellip;</a></h6></td><td><details><summary>3.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.3&#13;regex:&#13;  wordCount: 70&#13;  wordValue: 0.1&#13;  result: 2.6&#13;</pre></details></td><td>1</td><td>1</td><td>5.04</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980216742\" target=\"_blank\" rel=\"noopener\">@pavlovcik Good idea didn't think of it. Then the plan would jus&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.8</td><td>1</td><td>1.352</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980217980\" target=\"_blank\" rel=\"noopener\">Forgot about this sorry 😅</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.2</td><td>1</td><td>0.114</td></tr></tbody></table></details>"},"0x4007":{"total":22.007,"userId":4975670,"comments":[{"id":1980216000,"content":"Why not just sync the template instead. Git merge unrelated histories.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980216000","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.107,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":70.50704545454548,"syllables":17,"sentences":2,"score":0.8949295454545453},"multiplier":1,"relevance":0.9}},{"id":1980217382,"content":"You will need to level up in Ubiquity to fund tasks. Perhaps when you take over a repo or two!","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980217382","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.546,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":82.47500000000001,"syllables":27,"sentences":2,"score":0.7752499999999999},"multiplier":1,"relevance":0.3}},{"id":1980221685,"content":"Will sync I have a shell script to help\r\n- https://github.com/ubiquity/ubiquibot-kernel/issues/27","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980221685","commentType":"ISSUE_COLLABORATOR","score":{"reward":2.223,"formatting":{"content":{"p":{"score":0,"elementCount":1},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1.1},"priority":1,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":68.81926470588238,"syllables":26,"sentences":2,"score":0.9118073529411762},"multiplier":1,"relevance":0.9}},{"id":1515638204,"content":"Fancy","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#discussion_r1515638204","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -11,15 +11,16 @@\n   },\n   \"scripts\": {\n     \"dev\": \"run-p worker proxy\",\n-    \"predev\": \"lsof -i tcp:8787 | grep LISTEN | awk '{print $2}' | xargs kill -9\",\n+    \"predev\": \"lsof -i tcp:8787 | grep LISTEN | awk '{print $2}' | (if [ -n \\\"$(awk '{print $2}')\\\" ]; then xargs kill -9; fi)\",","score":{"reward":0.051,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":1,"wordValue":0.1,"result":0.14},"readability":{"fleschKincaid":36.62000000000003,"syllables":2,"sentences":1,"score":0.7662000000000003},"multiplier":1,"relevance":0.3}},{"id":1515866199,"content":"Maybe just add this directive once at the top of the file?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#discussion_r1515866199","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,24 +1,75 @@\n-// import { mainModule } from \"../static/main\";\n-import { afterAll, afterEach, beforeAll, beforeEach, describe, expect, it } from \"@jest/globals\";\n-import { db } from \"./__mocks__/db\";\n+import { afterAll, afterEach, beforeAll, describe, expect, it, jest, mock, spyOn } from \"bun:test\";\n+mock.module(\"@octokit/webhooks\", () => ({\n+  Webhooks: WebhooksMocked,\n+}));\n+\n+class WebhooksMocked {\n+  // eslint-disable-next-line @typescript-eslint/naming-convention","score":{"reward":0.756,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":12,"wordValue":0.1,"result":1.04},"readability":{"fleschKincaid":88.905,"syllables":15,"sentences":1,"score":0.71095},"multiplier":1,"relevance":0.6}},{"id":1982650415,"content":"Looks like there's a lot of conflicts. Please handle those.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1982650415","commentType":"PULL_COLLABORATOR","score":{"reward":0.882,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":101.27068181818181,"syllables":13,"sentences":2,"score":1},"multiplier":1,"relevance":0.7}},{"id":1983132332,"content":"What do you want to do about the failing typecheck CI? If you can't find a way to work with Bun then we can switch back to yarn 1.x\r\nThis union type stuff is really complicated to deal with @whilefoo rfc","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1983132332","commentType":"PULL_COLLABORATOR","score":{"reward":2.192,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":43,"wordValue":0.1,"result":2.25},"readability":{"fleschKincaid":88.01224806201553,"syllables":53,"sentences":3,"score":0.7198775193798447},"multiplier":1,"relevance":0.8}},{"id":1983137411,"content":"I wonder if its too noisy to add this comment on every pull. I like how it was originally implemented, with inline warnings and errors on the file view instead. @gitcoindev perhaps you can look into logging all the errors in the form of annotations on the files view?\r\n`'convertToString' is an unused export` is one of those, please address that.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1983137411","commentType":"PULL_COLLABORATOR","score":{"reward":2.844,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":67.2357142857143,"syllables":83,"sentences":4,"score":0.9276428571428571},"multiplier":1,"relevance":0.9}},{"id":1985041846,"content":"Just the `convertToString` thing check the files view","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1985041846","commentType":"PULL_COLLABORATOR","score":{"reward":0.45,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1985069467,"content":"I'm not sure I guess we can gamble and merge.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1985069467","commentType":"PULL_COLLABORATOR","score":{"reward":0.126,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":103.37909090909093,"syllables":12,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"reviews":[{"reviewId":1921591846,"effect":{"addition":144,"deletion":5},"reward":1.49,"priority":1},{"reviewId":1921970419,"effect":{"addition":829,"deletion":76},"reward":9.05,"priority":1},{"reviewId":1924064453,"effect":{"addition":4,"deletion":25},"reward":0.29,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 22.007 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>3</td><td>10.83</td></tr><tr><td>Issue</td><td>Comment</td><td>3</td><td>3.876</td></tr><tr><td>Review</td><td>Comment</td><td>7</td><td>7.301</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29\" target=\"_blank\" rel=\"noopener\">#29</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+144 -5</td><td>1</td><td>1.49</td></tr><tr><td>+829 -76</td><td>1</td><td>9.05</td></tr><tr><td>+4 -25</td><td>1</td><td>0.29</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980216000\" target=\"_blank\" rel=\"noopener\">Why not just sync the template instead. Git merge unrelated hist&hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.9</td><td>1</td><td>1.107</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980217382\" target=\"_blank\" rel=\"noopener\">You will need to level up in Ubiquity to fund tasks. Perhaps whe&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.546</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/26#issuecomment-1980221685\" target=\"_blank\" rel=\"noopener\">Will sync I have a shell script to help- https://github.com/ub&hellip;</a></h6></td><td><details><summary>1.94</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.1&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.223</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#discussion_r1515638204\" target=\"_blank\" rel=\"noopener\">Fancy</a></h6></td><td><details><summary>0.14</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 1&#13;  wordValue: 0.1&#13;  result: 0.14&#13;</pre></details></td><td>0.3</td><td>1</td><td>0.051</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#discussion_r1515866199\" target=\"_blank\" rel=\"noopener\">Maybe just add this directive once at the top of the file?</a></h6></td><td><details><summary>1.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 12&#13;  wordValue: 0.1&#13;  result: 1.04&#13;</pre></details></td><td>0.6</td><td>1</td><td>0.756</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1982650415\" target=\"_blank\" rel=\"noopener\">Looks like there's a lot of conflicts. Please handle those.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.7</td><td>1</td><td>0.882</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1983132332\" target=\"_blank\" rel=\"noopener\">What do you want to do about the failing typecheck CI? If you ca&hellip;</a></h6></td><td><details><summary>2.25</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 43&#13;  wordValue: 0.1&#13;  result: 2.25&#13;</pre></details></td><td>0.8</td><td>1</td><td>2.192</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1983137411\" target=\"_blank\" rel=\"noopener\">I wonder if its too noisy to add this comment on every pull. I l&hellip;</a></h6></td><td><details><summary>2.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.9</td><td>1</td><td>2.844</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1985041846\" target=\"_blank\" rel=\"noopener\">Just the &#96;convertToString&#96; thing check the files view</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.5</td><td>1</td><td>0.45</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1985069467\" target=\"_blank\" rel=\"noopener\">I'm not sure I guess we can gamble and merge.</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.1</td><td>1</td><td>0.126</td></tr></tbody></table></details>"},"gitcoindev":{"total":0.172,"userId":88761781,"comments":[{"id":1983337615,"content":"I agree. I will have a look at configuration and try to change this into annotations only.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1983337615","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.172,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":63.84279411764709,"syllables":27,"sentences":2,"score":0.9615720588235291},"multiplier":0.25,"relevance":0.4}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.172 XP ]</a>&nbsp;</h3><h6>@gitcoindev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>0.172</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/29#issuecomment-1983337615\" target=\"_blank\" rel=\"noopener\">I agree. I will have a look at configuration and try to change t&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.172</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-plugin-installer_3.json","json":{"Keyrxng":{"userId":106303466,"total":605.211,"task":{"reward":600,"multiplier":1},"comments":[{"id":2463322958,"content":"starting this now and I'll just link the PR again, it'll be building on top of #12.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2463322958","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.774,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":89.5921052631579,"syllables":22,"sentences":1,"score":0.7040789473684209},"multiplier":0.25,"relevance":0.6}},{"id":2170784213,"content":"Resolves https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3\r\nRequires #11 and #12 (reviewing those could be skipped and focus placed just on this PR)\r\n- Listing all plugins from `ubiquity-os-marketplace` and grabbing manifests\r\n- Login with GitHub App: fetch user orgs with app installs.\r\n- Select org: Select config: Select Plugin\r\n- Update configuration based on manifest values\r\n- Save to local and optionally push to GitHub\r\n- Can build multiple plugins before pushing to GitHub\r\nStill buggy with some plugins I need to inspect the more complex ones and handle their configs better but this shows what it looks like with a plugin with a medium size config. It should be ready to over the next day.\r\n@zugdev Idk if you want to work your magic after this is merged, branch off and PR against dev or into this before that or just review and create a spec for what's needed? What do you think?\r\n---\r\nWe can still build this UI with the ability to read from a query param directly too but it's a cleaner approach housing them all imo.\r\n- I'm thinking pull the plugin README and display it beside the configuration?\r\n- breadcrumbs would be good to jump back and re-select plugin, config, org.\r\n- it's pretty verbose but additional details in the manifest for each prop. In `.ts` we use JSDoc comments on input props and it fills the IDE. This would be handy af if we had a workflow to parse these and write them to the manifest which could be read on this UI: e.g `requiredLabelsToStart` without defaults might be confusing to a partner\r\nQA:\r\nhttps://github.com/user-attachments/assets/6095919d-a491-45b1-a5c7-05d6215ac769","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13","commentType":"PULL_SPECIFICATION","score":{"reward":4.437,"formatting":{"content":{"p":{"score":0,"elementCount":16},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":9},"hr":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":2}},"result":2.9},"priority":1,"words":{"wordCount":259,"wordValue":0.1,"result":1.19},"readability":{"fleschKincaid":67.54079181494663,"syllables":395,"sentences":14,"score":0.9245920818505337},"multiplier":1,"relevance":0.85}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 605.211 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>600</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.774</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>4.437</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2463322958\" target=\"_blank\" rel=\"noopener\">starting this now and I'll just link the PR again, it'll be buil&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.774</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquity-os/ubiquity-os-plugin-insta&hellip;</a></h6></td><td><details><summary>4.09</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 16&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 9&#13;    hr:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2.9&#13;regex:&#13;  wordCount: 259&#13;  wordValue: 0.1&#13;  result: 1.19&#13;</pre></details></td><td>0.85</td><td>1</td><td>4.437</td></tr></tbody></table></details>"},"0x4007":{"total":84.048,"userId":4975670,"comments":[{"id":2379125735,"content":"@gentlementlegen  can you fix the double post?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2379125735","commentType":"ISSUE_AUTHOR","score":{"reward":0.267,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":54.70142857142861,"syllables":12,"sentences":1,"score":0.947014285714286},"multiplier":1,"relevance":0.1}},{"id":2527172531,"content":"1. We need to be able to select which `ubiquibot-config.yml` to edit, so we at minimum need an organization picker after GitHub authentication. \r\n2. We need to parse the YML file, and target the config based on the plugin's URL/location. Then edit the YML file and push the commit using the user's credentials.\r\nMore thoughts on [the readme](https://github.com/Ubiquity-OS/ubiquity-os-plugin-installer?tab=readme-ov-file#add--remove-config).\r\n### LLM \r\nWithout research, the lazy answer is that LLMs can easily solve the problem. We could even consider passing in the most important/relevant files of the plugin so that the LLM can figure out all the default values and other miscellaneous details. \r\nBut it would certainly be preferred to implement this with traditional code. I think with a bit of research it can be pretty straightforward.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3","commentType":"ISSUE_SPECIFICATION","score":{"reward":6.03,"formatting":{"content":{"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"p":{"score":0,"elementCount":5},"h3":{"score":1,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":2.2},"priority":1,"words":{"wordCount":125,"wordValue":0.1,"result":2.45},"readability":{"fleschKincaid":61.03002500000002,"syllables":192,"sentences":8,"score":0.9896997499999998},"multiplier":1,"relevance":1}},{"id":1846055341,"content":"cspell has weird bugs, I'm assuming there is no typo and its a false positive.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1846055341","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,12 @@\n+{\n+  \"$schema\": \"https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json\",\n+  \"version\": \"0.2\",\n+  \"ignorePaths\": [\"**/*.json\", \"**/*.css\", \"node_modules\", \"**/*.log\"],\n+  \"useGitignore\": true,\n+  \"language\": \"en\",\n+  \"words\": [\"dataurl\", \"devpool\", \"outdir\", \"servedir\"],\n+  \"dictionaries\": [\"typescript\", \"node\", \"software-terms\"],\n+  \"import\": [\"@cspell/dict-typescript/cspell-ext.json\", \"@cspell/dict-node/cspell-ext.json\", \"@cspell/dict-software-terms\"],\n+  \"ignoreRegExpList\": [\"[0-9a-fA-F]{6}\"],\n+  \"ignoreWords\": [\"ubiquibot\", \"issu\", \"Supabase\", \"supabase\", \"SUPABASE\"]","score":{"reward":0.948,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":79.5575,"syllables":21,"sentences":1,"score":0.804425},"multiplier":1,"relevance":0.2}},{"id":1846062079,"content":"This should be a secret. Like the ANON KEY","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1846062079","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -54,7 +57,7 @@ function createEnvDefines(environmentVariables: string[], generatedAtBuild: Reco\n }\n \n export function generateSupabaseStorageKey(): string | null {\n-  const SUPABASE_URL = process.env.SUPABASE_URL;\n+  const SUPABASE_URL = \"https://wfzpewmlyiozupulbuur.supabase.co\";","score":{"reward":2.673,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":98.8675,"syllables":11,"sentences":2,"score":0.6113249999999999},"multiplier":1,"relevance":0.9}},{"id":1846064215,"content":"```suggestion\r\n      sha: sha,\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1846064215","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,159 @@\n+import YAML from \"yaml\";\n+import { Plugin, PluginConfig } from \"../types/plugins\";\n+import { Octokit } from \"@octokit/rest\";\n+const repo = \".ubiquity-os\";\n+const path = `.github/.ubiquity-os.config.yml`;\n+\n+export class ConfigParser {\n+  repoConfig: string | null = null;\n+  repoConfigSha: string | null = null;\n+  newConfigYml: string | null = null;\n+\n+  async fetchUserInstalledConfig(org: string, env: \"development\" | \"production\", octokit: Octokit) {\n+    const content = this.loadConfig();\n+    if (!content) {\n+      throw new Error(\"No content to push\");\n+    }\n+\n+    const existingConfig = await octokit.repos.getContent({\n+      owner: org,\n+      repo: repo,\n+      path: env === \"production\" ? path : path.replace(\".yml\", \".dev.yml\"),\n+    });\n+\n+    if (existingConfig && \"content\" in existingConfig.data) {\n+      this.repoConfigSha = existingConfig.data.sha;\n+      this.repoConfig = atob(existingConfig.data.content);\n+    } else {\n+      throw new Error(\"No existing config found\"); // todo create repo/dirs/files\n+    }\n+  }\n+\n+  parseConfig(config?: string | null): PluginConfig {\n+    if (config) {\n+      return YAML.parse(config);\n+    }\n+    if (!this.newConfigYml) {\n+      this.loadConfig();\n+    }\n+    return YAML.parse(`${this.newConfigYml}`);\n+  }\n+\n+  async updateConfig(org: string, env: \"development\" | \"production\", octokit: Octokit, option: \"add\" | \"remove\") {\n+    let repoPlugins = this.parseConfig(this.repoConfig).plugins;\n+    const newPlugins = this.parseConfig().plugins;\n+\n+    if (!newPlugins) {\n+      throw new Error(\"No plugins found in the config\");\n+    }\n+\n+    const newPluginNames = newPlugins.map((p) => p.uses[0].plugin);\n+    if (newPluginNames.length === 0) {\n+      throw new Error(\"No plugins found in the config\");\n+    }\n+\n+    if (option === \"add\") {\n+      // update if it exists, add if it doesn't\n+      newPlugins.forEach((newPlugin) => {\n+        const existingPlugin = repoPlugins.find((p) => p.uses[0].plugin === newPlugin.uses[0].plugin);\n+        if (existingPlugin) {\n+          existingPlugin.uses[0].with = newPlugin.uses[0].with;\n+        } else {\n+          repoPlugins.push(newPlugin);\n+        }\n+      });\n+\n+      this.newConfigYml = YAML.stringify({ plugins: repoPlugins });\n+    } else if (option === \"remove\") {\n+      // remove only this plugin, keep all others\n+      newPlugins.forEach((newPlugin) => {\n+        const existingPlugin = repoPlugins.find((p) => p.uses[0].plugin === newPlugin.uses[0].plugin);\n+        if (existingPlugin) {\n+          repoPlugins = repoPlugins.filter((p) => p.uses[0].plugin !== newPlugin.uses[0].plugin);\n+        }\n+      });\n+      this.newConfigYml = YAML.stringify({ plugins: newPlugins });\n+    }\n+\n+    this.saveConfig();\n+    return this.createOrUpdateFileContents(org, repo, path, env, octokit);\n+  }\n+\n+  async createOrUpdateFileContents(org: string, repo: string, path: string, env: \"development\" | \"production\", octokit: Octokit) {\n+    const recentSha = await octokit.repos.getContent({\n+      owner: org,\n+      repo: repo,\n+      path: env === \"production\" ? path : path.replace(\".yml\", \".dev.yml\"),\n+    });\n+\n+    const sha = \"sha\" in recentSha.data ? recentSha.data.sha : null;\n+\n+    return octokit.repos.createOrUpdateFileContents({\n+      owner: org,\n+      repo: repo,\n+      path: env === \"production\" ? path : path.replace(\".yml\", \".dev.yml\"),\n+      message: `chore: creating ${env} config`,\n+      content: btoa(`${this.newConfigYml}`),\n+      sha: `${sha}`,","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2441807513,"effect":{"addition":1813,"deletion":233},"reward":61.38,"priority":3},{"reviewId":2441819000,"effect":{"addition":313,"deletion":112},"reward":12.75,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 84.048 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>74.13</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>6.03</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.267</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>3.621</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13\" target=\"_blank\" rel=\"noopener\">#13</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1813 -233</td><td>3</td><td>61.38</td></tr><tr><td>+313 -112</td><td>3</td><td>12.75</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3\" target=\"_blank\" rel=\"noopener\">1. We need to be able to select which &#96;ubiquibot-config.yml&&hellip;</a></h6></td><td><details><summary>4.65</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    h3:&#13;      score: 1&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 2.2&#13;regex:&#13;  wordCount: 125&#13;  wordValue: 0.1&#13;  result: 2.45&#13;</pre></details></td><td>1</td><td>1</td><td>6.03</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2379125735\" target=\"_blank\" rel=\"noopener\">@gentlementlegen  can you fix the double post?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.267</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1846055341\" target=\"_blank\" rel=\"noopener\">cspell has weird bugs, I'm assuming there is no typo and its a f&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.948</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1846062079\" target=\"_blank\" rel=\"noopener\">This should be a secret. Like the ANON KEY</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.673</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1846064215\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestionsha: sha,&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.7</td><td>3</td><td>0</td></tr></tbody></table></details>"},"gentlementlegen":{"total":140.508,"userId":9807008,"comments":[{"id":2380400401,"content":"@0x4007 Spec at https://github.com/ubiquity-os-marketplace/command-start-stop/issues/60","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2380400401","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.152,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":66.7871428571429,"syllables":22,"sentences":2,"score":0.9321285714285711},"multiplier":1,"relevance":0.8}},{"id":2466087327,"content":"Funny, I had made a tool for my personal usage a while ago, I didn't remember this task.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2466087327","commentType":"ISSUE_COLLABORATOR","score":{"reward":1.086,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":71.78157894736843,"syllables":26,"sentences":1,"score":0.8821842105263157},"multiplier":1,"relevance":0.2}},{"id":2466568554,"content":"@Keyrxng It is a very different approach! At first it was just for editing the configuration files in situ. Also I used NextJs and Material which I don't think is welcome haha.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2466568554","commentType":"ISSUE_COLLABORATOR","score":{"reward":4.554,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":33,"wordValue":0.1,"result":1.98},"readability":{"fleschKincaid":67.48818181818186,"syllables":50,"sentences":3,"score":0.9251181818181814},"multiplier":1,"relevance":0.6}},{"id":2491843027,"content":"@0x4007 that's one hell of a spec","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2491843027","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.297,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":114.11500000000001,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.1}},{"id":1835570051,"content":"Why is `issu` needed?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570051","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,12 @@\n+{\n+  \"$schema\": \"https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json\",\n+  \"version\": \"0.2\",\n+  \"ignorePaths\": [\"**/*.json\", \"**/*.css\", \"node_modules\", \"**/*.log\"],\n+  \"useGitignore\": true,\n+  \"language\": \"en\",\n+  \"words\": [\"dataurl\", \"devpool\", \"outdir\", \"servedir\"],\n+  \"dictionaries\": [\"typescript\", \"node\", \"software-terms\"],\n+  \"import\": [\"@cspell/dict-typescript/cspell-ext.json\", \"@cspell/dict-node/cspell-ext.json\", \"@cspell/dict-software-terms\"],\n+  \"ignoreRegExpList\": [\"[0-9a-fA-F]{6}\"],\n+  \"ignoreWords\": [\"ubiquibot\", \"issu\", \"Supabase\", \"supabase\", \"SUPABASE\"]","score":{"reward":0.966,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":3,"wordValue":0.1,"result":0.35},"readability":{"fleschKincaid":119.19000000000003,"syllables":3,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1835570072,"content":"Wouldn't it be just `SUPABASE_KEY`","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570072","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,2 @@\n+SUPABASE_URL=\n+SUPABASE_ANON_KEY=","score":{"reward":1.656,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":117.16000000000003,"syllables":5,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":1835570183,"content":"Ideally I think we should use the latest version of eslint that provides better feedback: https://github.com/ubiquity-os/plugin-template/blob/development/eslint.config.mjs","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570183","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":7.695,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":55.85041666666669,"syllables":46,"sentences":4,"score":0.9585041666666669},"multiplier":1,"relevance":0.9}},{"id":1835570202,"content":"@Keyrxng maybe you can add yourself 😄","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570202","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1 @@\n+","score":{"reward":0.474,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":6,"wordValue":0.1,"result":0.61},"readability":{"fleschKincaid":102.045,"syllables":7,"sentences":1,"score":1},"multiplier":1,"relevance":0.2}},{"id":1835570221,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570221","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,129 @@\n+import * as core from \"@actions/core\";\n+import { Octokit } from \"@octokit/rest\";\n+import simpleGit from \"simple-git\";\n+\n+const token = process.env.GITHUB_TOKEN;\n+const [owner, repo] = process.env.GITHUB_REPOSITORY?.split(\"/\") || [];\n+const pullNumber = process.env.GITHUB_PR_NUMBER || process.env.PULL_REQUEST_NUMBER || \"0\";\n+const baseRef = process.env.GITHUB_BASE_REF;\n+\n+if (!token || !owner || !repo || pullNumber === \"0\" || !baseRef) {\n+  core.setFailed(\"Missing required environment variables.\");\n+  process.exit(1);\n+}\n+\n+const octokit = new Octokit({ auth: token });\n+const git = simpleGit();\n+\n+async function main() {\n+  try {\n+    const { data: pullRequest } = await octokit.pulls.get({\n+      owner,\n+      repo,\n+      pull_number: parseInt(pullNumber, 10),\n+    });\n+\n+    const baseSha = pullRequest.base.sha;\n+    const headSha = pullRequest.head.sha;\n+\n+    await git.fetch([\"origin\", baseSha, headSha]);\n+\n+    const diff = await git.diff([`${baseSha}...${headSha}`]);\n+\n+    core.info(\"Checking for empty strings...\");\n+    const violations = parseDiffForEmptyStrings(diff);\n+\n+    if (violations.length > 0) {\n+      violations.forEach(({ file, line, content }) => {\n+        core.warning(\n+          \"Detected an empty string.\\n\\nIf this is during variable initialization, consider using a different approach.\\nFor more information, visit: https://www.github.com/ubiquity/ts-template/issues/31\",\n+          {\n+            file,\n+            startLine: line,\n+          }\n+        );\n+      });\n+\n+      // core.setFailed(`${violations.length} empty string${violations.length > 1 ? \"s\" : \"\"} detected in the code.`);","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.3}},{"id":1835570269,"content":"I think we just updated this template","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570269","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":0.996,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":90.95857142857145,"syllables":9,"sentences":1,"score":0.6904142857142855},"multiplier":1,"relevance":0.4}},{"id":1835570450,"content":"Would be better to run this on pull request events.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570450","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,37 @@\n+name: Run Cypress testing suite\n+on:\n+  workflow_dispatch:\n+  workflow_run:","score":{"reward":2.64,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.8}},{"id":1835570713,"content":"This script will always fail, I made a correction to it: https://github.com/ubiquity/ts-template/pull/76","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570713","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":6.642,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":76.97144736842105,"syllables":27,"sentences":2,"score":0.8302855263157894},"multiplier":1,"relevance":0.9}},{"id":1835570780,"content":"Please update the manifest accordingly.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570780","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,91 @@\n+{\n+  \"name\": \"ts-template\",","score":{"reward":1.302,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":15.640000000000015,"syllables":11,"sentences":1,"score":0.5564000000000001},"multiplier":1,"relevance":0.7}},{"id":1835666559,"content":"If that is meant to be an anon key then this is fine.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835666559","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,2 @@\n+SUPABASE_URL=\n+SUPABASE_ANON_KEY=","score":{"reward":2.145,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":13,"wordValue":0.1,"result":1.1},"readability":{"fleschKincaid":102.53230769230771,"syllables":14,"sentences":1,"score":1},"multiplier":1,"relevance":0.5}},{"id":1835666680,"content":"Ah I see. Maybe you can fix the typo instead?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835666680","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,12 @@\n+{\n+  \"$schema\": \"https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json\",\n+  \"version\": \"0.2\",\n+  \"ignorePaths\": [\"**/*.json\", \"**/*.css\", \"node_modules\", \"**/*.log\"],\n+  \"useGitignore\": true,\n+  \"language\": \"en\",\n+  \"words\": [\"dataurl\", \"devpool\", \"outdir\", \"servedir\"],\n+  \"dictionaries\": [\"typescript\", \"node\", \"software-terms\"],\n+  \"import\": [\"@cspell/dict-typescript/cspell-ext.json\", \"@cspell/dict-node/cspell-ext.json\", \"@cspell/dict-software-terms\"],\n+  \"ignoreRegExpList\": [\"[0-9a-fA-F]{6}\"],\n+  \"ignoreWords\": [\"ubiquibot\", \"issu\", \"Supabase\", \"supabase\", \"SUPABASE\"]","score":{"reward":2.457,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":100.24000000000002,"syllables":12,"sentences":2,"score":1},"multiplier":1,"relevance":0.7}},{"id":1848649285,"content":"Wouldn't the error test be more relevant?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1848649285","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,12 +1,3 @@\n describe(\"Homepage tests\", () => {\n-  it(\"Console is cleared of errors and warnings\", () => {\n-    cy.visit(\"/\", {\n-      onBeforeLoad(win) {\n-        cy.stub(win.console, \"error\").as(\"consoleError\");\n-      },\n-    });\n-    cy.get(\"@consoleError\").should(\"not.be.called\");\n-    cy.get(\"body\").should(\"exist\");\n-    cy.get(\"h1\").should(\"exist\");\n-  });\n+  it(\"todo\", () => {});","score":{"reward":2.256,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":82.39000000000001,"syllables":11,"sentences":1,"score":0.7760999999999999},"multiplier":1,"relevance":0.8}},{"id":1848652271,"content":"Maybe we could get these from the SDK?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1848652271","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,180 @@\n+import { Octokit } from \"@octokit/rest\";\n+import { ManifestDecoder } from \"./decode-manifest\";\n+import { ManifestPreDecode } from \"../types/plugins\";\n+\n+/**\n+ * Given a list of repositories, fetch the manifest for each repository.\n+ */\n+export class ManifestFetcher {\n+  private _orgs: string[];\n+  private _octokit: Octokit | null;\n+  private _decoder: ManifestDecoder;\n+\n+  workerUrlRegex = /https:\\/\\/([a-z0-9-]+)\\.ubiquity\\.workers\\.dev/g;\n+  actionUrlRegex = /[a-z0-9-]+\\/[a-z0-9-]+(?:\\/[^@]+)?@[a-z0-9-]+/g;\n+  workerUrls = new Set<string>();\n+  actionUrls = new Set<string>();\n+\n+  devYmlConfigPath = \".github/.ubiquity-os.config.dev.yml\";\n+  prodYmlConfigPath = \".github/.ubiquity-os.config.yml\";","score":{"reward":1.782,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":114.11500000000001,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}},{"id":1851837483,"content":"Might want to rename this to element instead of ele?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1851837483","commentType":"PULL_COLLABORATOR","diffHunk":"","score":{"reward":1.68,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":78.24500000000002,"syllables":14,"sentences":1,"score":0.8175499999999998},"multiplier":1,"relevance":0.5}},{"id":2466718825,"content":"@Keyrxng Yes it is, it means the module is disabled.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2466718825","commentType":"PULL_COLLABORATOR","score":{"reward":1.98,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":86.70500000000001,"syllables":13,"sentences":1,"score":0.7329499999999999},"multiplier":1,"relevance":0.6}},{"id":2486134230,"content":"Tested, works, that's cool.\r\nSome details that would be worth a change later:\r\n- the generated configuration for start | stop looked like this\r\n```\r\nplugins:\r\n  - uses:\r\n      - plugin: https://ubiquity-os-command-start-stop-development.ubiquity.workers.dev\r\n        with:\r\n          reviewDelayTolerance: 1 Day\r\n          taskStaleTimeoutDuration: 30 Days\r\n          startRequiresWallet: true\r\n          maxConcurrentTasks:\r\n            member: 10\r\n            contributor: 2\r\n          assignedIssueScope: org\r\n          emptyWalletText: Please set your wallet address with the /wallet command first\r\n            and try again.\r\n          rolesWithReviewAuthority:\r\n            - COLLABORATOR\r\n            - OWNER\r\n            - MEMBER\r\n            - ADMIN\r\n          requiredLabelsToStart: []\r\n```\r\nMaybe it would be safer to wrap string values with quotes\r\n- On a 32 inch screen, it feels like a lot of space is wasted (c.f. screenshot)\r\n<img width=\"1914\" alt=\"image\" src=\"https://github.com/user-attachments/assets/79679119-4f37-4115-8595-720ef9dd129e\">","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2486134230","commentType":"PULL_COLLABORATOR","score":{"reward":12.096,"formatting":{"content":{"p":{"score":0,"elementCount":4},"ul":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":1}},"result":1.2},"priority":3,"words":{"wordCount":57,"wordValue":0.1,"result":2.48},"readability":{"fleschKincaid":87.281,"syllables":85,"sentences":5,"score":0.7271899999999999},"multiplier":1,"relevance":0.9}},{"id":2490792616,"content":"If that's not causing any issue then don't sweat on it, I just wanted to make sure. Got it, good to go.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2490792616","commentType":"PULL_COLLABORATOR","score":{"reward":2.592,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":103.00500000000001,"syllables":26,"sentences":2,"score":1},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2425624853,"effect":{"addition":1813,"deletion":233},"reward":61.38,"priority":3},{"reviewId":2445944925,"effect":{"addition":417,"deletion":177},"reward":17.82,"priority":3},{"reviewId":2451022040,"effect":{"addition":28,"deletion":30},"reward":1.74,"priority":3},{"reviewId":2451041149,"effect":{"addition":2,"deletion":2},"reward":0.12,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 140.508 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>4</td><td>81.06</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>10.089</td></tr><tr><td>Review</td><td>Comment</td><td>17</td><td>49.359</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13\" target=\"_blank\" rel=\"noopener\">#13</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1813 -233</td><td>3</td><td>61.38</td></tr><tr><td>+417 -177</td><td>3</td><td>17.82</td></tr><tr><td>+28 -30</td><td>3</td><td>1.74</td></tr><tr><td>+2 -2</td><td>3</td><td>0.12</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2380400401\" target=\"_blank\" rel=\"noopener\">@0x4007 Spec at https://github.com/ubiquity-os-marketplace/comma&hellip;</a></h6></td><td><details><summary>1.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.8</td><td>3</td><td>4.152</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2466087327\" target=\"_blank\" rel=\"noopener\">Funny, I had made a tool for my personal usage a while ago, I di&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.086</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2466568554\" target=\"_blank\" rel=\"noopener\">@Keyrxng It is a very different approach! At first it was just f&hellip;</a></h6></td><td><details><summary>1.98</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 33&#13;  wordValue: 0.1&#13;  result: 1.98&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.554</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/3#issuecomment-2491843027\" target=\"_blank\" rel=\"noopener\">@0x4007 that's one hell of a spec</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.297</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570051\" target=\"_blank\" rel=\"noopener\">Why is &#96;issu&#96; needed?</a></h6></td><td><details><summary>0.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 3&#13;  wordValue: 0.1&#13;  result: 0.35&#13;</pre></details></td><td>0.7</td><td>3</td><td>0.966</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570072\" target=\"_blank\" rel=\"noopener\">Wouldn't it be just &#96;SUPABASE_KEY&#96;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.656</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570183\" target=\"_blank\" rel=\"noopener\">Ideally I think we should use the latest version of eslint that &hellip;</a></h6></td><td><details><summary>2.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.9</td><td>3</td><td>7.695</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570202\" target=\"_blank\" rel=\"noopener\">@Keyrxng maybe you can add yourself 😄</a></h6></td><td><details><summary>0.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 6&#13;  wordValue: 0.1&#13;  result: 0.61&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.474</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570221\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.3</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570269\" target=\"_blank\" rel=\"noopener\">I think we just updated this template</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.4</td><td>3</td><td>0.996</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570450\" target=\"_blank\" rel=\"noopener\">Would be better to run this on pull request events.</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.64</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570713\" target=\"_blank\" rel=\"noopener\">This script will always fail, I made a correction to it: https:/&hellip;</a></h6></td><td><details><summary>1.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.9</td><td>3</td><td>6.642</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835570780\" target=\"_blank\" rel=\"noopener\">Please update the manifest accordingly.</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.302</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835666559\" target=\"_blank\" rel=\"noopener\">If that is meant to be an anon key then this is fine.</a></h6></td><td><details><summary>1.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 13&#13;  wordValue: 0.1&#13;  result: 1.1&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.145</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1835666680\" target=\"_blank\" rel=\"noopener\">Ah I see. Maybe you can fix the typo instead?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.7</td><td>3</td><td>2.457</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1848649285\" target=\"_blank\" rel=\"noopener\">Wouldn't the error test be more relevant?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.256</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1848652271\" target=\"_blank\" rel=\"noopener\">Maybe we could get these from the SDK?</a></h6></td><td><details><summary>0.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.782</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1851837483\" target=\"_blank\" rel=\"noopener\">Might want to rename this to element instead of ele?</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.5</td><td>3</td><td>1.68</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2466718825\" target=\"_blank\" rel=\"noopener\">@Keyrxng Yes it is, it means the module is disabled.</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.98</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2486134230\" target=\"_blank\" rel=\"noopener\">Tested, works, that's cool.Some details that would be worth a &hellip;</a></h6></td><td><details><summary>3.68</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    ul:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1.2&#13;regex:&#13;  wordCount: 57&#13;  wordValue: 0.1&#13;  result: 2.48&#13;</pre></details></td><td>0.9</td><td>3</td><td>12.096</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2490792616\" target=\"_blank\" rel=\"noopener\">If that's not causing any issue then don't sweat on it, I just w&hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.4</td><td>3</td><td>2.592</td></tr></tbody></table></details>"},"zugdev":{"total":81.639,"userId":155616000,"comments":[{"id":2428501249,"content":"Getting app installations is also failing, I can't seem to sign in with my org so I can't load this properly. \r\n![image](https://github.com/user-attachments/assets/08f2f149-d192-47d1-9159-bed0c777bb34)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#pullrequestreview-2428501249","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.071,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":69.46391304347827,"syllables":31,"sentences":1,"score":0.9053608695652173},"multiplier":0.25,"relevance":0.7}},{"id":1837440872,"content":"Don't force a login, just display a default message","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1837440872","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -9,15 +11,56 @@ async function handleAuth() {\n   if (!token) {\n     // await auth.signInWithGithub(); force a login?","score":{"reward":0.504,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":78.24500000000002,"syllables":14,"sentences":1,"score":0.8175499999999998},"multiplier":0.25,"relevance":0.6}},{"id":1837440991,"content":"This is failing, it seems that the correct endpoint for this request would be \"GET /organizations\", based on this piece of docs: https://docs.github.com/pt/rest/orgs/orgs?apiVersion=2022-11-28#list-organizations","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1837440991","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -112,4 +121,16 @@ export class AuthService {\n       return null;\n     }\n   }\n-}\n\\ No newline at end of file\n+\n+  public async getGitHubUserOrgs(): Promise<string[]> {\n+    const octokit = await this.getOctokit();\n+    const response = await octokit.request(\"GET /user/orgs\");","score":{"reward":2.187,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":75.50000000000003,"syllables":52,"sentences":4,"score":0.8449999999999998},"multiplier":0.25,"relevance":0.9}},{"id":1843012862,"content":"What do you mean with this, exactly? Is it in a secrets format, or an oauth config perhaps?  Where do I set this up?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1843012862","commentType":"PULL_CONTRIBUTOR","diffHunk":"@@ -112,4 +121,16 @@ export class AuthService {\n       return null;\n     }\n   }\n-}\n\\ No newline at end of file\n+\n+  public async getGitHubUserOrgs(): Promise<string[]> {\n+    const octokit = await this.getOctokit();\n+    const response = await octokit.request(\"GET /user/orgs\");","score":{"reward":1.2,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":24,"wordValue":0.1,"result":1.66},"readability":{"fleschKincaid":89.44,"syllables":31,"sentences":3,"score":0.7056},"multiplier":0.25,"relevance":0.8}},{"id":2466593036,"content":"I will review UI, yes. Regarding my contribution, I think it makes more sense for this to be merged first and only then implement styling.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2466593036","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.477,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":75.70750000000002,"syllables":35,"sentences":2,"score":0.8429249999999997},"multiplier":0.25,"relevance":0.3}},{"id":2466957919,"content":"Actions doesn't seem to be building this PR and therefore no deployments are available. 0x4007 just merged template into this repo, so pulling from `main` should solve it, I want to help you QA it.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2466957919","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.344,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":73.04964285714289,"syllables":48,"sentences":2,"score":0.8695035714285712},"multiplier":0.25,"relevance":0.7}},{"id":2467027060,"content":"Yes, deployments are a mere facilitator, I understand the circumstances. I'll be testing it locally soon!","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2467027060","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.252,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":48.9133823529412,"syllables":30,"sentences":2,"score":0.889133823529412},"multiplier":0.25,"relevance":0.2}},{"id":2469506050,"content":"If I sign in with an account that has nothing to show, we should tell that to the user.\r\n![image](https://github.com/user-attachments/assets/658c0cad-996c-41b6-bb51-df06c0572b44)\r\nThe auth token is not being cleared on sign out, the only way for me to currently logout is to clear my cookies manually.\r\nhttps://github.com/user-attachments/assets/15ab6e6a-ad30-4783-b4fd-6b0cf2069716\r\nAlso we have a scope error that is not allowing it to fetch my orgs correctly, I've pinpointed the issue in my review comments:\r\n![image](https://github.com/user-attachments/assets/3c07eec5-c5e9-4db6-8a3d-bdb1df6279da)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2469506050","commentType":"PULL_CONTRIBUTOR","score":{"reward":3.051,"formatting":{"content":{"p":{"score":0,"elementCount":6},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":68,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":72.20393987341777,"syllables":107,"sentences":4,"score":0.8779606012658223},"multiplier":0.25,"relevance":0.9}},{"id":2469527586,"content":"I think you should try catch whatever can fail, that certainly includes HTTP requests. For instance, to get the list of app installations you need an authenticated GitHub app. I couldn't login with my org so I got deadlocked. We should at least show a message in those cases.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2469527586","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.776,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":80.7835,"syllables":67,"sentences":4,"score":0.792165},"multiplier":0.25,"relevance":0.8}},{"id":2469529045,"content":"Ignore what I previously said about auth, already hid my comments, my Supabase is set for OAuth - my bad. However I still believe there should be try catches.\r\nHow should I set this up? I don't see a way to do it in Supabase's dashboard. Or did you mean signing in with a GitHub app? If that's the case, I wasn't able to.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2469529045","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.422,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":67,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":85.64710199004976,"syllables":87,"sentences":6,"score":0.7435289800995024},"multiplier":0.25,"relevance":0.6}},{"id":2479311280,"content":"Thanks for the guide, I'll QA it soon.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2479311280","commentType":"PULL_CONTRIBUTOR","score":{"reward":0.081,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":113.10000000000002,"syllables":9,"sentences":1,"score":1},"multiplier":0.25,"relevance":0.1}},{"id":2479889467,"content":"One feedback I'd give is since you initiated UI, you should add basic setup instructions in the README file. Not only yarn related, but also that we use GitHub App auth instead of OAuth App setup.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2479889467","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.608,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":37,"wordValue":0.1,"result":2.1},"readability":{"fleschKincaid":69.1602027027027,"syllables":52,"sentences":2,"score":0.908397972972973},"multiplier":0.25,"relevance":0.8}},{"id":2479908408,"content":"Quick question. The app in question was created by your personal account or your org? I have setup the auth with GitHub app but that app belongs to my org, I think therefore when I login as my user, I can't fetch properly. It's not a matter of permissions since I've enabled all.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2479908408","commentType":"PULL_CONTRIBUTOR","score":{"reward":1.596,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":80.83214285714287,"syllables":74,"sentences":4,"score":0.7916785714285713},"multiplier":0.25,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2428501249,"effect":{"addition":1920,"deletion":249},"reward":65.07,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 81.639 XP ]</a>&nbsp;</h3><h6>@zugdev</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>65.07</td></tr><tr><td>Review</td><td>Comment</td><td>13</td><td>16.569</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13\" target=\"_blank\" rel=\"noopener\">#13</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1920 -249</td><td>3</td><td>65.07</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#pullrequestreview-2428501249\" target=\"_blank\" rel=\"noopener\">Getting app installations is also failing, I can't seem to sign &hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.071</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1837440872\" target=\"_blank\" rel=\"noopener\">Don't force a login, just display a default message</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.6</td><td>3</td><td>0.504</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1837440991\" target=\"_blank\" rel=\"noopener\">This is failing, it seems that the correct endpoint for this req&hellip;</a></h6></td><td><details><summary>2.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.9</td><td>3</td><td>2.187</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#discussion_r1843012862\" target=\"_blank\" rel=\"noopener\">What do you mean with this, exactly? Is it in a secrets format, &hellip;</a></h6></td><td><details><summary>1.66</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 24&#13;  wordValue: 0.1&#13;  result: 1.66&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.2</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2466593036\" target=\"_blank\" rel=\"noopener\">I will review UI, yes. Regarding my contribution, I think it mak&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.477</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2466957919\" target=\"_blank\" rel=\"noopener\">Actions doesn't seem to be building this PR and therefore no dep&hellip;</a></h6></td><td><details><summary>2.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.344</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2467027060\" target=\"_blank\" rel=\"noopener\">Yes, deployments are a mere facilitator, I understand the circum&hellip;</a></h6></td><td><details><summary>1.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.252</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2469506050\" target=\"_blank\" rel=\"noopener\">If I sign in with an account that has nothing to show, we should&hellip;</a></h6></td><td><details><summary>3.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 6&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 68&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>0.9</td><td>3</td><td>3.051</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2469527586\" target=\"_blank\" rel=\"noopener\">I think you should try catch whatever can fail, that certainly i&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.776</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2469529045\" target=\"_blank\" rel=\"noopener\">Ignore what I previously said about auth, already hid my comment&hellip;</a></h6></td><td><details><summary>2.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 67&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.422</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2479311280\" target=\"_blank\" rel=\"noopener\">Thanks for the guide, I'll QA it soon.</a></h6></td><td><details><summary>0.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.081</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2479889467\" target=\"_blank\" rel=\"noopener\">One feedback I'd give is since you initiated UI, you should add &hellip;</a></h6></td><td><details><summary>2.1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 37&#13;  wordValue: 0.1&#13;  result: 2.1&#13;</pre></details></td><td>0.8</td><td>3</td><td>1.608</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2479908408\" target=\"_blank\" rel=\"noopener\">Quick question. The app in question was created by your personal&hellip;</a></h6></td><td><details><summary>2.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.596</td></tr></tbody></table></details>"},"rndquu":{"total":161.009,"userId":119500907,"comments":[{"id":2438355509,"content":"1. Getting the `authentication.ts:127 GET https://api.github.com/user/orgs 403 (Forbidden)` on github auth:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-15 at 14 20 17\" src=\"https://github.com/user-attachments/assets/2e04f5ef-933d-4b06-bef5-6e55e46c751e\">\r\nPerhaps we should pass the `read:org` scope similarly to how it [works](https://github.com/ubiquity/work.ubq.fi/blob/d42ffd7dfdba16b4dc7a615bacf632087efafc69/src/home/rendering/render-github-login-button.ts#L36) in work.ubq.fi?\r\n2. Pls make all CI workflows passing:\r\n  a) For [failing build](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/actions/runs/11770560357/job/32783164160?pr=13) you may hardcode [values](https://github.com/ubiquity/work.ubq.fi/blob/d42ffd7dfdba16b4dc7a615bacf632087efafc69/.github/workflows/build.yml#L31-L32)\r\n  b) For [failing empty strings](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/actions/runs/11770560358/job/32783164244?pr=13) workflow you may refactor the code\r\n  c) For [failing knip](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/actions/runs/11770560364/job/32783164156?pr=13) unused dependencies should be removed\r\n  d) For [failing cypress](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/actions/runs/11770560368/job/32783164158?pr=13) values can be [hardcoded](https://github.com/ubiquity/work.ubq.fi/blob/d42ffd7dfdba16b4dc7a615bacf632087efafc69/.github/workflows/cypress-testing.yml#L25-L26)\r\n  e) For [failing jest](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/actions/runs/11770560362/job/32783164174?pr=13) either remove the test either fix the octokit related error","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#pullrequestreview-2438355509","commentType":"PULL_COLLABORATOR","score":{"reward":46.826,"formatting":{"content":{"ol":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":2},"p":{"score":0,"elementCount":7},"a":{"score":1,"elementCount":10}},"result":10.2},"priority":3,"words":{"wordCount":89,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":66.40300000000003,"syllables":142,"sentences":5,"score":0.9359699999999996},"multiplier":1,"relevance":0.95}},{"id":2478616391,"content":"@Keyrxng https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/12 is included in the current PR, correct?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2478616391","commentType":"PULL_COLLABORATOR","score":{"reward":2.034,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":8,"wordValue":0.1,"result":0.76},"readability":{"fleschKincaid":54.70828947368423,"syllables":32,"sentences":2,"score":0.9470828947368424},"multiplier":1,"relevance":0.3}},{"id":2482477076,"content":"@Keyrxng \r\nIf partner doesn't have the `UbiquityOS` app installed anywhere (which is true for new partners) then he will not be able to install the config, correct?\r\nOverall I still don't understand why we should mess with github app auth instead of oauth which is already working fine in `work.ubq.fi`.\r\n`work.ubq.fi` also has access to private repos with oauth","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2482477076","commentType":"PULL_COLLABORATOR","score":{"reward":7.632,"formatting":{"content":{"p":{"score":0,"elementCount":4}},"result":0},"priority":3,"words":{"wordCount":58,"wordValue":0.1,"result":2.49},"readability":{"fleschKincaid":67.60477011494255,"syllables":82,"sentences":3,"score":0.9239522988505745},"multiplier":1,"relevance":0.8}},{"id":2484982794,"content":"@Keyrxng Trying to add the https://github.com/ubiquity-os-marketplace/command-wallet plugin to [this](https://github.com/rndquu-org) organization. Getting the `Error pushing config to GitHub: TypeError: source is not a string` error:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-19 at 11 05 36\" src=\"https://github.com/user-attachments/assets/241bf54e-db4b-4e7a-af72-31c168d485d4\">\r\nDoes this PR create a new `.ubiquity-os` repository for new partners?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2484982794","commentType":"PULL_COLLABORATOR","score":{"reward":17.442,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":3}},"result":3},"priority":3,"words":{"wordCount":35,"wordValue":0.1,"result":2.04},"readability":{"fleschKincaid":66.23250000000003,"syllables":81,"sentences":4,"score":0.9376749999999997},"multiplier":1,"relevance":0.9}},{"id":2486044208,"content":"Awesome, works fine.\r\n@Keyrxng Could you update the readme file and remove github app related setup instructions?\r\nThe `Empty String Check` workflow is [failing](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/actions/runs/11914418242/job/33202289177?pr=13) but that's false positive, added https://github.com/ubiquity/ts-template/issues/82.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2486044208","commentType":"PULL_COLLABORATOR","score":{"reward":10.935,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":27,"wordValue":0.1,"result":1.78},"readability":{"fleschKincaid":65.01089285714289,"syllables":55,"sentences":4,"score":0.9498910714285711},"multiplier":1,"relevance":0.75}},{"id":2490747039,"content":"Could you fix the failing knip ci?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2490747039","commentType":"PULL_COLLABORATOR","score":{"reward":1.62,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":7,"wordValue":0.1,"result":0.69},"readability":{"fleschKincaid":103.04428571428575,"syllables":8,"sentences":1,"score":1},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2438355509,"effect":{"addition":1920,"deletion":249},"reward":65.07,"priority":3},{"reviewId":2450977768,"effect":{"addition":183,"deletion":132},"reward":9.45,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 161.009 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>74.52</td></tr><tr><td>Review</td><td>Comment</td><td>6</td><td>86.489</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13\" target=\"_blank\" rel=\"noopener\">#13</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1920 -249</td><td>3</td><td>65.07</td></tr><tr><td>+183 -132</td><td>3</td><td>9.45</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#pullrequestreview-2438355509\" target=\"_blank\" rel=\"noopener\">1. Getting the &#96;authentication.ts:127 GET https://api.github&hellip;</a></h6></td><td><details><summary>12.83</summary><pre>content:&#13;  content:&#13;    ol:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    p:&#13;      score: 0&#13;      elementCount: 7&#13;    a:&#13;      score: 1&#13;      elementCount: 10&#13;  result: 10.2&#13;regex:&#13;  wordCount: 89&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>0.95</td><td>3</td><td>46.826</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2478616391\" target=\"_blank\" rel=\"noopener\">@Keyrxng https://github.com/ubiquity-os/ubiquity-os-plugin-insta&hellip;</a></h6></td><td><details><summary>1.76</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 8&#13;  wordValue: 0.1&#13;  result: 0.76&#13;</pre></details></td><td>0.3</td><td>3</td><td>2.034</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2482477076\" target=\"_blank\" rel=\"noopener\">@Keyrxng If partner doesn't have the &#96;UbiquityOS&#96; app &hellip;</a></h6></td><td><details><summary>2.49</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;  result: 0&#13;regex:&#13;  wordCount: 58&#13;  wordValue: 0.1&#13;  result: 2.49&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.632</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2484982794\" target=\"_blank\" rel=\"noopener\">@Keyrxng Trying to add the https://github.com/ubiquity-os-market&hellip;</a></h6></td><td><details><summary>5.04</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3&#13;regex:&#13;  wordCount: 35&#13;  wordValue: 0.1&#13;  result: 2.04&#13;</pre></details></td><td>0.9</td><td>3</td><td>17.442</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2486044208\" target=\"_blank\" rel=\"noopener\">Awesome, works fine.@Keyrxng Could you update the readme file &hellip;</a></h6></td><td><details><summary>3.78</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 27&#13;  wordValue: 0.1&#13;  result: 1.78&#13;</pre></details></td><td>0.75</td><td>3</td><td>10.935</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13#issuecomment-2490747039\" target=\"_blank\" rel=\"noopener\">Could you fix the failing knip ci?</a></h6></td><td><details><summary>0.69</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 7&#13;  wordValue: 0.1&#13;  result: 0.69&#13;</pre></details></td><td>0.6</td><td>3</td><td>1.62</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_120.json","json":{"gentlementlegen":{"userId":9807008,"total":54.65,"task":{"reward":50,"multiplier":1},"comments":[{"id":2556461382,"content":"The `command-start-stop` was never called which is why it never worked. The reason is that a plugin is failing on a fatal error because of the new orgs that have been created and somehow doesn't have the proper access level\r\n```json\r\n{\r\n      \"message\": [\r\n        \"Calling handler {\\\"owner\\\":\\\"ubiquibot\\\",\\\"repo\\\":\\\"user-activity-watcher\\\",\\\"workflowId\\\":\\\"compute.yml\\\",\\\"ref\\\":\\\"development\\\"} for event issue_comment\"\r\n      ],\r\n      \"level\": \"log\",\r\n      \"timestamp\": 1727697850120\r\n},\r\n{\r\n      \"message\": [\r\n        \"Error in event handler\",\r\n        \"HttpError: Resource not accessible by integration - https://docs.github.com/rest/actions/workflows#create-a-workflow-dispatch-event\"\r\n      ],\r\n      \"level\": \"error\",\r\n      \"timestamp\": 1727697850679\r\n}\r\n```\r\nI fixed by making the plugin higher on the list. I believe the loop should not break if a plugin is not working properly but just log the error. Also maintaining 4 repos is complex, these repos won't get moved?\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquity/ubiquity-dollar/issues/965#issuecomment-2383007493_\r\nIf a plugin is not reachable or does not start properly, the loop should continue as plugins are independent.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/120","commentType":"ISSUE_SPECIFICATION","score":{"reward":4.65,"formatting":{"content":{"p":{"score":0,"elementCount":4},"em":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":1,"words":{"wordCount":105,"wordValue":0.1,"result":2.58},"readability":{"fleschKincaid":59.377355072463786,"syllables":174,"sentences":6,"score":0.9937735507246379},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 54.65 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>50</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>4.65</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/120\" target=\"_blank\" rel=\"noopener\">The &#96;command-start-stop&#96; was never called which is why i&hellip;</a></h6></td><td><details><summary>3.58</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    em:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 105&#13;  wordValue: 0.1&#13;  result: 2.58&#13;</pre></details></td><td>1</td><td>1</td><td>4.65</td></tr></tbody></table></details>"},"0x4007":{"total":8.632,"userId":4975670,"comments":[{"id":1807218564,"content":"Just curious but does it make sense to Promise.all and invoke all requests concurrently?\nAlternatively we should make the ordering more explicit in our config so that its more apparent we intend to take outputs from one and make it accessible to the others? \nThe concept of plugin chains is useful but seems very abstract with our current config layout. Hence why im inquiring about concurrency. \nIt could be interesting to support in series for configs that explicitly need that, and concurrency by default?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/156#discussion_r1807218564","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -98,16 +98,21 @@ async function handleEvent(event: EmitterWebhookEvent, eventHandler: InstanceTyp\n     state.inputs[0] = inputs;\n     await eventHandler.pluginChainState.put(stateId, state);\n \n-    if (!isGithubPluginObject) {\n-      await dispatchWorker(plugin, await inputs.getWorkerInputs());\n-    } else {\n-      await dispatchWorkflow(context, {\n-        owner: plugin.owner,\n-        repository: plugin.repo,\n-        workflowId: plugin.workflowId,\n-        ref: plugin.ref,\n-        inputs: await inputs.getWorkflowInputs(),\n-      });\n+    // We wrap the dispatch so a failing plugin doesn't break the whole execution\n+    try {\n+      if (!isGithubPluginObject) {\n+        await dispatchWorker(plugin, await inputs.getWorkerInputs());","score":{"reward":2.882,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":1,"words":{"wordCount":85,"wordValue":0.1,"result":2.64},"readability":{"fleschKincaid":54.10995098039217,"syllables":139,"sentences":6,"score":0.9410995098039217},"multiplier":1,"relevance":0.85}}],"reviewRewards":[{"reviews":[{"reviewId":2379265250,"effect":{"addition":481,"deletion":94},"reward":5.75,"priority":1}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/156"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 8.632 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>5.75</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>2.882</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/156\" target=\"_blank\" rel=\"noopener\">#156</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+481 -94</td><td>1</td><td>5.75</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/156#discussion_r1807218564\" target=\"_blank\" rel=\"noopener\">Just curious but does it make sense to Promise.all and invoke al&hellip;</a></h6></td><td><details><summary>2.64</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 85&#13;  wordValue: 0.1&#13;  result: 2.64&#13;</pre></details></td><td>0.85</td><td>1</td><td>2.882</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-kernel_213.json","json":{"whilefoo":{"userId":139262667,"total":150.6,"task":{"reward":150,"multiplier":1},"comments":[{"id":2512617713,"content":"@rndquu I'm not member of the org so I can't add labels...can you add 2 hour label?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2512617713","commentType":"ISSUE_ASSIGNEE","score":{"reward":0.396,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":20,"wordValue":0.1,"result":1.48},"readability":{"fleschKincaid":99.39500000000001,"syllables":23,"sentences":2,"score":0.6060499999999999},"multiplier":0.25,"relevance":0.3}},{"id":2211214917,"content":"Resolves #213 \r\n@gentlementlegen @rndquu","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215","commentType":"PULL_SPECIFICATION","score":{"reward":0.204,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":12.425000000000011,"syllables":9,"sentences":1,"score":0.5242500000000001},"multiplier":1,"relevance":0.4}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 150.6 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.396</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>0.204</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2512617713\" target=\"_blank\" rel=\"noopener\">@rndquu I'm not member of the org so I can't add labels...can yo&hellip;</a></h6></td><td><details><summary>1.48</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 20&#13;  wordValue: 0.1&#13;  result: 1.48&#13;</pre></details></td><td>0.3</td><td>3</td><td>0.396</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215\" target=\"_blank\" rel=\"noopener\">Resolves #213 @gentlementlegen @rndquu</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.4</td><td>1</td><td>0.204</td></tr></tbody></table></details>"},"rndquu":{"total":14.71,"userId":119500907,"comments":[{"id":2511541654,"content":"@whilefoo Pls check the description and put the time estimate","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2511541654","commentType":"ISSUE_AUTHOR","score":{"reward":0.702,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":10,"wordValue":0.1,"result":0.9},"readability":{"fleschKincaid":61.32500000000002,"syllables":16,"sentences":1,"score":0.9867499999999998},"multiplier":1,"relevance":0.2}},{"id":2711921610,"content":"Right now the kernel is deployed on a cloudflare worker which starts [throwing errors](https://github.com/ubiquity-os/ubiquity-os-kernel/issues/195) under heavy load.\r\nIt makes sense to refactor the kernel to use https://hono.dev/ in order to be able to deploy the kernel to different platforms like [vercel](https://hono.dev/docs/getting-started/vercel) or [azure](https://hono.dev/docs/getting-started/azure-functions).","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213","commentType":"ISSUE_SPECIFICATION","score":{"reward":7.96,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":4}},"result":4},"priority":1,"words":{"wordCount":42,"wordValue":0.1,"result":2.23},"readability":{"fleschKincaid":67.53000000000003,"syllables":66,"sentences":3,"score":0.9246999999999997},"multiplier":1,"relevance":1}},{"id":2514124688,"content":"Awesome, as far as I understand the next step is to [check](https://github.com/ubiquity-os/ubiquity-os-kernel/pull/217) how it works in azure","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215#issuecomment-2514124688","commentType":"PULL_COLLABORATOR","score":{"reward":6.048,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":17,"wordValue":0.1,"result":1.32},"readability":{"fleschKincaid":80.09764705882354,"syllables":22,"sentences":1,"score":0.7990235294117646},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215"},{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/216"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 14.71 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Specification</td><td>1</td><td>7.96</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.702</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>6.048</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213\" target=\"_blank\" rel=\"noopener\">Right now the kernel is deployed on a cloudflare worker which st&hellip;</a></h6></td><td><details><summary>6.23</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 4&#13;  result: 4&#13;regex:&#13;  wordCount: 42&#13;  wordValue: 0.1&#13;  result: 2.23&#13;</pre></details></td><td>1</td><td>1</td><td>7.96</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2511541654\" target=\"_blank\" rel=\"noopener\">@whilefoo Pls check the description and put the time estimate</a></h6></td><td><details><summary>0.9</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 10&#13;  wordValue: 0.1&#13;  result: 0.9&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.702</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215#issuecomment-2514124688\" target=\"_blank\" rel=\"noopener\">Awesome, as far as I understand the next step is to [check](http&hellip;</a></h6></td><td><details><summary>2.32</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 17&#13;  wordValue: 0.1&#13;  result: 1.32&#13;</pre></details></td><td>0.7</td><td>3</td><td>6.048</td></tr></tbody></table></details>"},"gentlementlegen":{"total":38.277,"userId":9807008,"comments":[{"id":2512879686,"content":"I will reopen because the changes now trigger the following error:\r\n```\r\nTypeError: Illegal invocation: function called with incorrect `this` reference. See https://developers.cloudflare.com/workers/observability/errors/#illegal-invocation-errors for details.\r\n```\r\nRelated docs: https://developers.cloudflare.com/workers/observability/errors/#illegal-invocation-errors\r\nMost likely this should be a one liner: https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215/files#diff-ae8a5a0af7f4eec84da7f62730916913e9b05529d2d02416d15a6e298d559017R40\r\nrfc @whilefoo","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2512879686","commentType":"ISSUE_COLLABORATOR","score":{"reward":11.664,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":25.962500000000034,"syllables":92,"sentences":4,"score":0.6596250000000003},"multiplier":1,"relevance":0.9}},{"id":2513058308,"content":"@whilefoo Locally I encountered the following issue:\r\n > A hanging Promise was canceled. This happens when the worker runtime is waiting for a Promise from JavaScript to resolve, but has detected that the Promise cannot possibly ever resolve because all code and events related to the Promise's I/O context have already finished.\r\nI don't know if hono makes it more verbose or if that is another issue, but this would be the promise that never resolves and blocks the execution most likely. The last plugin called was `Calling handler {\"owner\":\"Meniole\",\"repo\":\"ubiquity-os-kernel-telegram\",\"workflowId\":\"compute.yml\",\"ref\":\"development\"} for event issue_comment` but not sure if that's the cause.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2513058308","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.464,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":58.19955882352944,"syllables":74,"sentences":2,"score":0.9819955882352944},"multiplier":1,"relevance":0.8}},{"id":2514367713,"content":"It didn't log these issues before. I have a copy of the current configuration in Ubiquity marketplace and have all the plug-ins enabled in my org. It doesn't happen all the time but triggers easier when spamming with events.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2514367713","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.943,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":42,"wordValue":0.1,"result":2.23},"readability":{"fleschKincaid":69.75357142857145,"syllables":61,"sentences":3,"score":0.9024642857142855},"multiplier":1,"relevance":0.7}},{"id":2515899301,"content":"@0x4007 How about just removing the `x3` multiplier on the spec and put it back to 1?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2515899301","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.948,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":16,"wordValue":0.1,"result":1.27},"readability":{"fleschKincaid":79.5575,"syllables":21,"sentences":1,"score":0.804425},"multiplier":1,"relevance":0.2}},{"id":2512870036,"content":"Deep down I hope it would fix our problems but at least we will have an easier time to switch hosting 😄","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215#issuecomment-2512870036","commentType":"PULL_COLLABORATOR","score":{"reward":1.656,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":21,"wordValue":0.1,"result":1.52},"readability":{"fleschKincaid":88.83428571428574,"syllables":24,"sentences":1,"score":0.7116571428571425},"multiplier":1,"relevance":0.3}},{"id":2514353171,"content":"@rndquu I have a working deployed version currently, need to figure out how to properly handle secrets and then it can be deployed from the organization.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215#issuecomment-2514353171","commentType":"PULL_COLLABORATOR","score":{"reward":3.942,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":26,"wordValue":0.1,"result":1.74},"readability":{"fleschKincaid":47.037307692307735,"syllables":41,"sentences":1,"score":0.8703730769230773},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"reviews":[{"reviewId":2473944418,"effect":{"addition":154,"deletion":65},"reward":6.57,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215"},{"reviews":[{"reviewId":2473986215,"effect":{"addition":1,"deletion":2},"reward":0.09,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/216"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 38.277 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>6.66</td></tr><tr><td>Issue</td><td>Comment</td><td>4</td><td>26.019</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>5.598</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215\" target=\"_blank\" rel=\"noopener\">#215</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+154 -65</td><td>3</td><td>6.57</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/216\" target=\"_blank\" rel=\"noopener\">#216</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+1 -2</td><td>3</td><td>0.09</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2512879686\" target=\"_blank\" rel=\"noopener\">I will reopen because the changes now trigger the following erro&hellip;</a></h6></td><td><details><summary>3.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.664</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2513058308\" target=\"_blank\" rel=\"noopener\">@whilefoo Locally I encountered the following issue:&gt; A ha&hellip;</a></h6></td><td><details><summary>2.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0.1&#13;  result: 2.4&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.464</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2514367713\" target=\"_blank\" rel=\"noopener\">It didn't log these issues before. I have a copy of the current &hellip;</a></h6></td><td><details><summary>2.23</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 42&#13;  wordValue: 0.1&#13;  result: 2.23&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.943</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2515899301\" target=\"_blank\" rel=\"noopener\">@0x4007 How about just removing the &#96;x3&#96; multiplier on t&hellip;</a></h6></td><td><details><summary>1.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 16&#13;  wordValue: 0.1&#13;  result: 1.27&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.948</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215#issuecomment-2512870036\" target=\"_blank\" rel=\"noopener\">Deep down I hope it would fix our problems but at least we will &hellip;</a></h6></td><td><details><summary>1.52</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 21&#13;  wordValue: 0.1&#13;  result: 1.52&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.656</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215#issuecomment-2514353171\" target=\"_blank\" rel=\"noopener\">@rndquu I have a working deployed version currently, need to fig&hellip;</a></h6></td><td><details><summary>1.74</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 26&#13;  wordValue: 0.1&#13;  result: 1.74&#13;</pre></details></td><td>0.6</td><td>3</td><td>3.942</td></tr></tbody></table></details>"},"0x4007":{"total":0.357,"userId":4975670,"comments":[{"id":2514481277,"content":"@gentlementlegen Maybe we should remove priority multiplier off of spec writer.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2514481277","commentType":"ISSUE_COLLABORATOR","score":{"reward":0.357,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":34.160909090909115,"syllables":21,"sentences":1,"score":0.7416090909090911},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/215"},{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/216"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.357 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>1</td><td>0.357</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/issues/213#issuecomment-2514481277\" target=\"_blank\" rel=\"noopener\">@gentlementlegen Maybe we should remove priority multiplier off &hellip;</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.357</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_ubiquity-os-plugin-installer_22.json","json":{"Keyrxng":{"userId":106303466,"total":151.866,"task":{"reward":150,"multiplier":1},"comments":[{"id":2195734593,"content":"Resolves https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/22\r\nRequires #25\r\nQA:\r\nhttps://github.com/user-attachments/assets/490b4344-144d-4d10-a454-b2e61fffd9a8","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28","commentType":"PULL_SPECIFICATION","score":{"reward":1.866,"formatting":{"content":{"p":{"score":0,"elementCount":4},"a":{"score":1,"elementCount":2}},"result":2},"priority":1,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":51.61525641025645,"syllables":45,"sentences":3,"score":0.9161525641025645},"multiplier":1,"relevance":0.6}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 151.866 XP ]</a>&nbsp;</h3><h6>@Keyrxng</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>150</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>1.866</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28\" target=\"_blank\" rel=\"noopener\">Resolves https://github.com/ubiquity-os/ubiquity-os-plugin-insta&hellip;</a></h6></td><td><details><summary>2.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 4&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.6</td><td>1</td><td>1.866</td></tr></tbody></table></details>"},"gentlementlegen":{"total":134.028,"userId":9807008,"comments":[{"id":2637500255,"content":"For reference here is a default config that enables all the plugins we currently have with default values: https://github.com/ubiquity/onboard.ubq.fi/blob/development/static/types/default-configuration.yml","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/22#issuecomment-2637500255","commentType":"ISSUE_COLLABORATOR","score":{"reward":9.06,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":49.645250000000004,"syllables":57,"sentences":5,"score":0.8964525000000001},"multiplier":1,"relevance":1}},{"id":2638250603,"content":"The only problem is the `text-conversation-rewards` that will require the `evmPrivateKey` and `networkId` to work properly, otherwise yes it is all defaults.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/22#issuecomment-2638250603","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.49,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":67.32894736842107,"syllables":27,"sentences":1,"score":0.9267105263157893},"multiplier":1,"relevance":1}},{"id":1962997055,"content":"Maybe this should go before `dotenv.config()`","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#discussion_r1962997055","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -1,6 +1,7 @@\n import esbuild, { BuildOptions } from \"esbuild\";\n import * as dotenv from \"dotenv\";\n dotenv.config();\n+import MINIMAL_PREDEFINED_CONFIG from \"../static/minimal-predefined.json\";","score":{"reward":1.449,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":5,"wordValue":0.1,"result":0.53},"readability":{"fleschKincaid":100.24000000000002,"syllables":6,"sentences":1,"score":1},"multiplier":1,"relevance":0.7}},{"id":1962997843,"content":"I have a feeling that these imports are not properly ordered","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#discussion_r1962997843","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,287 @@\n+import { toastNotification } from \"../../utils/toaster\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { CONFIG_FULL_PATH, CONFIG_ORG_REPO } from \"@ubiquity-os/plugin-sdk/constants\";\n+import { STRINGS } from \"../../utils/strings\";\n+import { Manifest, ManifestPreDecode, Plugin, PluginConfig } from \"../../types/plugins\";\n+import { AnySchemaObject } from \"ajv\";\n+import { controlButtons } from \"../rendering/control-buttons\";\n+import { updateGuiTitle } from \"../rendering/utils\";\n+import { parseConfigInputs } from \"../rendering/input-parsing\";\n+import YAML from \"yaml\";","score":{"reward":2.928,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":11,"wordValue":0.1,"result":0.97},"readability":{"fleschKincaid":72.61545454545457,"syllables":16,"sentences":1,"score":0.8738454545454544},"multiplier":1,"relevance":0.8}},{"id":1962998167,"content":"```suggestion\r\n```","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#discussion_r1962998167","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,287 @@\n+import { toastNotification } from \"../../utils/toaster\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { CONFIG_FULL_PATH, CONFIG_ORG_REPO } from \"@ubiquity-os/plugin-sdk/constants\";\n+import { STRINGS } from \"../../utils/strings\";\n+import { Manifest, ManifestPreDecode, Plugin, PluginConfig } from \"../../types/plugins\";\n+import { AnySchemaObject } from \"ajv\";\n+import { controlButtons } from \"../rendering/control-buttons\";\n+import { updateGuiTitle } from \"../rendering/utils\";\n+import { parseConfigInputs } from \"../rendering/input-parsing\";\n+import YAML from \"yaml\";\n+import { AuthService } from \"../authentication\";\n+import { getManifestCache } from \"../../utils/storage\";\n+import { createConfigParamTooltip, createElement, createInputRow } from \"../../utils/element-helpers\";\n+\n+type TemplateTypes = \"minimal\" | \"full-defaults\" | \"custom\";\n+declare const MINIMAL_PREDEFINED_CONFIG: string;\n+\n+export async function configTemplateHandler(type: TemplateTypes, renderer: ManifestRenderer) {\n+  let config: string | undefined;\n+  if (type === \"minimal\") {\n+    config = await handleMinimalTemplate();\n+  } else if (type === \"full-defaults\") {\n+    config = await handleFullDefaultsTemplate(renderer);\n+  } else {\n+    throw new Error(\"Invalid template type\");\n+  }\n+\n+  if (!config) {\n+    throw new Error(STRINGS.FAILED_TO_LOAD_TEMPLATE);\n+  }\n+\n+  const org = localStorage.getItem(\"selectedOrg\");\n+\n+  if (!org) {\n+    throw new Error(\"No selected org found\");\n+  }\n+\n+  const octokit = renderer.auth.octokit;\n+  if (!octokit) {\n+    throw new Error(\"Octokit not found\");\n+  }\n+\n+  const userInstalledConfig = await renderer.configParser.fetchUserInstalledConfig(org, octokit);\n+\n+  try {\n+    // YAML.stringify({ plugins: [] }).length === 12","score":{"reward":0,"formatting":{"content":{},"result":0},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":0,"syllables":0,"sentences":0,"score":0},"multiplier":1,"relevance":0.6}},{"id":1963001715,"content":"Why using this naming?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#discussion_r1963001715","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,66 @@\n+import { createElement } from \"../../utils/element-helpers\";\n+import { STRINGS } from \"../../utils/strings\";\n+import { toastNotification } from \"../../utils/toaster\";\n+import { configTemplateHandler } from \"../predefined-configs/template-handler\";\n+import { ManifestRenderer } from \"../render-manifest\";\n+import { controlButtons } from \"./control-buttons\";\n+import { renderPluginSelector } from \"./plugin-select\";\n+import { updateGuiTitle } from \"./utils\";\n+\n+export function renderTemplateSelector(renderer: ManifestRenderer): void {\n+  renderer.currentStep = \"templateSelector\";\n+  controlButtons({ hide: true });\n+  renderer.manifestGui?.classList.add(\"rendering\");\n+  renderer.manifestGuiBody.innerHTML = null;\n+\n+  const templateRow = document.createElement(\"tr\");\n+  const templateCell = document.createElement(\"td\");\n+  templateCell.colSpan = 4;\n+  templateCell.className = STRINGS.TDV_CENTERED;\n+\n+  const templateButtons = createElement(\"div\", { class: \"template-buttons\" });\n+\n+  const minimalButton = createElement(\"button\", { textContent: \"Minimal\" });\n+  minimalButton.addEventListener(\"click\", () => {\n+    configTemplateHandler(\"minimal\", renderer).catch(console.error);\n+  });\n+\n+  const fullDefaultButton = createElement(\"button\", { textContent: \"Full Default\" });\n+  fullDefaultButton.addEventListener(\"click\", () => {\n+    configTemplateHandler(\"full-defaults\", renderer).catch(console.error);\n+  });\n+\n+  const customButton = createElement(\"button\", { textContent: \"Custom\" });\n+  customButton.addEventListener(\"click\", () => {\n+    const selectedOrg = localStorage.getItem(\"selectedOrg\");\n+    if (!selectedOrg) {\n+      throw new Error(\"No org selected\");\n+    }\n+    fetchOrgConfig(renderer, selectedOrg).catch(console.error);\n+  });\n+\n+  templateButtons.appendChild(minimalButton);\n+  templateButtons.appendChild(fullDefaultButton);\n+  templateButtons.appendChild(customButton);\n+\n+  templateCell.appendChild(templateButtons);\n+  templateRow.appendChild(templateCell);\n+\n+  renderer.manifestGuiBody.appendChild(templateRow);\n+\n+  updateGuiTitle(\"Select a Template\");\n+\n+  renderer.manifestGui?.classList.remove(\"rendering\");\n+  renderer.manifestGui?.classList.add(\"rendered\");\n+}\n+\n+async function fetchOrgConfig(renderer: ManifestRenderer, org: string): Promise<void> {\n+  const kill = toastNotification(\"Fetching organization config...\", { type: \"info\", shouldAutoDismiss: true });\n+  const octokit = renderer.auth.octokit;\n+  if (!octokit) {\n+    throw new Error(\"No org or octokit found\");\n+  }\n+  await renderer.configParser.fetchUserInstalledConfig(org, octokit);\n+  renderPluginSelector(renderer);\n+  kill();","score":{"reward":1.155,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":4,"wordValue":0.1,"result":0.44},"readability":{"fleschKincaid":75.87500000000001,"syllables":6,"sentences":1,"score":0.8412499999999998},"multiplier":1,"relevance":0.7}},{"id":2653108939,"content":"@Keyrxng Sorry for the noise, this task was chosen for testing the issue with `command-start-stop`.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2653108939","commentType":"PULL_COLLABORATOR","score":{"reward":0.852,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":83.85357142857143,"syllables":18,"sentences":1,"score":0.7614642857142857},"multiplier":1,"relevance":0.2}},{"id":2661333087,"content":"@Keyrxng Would it be better to merge the other one first and rebase here?","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2661333087","commentType":"PULL_COLLABORATOR","score":{"reward":2.52,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":14,"wordValue":0.1,"result":1.16},"readability":{"fleschKincaid":89.89642857142859,"syllables":17,"sentences":1,"score":0.7010357142857141},"multiplier":1,"relevance":0.6}},{"id":2670860016,"content":"I tried this pull-request and I am very confused. Whatever I select, the same configuration seems to be generated in my repo, from minimal to custom or defaults.\r\nIt also tells me there is already a configuration when there is none. See the video, I let the console opened if that helps.\r\nhttps://github.com/user-attachments/assets/2aeaf790-087a-42bd-bf60-df60242bf3ff","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2670860016","commentType":"PULL_COLLABORATOR","score":{"reward":11.853,"formatting":{"content":{"p":{"score":0,"elementCount":3},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":66.46458333333337,"syllables":98,"sentences":6,"score":0.9353541666666664},"multiplier":1,"relevance":0.9}},{"id":2670947482,"content":"@Keyrxng Sorry the file limit is 10 mb which is why the video had to be short. With the 3 options, the generated file has been the same. I can do more videos with these if you need them.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2670947482","commentType":"PULL_COLLABORATOR","score":{"reward":4.68,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":39,"wordValue":0.1,"result":2.15},"readability":{"fleschKincaid":89.51692307692309,"syllables":48,"sentences":3,"score":0.704830769230769},"multiplier":1,"relevance":0.6}},{"id":2671272376,"content":"The local storage did trigger weird behaviors but I cleaned it before shooting that video.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2671272376","commentType":"PULL_COLLABORATOR","score":{"reward":2.355,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":15,"wordValue":0.1,"result":1.21},"readability":{"fleschKincaid":61.890000000000015,"syllables":23,"sentences":1,"score":0.9810999999999999},"multiplier":1,"relevance":0.5}},{"id":2676780458,"content":"@Keyrxng Can be fixed later on, the more we use it the more we will be able to figure this out and reproduce the problem.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2676780458","commentType":"PULL_COLLABORATOR","score":{"reward":2.556,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":25,"wordValue":0.1,"result":1.7},"readability":{"fleschKincaid":76.55600000000001,"syllables":31,"sentences":1,"score":0.8344399999999998},"multiplier":1,"relevance":0.4}}],"reviewRewards":[{"reviews":[{"reviewId":2628932669,"effect":{"addition":2208,"deletion":608},"reward":84.48,"priority":3},{"reviewId":2635519428,"effect":{"addition":70,"deletion":85},"reward":4.65,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 134.028 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>89.13</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>14.55</td></tr><tr><td>Review</td><td>Comment</td><td>10</td><td>30.348</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28\" target=\"_blank\" rel=\"noopener\">#28</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+2208 -608</td><td>3</td><td>84.48</td></tr><tr><td>+70 -85</td><td>3</td><td>4.65</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/22#issuecomment-2637500255\" target=\"_blank\" rel=\"noopener\">For reference here is a default config that enables all the plug&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>1</td><td>3</td><td>9.06</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/22#issuecomment-2638250603\" target=\"_blank\" rel=\"noopener\">The only problem is the &#96;text-conversation-rewards&#96; that&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>1</td><td>3</td><td>5.49</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#discussion_r1962997055\" target=\"_blank\" rel=\"noopener\">Maybe this should go before &#96;dotenv.config()&#96;</a></h6></td><td><details><summary>0.53</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 5&#13;  wordValue: 0.1&#13;  result: 0.53&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.449</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#discussion_r1962997843\" target=\"_blank\" rel=\"noopener\">I have a feeling that these imports are not properly ordered</a></h6></td><td><details><summary>0.97</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 11&#13;  wordValue: 0.1&#13;  result: 0.97&#13;</pre></details></td><td>0.8</td><td>3</td><td>2.928</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#discussion_r1962998167\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;suggestion&#96;&#96;&#96;</a></h6></td><td><details><summary>0</summary><pre>content:&#13;  content: {}&#13;  result: 0&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.6</td><td>3</td><td>0</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#discussion_r1963001715\" target=\"_blank\" rel=\"noopener\">Why using this naming?</a></h6></td><td><details><summary>0.44</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 4&#13;  wordValue: 0.1&#13;  result: 0.44&#13;</pre></details></td><td>0.7</td><td>3</td><td>1.155</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2653108939\" target=\"_blank\" rel=\"noopener\">@Keyrxng Sorry for the noise, this task was chosen for testing t&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.2</td><td>3</td><td>0.852</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2661333087\" target=\"_blank\" rel=\"noopener\">@Keyrxng Would it be better to merge the other one first and reb&hellip;</a></h6></td><td><details><summary>1.16</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 14&#13;  wordValue: 0.1&#13;  result: 1.16&#13;</pre></details></td><td>0.6</td><td>3</td><td>2.52</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2670860016\" target=\"_blank\" rel=\"noopener\">I tried this pull-request and I am very confused. Whatever I sel&hellip;</a></h6></td><td><details><summary>3.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.853</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2670947482\" target=\"_blank\" rel=\"noopener\">@Keyrxng Sorry the file limit is 10 mb which is why the video ha&hellip;</a></h6></td><td><details><summary>2.15</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 39&#13;  wordValue: 0.1&#13;  result: 2.15&#13;</pre></details></td><td>0.6</td><td>3</td><td>4.68</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2671272376\" target=\"_blank\" rel=\"noopener\">The local storage did trigger weird behaviors but I cleaned it b&hellip;</a></h6></td><td><details><summary>1.21</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 15&#13;  wordValue: 0.1&#13;  result: 1.21&#13;</pre></details></td><td>0.5</td><td>3</td><td>2.355</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2676780458\" target=\"_blank\" rel=\"noopener\">@Keyrxng Can be fixed later on, the more we use it the more we w&hellip;</a></h6></td><td><details><summary>1.7</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 25&#13;  wordValue: 0.1&#13;  result: 1.7&#13;</pre></details></td><td>0.4</td><td>3</td><td>2.556</td></tr></tbody></table></details>"},"rndquu":{"total":137.85,"userId":119500907,"comments":[{"id":2661874242,"content":"Depends on https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/13\r\nRight now partner is able to setup bot config individually per plugin.\r\nWe should offer predefined configs so that instead of customizing each plugin individually partner could simply select a predefined config.\r\nSimply put partner should be able to:\r\n1. Setup each plugin individually (already implemented)\r\n2. Create a new config from a predefined config template in one click\r\nFor the start I think we should support 2 config templates:\r\n1. Config with all plugins from https://github.com/ubiquity-os-marketplace and all default values\r\n2. Minimal:\r\n  - https://github.com/ubiquity-os-marketplace/command-start-stop\r\n  - https://github.com/ubiquity-os-marketplace/daemon-pricing\r\n  - https://github.com/ubiquity-os-marketplace/text-conversation-rewards\r\nNotice: the UI should support multiple predefined configs.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/22","commentType":"ISSUE_SPECIFICATION","score":{"reward":10.29,"formatting":{"content":{"p":{"score":0,"elementCount":13},"ol":{"score":0,"elementCount":2},"li":{"score":0.1,"elementCount":7},"ul":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":5}},"result":5.7},"priority":1,"words":{"wordCount":88,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":38.45101622137406,"syllables":235,"sentences":8,"score":0.7845101622137406},"multiplier":1,"relevance":1}},{"id":2470234637,"content":"On `yarn start` getting the same errors as in [this](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/actions/runs/12077953759/job/33681602211?pr=28) CI run.\r\nPls fix both failing [build](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/actions/runs/12077953759/job/33681602211?pr=28) and [cypress](https://github.com/ubiquity-os/ubiquity-os-plugin-installer/actions/runs/12077953762/job/33681602212?pr=28) workflows.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#pullrequestreview-2470234637","commentType":"PULL_COLLABORATOR","score":{"reward":9.816,"formatting":{"content":{"p":{"score":0,"elementCount":2},"a":{"score":1,"elementCount":2}},"result":2},"priority":3,"words":{"wordCount":18,"wordValue":0.1,"result":1.38},"readability":{"fleschKincaid":89.60000000000004,"syllables":23,"sentences":2,"score":0.7039999999999996},"multiplier":1,"relevance":0.8}},{"id":2633434783,"content":"Works fine for my local org.\r\nThe main issue is how minimal and full configs are fetched:\r\n1. Minimal is [read](https://github.com/ubq-testing/ubiquity-os-plugin-installer/blob/0225e80e682eb76cf58cd85c565f222b79d03842/static/minimal-predefined.json) from json\r\n2. Full is [loaded](https://github.com/ubq-testing/ubiquity-os-plugin-installer/blob/0225e80e682eb76cf58cd85c565f222b79d03842/static/scripts/predefined-configs/template-handler.ts#L91) from another repo\r\nI actually thought we could somehow dynamically derived a config from the plugin's [manifest.json](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/111e17ddfc94eb3098f7d4de4946fd77875ef33f/manifest.json). I'll add it to a separate github issue.","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#pullrequestreview-2633434783","commentType":"PULL_COLLABORATOR","score":{"reward":19.494,"formatting":{"content":{"p":{"score":0,"elementCount":5},"ol":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2},"a":{"score":1,"elementCount":3}},"result":3.2},"priority":3,"words":{"wordCount":53,"wordValue":0.1,"result":2.43},"readability":{"fleschKincaid":65.68813679245285,"syllables":80,"sentences":4,"score":0.9431186320754715},"multiplier":1,"relevance":0.9}}],"reviewRewards":[{"reviews":[{"reviewId":2470234637,"effect":{"addition":857,"deletion":249},"reward":33.18,"priority":3},{"reviewId":2633434783,"effect":{"addition":1573,"deletion":596},"reward":65.07,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 137.85 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>2</td><td>98.25</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>10.29</td></tr><tr><td>Review</td><td>Comment</td><td>2</td><td>29.31</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28\" target=\"_blank\" rel=\"noopener\">#28</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+857 -249</td><td>3</td><td>33.18</td></tr><tr><td>+1573 -596</td><td>3</td><td>65.07</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/issues/22\" target=\"_blank\" rel=\"noopener\">Depends on https://github.com/ubiquity-os/ubiquity-os-plugin-ins&hellip;</a></h6></td><td><details><summary>8.33</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 13&#13;    ol:&#13;      score: 0&#13;      elementCount: 2&#13;    li:&#13;      score: 0.1&#13;      elementCount: 7&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 5&#13;  result: 5.7&#13;regex:&#13;  wordCount: 88&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>10.29</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#pullrequestreview-2470234637\" target=\"_blank\" rel=\"noopener\">On &#96;yarn start&#96; getting the same errors as in [this](htt&hellip;</a></h6></td><td><details><summary>3.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 2&#13;  result: 2&#13;regex:&#13;  wordCount: 18&#13;  wordValue: 0.1&#13;  result: 1.38&#13;</pre></details></td><td>0.8</td><td>3</td><td>9.816</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#pullrequestreview-2633434783\" target=\"_blank\" rel=\"noopener\">Works fine for my local org.The main issue is how minimal and &hellip;</a></h6></td><td><details><summary>5.63</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 5&#13;    ol:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;    a:&#13;      score: 1&#13;      elementCount: 3&#13;  result: 3.2&#13;regex:&#13;  wordCount: 53&#13;  wordValue: 0.1&#13;  result: 2.43&#13;</pre></details></td><td>0.9</td><td>3</td><td>19.494</td></tr></tbody></table></details>"},"0x4007":{"total":0.804,"userId":4975670,"comments":[{"id":2638884149,"content":"This might be related to pull precheck based on converting the pull from draft to ready. \nIt also makes sense that we just now started seeing this error because it's a brand new feature. \n@gentlementlegen @Whilefoo rfc","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2638884149","commentType":"PULL_COLLABORATOR","score":{"reward":0.804,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":38,"wordValue":0.1,"result":2.13},"readability":{"fleschKincaid":73.75728070175441,"syllables":54,"sentences":3,"score":0.8624271929824558},"multiplier":1,"relevance":0.1}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 0.804 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>0.804</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2638884149\" target=\"_blank\" rel=\"noopener\">This might be related to pull precheck based on converting the p&hellip;</a></h6></td><td><details><summary>2.13</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 38&#13;  wordValue: 0.1&#13;  result: 2.13&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.804</td></tr></tbody></table></details>"},"whilefoo":{"total":1.92,"userId":139262667,"comments":[{"id":2639948635,"content":"It comes from `command-start-stop` and it was triggered when the PR body was edited so it seems to be the same issue as [here](https://github.com/ubiquity-os-marketplace/command-ask/pull/61#issuecomment-2635139526)","url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2639948635","commentType":"PULL_COLLABORATOR","score":{"reward":1.92,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":84.17695652173914,"syllables":27,"sentences":1,"score":0.7582304347826085},"multiplier":1,"relevance":0.2}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 1.92 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Comment</td><td>1</td><td>1.92</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-plugin-installer/pull/28#issuecomment-2639948635\" target=\"_blank\" rel=\"noopener\">It comes from &#96;command-start-stop&#96; and it was triggered &hellip;</a></h6></td><td><details><summary>2.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.2</td><td>3</td><td>1.92</td></tr></tbody></table></details>"}}},{"name":"results/ubiquity-os_plugins-wishlist_17.json","json":{"gentlementlegen":{"userId":9807008,"total":614.629,"task":{"reward":600,"multiplier":1},"comments":[{"id":2133362337,"content":"@0x4007 I believe so too. Still means the kernel should have a way to query each plugin to know their available commands. Only way I see to avoid querying them is directly reading the `command` inside the configuration itself. But since it is not mandatory, we could potentially have missing information there.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2133362337","commentType":"ISSUE_AUTHOR","score":{"reward":9.36,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":59.52904411764709,"syllables":81,"sentences":4,"score":0.9952904411764709},"multiplier":1,"relevance":1}},{"id":2167215900,"content":"We might want to remove `@user` or escape it in the example since it actually tags a real user here.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2167215900","commentType":"ISSUE_AUTHOR","score":{"reward":1.629,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":19,"wordValue":0.1,"result":1.43},"readability":{"fleschKincaid":71.78157894736843,"syllables":26,"sentences":1,"score":0.8821842105263157},"multiplier":1,"relevance":0.3}},{"id":2318934654,"content":"In the v1 of the bot, the `/help` would help the user to see all available commands with the Bot. The v2 should also offer a similar capability.\r\nIt is trickier because now each plugin is capable of handling its own commands. We should find a way to collect all of them and output them in a table, looking like\r\n| command | description | example\r\n-------|----|---\r\n| /help | Outputs help |  ```/help``` |\r\nFew possible ways:\r\n- implement a unified way, maybe through an endpoint, to collect commands\r\n- rely on the `command` section of the configuration file","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/17","commentType":"ISSUE_SPECIFICATION","score":{"reward":3.64,"formatting":{"content":{"p":{"score":0,"elementCount":8},"ul":{"score":0,"elementCount":1},"li":{"score":0.1,"elementCount":2}},"result":0.2},"priority":1,"words":{"wordCount":87,"wordValue":0.1,"result":2.63},"readability":{"fleschKincaid":55.42771551724141,"syllables":133,"sentences":4,"score":0.9542771551724141},"multiplier":1,"relevance":1}}],"reviewRewards":[],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 614.629 XP ]</a>&nbsp;</h3><h6>@gentlementlegen</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Task</td><td>1</td><td>600</td></tr><tr><td>Issue</td><td>Specification</td><td>1</td><td>3.64</td></tr><tr><td>Issue</td><td>Comment</td><td>2</td><td>10.989</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/17\" target=\"_blank\" rel=\"noopener\">In the v1 of the bot, the &#96;/help&#96; would help the user to&hellip;</a></h6></td><td><details><summary>2.83</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 8&#13;    ul:&#13;      score: 0&#13;      elementCount: 1&#13;    li:&#13;      score: 0.1&#13;      elementCount: 2&#13;  result: 0.2&#13;regex:&#13;  wordCount: 87&#13;  wordValue: 0.1&#13;  result: 2.63&#13;</pre></details></td><td>1</td><td>1</td><td>3.64</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2133362337\" target=\"_blank\" rel=\"noopener\">@0x4007 I believe so too. Still means the kernel should have a w&hellip;</a></h6></td><td><details><summary>2.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0.1&#13;  result: 2.4&#13;</pre></details></td><td>1</td><td>3</td><td>9.36</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2167215900\" target=\"_blank\" rel=\"noopener\">We might want to remove &#96;@user&#96; or escape it in the exam&hellip;</a></h6></td><td><details><summary>1.43</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 19&#13;  wordValue: 0.1&#13;  result: 1.43&#13;</pre></details></td><td>0.3</td><td>3</td><td>1.629</td></tr></tbody></table></details>"},"0x4007":{"total":38.79,"userId":4975670,"comments":[{"id":2133293904,"content":"I think that it should be built into the kernel, and it should parse the active config and generate the available commands.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2133293904","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.481,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":22,"wordValue":0.1,"result":1.57},"readability":{"fleschKincaid":61.45045454545455,"syllables":32,"sentences":1,"score":0.9854954545454545},"multiplier":1,"relevance":0.9}},{"id":2167278516,"content":"This help menu is just for slash commands. To register it as a slash command, it should be mandatory to define in the config. \r\nThe help menu is not intended to explain every webhook event result. \r\nThey know what they were doing when they created the username. It's fine.","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2167278516","commentType":"ISSUE_COLLABORATOR","score":{"reward":7.104,"formatting":{"content":{"p":{"score":0,"elementCount":3}},"result":0},"priority":3,"words":{"wordCount":50,"wordValue":0.1,"result":2.38},"readability":{"fleschKincaid":78.24500000000002,"syllables":70,"sentences":5,"score":0.8175499999999998},"multiplier":1,"relevance":0.8}},{"id":2173625810,"content":"Yes I am leaning towards this being in the kernel as well, unless its viable to isolate into its own codebase. \r\nIdeally we have it on a Cloudflare Worker in its own plugin, and then perhaps have it set in the kernel to call it either via hard coding or an environment variable of \"built-ins\"","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2173625810","commentType":"ISSUE_COLLABORATOR","score":{"reward":8.613,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":56,"wordValue":0.1,"result":2.47},"readability":{"fleschKincaid":57.55785714285717,"syllables":80,"sentences":2,"score":0.9755785714285717},"multiplier":1,"relevance":0.9}},{"id":2177216815,"content":"https://www.perplexity.ai/search/github-actions-adding-eSszNo2lRG2n2SnPBvHeuw :","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177216815","commentType":"PULL_COLLABORATOR","score":{"reward":0.375,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":0,"wordValue":0.1,"result":0},"readability":{"fleschKincaid":43.99000000000004,"syllables":17,"sentences":3,"score":0.8399000000000004},"multiplier":1,"relevance":0.1}},{"id":2177940975,"content":"```yml\r\n#     - name: \"Query user\"\r\n#       description: \"Returns the user's wallet, access, and multiplier information.\"\r\n      command: \"/query\"\r\n#      example: \"/query @user\"\r\n      uses:\r\n```\r\nSo will these eventually be relocated and hosted by the plugin itself? Why not just read some type of manifest.json, just like how Google Chrome extensions do it? @gentlementlegen","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177940975","commentType":"PULL_COLLABORATOR","score":{"reward":5.019,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":30,"wordValue":0.1,"result":1.88},"readability":{"fleschKincaid":69.5025,"syllables":46,"sentences":4,"score":0.904975},"multiplier":1,"relevance":0.7}},{"id":2177955197,"content":"I think that it should be exposed at `https://my-plugin.pages.dev/manifest.json` etc.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177955197","commentType":"PULL_COLLABORATOR","score":{"reward":5.736,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":9,"wordValue":0.1,"result":0.84},"readability":{"fleschKincaid":103.70000000000002,"syllables":10,"sentences":1,"score":1},"multiplier":1,"relevance":0.8}},{"id":2177978521,"content":"We should definitely not assume this. Besides I wrote specifications [in the past](https://github.com/ubiquibot/plugins-wishlist/issues/3) that rely on commands and complex capabilities which require longer runtimes (i.e. LLM related.)","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177978521","commentType":"PULL_COLLABORATOR","score":{"reward":6.462,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":28,"wordValue":0.1,"result":1.81},"readability":{"fleschKincaid":53.10100000000003,"syllables":49,"sentences":5,"score":0.9310100000000002},"multiplier":1,"relevance":0.6}}],"reviewRewards":[{"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 38.79 XP ]</a>&nbsp;</h3><h6>@0x4007</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Issue</td><td>Comment</td><td>3</td><td>21.198</td></tr><tr><td>Review</td><td>Comment</td><td>4</td><td>17.592</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2133293904\" target=\"_blank\" rel=\"noopener\">I think that it should be built into the kernel, and it should p&hellip;</a></h6></td><td><details><summary>1.57</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 22&#13;  wordValue: 0.1&#13;  result: 1.57&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.481</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2167278516\" target=\"_blank\" rel=\"noopener\">This help menu is just for slash commands. To register it as a s&hellip;</a></h6></td><td><details><summary>2.38</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 3&#13;  result: 0&#13;regex:&#13;  wordCount: 50&#13;  wordValue: 0.1&#13;  result: 2.38&#13;</pre></details></td><td>0.8</td><td>3</td><td>7.104</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2173625810\" target=\"_blank\" rel=\"noopener\">Yes I am leaning towards this being in the kernel as well, unles&hellip;</a></h6></td><td><details><summary>2.47</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 56&#13;  wordValue: 0.1&#13;  result: 2.47&#13;</pre></details></td><td>0.9</td><td>3</td><td>8.613</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177216815\" target=\"_blank\" rel=\"noopener\">https://www.perplexity.ai/search/github-actions-adding-eSszNo2lR&hellip;</a></h6></td><td><details><summary>1</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 0&#13;  wordValue: 0.1&#13;  result: 0&#13;</pre></details></td><td>0.1</td><td>3</td><td>0.375</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177940975\" target=\"_blank\" rel=\"noopener\">&#96;&#96;&#96;yml#     - name: \"Query user\"#       descript&hellip;</a></h6></td><td><details><summary>1.88</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 30&#13;  wordValue: 0.1&#13;  result: 1.88&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.019</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177955197\" target=\"_blank\" rel=\"noopener\">I think that it should be exposed at &#96;https://my-plugin.page&hellip;</a></h6></td><td><details><summary>1.84</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 9&#13;  wordValue: 0.1&#13;  result: 0.84&#13;</pre></details></td><td>0.8</td><td>3</td><td>5.736</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177978521\" target=\"_blank\" rel=\"noopener\">We should definitely not assume this. Besides I wrote specificat&hellip;</a></h6></td><td><details><summary>2.81</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 28&#13;  wordValue: 0.1&#13;  result: 1.81&#13;</pre></details></td><td>0.6</td><td>3</td><td>6.462</td></tr></tbody></table></details>"},"whilefoo":{"total":16.872,"userId":139262667,"comments":[{"id":2173698860,"content":"I think having it in the kernel seems most logical since it already has the config and it's not so much code","url":"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2173698860","commentType":"ISSUE_COLLABORATOR","score":{"reward":5.481,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":23,"wordValue":0.1,"result":1.61},"readability":{"fleschKincaid":73.1421739130435,"syllables":30,"sentences":1,"score":0.868578260869565},"multiplier":1,"relevance":0.9}},{"id":2126660244,"content":"Looks good but I worry how this will work in practice because partners won't set description and example. \r\nI imagine in the future we would have to query each plugin - this can be part of the SDK which setups an endpoint to return name, description and usage","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#pullrequestreview-2126660244","commentType":"PULL_COLLABORATOR","score":{"reward":7.701,"formatting":{"content":{"p":{"score":0,"elementCount":2}},"result":0},"priority":3,"words":{"wordCount":48,"wordValue":0.1,"result":2.35},"readability":{"fleschKincaid":64.38750000000003,"syllables":67,"sentences":2,"score":0.9561249999999997},"multiplier":1,"relevance":0.85}}],"reviewRewards":[{"reviews":[{"reviewId":2126660244,"effect":{"addition":123,"deletion":0},"reward":3.69,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 16.872 XP ]</a>&nbsp;</h3><h6>@whilefoo</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>3.69</td></tr><tr><td>Issue</td><td>Comment</td><td>1</td><td>5.481</td></tr><tr><td>Review</td><td>Comment</td><td>1</td><td>7.701</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56\" target=\"_blank\" rel=\"noopener\">#56</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+123 -0</td><td>3</td><td>3.69</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/plugins-wishlist/issues/17#issuecomment-2173698860\" target=\"_blank\" rel=\"noopener\">I think having it in the kernel seems most logical since it alre&hellip;</a></h6></td><td><details><summary>1.61</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 23&#13;  wordValue: 0.1&#13;  result: 1.61&#13;</pre></details></td><td>0.9</td><td>3</td><td>5.481</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#pullrequestreview-2126660244\" target=\"_blank\" rel=\"noopener\">Looks good but I worry how this will work in practice because pa&hellip;</a></h6></td><td><details><summary>2.35</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 2&#13;  result: 0&#13;regex:&#13;  wordCount: 48&#13;  wordValue: 0.1&#13;  result: 2.35&#13;</pre></details></td><td>0.85</td><td>3</td><td>7.701</td></tr></tbody></table></details>"},"rndquu":{"total":27.933,"userId":119500907,"comments":[{"id":1644571376,"content":"@gentlementlegen I can't understand how it works both in github issue comments and PR comments. So if the `/help` command is called from github issue comments then `context.payload.issue.number` contains issue number. If the `/help` command is called from a PR then `context.payload.issue.number` contains a PR number. Correct?","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#discussion_r1644571376","commentType":"PULL_COLLABORATOR","diffHunk":"@@ -0,0 +1,36 @@\n+import { GitHubContext } from \"../github-context\";\n+import { getConfig } from \"../utils/config\";\n+\n+export default async function issueCommentCreated(context: GitHubContext<\"issue_comment.created\">) {\n+  const body = context.payload.comment.body.trim();\n+  if (/^\\/help$/.test(body)) {\n+    const comments = [\n+      \"### Available Commands\\n\\n\",\n+      \"| Command | Description | Example |\",\n+      \"|---|---|---|\",\n+      \"| `/help` | List all available commands. | `/help` |\",\n+    ];\n+    const configuration = await getConfig(context);\n+    for (const pluginArray of Object.values(configuration.plugins)) {\n+      for (const plugin of pluginArray) {\n+        // Only show plugins that have commands available for the user\n+        if (plugin.command) {\n+          comments.push(`| \\`${getContent(plugin.command)}\\` | ${getContent(plugin.description)} | \\`${getContent(plugin.example)}\\` |`);\n+        }\n+      }\n+    }\n+    await context.octokit.issues.createComment({\n+      body: comments.join(\"\\n\"),\n+      issue_number: context.payload.issue.number,","score":{"reward":6.912,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":44,"wordValue":0.1,"result":2.27},"readability":{"fleschKincaid":70.6927272727273,"syllables":65,"sentences":4,"score":0.893072727272727},"multiplier":1,"relevance":0.8}},{"id":2177192100,"content":"It could also be a simple `help.yml` file set in a partner's plugin repository which is easier to query compared to an API endpoint. Or perhaps there's a way to set name, description and example directly in the [action.yml](https://github.com/ubiquibot/conversation-rewards/blob/ba853c5d6606c1b694df36ac72050f6d5b0b20fb/action.yml) file (not sure if custom attributes break the github action).","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177192100","commentType":"PULL_COLLABORATOR","score":{"reward":11.934,"formatting":{"content":{"p":{"score":0,"elementCount":1},"a":{"score":1,"elementCount":1}},"result":1},"priority":3,"words":{"wordCount":51,"wordValue":0.1,"result":2.4},"readability":{"fleschKincaid":60.19176470588238,"syllables":78,"sentences":3,"score":0.9980823529411762},"multiplier":1,"relevance":0.9}},{"id":2177964557,"content":"It seems to be an overkill for plugins that work only as github actions to maintain a separate endpoint for a single file. It's easier to put `manifest.json` directly in the plugin github repository.","url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177964557","commentType":"PULL_COLLABORATOR","score":{"reward":5.397,"formatting":{"content":{"p":{"score":0,"elementCount":1}},"result":0},"priority":3,"words":{"wordCount":34,"wordValue":0.1,"result":2.01},"readability":{"fleschKincaid":52.72705882352943,"syllables":55,"sentences":2,"score":0.9272705882352943},"multiplier":1,"relevance":0.7}}],"reviewRewards":[{"reviews":[{"reviewId":2125696706,"effect":{"addition":123,"deletion":0},"reward":3.69,"priority":3}],"url":"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56"}],"evaluationCommentHtml":"<details><summary><b><h3>&nbsp;<a href=\"undefined\" target=\"_blank\" rel=\"noopener\">[ 27.933 XP ]</a>&nbsp;</h3><h6>@rndquu</h6></b></summary><h6>Contributions Overview</h6><table><thead><tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th></tr></thead><tbody><tr><td>Review</td><td>Code Review</td><td>1</td><td>3.69</td></tr><tr><td>Review</td><td>Comment</td><td>3</td><td>24.243</td></tr></tbody></table><h6>Review Details for&nbsp;<a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56\" target=\"_blank\" rel=\"noopener\">#56</a></h6><table><thead><tr><th>Changes</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td>+123 -0</td><td>3</td><td>3.69</td></tr></tbody></table><h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Priority</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#discussion_r1644571376\" target=\"_blank\" rel=\"noopener\">@gentlementlegen I can't understand how it works both in github &hellip;</a></h6></td><td><details><summary>2.27</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 44&#13;  wordValue: 0.1&#13;  result: 2.27&#13;</pre></details></td><td>0.8</td><td>3</td><td>6.912</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177192100\" target=\"_blank\" rel=\"noopener\">It could also be a simple &#96;help.yml&#96; file set in a partn&hellip;</a></h6></td><td><details><summary>3.4</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;    a:&#13;      score: 1&#13;      elementCount: 1&#13;  result: 1&#13;regex:&#13;  wordCount: 51&#13;  wordValue: 0.1&#13;  result: 2.4&#13;</pre></details></td><td>0.9</td><td>3</td><td>11.934</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/ubiquity-os-kernel/pull/56#issuecomment-2177964557\" target=\"_blank\" rel=\"noopener\">It seems to be an overkill for plugins that work only as github &hellip;</a></h6></td><td><details><summary>2.01</summary><pre>content:&#13;  content:&#13;    p:&#13;      score: 0&#13;      elementCount: 1&#13;  result: 0&#13;regex:&#13;  wordCount: 34&#13;  wordValue: 0.1&#13;  result: 2.01&#13;</pre></details></td><td>0.7</td><td>3</td><td>5.397</td></tr></tbody></table></details>"}}}]}