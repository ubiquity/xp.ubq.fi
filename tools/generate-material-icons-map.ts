import { readdir, readFile, writeFile } from "fs/promises";
import { join, basename } from "path";

// Path to SVGs in node_modules
const svgDir = join(
  process.cwd(),
  "node_modules/material-design-icons/svg"
);
// Output file
const outFile = join(
  process.cwd(),
  "src/icons/material-icons-map.ts"
);

async function main() {
  const files = await readdir(svgDir);
  const iconMap: Record<string, string> = {};

  for (const file of files) {
    if (file.endsWith(".svg")) {
      const iconName = basename(file, ".svg");
      const svgPath = join(svgDir, file);
      const svgContent = await readFile(svgPath, "utf8");
      // Remove XML declaration if present
      const cleaned = svgContent.replace(/<\?xml.*?\?>\s*/g, "");
      iconMap[iconName] = cleaned.trim();
    }
  }

  // Generate TypeScript file
  const out = `// AUTO-GENERATED by tools/generate-material-icons-map.ts
export const materialIconsMap: Record<string, string> = ${JSON.stringify(
    iconMap,
    null,
    2
  )};
`;

  await writeFile(outFile, out, "utf8");
  console.log(
    `Generated ${Object.keys(iconMap).length} icons to ${outFile}`
  );
}

main().catch((err) => {
  console.error(err);
  process.exit(1);
});
